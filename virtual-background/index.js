/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _paddlejs_mediapipe_camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @paddlejs-mediapipe/camera */ "./node_modules/.pnpm/@paddlejs-mediapipe+camera@0.0.2/node_modules/@paddlejs-mediapipe/camera/lib/index.js");
/* harmony import */ var _paddlejs_mediapipe_camera__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_paddlejs_mediapipe_camera__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _paddlejs_models_humanseg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @paddlejs-models/humanseg */ "./node_modules/.pnpm/@paddlejs-models+humanseg@1.2.2/node_modules/@paddlejs-models/humanseg/lib/index.js");
/* harmony import */ var _paddlejs_models_humanseg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_paddlejs_models_humanseg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! agora-rtc-sdk-ng */ "./node_modules/.pnpm/agora-rtc-sdk-ng@4.13.0/node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js");
/* harmony import */ var agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_2__);
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};



var agClient = agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_2___default.a.createClient({ mode: "rtc", codec: "vp8" });
var localTracks = {
    videoTrack: null,
    audioTrack: null,
};
var remoteUsers = {};
var options = {
    appid: "431aaeecc6f14f698c1ec3b5fb9cb5ef",
    channel: "test",
    uid: null,
    token: "006431aaeecc6f14f698c1ec3b5fb9cb5efIAB1Q0Y9J5a7+OxQaGswVgOTwWPWymBMDKy6L28Za2ErLgx+f9gAAAAAEABiLYCEB/D2YgEAAQAF8PZi",
};
var video1 = null;
function bgImg() {
    var canvas = document.getElementById("imgBg");
    var ctx = canvas.getContext("2d");
    var img = new Image();
    img.onload = function () {
        ctx.drawImage(img, 0, 0, 800, 800);
    };
    img.src = "./bgImgs/vir.png";
}
function rmoveLoading() {
    loadingDom && loadingDom.remove();
}
function join() {
    return __awaiter(this, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4, Promise.all([
                        agClient.join(options.appid, options.channel, options.token || null),
                        agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_2___default.a.createMicrophoneAudioTrack(),
                        agora_rtc_sdk_ng__WEBPACK_IMPORTED_MODULE_2___default.a.createCameraVideoTrack(),
                    ])];
                case 1:
                    _a = _b.sent(), options.uid = _a[0], localTracks.audioTrack = _a[1], localTracks.videoTrack = _a[2];
                    localTracks.videoTrack.play("local-player");
                    console.log("publish success");
                    return [2];
            }
        });
    });
}
var camera = null;
var loadingDom = document.getElementById("isLoading");
var videoToolDom = document.getElementById("video-tool");
var bgElement = document.createElement("div");
var container = document.querySelector("body");
container.appendChild(bgElement);
bgImg();
load();
videoToolDom.addEventListener("click", function (e) {
    var target = e.target;
    if (target.id === "start") {
        camera.start();
    }
    if (target.id === "pause") {
        camera.pause();
    }
});
var canvas1 = document.getElementById("demo");
var videoCanvas = document.createElement("canvas");
var videoCanvasCtx = videoCanvas.getContext("2d");
function load() {
    return __awaiter(this, void 0, void 0, function () {
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, join()];
                case 1:
                    _a.sent();
                    video1 = document.querySelector("video");
                    return [4, _paddlejs_models_humanseg__WEBPACK_IMPORTED_MODULE_1__["load"](true, true)];
                case 2:
                    _a.sent();
                    camera = new _paddlejs_mediapipe_camera__WEBPACK_IMPORTED_MODULE_0___default.a(video1, {
                        mirror: true,
                        enableOnInactiveState: true,
                        onFrame: function () { return __awaiter(_this, void 0, void 0, function () {
                            var data;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        videoCanvas.width = video1.width;
                                        videoCanvas.height = video1.height;
                                        videoCanvasCtx.drawImage(video1, 0, 0, video1.width, video1.height);
                                        return [4, _paddlejs_models_humanseg__WEBPACK_IMPORTED_MODULE_1__["getGrayValue"](videoCanvas)];
                                    case 1:
                                        data = (_a.sent()).data;
                                        _paddlejs_models_humanseg__WEBPACK_IMPORTED_MODULE_1__["blurBackground"](data, canvas1);
                                        return [2];
                                }
                            });
                        }); },
                        onSuccess: function () {
                            console.log("camera success");
                            rmoveLoading();
                        },
                    });
                    return [2];
            }
        });
    });
}


/***/ }),

/***/ "./node_modules/.pnpm/@paddlejs-mediapipe+camera@0.0.2/node_modules/@paddlejs-mediapipe/camera/lib/index.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@paddlejs-mediapipe+camera@0.0.2/node_modules/@paddlejs-mediapipe/camera/lib/index.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():undefined}(self,(function(){return(()=>{"use strict";var t={607:(t,e,i)=>{i.r(e),i.d(e,{default:()=>o});const o=function(){function t(t,e){void 0===e&&(e={}),this.noop=function(){},this.defaultOption={mirror:!1,targetCanvas:null,onSuccess:this.noop,onError:this.noop,onNotSupported:this.noop,onFrame:this.noop,switchError:this.noop,videoLoaded:this.noop},this.video=t,this.options=Object.assign({},this.defaultOption,e),this.currentMode="user",this.initVideoStream()}return t.prototype.initVideoStream=function(){var t=navigator.userAgent;this.isIOS=!!t.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),this.video.width=this.options.width||this.video.clientWidth,this.video.height=this.options.height||this.video.clientHeight,this.enumerateDevices()},t.prototype.handleStream=function(){var t=this,e={deviceId:{exact:this.videoDeviceId},facingMode:this.currentMode,width:this.video.width,height:this.video.height};navigator.mediaDevices&&navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({video:e}).then((function(e){t.stream=e,t.streamCallback()})).catch(this.options.onError):(navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,navigator.getUserMedia?navigator.getUserMedia({video:e},(function(e){t.stream=e,t.streamCallback()}),this.options.onError):this.options.onNotSupported())},t.prototype.enumerateDevices=function(){var t=this;navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices?navigator.mediaDevices.enumerateDevices().then((function(e){var i=[];e.forEach((function(t){"videoinput"===t.kind&&i.push(t.deviceId)})),t.videoDevices=i,t.videoDevices.length<2&&!t.isIOS&&t.options.switchError&&t.options.switchError(),t.videoDeviceId=t.videoDevices[0],t.handleStream()})).catch((function(e){t.options.onNotSupported&&t.options.onNotSupported(),console.error(e.name+": "+e.message)})):this.options.onNotSupported&&this.options.onNotSupported()},t.prototype.streamCallback=function(){var t=this;this.options.onSuccess();var e=window.URL||window.webkitURL||window.mozURL||window.msURL;if("srcObject"in this.video)try{this.video.srcObject=this.stream}catch(t){this.video.src=e.createObjectURL(this.stream)||this.stream}this.video.addEventListener("loadeddata",(function(){t.options.height?t.video.width=t.video.clientWidth:t.video.height=t.video.clientHeight,t.options.videoLoaded&&t.options.videoLoaded(),t.initCanvas()}))},t.prototype.stopMediaTracks=function(){var t,e;null===(e=null===(t=this.stream)||void 0===t?void 0:t.getTracks())||void 0===e||e.forEach((function(t){t.stop()}))},t.prototype.initCanvas=function(){this.options.targetCanvas&&(this.canvas=this.options.targetCanvas,this.canvas.width=this.video.width,this.canvas.height=this.video.height,this.context=this.canvas.getContext("2d"),this.options.mirror&&(this.context.translate(this.canvas.width,0),this.context.scale(-1,1)))},t.prototype.videoRequestAnimationFrame=function(){var t=this,e=function(){t.context&&t.context.drawImage(t.video,0,0,t.video.width,t.video.height),t.options.onFrame(t.video),t.requestAnimationId=requestAnimationFrame(e)};e()},t.prototype.start=function(){this.video&&this.video.play(),this.requestAnimationId||this.videoRequestAnimationFrame()},t.prototype.pause=function(){this.video&&this.video.pause(),this.canvas&&this.requestAnimationId&&(cancelAnimationFrame(this.requestAnimationId),this.requestAnimationId=null)},t.prototype.switchCameras=function(){if(this.isIOS||this.videoDevices&&!(this.videoDevices.length<2)){this.stopMediaTracks();var t=this.currentMode;this.currentMode="user"===t?"environment":"user";var e=this.videoDeviceId;this.videoDeviceId=e===this.videoDevices[0]?this.videoDevices[1]:this.videoDevices[0],this.handleStream()}},t}()}},e={};function i(o){if(e[o])return e[o].exports;var s=e[o]={exports:{}};return t[o](s,s.exports,i),s.exports}return i.d=(t,e)=>{for(var o in e)i.o(e,o)&&!i.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(607)})()}));

/***/ }),

/***/ "./node_modules/.pnpm/@paddlejs-models+humanseg@1.2.2/node_modules/@paddlejs-models/humanseg/lib/index.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@paddlejs-models+humanseg@1.2.2/node_modules/@paddlejs-models/humanseg/lib/index.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(n,e){ true?module.exports=e():undefined}(this,(function(){return function(n){var e={};function t(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=n,t.c=e,t.d=function(n,e,o){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:o})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(o,r,function(e){return n[e]}.bind(null,r));return o},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/",t(t.s=2)}([function(n,e,t){n.exports=(()=>{var n={911:(n,e)=>{"use strict";var t=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==t)return t;throw new Error("unable to locate global object")}();n.exports=e=t.fetch,t.fetch&&(e.default=t.fetch.bind(t)),e.Headers=t.Headers,e.Request=t.Request,e.Response=t.Response},994:(n,e,t)=>{"use strict";t.r(e),t.d(e,{PaddlejsBackend:()=>xn,Runner:()=>_n,Transformer:()=>F,coreUtils:()=>o,env:()=>f,interfaces:()=>r,registerBackend:()=>b,registerOp:()=>P});var o={};t.r(o),t.d(o,{AddItemToVars:()=>u,delUselessData:()=>c,findVarByKey:()=>s,getGlobalInterface:()=>i,getOrMakeGlobalProperty:()=>a,traverseVars:()=>l});var r={};function i(){var n;if("undefined"!=typeof window)n=window;else if(void 0!==t.g)n=t.g;else{if("undefined"==typeof self)throw new Error("Could not find a global object");n=self}return n}function a(n,e){var t=i();return t[n]||(t[n]=e),t[n]}function s(n,e){return Array.isArray(n)?n.find((function(n){return n.name===e})):n[e]}function u(n,e){var t=Array.isArray(n),o=Array.isArray(e)?e:[e];t?o.forEach((function(e){for(var t=null,o=0;o<n.length;o++)if(n[o].name===e.name){t=o;break}null!==t?n[t]=e:n.push(e)})):o.forEach((function(e){n[e.name]=e}))}function l(n,e){Array.isArray(n)?n.forEach((function(n){e(n)})):Object.keys(n).forEach((function(t){e(n[t])}))}function c(n){if(n.ops=null,n.vars instanceof Array)for(var e=0;e<n.vars.length;e++)n.vars[e].data&&delete n.vars[e].data;else for(var t in n.vars)n.vars[t].data&&delete n.vars[t].data}t.r(r),t.d(r,{BufferType:()=>d,GraphType:()=>_,UniformType:()=>m,WasmMemoryType:()=>v});const f=a("env",new(function(){function n(){this.ENV={}}return n.prototype.set=function(n,e){this.ENV[n]=e},n.prototype.get=function(n){return this.ENV[n]},n}()));var h=function(n,e,t,o){return new(t||(t=Promise))((function(r,i){function a(n){try{u(o.next(n))}catch(n){i(n)}}function s(n){try{u(o.throw(n))}catch(n){i(n)}}function u(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,s)}u((o=o.apply(n,e||[])).next())}))},p=function(n,e){var t,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,o=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){a.label=i[1];break}if(6===i[0]&&a.label<r[1]){a.label=r[1],r=i;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(i);break}r[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(n,a)}catch(n){i=[6,n],o=0}finally{t=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};const g=function(){function n(n){this.urlConf={dir:"",main:""},this.separateChunk=!0,this.chunkNum=1,this.dataType="binary",this.params={type:"fetch"},this.inNode=!1,this.isLocalFile=!1,this.realFetch=function(){throw new Error("ERROR: empty fetch funciton")};var e=n,t="model.json";if(n.endsWith(".json")){var o=n.lastIndexOf("/")+1;e=n.substr(0,o),t=n.substr(o)}else"/"!==n.charAt(n.length-1)&&(e=n+"/");this.isLocalFile=0!==e.indexOf("http"),this.urlConf={dir:this.isLocalFile?"/"===e.charAt(0)?""+e:"/"+e:e,main:t},this.inNode="node"===f.get("platform")}return n.prototype.load=function(){return h(this,void 0,void 0,(function(){var e;return p(this,(function(t){switch(t.label){case 0:return[4,this.fetchModel()];case 1:return e=t.sent(),this.separateChunk=!!e.chunkNum&&e.chunkNum>0,this.chunkNum=this.separateChunk?e.chunkNum:0,this.separateChunk?"binary"!==this.dataType?[3,3]:[4,this.fetchChunks().then((function(t){return n.allocateParamsVar(e.vars,t)}))]:[3,3];case 2:t.sent(),t.label=3;case 3:return[2,e]}}))}))},n.prototype.fetchOneChunk=function(n){return h(this,void 0,void 0,(function(){return p(this,(function(e){switch(e.label){case 0:return f.get("fetch")?[4,f.get("fetch")(n,{type:"arrayBuffer"})]:[3,2];case 1:return[2,e.sent()];case 2:return[2,this.fetch(n).then((function(n){return n.arrayBuffer()}))]}}))}))},n.prototype.fetchJson=function(n){return this.fetch(n).then((function(n){return n.json()}))},n.prototype.getFileName=function(n){return"chunk_"+n+".dat"},n.prototype.fetchChunks=function(){return h(this,void 0,void 0,(function(){var n,e,t;return p(this,(function(o){for(n=this.chunkNum,e=[],t=1;t<=n;t++)e.push(this.fetchOneChunk(this.urlConf.dir+this.getFileName(t)));return[2,Promise.all(e).then((function(n){var e,t=0,o=[];n.forEach((function(n){e=new Float32Array(n),o.push(e),t+=e.length}));var r=new Float32Array(t),i=0;return o.forEach((function(n){n.forEach((function(n){r[i]=n,i+=1}))})),r}))]}))}))},n.allocateParamsVar=function(n,e){var t,o=0;l(n,(function(n){t=n.shape.reduce((function(n,e){return n*e})),n.persistable&&(n.data=e.slice(o,o+t),o+=t)}))},n.prototype.fetch=function(n,e){if(f.get("fetch"))return f.get("fetch")(n,e||{});var o=(e||this.params).method||"get",r=new(this.inNode?t(911).Headers:Headers);return this.realFetch=this.inNode?this.isLocalFile?this.fetchLocalFile:t(911):window.fetch.bind(window),this.realFetch(n,{method:o,headers:r})},n.prototype.fetchLocalFile=function(n){var e=t(993);return new Promise((function(t,o){try{t(e.readFileSync(n,"utf8"))}catch(n){o(n)}}))},n.prototype.fetchModel=function(){var n=this,e=this.params,t=this.urlConf.dir+this.urlConf.main,o=null;return"fetch"===e.type&&(o=new Promise((function(o,r){n.fetch(t,e).then((function(e){return f.get("fetch")?e:n.isLocalFile&&n.inNode?JSON.parse(e):e.json()})).then((function(n){return o(n)})).then((function(n){return r(n)}))}))),o},n}();var d,v,m,_;!function(n){n.FrameBuffer="frameBuffer",n.ColorBuffer="colorBuffer"}(d||(d={})),function(n){n.memory100="100",n.memory200="200",n.memory300="300",n.memory400="400",n.memory500="500",n.memory600="600",n.memory700="700",n.memory800="800",n.memory900="900"}(v||(v={})),function(n){n.uniform1f="1f",n.uniform1fv="1fv",n.uniform1i="1i",n.uniform1iv="1iv",n.uniform2f="2f",n.uniform2fv="2fv",n.uniform2i="2i",n.uniform2iv="2iv",n.uniform3f="3f",n.uniform3fv="3fv",n.uniform3i="3i",n.uniform3iv="3iv",n.uniform4f="4f",n.uniform4fv="4fv",n.uniform4i="4i",n.uniform4iv="4iv"}(m||(m={})),function(n){n.SingleOutput="single",n.MultipleOutput="multiple",n.MultipleInput="multipleInput"}(_||(_={}));var x={opRegistry:{ops:{}},backend:"",backendInstance:null};function P(n,e){var t=n.conf,o=n.params,r=n.main,i=n.mainFunc,a=n.textureFuncConf,s=n.commonFuncConf,u=n.behaviors,l=void 0===u?[]:u,c=x.backend+"_"+e;x.opRegistry.ops[c]||(x.opRegistry.ops[c]={name:e,conf:t,params:o,main:r,mainFunc:i,textureFuncConf:a,commonFuncConf:s,behaviors:l})}function b(n,e,t){n&&(x.backend=n),e&&(x.backendInstance=e),t&&Object.keys(t).forEach((function(n){P(t[n],n)}))}x=a("GLOBALS",x);var T=i();T.ImageBitmap||(T.ImageBitmap=function(){});const y=function(){function n(n,e){this.id="",this.type="",this.inputs={},this.outputs={},this.attrs={},this.subAttrs=[],this.next="",this.opData=null,this.isPacked=!1,this.bufferType=d.FrameBuffer,this.uniform=null;var t=n.inputs,o=n.outputs,r=n.attrs,i=void 0===r?{}:r,a=n.type,s=n.isPacked,u=void 0!==s&&s,l=n.bufferType,c=void 0===l?d.FrameBuffer:l,f=n.uniform,h=void 0===f?null:f;this.id=a+"_"+ +new Date+"_"+e,this.inputs=t,this.outputs=o,this.attrs=i,this.subAttrs=n["sub-attrs"]||[],this.uniform=h,this.type=a,this.isPacked=u,this.bufferType=c,this.next="",this.opData=null}return Object.defineProperty(n.prototype,"inputsName",{get:function(){var n=this,e=[];return Object.keys(this.inputs).forEach((function(t){e.push(n.inputs[t][0])})),e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"outputsName",{get:function(){return this.outputs.Output||this.outputs.Out||this.outputs.Y},enumerable:!1,configurable:!0}),n.prototype.execute=function(n){x.backendInstance.runProgram(this.opData,n)},n}(),F=function(n){this.name=n};var w,E=(w=function(n,e){return(w=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}w(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),A={conv2d:function(n,e){var t=n.attrs.strides,o=n.inputs.Input[0],r=n.inputs.Filter[0];if("image"===o)return!1;var i=s(e,o).shape,a=s(e,r).shape;return!t.find((function(n){return n>1}))&&i[i.length-1-2]%4==0&&4===a.length&&a[0]%4==0&&a[1]%4==0}};function O(n){return{type:"packed_2_unpacked",attrs:{},inputs:{Input:[n.inputName]},outputs:{Output:[n.outputName]}}}function V(n){return{type:"unpacked_2_packed",attrs:{},inputs:{Input:[n.inputName]},outputs:{Output:[n.outputName]}}}function C(n,e){Object.keys(n.inputs).forEach((function(e){n.inputs[e]=[n.inputs[e]+"_packed"]})),Object.keys(n.outputs).forEach((function(e){n.outputs[e]=[n.outputs[e]+"_packed"]})),n.type=n.type+"_packing",n.id=n.type+"_"+ +new Date+"_"+e.length,n.isPacked=!0}const R=function(n){function e(){return n.call(this,"TexturePacking")||this}return E(e,n),e.prototype.transform=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];if("webgl"===x.backend&&f.get("webgl_pack_channel")){var t=n[0],o=n[1],r=n[2],i="depthwise_conv2d"===t.type?"conv2d":t.type,a=A[i];if(a&&a(t,o)){var s=t.inputs,u=t.outputs,l=s.Input[0],c=u.Output?u.Output[0]:u.Out[0],h=V({inputName:l,outputName:l+"_packed"}),p=r.length;r.push(new y(h,p)),C(t,r);var g=O({inputName:c+"_packed",outputName:c}),d=r.length+1;r.push(new y(g,d))}}},e}(F);var S=function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])})(e,t)};return function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();const D=function(n){function e(){return n.call(this,"FormatInputsX")||this}return S(e,n),e.prototype.transform=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=n[0],o=["concat","connect","fc","rnn_origin","rnn_matmul"];if(o.includes(t.type)){var r=t.inputs;if(("rnn_origin"===t.type||"rnn_matmul"===t.type)&&r.WeightList.length>0)r.WeightList.forEach((function(n,e){r["weightlist_"+e]=[n]}));else{var i=r.X||r.Input;i.length>1&&(i.forEach((function(n,e){r["origin"+(e>0?"_"+e:"")]=[n]})),delete r.X,delete r.Input)}}},e}(F);var k=function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])})(e,t)};return function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),I=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o};function M(n,e){var t=s(e,n);return t?t.shape:[]}function L(n,e,t,o){for(var r=I(e),i=0,a=0,s=n;a<s.length;a++)i+=M(s[a],o)[t];return r[t]=i,{name:n[n.length-1]+"_out",shape:r}}const U=function(n){function e(){return n.call(this,"splitOp")||this}return k(e,n),e.prototype.transform=function(){for(var n,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var o=e[0],r=e[1],i=0,a=o.length;i<a;i++){var s=o[i];if("concat"===s.type&&(null===(n=s.inputs)||void 0===n?void 0:n.X)&&!(s.inputs.X.length<=4)){var l=s.attrs,c=s.inputs,f=s.outputs,h=c.X,p=h.length,g=Math.ceil((p-4)/3)+1,d=f.Out[0],v=M(d,r),m=l.axis||0;m=m>-1?m:v.length+m;for(var _=[],x=[],P=h.slice(0,4),b=void 0,T=0;T<g;T++){var y=0===T?P:h.slice(3*T+1,3*(T+1)+1),F=L(y,v,m,r);0!==T&&y.splice(0,0,b.name),F.shape[m]+=b?b.shape[m]:0;var w={Out:[F.name]};x.push({attrs:l,inputs:{X:y},outputs:w,type:"concat"}),_.push(F),b=F}x[g-1].outputs.Out=[d],o.splice.apply(o,I([i,1],x)),u(r,_)}}},e}(F);var j=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o};function N(n){if(n.length<4){for(var e=[],t=0;t<4-n.length;t++)e.push(1);return e.concat(n)}return j(n)}function B(n){return n.reduce((function(n,e){return n+e}))}function G(n,e){var t=n.length;return 4-t+(e>-1?e:t+e)}function X(n,e){for(var t=e[0],o=e[1],r=e[2],i=e[3],a=r*i,s=o*r*i,u=[],l=0;l<t;l++)for(var c=0;c<i;c++)for(var f=0;f<o;f++)for(var h=0;h<r;h++)u.push(n[l*s+f*a+h*i+c]);return new Float32Array(u)}function H(n){for(var e,t=n.data,o=n.shape,r=j(o).reverse(),i=0,a=r.length-1;i<a;i++)e=W(e||t,r[i]);return e}function W(n,e){for(var t=[],o=0,r=n.length;o<r;o+=e)t.push(n.slice(o,o+e));return t}var z=function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])})(e,t)};return function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Y="fetch_pack";const q=function(n){function e(){return n.call(this,"PackOut")||this}return z(e,n),e.prototype.transform=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];if(f.get("webgl_pack_output")){var t=n[0],o=n[1],r=t.find((function(n){return"fetch"===n.type})),i=r.inputs.X[0],a=s(o,i),l=N(a.shape),c=l[0],h=l[1],p=l[2],g=l[3],d={attrs:{},inputs:{X:[i]},outputs:{Y:[Y]},type:"pack_out"},v=h*g,m=Math.ceil(c*p/4),_={name:Y,shape:[1,1,m,v],persistable:!1};r.inputs.X=[Y],r.attrs.origin_shape=[c,h,p,g],t.push(d),u(o,[_])}},e}(F);var K=function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])})(e,t)};return function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),Z="img_pre_processed",J="img_origin";const Q=function(n){function e(){return n.call(this,"FeedProcess")||this}return K(e,n),e.prototype.transform=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=n[0],o=n[1],r=n[2];if(r.webglFeedProcess||f.get("webgl_gpu_pipeline")){var i=r.mean,a=void 0===i?[0,0,0]:i,l=r.std,c=void 0===l?[1,1,1]:l,h=r.scale,p=void 0===h?[1,1]:h,g=r.pos,d=void 0===g?[0,0]:g,v=r.feedShape,_=s(o,"image"),x=_.shape,P=x[2],b=x[3];_.shape=[1,1,P,b];var T=Object.assign({},_);T.name=Z,T.shape=[1,3,v.fh,v.fw],T.persistable=!1,delete T.data;var y=Object.assign({},_);y.name=J,y.shape=[1,1,v.fh,v.fw],y.persistable=!1,delete y.data,u(o,[y,T]);var F=t.find((function(n){var e=n.inputs;return Object.keys(e).find((function(n){return"image"===e[n][0]}))})),w=F.inputs;Object.keys(w).forEach((function(n){"image"===w[n][0]&&(w[n][0]=Z)}));var E={attrs:{mean:a,std:c},inputs:{X:[J]},outputs:{Y:[Z]},type:"feedPost"},A={attrs:{mean:a,std:c,scale:p,pos:d},inputs:{X:["image"]},outputs:{Y:[J]},type:"imgFeed",uniform:{u_scale:{type:m.uniform2fv,value:[1,1]},u_pos:{type:m.uniform2fv,value:[0,0]}},isPacked:!0};t.splice(1,0,E),t.splice(1,0,A)}},e}(F),$={preTransforms:[new U,new q,new Q],transforms:[new D,new R],postTransforms:[]};var nn,en=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o};function tn(n,e){return n&&n[e]||[]}!function(n){n.PreTransforms="preTransforms",n.Transforms="transforms",n.PostTransforms="postTransforms"}(nn||(nn={}));const on=function(){function n(n,e){this.weightMap=[],this.ops=[],this.vars=[],this.config={},this.type=_.SingleOutput,this.plugins=null,this.ops=n.ops,this.vars=n.vars,this.type=e.type||this.type,this.plugins=e.plugins,this.config=e,n.feedShape&&(this.config.feedShape=n.feedShape)}return n.prototype.createGraph=function(){return this.preTransforms(),this.createOpsMap(),this.arrangeMap(),this.postTransforms(),this.weightMap},n.prototype.preTransforms=function(){var n=this;en($.preTransforms,tn(this.plugins,nn.PreTransforms)).forEach((function(e){e.transform(n.ops,n.vars,n.config)}))},n.prototype.transforms=function(n,e){var t=this;en($.transforms,tn(this.plugins,nn.Transforms)).forEach((function(o){o.transform(n,t.vars,e)}))},n.prototype.postTransforms=function(){var n=this;en($.postTransforms,tn(this.plugins,nn.PostTransforms)).forEach((function(e){e.transform(n.weightMap,n.vars,n.type)}))},n.prototype.createOpsMap=function(){for(var n=[],e=0;e<this.ops.length;e++){var t=n.length,o=this.ops[e],r=new y(o,t);this.transforms(r,n),n.push(r)}this.weightMap=n},n.prototype.arrangeMap=function(){for(var n={},e=[],t={},o=function(o){for(var i=r.weightMap[o],a=0;a<i.outputsName.length;a++){var s=i.outputsName[a];n[s]=!0}e[o]=0,t[i.id]=o,i.inputsName.length>1?i.inputsName.forEach((function(t){!0===n[t]&&e[o]++})):e[o]=i.inputsName.length},r=this,i=0;i<this.weightMap.length;i++)o(i);this.topoSort(this.weightMap,e,t)},n.prototype.topoSort=function(n,e,t){var o=[];o.push(n[0]);for(var r=n.slice(0),i=null,a=n[0];o.length>0;){null!=i&&(n[t[i.id]].next=a.id),i=a,a=o.pop()||{};for(var s=0;s<a.outputsName.length;s++)for(var u=0;u<r.length;u++)for(var l=0;l<r[u].inputsName.length;l++)if(r[u].inputsName[l]===a.outputsName[s]&&(e[t[r[u].id]]--,0===e[t[r[u].id]])){o.push(n[t[r[u].id]]),r.splice(u,1),u--;break}}},n.prototype.getFeedExecutor=function(){return this.weightMap.find((function(n){return"feed"===n.type}))},n.prototype.getFetchExecutor=function(){return this.weightMap.find((function(n){return"fetch"===n.type}))},n.prototype.getExecutorById=function(n){return this.weightMap.find((function(e){return e.id===n}))},n}(),rn=function(){function n(n){this.opts={},this.isPacked=!1,this.name="",this.tensorId="",this.total=1,this.shape=[],this.unformattedShapeLength=0,this.shape_texture=[],this.exceedMax=!1,this.data=null,this.persistable=!1,this.interpType="NEAREST",this.dataLayout="",this.runtime=0,this.binding=0;var e=n.isPacked,t=void 0!==e&&e,o=n.name,r=n.runtime,i=void 0===r?0:r,a=n.persistable,s=void 0!==a&&a,u=n.type,l=n.dataLayout,c=n.interpType,f=void 0===c?"NEAREST":c,h=n.shape,p=n.data,g=n.binding,d=void 0===g?0:g;this.opts=n,this.isPacked=t,this.name=o,this.runtime=i,this.binding=d,this.persistable=s,this.interpType=f,this.tensorId=u,this.dataLayout=l,this.unformattedShapeLength=h.length,this.shape=N(h),this.total=this.shape.reduce((function(n,e){return n*e})),n.noLayout||p&&p.length&&(this.data=function(n,e,t,o){if("nhwc"===e){var r=t[0],i=t[1],a=X(n,[r,t[2],t[3],i*(o?4:1)]);return new Float32Array(a)}return new Float32Array(n)}(p,this.dataLayout,this.shape,this.isPacked),n.data=null)}return Object.defineProperty(n.prototype,"width_texture",{get:function(){var n=this.shape_texture.length;return this.shape_texture[n-1]||1},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"height_texture",{get:function(){var n=this.shape_texture.length;return this.shape_texture[n-2]||1},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"width_shape",{get:function(){var n=this.shape.length;return this.shape[n-1]},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"height_shape",{get:function(){var n=this.shape.length;return this.shape[n-2]},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"channel",{get:function(){var n=this.shape.length;return this.shape[n-3]},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"length_shape",{get:function(){return this.shape.length||0},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"length_unformatted_shape",{get:function(){return this.unformattedShapeLength||0},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"total_shape",{get:function(){return this.total},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"numbers_shape",{get:function(){for(var n=[],e=this.shape.length,t=0;t<e-1;t++){var o=this.shape.slice(t+1).reduce((function(n,e){return n*e}));n.push(o)}return n.push(1),n},enumerable:!1,configurable:!0}),n}(),an={adaptPaddings:function(){for(var n in this.processedAttrs)if(Object.prototype.hasOwnProperty.call(this.processedAttrs,n)&&"paddings"===n){var e=this.processedAttrs[n],t=e[0],o=e[1];return void(0===t&&1===o&&(this.processedAttrs[n][1]=0))}},setAdaptive:function(){this.processedAttrs.adaptive&&2===this.processedAttrs.ksize.length&&1===this.processedAttrs.ksize[0]&&1===this.processedAttrs.ksize[1]&&(this.processedAttrs.adaptive=!1,this.processedAttrs.global_pooling=!0)},isGlobalPooling:function(){var n,e=this.tensorDataMap.origin,t=(null===(n=null==e?void 0:e.shape)||void 0===n?void 0:n.length)||0;t>2&&this.processedAttrs.global_pooling&&(this.processedAttrs.ksize=[e.shape[t-2],e.shape[t-1]])},setPacked:function(){var n=this.processedAttrs.ispacked;this.tensorDataMap.origin&&n&&this.name.indexOf("pool")>-1&&(this.name+="_winograd")},mergeAttrs:function(){this.processedAttrs=this.subAttrs.reduce((function(n,e){return Object.assign(n,e)}),{})},isApplySeparableConv:function(){if(!this.isPackedOp){var n=this.processedAttrs.groups,e=this.tensorDataMap.filter;if("depthwise_conv2d"===this.name&&(this.name="conv2d"),e){var t=e.shape,o=t[0],r=t[1];o===n&&1===r&&(this.name+="_depthwise")}}},batchComputeConv2d:function(){var n=this.tensorDataMap.filter.shape[1];this.processedAttrs.filter_nearest_vec4=4*Math.floor(n/4),this.processedAttrs.filter_remainder_vec4=n%4},processBias:function(){var n=this.tensorDataMap.bias;if(n&&this.isPackedOp){n.packed=!0;var e=n.shape,t=[e[e.length-1]/4,1,1];n.shape=t}},isMax:function(){var n="max"===this.processedAttrs.pooling_type?1:0;this.processedAttrs.pooling_type=n,1===n&&(this.name+="_max")},transToPrelu:function(){this.processedAttrs.multi_value="0.0",this.processedAttrs.active_function="prelu"},transToRelu6:function(){this.processedAttrs.multi_value=this.processedAttrs.threshold,this.processedAttrs.active_function="relu6"},transToHardSigmoid:function(){this.processedAttrs.multi_value=this.processedAttrs.slope||.2,this.processedAttrs.bias_value=this.processedAttrs.offset||.5,this.processedAttrs.active_function="hardSigmoid"},transToLeakyrelu:function(){this.processedAttrs.multi_value=this.processedAttrs.alpha,this.processedAttrs.active_function="leakyRelu",this.name="relu"},transToPow:function(){this.processedAttrs.multi_value=this.processedAttrs.factor||2,this.processedAttrs.active_function="pow_func",this.name="pow"},transToSigmoid:function(){this.processedAttrs.active_function="sigmoid"},transToSqrt:function(){this.processedAttrs.active_function="sqrt"},transToTanh:function(){this.processedAttrs.active_function="tanh_func"},transToScale:function(){var n=this.processedAttrs.scale;this.processedAttrs.multi_value=void 0!==n?n:1,this.processedAttrs.bias_value=this.processedAttrs.bias||0;var e=this.processedAttrs.bias_after_scale;this.processedAttrs.active_function=e||void 0===e?"scale":"scaleWidthBias"},setActiveFunc:function(){var n=this.name.replace("conv2d-elementwise_add-","");this.processedAttrs=Object.assign({active_function:"scale",multi_value:"1.0",bias_value:"0.0",fuse_relu:!1},this.processedAttrs),"leaky_relu"===n&&(this.processedAttrs.multi_value=this.processedAttrs.alpha,this.processedAttrs.active_function="leakyRelu")},normalizePerm:function(){var n=this.tensorDataMap.origin.shape.length,e=this.processedAttrs.axis,t=e.length;if(t-n>0&&(t=(e=e.map((function(n){return n-1})).filter((function(n){return n>=0}))).length),t>4)throw Error("op transpoes2 axis length exceeds maximum length 4, get "+t);for(var o=new Array(t).fill(0),r=0;r<t;r++)o[e[r]]=r;var i=[];for(r=0;r<4;r++)i[r]=o[r]||0;this.processedAttrs.perm_arr=i,this.processedAttrs.perm_size=t},normalizeDim:function(){for(var n=this.tensorDataMap.origin.shape,e=N(n),t=G(n,this.processedAttrs.axis),o=[],r=0;r<e[t];r++)o[r]=r;this.processedAttrs.target_length=o.length,this.processedAttrs.target_value=o,this.processedAttrs.inputs_dim=e[t],this.processedAttrs.dim=t,0===this.processedAttrs.num&&(this.processedAttrs.num=Object.values(this.tensorDataMap).filter((function(n){return"out"===n.tensorName})).length||1)},processElementwiseAxis:function(){var n=this.tensorDataMap.origin.shape,e=this.tensorDataMap.counter.shape,t=this.processedAttrs.axis||-1;this.processedAttrs.counterLen=e.length,B(n)===B(e)?(this.processedAttrs.axis=0,this.processedAttrs.counterLen=4):(-1===t&&(t=n.length-e.length),this.processedAttrs.axis=G(n,t))},genElementwiseCounterPos:function(){for(var n=this.processedAttrs,e=n.counterLen,t=["0","0","0","0"],o=n.axis,r=4-e;r<4;r++)t[r]="oPos["+o+++"]";this.processedAttrs.counterPos=t.join(",")},flattenShape:function(){var n=Object.values(this.tensorDataMap).find((function(n){return n.shape.length>2}));if(n){var e=N(n.shape);n.shape=[e[0]*e[2],e[1]*e[3]]}},reshape:function(){var n=this.tensorDataMap.origin,e=this.tensorDataMap.counter,t=this.tensorDataMap.out;if(e.shape.length>n.shape.length){var o=e;e=n,n=o}if(n.shape.length>2&&2===e.shape.length){var r=function(n,e){void 0===n&&(n=[]),void 0===e&&(e=[]);var t=n.reduce((function(n,e){return n*e}));return 1===e.length?[1,t]:[e[0],t/e[0]]}(n.shape,t.shape);n.shape=r}},checkIsMerge:function(){var n=this.name.replace("conv2d-elementwise_add-","");this.name="conv2d_elementwise_add","leaky_relu"===n&&(this.processedAttrs.alpha&&(this.processedAttrs.multi_value=this.processedAttrs.alpha),this.processedAttrs.active_function="leakyRelu")}};var sn=function(){return(sn=Object.assign||function(n){for(var e,t=1,o=arguments.length;t<o;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};const un=function(){function n(n,e,t,o,r){this.name="",this.isPackedOp=!1,this.processedAttrs={},this.subAttrs=[],this.uniform=null,this.inputTensors=[],this.outputTensors=[],this.dataLayout="",this.iLayer=0,this.program=[],this.isFinalOp=!1,this.bufferType=d.FrameBuffer,this.tensorDataMap={},this.tensorData=[];var i=n.type,a=n.inputs,s=n.outputs,u=n.attrs,l=n.isPacked,c=n.bufferType,f=void 0===c?d.FrameBuffer:c,h=n.uniform,p=void 0===h?null:h;this.modelName=r,this.subAttrs=n.subAttrs,this.name=i,this.isPackedOp=l,this.bufferType=f,this.dataLayout=t.dataLayout||"",this.iLayer=e,this.isFinalOp=o,this.uniform=p,this.initExtendedAttrs(u),this.constructTensorData(a,s,t.vars),this.buildTensor();var g=this.buildShaderParams();this.buildProgram(g)}return n.prototype.initExtendedAttrs=function(n){for(var e in n)if(Object.prototype.hasOwnProperty.call(n,e)){var t=n[e];this.processedAttrs[e]=t}},n.prototype.constructTensorData=function(n,e,t){var o=this;Object.keys(e).forEach((function(n){e[n].forEach((function(r,i){e[n][i]=o.getTensorVar(r,t)}))})),Object.keys(n).forEach((function(e){n[e]=[o.getTensorVar(n[e][0],t)]}));var r=function(n){if(Object.prototype.hasOwnProperty.call(e,n))try{var t=e[n]||[{}],r=i.getExactTensorName(n,"output");r&&t.forEach((function(n,e){n.tensorName=r,o.tensorDataMap[r+"_"+e]=sn(sn({},n),{tensorName:r,runtime:e})}))}catch(n){console.error(n)}},i=this;for(var a in e)r(a);for(var a in n)if(Object.prototype.hasOwnProperty.call(n,a)){var s=n[a].length>0?n[a]:[{}],u=this.getExactTensorName(a,"input");if(u){var l=s[0];l.tensorName=u,this.tensorDataMap[u]=sn(sn({},l),{tensorName:u})}}},n.prototype.getExactTensorName=function(n,e){return"input"===e?{input:"origin",x:"origin",y:"counter",w:"weight"}[n.toLowerCase()]||n.toLowerCase():{output:"out",y:"out",out:"out",scale:"scale",bias:"bias",mean:"mean",variance:"variance",mask:"out",boxes:"out",variances:"out"}[n.toLowerCase()]},n.prototype.getTensorVar=function(n,e){var t=s(e,n.replace(/_packed$/,""));return t&&n.endsWith("_packed")?function(n,e){var t=3===n.shape.length?j([1],n.shape):n.shape,o=t[0],r=t[1],i=t[2],a=t[3],s=Object.assign({},n);if(s.name=e,s.packed=!1,r%4==0){var u=r/4;s.packed=!0,s.shape=[o,u,i,a]}return s}(t,n):t},n.prototype.buildProgram=function(n){var e=this,t=this.name,o=x.backend+"_"+t,r=x.opRegistry.ops[o];try{if(!r&&"wasm"!==f.get("backend"))throw new Error("[unregistered op] "+t);var i=this.inputTensors;this.program=this.outputTensors.map((function(t,o){return x.backendInstance.createProgram({op:r,outTensor:t,inputTensors:i,shaderParams:n[o],runtime:o,isFinalOp:e.isFinalOp})}))}catch(n){console.error(n)}},n.prototype.processTensorDataAndAttrs=function(){var n=this;try{this.name.indexOf("conv2d-elementwise_add")>-1?this.name="conv2d_elementwise_add":this.name.indexOf("max_pool2d_with_index")>-1&&(this.name="pool2d_max");var e=x.backend+"_"+this.name;(x.opRegistry.ops[e]&&x.opRegistry.ops[e].behaviors||[]).forEach((function(e){try{an[e].call(n)}catch(n){console.error(n)}}))}catch(n){console.error(n)}},n.prototype.buildTensor=function(){var n=this;this.processTensorDataAndAttrs();var e=Object.values(this.tensorDataMap);e.forEach((function(e,t){var o,r=e.tensorName,i=new rn({type:n.modelName+"_"+e.name,name:r,shape:e.shape,data:e.data||null,persistable:e.persistable||!1,interpType:e.interpType||"NEAREST",isPacked:n.isPackedOp||e.packed||!1,binding:t,noLayout:null===(o=x.backendInstance)||void 0===o?void 0:o.noLayout,dataLayout:n.dataLayout,runtime:e.runtime||0});"out"===r?n.outputTensors.push(i):n.inputTensors.push(i),e.shape=i.shape,e.total=i.total})),this.tensorDataMap=null,this.tensorData=e},n.prototype.buildShaderParams=function(){var n=this,e=[];return this.outputTensors.forEach((function(){var t=JSON.parse(JSON.stringify(n.processedAttrs));e.push(t)})),e},n}();var ln=function(){return(ln=Object.assign||function(n){for(var e,t=1,o=arguments.length;t<o;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};const cn=function(){function n(){this.targetContext={},this.gapFillWith="#fff",this.mean=[0,0,0],this.std=[1,1,1],this.bgr=!1,this.pixelWidth=1,this.pixelHeight=1,this.inputFeed=[],this.targetCanvas=f.get("canvas2d")||document.createElement("canvas"),this.targetContext=this.targetCanvas.getContext("2d")}return n.prototype.process=function(n,e,t){var o=e.fill,r=e.mean,i=e.std,a=e.bgr,s=e.keepRatio,u=void 0===s||s,l=e.scale,c=void 0===l?0:l,f=t.fc,h=void 0===f?3:f,p=t.fh,g=t.fw,d=n,v={gapFillWith:o||this.gapFillWith,mean:r||this.mean,std:i||this.std,bgr:a||this.bgr,keepRatio:u,scale:c,targetSize:{width:g,height:p},targetShape:[1,h,p,g]};return this.fromPixels(d,v)||[]},n.prototype.fromPixels=function(n,e){var t=[],o={gapFillWith:e.gapFillWith,dx:0,dy:0,dWidth:e.targetSize.width,dHeight:e.targetSize.height},r=n,i=n.path&&n.width&&n.height;if(!i&&!(n instanceof ImageBitmap||n instanceof HTMLVideoElement||n instanceof HTMLImageElement||n instanceof HTMLCanvasElement))return[{data:t,shape:e.shape||e.targetShape,name:"image",persistable:!0}];this.pixelWidth=n.naturalWidth||n.width,this.pixelHeight=n.naturalHeight||n.height;var a=f.get("webgl_gpu_pipeline")||e.webglFeedProcess;return this.fitToTargetSize(i?r.path:r,o,ln(ln({},e),{inGPU:a})),t=this.getImageData(o),a?[{data:t=Float32Array.from(t.data),shape:[1,1,o.dHeight,o.dWidth],name:"image",persistable:!0}]:[{data:t=this.allReshapeToRGB(t,e),shape:e.targetShape||e.shape,name:"image",persistable:!0}]},n.prototype.allReshapeToRGB=function(n,e){for(var t=e.mean,o=e.std,r=e.targetShape,i=e.bgr,a=e.normalizeType,s=void 0===a?0:a,u=r[1],l=r[2],c=r[3],f=n.data||n,h=new Float32Array(l*c*u),p=0,g=0;g<l;++g)for(var d=g*c,v=0;v<c;++v)for(var m=d+v,_=0;_<u;++_){var x=i?4*m+(2-_):4*m+_;h[p]=0===s?f[x]/255:(f[x]-128)/128,h[p]-=t[_],h[p]/=o[_],p++}return X(h,[1,l,c,u])},n.prototype.fitToTargetSize=function(n,e,t){var o=t||{},r=o.keepRatio,i=void 0===r||r,a=o.inGPU,s=void 0!==a&&a,u=o.scale,l=void 0===u?0:u,c=e.dWidth,f=e.dHeight,h=s?this.pixelWidth:c,p=s?this.pixelHeight:f,g=s?this.pixelWidth:c,d=s?this.pixelHeight:f,v=0,m=0;if(l){if(g-c<0||d-f<0)throw new Error("scale size smaller than target size");this.pixelWidth>this.pixelHeight?(d=l,g=Math.round(d*this.pixelWidth/this.pixelHeight)):(g=l,d=Math.round(g*this.pixelHeight/this.pixelWidth)),this.targetCanvas.width=h=g,this.targetCanvas.height=p=d,e.dx=(g-c)/2,e.dy=(d-f)/2}else i&&(c/f*this.pixelHeight/this.pixelWidth>=1?s?(h=Math.round(d*c/f),v=Math.floor((h-g)/2)):(g=Math.round(d*this.pixelWidth/this.pixelHeight),v=Math.floor((c-g)/2)):s?(p=Math.round(g*f/c),m=Math.floor((p-d)/2)):(d=Math.round(g*this.pixelHeight/this.pixelWidth),m=Math.floor((f-d)/2))),this.targetCanvas.width=e.dWidth=h,this.targetCanvas.height=e.dHeight=p;this.targetContext.fillStyle=e.gapFillWith,this.targetContext.fillRect(0,0,this.targetCanvas.width,this.targetCanvas.height),this.targetContext.drawImage(n,v,m,g,d)},n.prototype.getImageData=function(n){var e=n.dx,t=n.dy,o=n.dWidth,r=n.dHeight;return this.targetContext.getImageData(e,t,o,r)},n.prototype.cover=function(n,e,t,o){var r=t,i=o;return t/o*e/n>=1?r=Math.round(i*n/e):i=Math.round(r*e/n),[r/t,i/o]},n}();var fn=function(){return(fn=Object.assign||function(n){for(var e,t=1,o=arguments.length;t<o;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};function hn(n,e,t){for(var o=[],r=0,i=n.length;r<i;r++){var a=n[r];a>e&&o.push({score:a,i:r})}return o.sort((function(n,e){return e.score-n.score})).slice(0,t)}function pn(n){var e=n[0],t=n[1],o=n[2],r=n[3];return o<e||r<t?0:(o-e)*(r-t)}function gn(n,e){if(e[0]>n[2]||e[2]<n[0]||e[1]>n[3]||e[3]<n[1])return 0;var t=pn(n),o=pn(e),r=function(n,e){var t=n[0],o=n[1],r=n[2],i=n[3],a=e[0],s=e[1],u=e[2],l=e[3],c=Math.max(t,a),f=Math.max(o,s);return(Math.min(r,u)-c)*(Math.min(i,l)-f)}(n,e);return r/(t+o-r)}const dn={multiclass_nms:function(n,e){var t=n[0],o=void 0===t?[]:t,r=n[1],i=void 0===r?[]:r,a=H(o),s=H(i);if(!a||!s)return[];if(a=a[0],s=s[0],!(a&&a.length&&s&&s.length))return[];for(var u=e.nms_top_k,l=void 0===u?100:u,c=e.nms_eta,f=void 0===c?1:c,h=e.keep_top_k,p=void 0===h?100:h,g=e.background_label,d=void 0===g?0:g,v=e.nms_threshold,m=void 0===v?.3:v,_=e.score_threshold,x=void 0===_?0:_,P=[],b=0,T=s.length;b<T;b++){var y=[];if(b!==d){var F=hn(s[b],x,l);if(!F||!F.length)return[];var w=F.shift(),E=a[w.i];for(y.push(fn(fn({},w),{box:E,label:b}));F.length;){var A=F.shift();E=a[A.i];for(var O=!0,V=0,C=y;V<C.length;V++)if(gn(E,C[V].box)>m){O=!1;break}O&&y.push(fn(fn({},A),{box:E,label:b})),O&&f<1&&m>.5&&(m*=f)}P=P.concat(y)}}var R=P.sort((function(n,e){return e.score-n.score})).slice(0,p).sort((function(n,e){return n.label-e.label})).map((function(n){return function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o}([n.label,n.score],n.box)}));return R&&R.length?R:[]}};var vn=function(n,e,t,o){return new(t||(t=Promise))((function(r,i){function a(n){try{u(o.next(n))}catch(n){i(n)}}function s(n){try{u(o.throw(n))}catch(n){i(n)}}function u(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,s)}u((o=o.apply(n,e||[])).next())}))},mn=function(n,e){var t,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,o=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){a.label=i[1];break}if(6===i[0]&&a.label<r[1]){a.label=r[1],r=i;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(i);break}r[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(n,a)}catch(n){i=[6,n],o=0}finally{t=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};const _n=function(){function n(n){this.runnerConfig={},this.isPaused=!1,this.model={},this.weightMap=[],this.isExecuted=!1,this.test=!1,this.graphGenerator={},this.mediaProcessor=null,this.needPreheat=!0,this.feedShape={},this.runnerConfig=Object.assign({},n),this.needPreheat=void 0===n.needPreheat||n.needPreheat,this.modelName=n.modelName||Date.now().toString(),this.weightMap=[],f.set("ns",i()),"node"!==f.get("platform")&&(this.mediaProcessor=new cn)}return n.prototype.init=function(){return vn(this,void 0,void 0,(function(){var n;return mn(this,(function(e){switch(e.label){case 0:return x.backendInstance?(this.isExecuted=!1,"wasm"!==f.get("backend")?[3,2]:[4,Promise.all([this.load(),x.backendInstance.init()])]):(console.error("ERROR: Haven't register backend"),[2]);case 1:return e.sent(),[3,4];case 2:return x.backendInstance.init(),this.isExecuted=!1,[4,this.load()];case 3:e.sent(),e.label=4;case 4:return this.genFeedData(),this.genGraph(),this.genOpData(),"wasm"!==f.get("backend")?[3,6]:(this.model=Object.assign(this.model,this.runnerConfig),n=this.model,[4,x.backendInstance.initWasm(this.model,this.weightMap)]);case 5:return n.index=e.sent(),[2,[]];case 6:return this.needPreheat?[4,this.preheat()]:[3,8];case 7:return[2,e.sent()];case 8:return[2]}}))}))},n.prototype.load=function(){return vn(this,void 0,void 0,(function(){var n,e,t,o,r,i,a,s;return mn(this,(function(u){switch(u.label){case 0:return n=this.runnerConfig,e=n.modelPath,t=n.modelObj,o=void 0===t?null:t,e?(r=new g(e),i=this,[4,r.load()]):[3,2];case 1:return i.model=u.sent(),[3,3];case 2:(null==o?void 0:o.model)&&(null==o?void 0:o.params)&&(a=o.model,s=o.params,g.allocateParamsVar(a.vars,s),this.model=a),u.label=3;case 3:return[2]}}))}))},n.prototype.genGraph=function(){this.graphGenerator=new on(this.model,this.runnerConfig),this.weightMap=this.graphGenerator.createGraph()},n.prototype.genOpData=function(){var n=this,e=0;this.weightMap.forEach((function(t,o){var r=t.type;if("feed"!==r&&"fetch"!==r){e++;var i=o===n.weightMap.length-2,a=new un(t,e,n.model,i,n.modelName);t.opData=a}})),c(this.model)},n.prototype.preheat=function(){return vn(this,void 0,void 0,(function(){var n;return mn(this,(function(e){switch(e.label){case 0:return[4,this.checkModelLoaded()];case 1:return e.sent(),[4,this.execute()];case 2:return n=e.sent(),this.isExecuted=!0,[2,n]}}))}))},n.prototype.checkModelLoaded=function(){return vn(this,void 0,void 0,(function(){return mn(this,(function(n){switch(n.label){case 0:return 0!==this.weightMap.length?[3,2]:(console.info("It's better to preheat the model before running."),[4,this.load()]);case 1:n.sent(),this.genFeedData(),this.genGraph(),this.genOpData(),this.isExecuted=!1,n.label=2;case 2:return[2]}}))}))},n.prototype.predict=function(n,e){return vn(this,void 0,void 0,(function(){var t,o,r;return mn(this,(function(i){switch(i.label){case 0:return this.isPaused||!this.mediaProcessor?[2]:(t=[],t=this.runnerConfig.webglFeedProcess?[n]:this.mediaProcessor.process(n,this.runnerConfig,this.feedShape),o=[],"wasm"!==f.get("backend")?[3,3]:[4,x.backendInstance.predict(t[0].data,this.model.index)]);case 1:return i.sent(),[4,this.read()];case 2:return r=i.sent(),o=this.postProcess(r),[3,5];case 3:return this.updateFeedData(t),[4,this.execute()];case 4:o=i.sent(),i.label=5;case 5:return this.isExecuted=!0,[2,e?e(o):o]}}))}))},n.prototype.predictWithFeed=function(n,e,t){var o;return vn(this,void 0,void 0,(function(){var r,i,a,s,u,l,c,h,p,g,d,v;return mn(this,(function(m){switch(m.label){case 0:return r=this.feedShape,i=r.fc,a=void 0===i?3:i,s=r.fw,u=r.fh,Array.isArray(n)?(null===(o=n[0])||void 0===o?void 0:o.data)?((g=n[0].data)instanceof Float32Array||(n[0].data=new Float32Array(g)),l=n):l=[{data:new Float32Array(n),shape:t||[1,a,u,s],name:"image",persistable:!0}]:(h=(c=n).width,p=c.height,g=c.data,l=[{data:new Float32Array(g),shape:t||[1,a,p||u,h||s],name:"image",persistable:!0}]),d=[],"wasm"!==f.get("backend")?[3,3]:[4,x.backendInstance.predict(l[0].data,this.model.index)];case 1:return m.sent(),[4,this.read()];case 2:return v=m.sent(),d=this.postProcess(v),[3,5];case 3:return this.updateFeedData(l),[4,this.execute()];case 4:d=m.sent(),m.label=5;case 5:return this.isExecuted=!0,[2,e?e(d):d]}}))}))},n.prototype.genFeedData=function(){var n,e=this.runnerConfig,t=e.type,o=e.feedShape,r=e.webglFeedProcess;this.feedShape=this.model.feedShape||o;var i,a=this.feedShape,l=a.fc,c=void 0===l?3:l,h=a.fh,p=a.fw,g=this.model.vars;if(t===_.MultipleInput){var d=this.model.ops&&this.model.ops[0]&&(null===(n=this.model.ops[0].inputs)||void 0===n?void 0:n.X);d.length>1&&(i=d.map((function(n){var e=s(g,n),t=e.shape.reverse(),o=t[0],r=t[1],i=t[2],a=t[3],u=void 0===a?1:a;return e.data=new Float32Array(u*i*r*o),e})))}else{var v="wasm"!==f.get("backend")&&r?4:c;i=s(g,"image");var m={name:"image",shape:[1,v,h,p]};i=Object.assign(m,i,{data:new Float32Array(v*h*p).fill(1),persistable:!0})}u(g,i)},n.prototype.updateFeedData=function(n){var e=n[0],t=this.weightMap.find((function(n){return n.opData?n.opData.inputTensors.find((function(n){return n.tensorId.endsWith("_image")})):null})),o=t.opData.inputTensors.find((function(n){return n.tensorId.endsWith("_image")}));if(o.data=e.data,this.runnerConfig.webglFeedProcess||f.get("webgl_gpu_pipeline")){var r=e.shape||[1,1,e.height,e.width],i=new Uint8Array(e.data||[]);if(e.width&&e.height&&!e.data){var a=e.naturalWidth||e.width;r=[1,1,e.naturalHeight||e.height,a],i=e}var s=o.opts;s.shape=r;var u=t.opData,l=new rn(s);l.data=i,u.inputTensors=[l];var c=r.slice(-2),h=c[0],p=c[1],g=u.outputTensors[0].shape.slice(-2),d=g[0],v=g[1],m=this.mediaProcessor.cover(p,h,v,d);t.uniform.u_scale.value=m}},n.prototype.execute=function(){return vn(this,void 0,void 0,(function(){var n,e;return mn(this,(function(t){switch(t.label){case 0:return n=this.graphGenerator.getFeedExecutor(),this.executeOp(n),[4,this.read()];case 1:return e=t.sent(),[2,this.postProcess(e)]}}))}))},n.prototype.postProcess=function(n){var e="wasm"===f.get("backend");if(f.get("debug"))return n;var t=n,o=this.model,r=o.multiOutputs,i=o.postOps;if(r)if(e)t=r.map((function(e,t){var o;return(o={})[e.name]=n[t],o}));else{var a=0;t=r.map((function(e){var t,o=e.shape.reduce((function(n,e){return n*e})),r=n.slice(a,o+a);return a+=o,(t={})[e.name]=r,t}))}if(r&&i&&i.length)for(var s=function(n,e){var o=i[n],r=o.type,a=o.attrs,s=o.inputs,u=dn[r];if(!u)return{value:void 0};var l=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o}(t),c=Object.keys(s).map((function(n){var e=s[n],t=e.name,o=e.shape,r=l.filter((function(n){return n[t]}));return r&&r[0]&&r[0][t]?{name:n,tensorId:t,data:r[0][t],shape:o}:(console.error("未获取到"+t+"的数据"),null)}));t=u(c,a)},u=0,l=i.length;u<l;u++){var c=s(u);if("object"==typeof c)return c.value}return t},n.prototype.executeOp=function(n){var e;if("fetch"!==n.type)if("feed"!==n.type&&n.execute(this.isExecuted),f.get("debug")&&(null===(e=n.opData)||void 0===e?void 0:e.outputTensors)&&n.opData.outputTensors[n.opData.outputTensors.length-1]&&n.opData.outputTensors[n.opData.outputTensors.length-1].tensorId===this.modelName+"_"+(f.get("ns").layerName||f.get("layerName")))console.info(n.opData.name+"_"+n.opData.iLayer,"runner op");else if(n.next){var t=n.next,o=this.graphGenerator.getExecutorById(t);this.executeOp(o)}},n.prototype.read=function(){return vn(this,void 0,void 0,(function(){var n,e,t;return mn(this,(function(o){switch(o.label){case 0:return n=this.graphGenerator.getFetchExecutor(),e=s(this.model.vars,n.inputs.X[0]),t={name:e.name,shape:n.attrs.origin_shape||e.shape,index:this.model.index},[4,x.backendInstance.read(t)];case 1:return[2,o.sent()]}}))}))},n.prototype.stopPredict=function(){this.isPaused=!0},n}(),xn=function(){}},993:()=>{}},e={};function t(o){if(e[o])return e[o].exports;var r=e[o]={exports:{}};return n[o](r,r.exports,t),r.exports}return t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t(994)})()},function(n,e,t){n.exports=(()=>{"use strict";var n={646:(n,e,t)=>{t.r(e),t.d(e,{GLHelper:()=>b,glInstance:()=>bn,ops:()=>Pn,webgl_types:()=>o});var o={};t.r(o),t.d(o,{UniformType:()=>f});var r={};t.r(r),t.d(r,{hardSigmoid:()=>I,leakyRelu:()=>R,pow_func:()=>L,prelu:()=>V,relu6:()=>C,scale:()=>S,scaleWidthBias:()=>D,sigmoid:()=>k,sqrt:()=>M,tanh_func:()=>U,transferFromNHWCtoNCHW:()=>O});var i={};function a(){var n;if("undefined"!=typeof window)n=window;else if(void 0!==t.g)n=t.g;else{if("undefined"==typeof self)throw new Error("Could not find a global object");n=self}return n}function s(n,e){var t=a();return t[n]||(t[n]=e),t[n]}t.r(i),t.d(i,{getPixelsFromTexturePos:()=>G,getSamplerCode:()=>H,getTensorPosFromArrayIndex:()=>B,getValueFromTensorPos:()=>j,getValueFromTensorPosPacking:()=>N,moveTexture2PosToReal:()=>X});var u={opRegistry:{ops:{}},backend:"",backendInstance:null};u=s("GLOBALS",u);var l=a();l.ImageBitmap||(l.ImageBitmap=function(){});const c=s("env",new(function(){function n(){this.ENV={}}return n.prototype.set=function(n,e){this.ENV[n]=e},n.prototype.get=function(n){return this.ENV[n]},n}()));var f,h,p;function g(n){for(var e=n.length,t=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o}(n),o=[];e>1;)t.splice(0,1),o.push(t.reduce((function(n,e){return n*e}))),e--;return o}function d(n){return n.reduce((function(n,e){return n*e}),1)}function v(n,e){return 0===n.length?"":n.reduce((function(e,t,o){return e+"float("+t+")"+(o===n.length-1?");":",")}),"float "+e+"["+n.length+"] = float[](")}function m(n,e){if(1===n.length)return"float "+e+" = float("+n[0]+");";for(var t=n.length,o="\n        vec"+t+" "+e+" = vec"+t+"(\n    ",r=0;r<t;r++)o+="float("+n[r]+"),";return o.slice(0,-1)+");"}!function(n){n.uniform1f="1f",n.uniform1fv="1fv",n.uniform1i="1i",n.uniform1iv="1iv",n.uniform2f="2f",n.uniform2fv="2fv",n.uniform2i="2i",n.uniform2iv="2iv",n.uniform3f="3f",n.uniform3fv="3fv",n.uniform3i="3i",n.uniform3iv="3iv",n.uniform4f="4f",n.uniform4fv="4fv",n.uniform4i="4i",n.uniform4iv="4iv"}(f||(f={})),function(n){n[n.VS_SHADER=0]="VS_SHADER",n[n.FS_SHADER=1]="FS_SHADER"}(h||(h={})),function(n){n[n.FLOAT_VEC2=35664]="FLOAT_VEC2",n[n.FLOAT_VEC3=35665]="FLOAT_VEC3",n[n.FLOAT_VEC4=35666]="FLOAT_VEC4",n[n.INT_VEC2=35667]="INT_VEC2",n[n.INT_VEC3=35668]="INT_VEC3",n[n.INT_VEC4=35669]="INT_VEC4",n[n.BOOL=35670]="BOOL",n[n.BOOL_VEC2=35671]="BOOL_VEC2",n[n.BOOL_VEC3=35672]="BOOL_VEC3",n[n.BOOL_VEC4=35673]="BOOL_VEC4",n[n.FLOAT_MAT2=35674]="FLOAT_MAT2",n[n.FLOAT_MAT3=35675]="FLOAT_MAT3",n[n.FLOAT_MAT4=35676]="FLOAT_MAT4",n[n.SAMPLER_2D=35677]="SAMPLER_2D",n[n.SAMPLER_CUBE=35678]="SAMPLER_CUBE",n[n.FLOAT=5126]="FLOAT",n[n.INT=5124]="INT"}(p||(p={}));var _,x=function(n,e,t){this.size=n,this.type=e,this.location=t},P=function(n,e,t){this.size=n,this.type=e,this.location=t},b=function(){function n(){}return n.getWebglVersion=function(){return c.get("webglVersion")},n.createCanvas=function(){return c.get("canvas")||document&&document.createElement("canvas")},n.setWebglVersion=function(n){c.set("webglVersion",n)},n.setWebGLRenderingContext=function(n){return this.gl=n,n},n.getWebGLRenderingContext=function(){return this.gl?this.gl:this.createWebGLRenderingContext()},n.createWebGLRenderingContext=function(){if(this.gl)return this.gl;var n=this.createCanvas();if(!n)return null;n.addEventListener&&n.addEventListener("webglcontextlost",(function(n){throw n.preventDefault(),Error("webgl context is lost~")}),!1);var e=n.getContext("webgl2",this.WEBGL_ATTRIBUTES);return e?c.set("webglVersion",2):(c.set("webglVersion",1),e=n.getContext("webgl",this.WEBGL_ATTRIBUTES)||n.getContext("experimental-webgl",this.WEBGL_ATTRIBUTES)),e},n.printStates=function(n){console.log("1. isBlendEnable = "+n.isEnabled(n.BLEND)),console.log("2. isCullFaceEnable = "+n.isEnabled(n.CULL_FACE)),console.log("3. isDepthTestEnable = "+n.isEnabled(n.DEPTH_TEST)),console.log("4. isDitherEnable = "+n.isEnabled(n.DITHER)),console.log("5. isPolygonOffsetFillEnable = "+n.isEnabled(n.POLYGON_OFFSET_FILL)),console.log("6. isSampleAlphtToCoverageEnable = "+n.isEnabled(n.SAMPLE_ALPHA_TO_COVERAGE)),console.log("7. isSampleCoverageEnable = "+n.isEnabled(n.SAMPLE_COVERAGE)),console.log("8. isScissorTestEnable = "+n.isEnabled(n.SCISSOR_TEST)),console.log("9. isStencilTestEnable = "+n.isEnabled(n.STENCIL_TEST))},n.printWebGLInfo=function(n){console.log("renderer = "+n.getParameter(n.RENDERER)),console.log("version = "+n.getParameter(n.VERSION)),console.log("vendor = "+n.getParameter(n.VENDOR)),console.log("glsl version = "+n.getParameter(n.SHADING_LANGUAGE_VERSION))},n.printWebGLTextureInfo=function(n){console.log("MAX_COMBINED_TEXTURE_IMAGE_UNITS = ",n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS)),console.log("MAX_TEXTURE_IMAGE_UNITS = ",n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS)),console.log("MAX_TEXTURE_SIZE = ",n.getParameter(n.MAX_TEXTURE_SIZE)),console.log("MAX_CUBE_MAP_TEXTURE_SIZE = ",n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE))},n.triggerContextLostEvent=function(n){var e=n.getExtension("WEBGL_lose_context");null!==e&&e.loseContext()},n.checkGLError=function(n){var e=n.getError();return 0!==e&&(console.log("WebGL Error NO: ",e),!0)},n.setDefaultState=function(n){n.clearColor(0,0,0,0),n.clearDepth(1),n.enable(n.DEPTH_TEST),n.enable(n.CULL_FACE),n.enable(n.SCISSOR_TEST)},n.setViewport=function(n,e){n.viewport(e[0],e[1],e[2],e[3])},n.initShader=function(n,e,t){var o=this.createShader(n,e);return this.compileShader(n,t,o),o},n.createShader=function(n,e){var t;if(null===(t=e===h.VS_SHADER?n.createShader(n.VERTEX_SHADER):n.createShader(n.FRAGMENT_SHADER)))throw new Error("WebGLShader创建失败！");return t},n.compileShader=function(n,e,t){return n.shaderSource(t,e),n.compileShader(t),!1!==n.getShaderParameter(t,n.COMPILE_STATUS)||(console.error(n.getShaderInfoLog(t)),n.deleteShader(t),!1)},n.createProgram=function(n){var e=n.createProgram();if(null===e)throw new Error("WebGLProgram创建失败！");return e},n.linkProgram=function(n,e,t,o,r,i){return void 0===r&&(r=null),void 0===i&&(i=null),n.attachShader(e,t),n.attachShader(e,o),null!==r&&r(n,e),n.linkProgram(e),!1===n.getProgramParameter(e,n.LINK_STATUS)?(console.error(n.getProgramInfoLog(e)),n.deleteShader(t),n.deleteShader(o),n.deleteProgram(e),!1):(n.validateProgram(e),!1===n.getProgramParameter(e,n.VALIDATE_STATUS)?(console.error(n.getProgramInfoLog(e)),n.deleteShader(t),n.deleteShader(o),n.deleteProgram(e),!1):(null!==i&&i(n,e),!0))},n.getProgramActiveAttribs=function(n,e,t){for(var o=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES),r=0;r<o;r++){var i=n.getActiveAttrib(e,r);i&&(t[i.name]=new P(i.size,i.type,n.getAttribLocation(e,i.name)))}},n.getProgramAtciveUniforms=function(n,e,t){for(var o=n.getProgramParameter(e,n.ACTIVE_UNIFORMS),r=0;r<o;r++){var i=n.getActiveUniform(e,r);if(i){var a=n.getUniformLocation(e,i.name);null!==a&&(t[i.name]=new x(i.size,i.type,a))}}},n.createBuffer=function(n){var e=n.createBuffer();if(null===e)throw new Error("WebGLBuffer创建失败！");return e},n.getColorBufferData=function(n){var e=new Uint8Array(n.drawingBufferWidth*n.drawingBufferHeight*4);return n.readPixels(0,0,n.drawingBufferWidth,n.drawingBufferHeight,n.RGBA,n.UNSIGNED_BYTE,e),e},n.setUniformParam=function(n,e,t,o){switch(t){case f.uniform1f:n.uniform1f(e,o);break;case f.uniform1fv:n.uniform1fv(e,o);break;case f.uniform1i:n.uniform1i(e,o);break;case f.uniform1iv:n.uniform1iv(e,o);break;case f.uniform2f:n.uniform2f(e,o[0],o[1]);break;case f.uniform2fv:n.uniform2fv(e,o);break;case f.uniform2i:n.uniform2i(e,o[0],o[1]);break;case f.uniform2iv:n.uniform2iv(e,o);break;case f.uniform3f:n.uniform3f(e,o[0],o[1],o[2]);break;case f.uniform3fv:n.uniform3fv(e,o);break;case f.uniform3i:n.uniform3i(e,o[0],o[1],o[2]);break;case f.uniform3iv:n.uniform3iv(e,o);break;case f.uniform4f:n.uniform4f(e,o[0],o[1],o[2],o[3]);break;case f.uniform4fv:n.uniform4fv(e,o);break;case f.uniform4i:n.uniform4i(e,o[0],o[1],o[2],o[3]);break;case f.uniform4iv:n.uniform4iv(e,o);break;default:console.error("["+t+"]: unknown uniform type")}},n.genTextureInfoFromTensorShape=function(n,e){var t=n||4096,o=e.shape,r=void 0===o?[]:o,i=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o}(r).sort((function(n,e){return n-e})),a=i[0],s=i[1],u=i[2],l=a*i[3],f=s*u;if(l>t||f>t){var h=[l,f].sort((function(n,e){return n-e})),p=h[0],g=h[1],d=function(n,e){var t=e;if(n%t==0)return t;for(;t<n&&n%t!=0;)t++;return t}(g,Math.ceil(g/t));if(l=p*d,f=Math.ceil(g/d),c.get("debug")&&console.error("大小超限",r,[f,l]),l>t||f>t)throw new Error("Requested texture size ["+l+"x"+f+"] greater than WebGL maximum on this browser / GPU ["+t+"x"+t+"].")}e.shape_texture=[f,l]},n.WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0,powerPreference:"high-performance"},n.gl=null,n}();!function(n){n[n.GL_REPEAT=0]="GL_REPEAT",n[n.GL_MIRRORED_REPEAT=1]="GL_MIRRORED_REPEAT",n[n.GL_CLAMP_TO_EDGE=2]="GL_CLAMP_TO_EDGE"}(_||(_={}));var T=function(){function n(){}return n.getTextureConfig=function(n){var e,t,o,r,i,a,s,u,l=n,f=!0,h=!0;return 2===c.get("webglVersion")?(e=l.getExtension("EXT_color_buffer_float"),o=l.HALF_FLOAT,r=l.R32F,i=l.RGBA32F,a=l.R16F,s=l.RGBA16F,t=l.RED,u=l.RGBA32F):(r=l.RGBA,a=l.RGBA,s=l.RGBA,i=l.RGBA,t=l.RGBA,u=l.RGBA,e=l.getExtension("OES_texture_float"),o=l.getExtension("OES_texture_half_float").HALF_FLOAT_OES,f=this.isDownloadFloatTextureEnabled(l,u),h=this.isFloatTextureReadPixelsEnabledMethod(l,1,f)),{textureFloat:e,textureHalfFloat:o,internalFormat:r,internalFormatPacked:i,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,textureFormat:t,downloadInternalFormat:u,frameBufferSupportFloat:f,isFloatTextureReadPixelsEnabled:h}},n.isFloatTextureReadPixelsEnabledMethod=function(n,e,t){var o=n;if(0===e)return!1;if(1===e){if(null==o.getExtension("OES_texture_float"))return!1}else if(null==o.getExtension("EXT_color_buffer_float")||null==o.getExtension("EXT_color_buffer_half_float"))return!1;var r=o.createFramebuffer(),i=o.createTexture();o.bindTexture(o.TEXTURE_2D,i);var a=2===e?o.RGBA32F:o.RGBA;o.texImage2D(o.TEXTURE_2D,0,a,1,1,0,o.RGBA,t?o.FLOAT:o.getExtension("OES_texture_half_float").HALF_FLOAT_OES,null),o.bindFramebuffer(o.FRAMEBUFFER,r),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,i,0);var s=o.checkFramebufferStatus(o.FRAMEBUFFER)===o.FRAMEBUFFER_COMPLETE;o.readPixels(0,0,1,1,o.RGBA,o.FLOAT,new Float32Array(4));var u=o.getError()===o.NO_ERROR;return s&&u},n.isDownloadFloatTextureEnabled=function(n,e){var t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e,1,1,0,n.RGBA,n.FLOAT,null);var o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);var r=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),r},n.uploadDataToTexture=function(n,e,t,o){n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);var r=t.width_texture,i=t.height_texture,a=t.data,s=n.RGBA,u=n.RGBA,l=n.FLOAT,f=a;if(a instanceof Uint8Array||a instanceof Uint8ClampedArray||!(a instanceof Float32Array||a instanceof Array))l=n.UNSIGNED_BYTE;else if(2===c.get("webglVersion")){var h=c.get("webgl_force_half_float_texture");s=o?h?e.internalFormatPackedHalfFloat:e.internalFormatPacked:h?e.internalFormatHalfFloat:e.internalFormat,u=o?n.RGBA:e.textureFormat}else{for(var p=new Float32Array(r*i*4),g=0;g<a.length;g++)o?p[g]=a[g]:(p[4*g]=a[g],p[4*g+1]=0,p[4*g+2]=0,p[4*g+3]=0);f=p}n.texImage2D(n.TEXTURE_2D,0,s,r,i,0,u,l,f)},n.genOutputTexture=function(n,e,t,o){var r=t.interpType,i=t.width_texture,a=t.height_texture,s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,"LINEAR"===r?n.LINEAR:n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,"LINEAR"===r?n.LINEAR:n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);var u=c.get("webgl_force_half_float_texture"),l=u?e.internalFormatPackedHalfFloat:e.internalFormatPacked,f=2===c.get("webglVersion")?u?n.HALF_FLOAT:n.FLOAT:e.frameBufferSupportFloat?n.FLOAT:e.textureHalfFloat,h=o?e.isFloatTextureReadPixelsEnabled?f:n.UNSIGNED_BYTE:null;return n.texImage2D(n.TEXTURE_2D,0,l,i,a,0,n.RGBA,o?h:f,null),n.bindTexture(n.TEXTURE_2D,null),s},n}(),y=["\n    precision highp float;\n    precision highp int;\n\n    attribute vec4 position;\n    varying vec2 vCoord;\n\n    void main() {\n        vCoord.x = (position.x + 1.0) / 2.0;\n        vCoord.y = (position.y + 1.0) / 2.0;\n        gl_Position = position;\n    }\n    ","#version 300 es\n    in vec4 position;\n    out vec2 vCoord;\n\n    void main() {\n        vCoord.x = (position.x + 1.0) / 2.0;\n        vCoord.y = (position.y + 1.0) / 2.0;\n        gl_Position = position;\n    }\n    "],F=new Float32Array([-1,1,-1,-1,1,1,1,-1]),w=["length_shape","length_unformatted_shape","width_shape","height_shape","width_texture","height_texture","offset_x","offset_y","channel","total_shape","numbers_shape"],E={float:["multi_value","bias_value"],bool:["fuse_relu"]};function A(){return"\n    "+(c.get("useModAdaptor")?"\n            int calMod(int a, int b) {\n                float modV = mod(float(a), float(b));\n                if (modV == float(b)) {\n                    modV = 0.0;\n                }\n                return int(modV);\n            }\n        ":"\n            int calMod(int a, int b) {\n                return a - a / b * b;\n            }\n        ")+"\n    "+(c.get("useDivisionAdaptor")?"\n            int calDivision(int a, int b) {\n                return int(float(a) / (float(b) - 0.0001));\n            }\n        ":"\n            int calDivision(int a, int b) {\n                return a / b;\n            }\n        ")+"\n    \n    float tanh_calc(float num) {\n        float res = (exp(2.0 * num) - 1.0) / (exp(2.0 * num) + 1.0);\n        return res;\n    }\n    \n    "}const O="\nivec4 transferFromNHWCtoNCHW(\n    int sumVal,\n    const int channel,\n    const int width_shape,\n    const int height_shape,\n    const int total_shape) {\n\n    int n_origin = int(total_shape/(channel * width_shape * height_shape));\n    int new_a = calMod(sumVal, width_shape);\n    sumVal = int((sumVal - new_a) / width_shape);\n    int new_b = calMod(sumVal, height_shape);\n    sumVal = int((sumVal - new_b) / height_shape);\n    int new_g = calMod(sumVal, channel);\n    sumVal = int((sumVal - new_g) / channel);\n    int new_r = calMod(sumVal, n_origin);\n    return ivec4(new_r,new_g,new_b,new_a);\n}\n";var V="\nfloat prelu(float x, float p, float b) {\n    float result = x;\n    if (x < 0.0) {\n        result = x * p;\n    }\n\n    return result;\n}",C="\nfloat relu6(float x, float threshold, float b) {\n    float result = min(max(0.0, x), threshold);\n    return result;\n}",R="\nfloat leakyRelu(float x, float p, float b) {\n    float result = max(x, x * p);\n    return result;\n}",S="\nfloat scale(float x, float p, float b) {\n    float result = p * x + b;\n    return result;\n}",D="\nfloat scaleWidthBias(float x, float p, float b) {\n    float result = p * (x + b);\n    return result;\n}",k="\nfloat sigmoid(float x, float y, float z) {\n    float result = 1.0 / (1.0 + exp(-x));\n    return result;\n}",I="\n    float hardSigmoid(float x, float slope, float offset) {\n        float result = max(0.0, min(1.0, slope * x + offset));\n        return result;\n    }\n",M="\n    float sqrt(float x, float slope, float offset) {\n        return sqrt(x);\n    }\n",L="\n    float pow_func(float x, float factor, float offset) {\n        return pow(x, factor);\n    }\n",U="\nfloat tanh_func(float x, float y, float z) {\n    return tanh_calc(x);\n}";function j(n,e){var t=e.width_shape,o=e.height_shape,r=e.channel,i=e.width_texture;return"\n    // 根据tensor坐标获取这个tensor位置的值\n    float getValueFromTensorPos_"+n+"(int n, int c, int h, int w) {\n        int index = n * "+t*o*r+" + c * "+t*o+" + h * "+t+" + w;\n        int pos_w = int(mod(float(index), float("+i+")));\n        int pos_h = index / int("+i+");\n        vec4 pixels = TEXTURE2D(texture_"+n+",\n            vec2(\n                (float(pos_w)  + 0.5) / float("+i+"),\n                (float(pos_h) + 0.5) / float("+e.height_texture+")\n            )\n        );\n        // 只用了r通道\n        return pixels.r;\n    }"}function N(n,e){var t=e.channel,o=e.height_shape,r=e.width_texture,i=e.height_texture,a=e.width_shape;return"\n    // 根据tensor坐标获取这个tensor位置的值\n    vec4 getValueFromTensorPosPacking_"+n+"(int n, int c, int h, int w) {\n        int index = n * "+a*o*t+" + c * "+a*o+" + h * "+a+" + w;\n        int pos_w = int(mod(float(index), float("+r+")));\n        int pos_h = index / int("+r+");\n        vec4 pixels = TEXTURE2D(texture_"+n+",\n            vec2(\n                (float(pos_w)  + 0.5) / float("+r+"),\n                (float(pos_h) + 0.5) / float("+i+")\n            )\n        );\n        // 只用了r通道\n        return pixels;\n    }"}function B(n,e){var t=e.numbers_shape,o=e.length_shape;if(1===o)return"\n            int getTensorPosFromArrayIndex_"+n+"(int n) {\n                return calMod(n, "+t[0]+");\n            }\n        ";for(var r="ivec"+o+"("+t.join(", ")+")",i="pos[0] = n / "+t[0]+";",a=1;a<o;a++)i+="\n            n = calMod(n, "+t[a-1]+");\n            pos["+a+"] = calDivision(n, "+t[a]+");\n        ";return"\n    ivec"+o+" shapeVec_"+n+" = "+r+";\n    ivec"+o+" getTensorPosFromArrayIndex_"+n+"(int n) {\n        ivec"+o+" pos;\n        "+i+"\n        return pos;\n    }\n    "}function G(n){return"\n    #define getPixelsFromTexturePos_"+n+"(pos) TEXTURE2D(texture_"+n+", pos)\n    "}function X(n,e){return"\n    vec2 moveTexture2PosToReal_"+n+"(vec2 v) {\n        vec2 v2;\n        v2.x = v.x * float("+e.width_texture+");\n        v2.y = v.y * float("+e.height_texture+");\n        return v2;\n    }\n    "}function H(n){return"uniform sampler2D texture_"+n+";"}function W(n,e,t,o,a){var s,u,l="",f=e.name,h=e.mainFunc,p=e.textureFuncConf,g=void 0===p?{}:p,d=e.commonFuncConf;try{var v=function(n,e,t){for(var o={},r=Object.assign({},e),i=[],a=0,s=n;a<s.length;a++){for(var u=s[a],l=u.name,c={},f=0,h=w;f<h.length;f++)void 0!==u[_=h[f]]&&(c[_]=u[_]);o[l]=c,i.push(l)}for(var p=0,g=Object.keys(E);p<g.length;p++)for(var d=g[p],v=0,m=E[d];v<m.length;v++){var _;void 0!==e[_=m[v]]&&(r[_]=d+"("+e[_]+")")}return e.active_function&&(r.active_function=e.active_function),r.runtime=t,{textureParams:o,opParams:r,active_function:e.active_function}}(t,o,a),m=v.textureParams,_=v.opParams,x=v.active_function,P=2===c.get("webglVersion")?" #version 300 es\n            #ifdef GL_FRAGMENT_PRECISION_HIGH\n            precision highp float;\n            precision highp int;\n        #else\n            precision mediump float;\n            precision mediump int;\n        #endif      \n        ":" #ifdef GL_FRAGMENT_PRECISION_HIGH\n            precision highp float;\n            precision highp int;\n        #else\n            precision highp float;\n            precision highp int;\n        #endif\n        ",b=function(n){var e=n.frameBufferSupportFloat,t=n.isFinalOp,o=n.isFloatTextureReadPixelsEnabled;return 2===c.get("webglVersion")?"\n        // 顶点shader透传的材质坐标\n        in vec2 vCoord;\n        out vec4 outColor;\n        void setOutput(float result) {\n            result = fuse_op(result);\n            outColor.r = result;\n        }\n        void setPackedOutput(vec4 result) {\n            outColor = result;\n        }\n        int calCeil(int a, int b) {\n            return int(ceil(float(a) / float(b)));\n        }\n        "+A()+"\n    ":e?"\n            varying vec2 vCoord;\n            varying vec4 outColor;\n            void setOutput(float result) {\n                result = fuse_op(result);\n                gl_FragColor.r = result;\n            }\n            void setPackedOutput(vec4 result) {\n                gl_FragColor = result;\n            }\n            int calCeil(int a, int b) {\n                return int(ceil(float(a) / float(b)));\n            }\n            "+A()+"\n    ":t&&!o?"\n        varying vec2 vCoord;\n        varying vec4 outColor;\n\n        const float FLOAT_MAX = 1.70141184e38;\n        const float FLOAT_MIN = 1.17549435e-38;\n\n        #define isnan(value) isnan_custom(value)\n        bool isnan_custom(float val) {\n            return (val > 0. || val < 1. || val == 0.) ? false : true;\n        }\n\n        "+A()+"\n\n        int calCeil(int a, int b) {\n            return int(ceil(float(a) / float(b)));\n        }\n\n        lowp vec4 encode_float(highp float v) {\n            if (isnan(v)) {\n            return vec4(255, 255, 255, 255);\n            }\n\n            highp float av = abs(v);\n\n            if(av < FLOAT_MIN) {\n            return vec4(0.0, 0.0, 0.0, 0.0);\n            } else if(v > FLOAT_MAX) {\n            return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n            } else if(v < -FLOAT_MAX) {\n            return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n            }\n\n            highp vec4 c = vec4(0,0,0,0);\n\n            highp float e = floor(log2(av));\n            highp float m = exp2(fract(log2(av))) - 1.0;\n\n            c[2] = floor(128.0 * m);\n            m -= c[2] / 128.0;\n            c[1] = floor(32768.0 * m);\n            m -= c[1] / 32768.0;\n            c[0] = floor(8388608.0 * m);\n\n            highp float ebias = e + 127.0;\n            c[3] = floor(ebias / 2.0);\n            ebias -= c[3] * 2.0;\n            c[2] += floor(ebias) * 128.0;\n\n            c[3] += 128.0 * step(0.0, -v);\n\n            return c / 255.0;\n        }\n\n        void setOutput(float result) {\n                result = fuse_op(result);\n                gl_FragColor = encode_float(result);\n        }\n        ":"\n            #define isnan(value) isnan_custom(value)\n            bool isnan_custom(float val) {\n                return (val > 0. || val < 1. || val == 0.) ? false : true;\n            }\n\n            varying vec2 vCoord;\n            varying vec4 outColor;\n            void setOutput(float result) {\n                result = fuse_op(result);\n                if(isnan(result)) {\n                    gl_FragColor.r = 0.0;\n                }else {\n                    gl_FragColor.r = result;\n                }\n            }\n\n            void setPackedOutput(vec4 result) {\n                gl_FragColor = result;\n            }\n\n            "+A()+"\n\n            int calCeil(int a, int b) {\n                return int(ceil(float(a) / float(b)));\n            }\n        "}(n),T=function(n){var e="",t="";if(n.fuse_opt)for(var o in n.fuse_opt){var i=o,a=0,s=0;switch(o){case"scale":var u=n.fuse_opt.scale.bias_after_scale,l=n.fuse_opt.scale.scale;a=void 0!==l?l:1,s=n.fuse_opt.scale.bias||0,!1===u&&void 0!==u&&(i="scaleWidthBias");break;case"relu":i="prelu";break;case"relu6":a=n.fuse_opt[o].threshold;break;case"hard_sigmoid":i="hardSigmoid",a=n.fuse_opt[o].slope||.2,s=n.fuse_opt[o].offset||.5;break;case"leakyRelu":a=n.fuse_opt[o].alpha;break;case"pow":i="pow_func",a=n.fuse_opt[o].factor||2;break;case"tanh":i="tanh_func"}e+=r[i],t+="res = "+i+"(x, float("+a+"), float("+s+"));"}return"\n        "+e+"\n        \n        float fuse_op(float x) {\n            float res = x;\n            "+t+"\n            return res;\n        }\n    "}(_),y=function(n,e,t,o){if(!n)return"";var r=Object.assign({},n);r["@all"]&&function(n,e){var t=e.filter((function(n){return"out"!==n.name})),o=n["@all"];t.forEach((function(e){var t=e.name;n[t]?n[t].concat(o):n[t]=o})),delete n["@all"]}(r,o);for(var a="",s="",u=0,l=Object.keys(r);u<l.length;u++){var c=l[u];if(e[c]){s+=H(c);for(var f=0,h=r[c];f<h.length;f++){var p=h[f];if(i[p])try{a+=i[p](c,e[c],t)}catch(n){console.error(n)}}}}return"\n    "+s+"\n    "+a+"\n    "}(g,m,_,t),F=function(n){return void 0===n?"":"\n        int layer_run_time = "+n+";\n    "}(a),O=function(n){var e,t,o,r,i;return"\n        \n    vec2 _2d_shape_texture_out = vec2(float("+n.width_texture+"), float("+n.height_texture+"));\n    \n        "+(t=(e=n).height_shape,o=e.width_shape,"\n    ivec4 getOutputTensorPos() {\n        vec2 outCoord = vCoord.xy * (_2d_shape_texture_out);\n        int index = int(outCoord.x) + int(outCoord.y) * int("+e.width_texture+");\n\n        int n1 = int(index / "+(r=o*t*e.channel)+");\n        int c1 = int(calMod(index, "+r+") / "+(i=o*t)+");\n        int h1 = int(calMod(index, "+i+") / "+o+");\n        int w1 = calMod(index, "+o+");\n        return ivec4(n1, c1, h1, w1);\n    }\n    \n    ")}(m.out);s=l=" "+P+"\n            "+T+"\n            "+b+"\n            "+function(n){if(!n)return"";for(var e="",t=0,o=n;t<o.length;t++){var i=o[t];r[i]&&(e+=r[i])}return e}(d)+"\n            "+(x?r[x]:"")+"\n            "+y+"\n            "+F+"\n            "+O+"\n            "+h(m,_)+"\n        ",u=1===c.get("webglVersion")?"texture2D":"texture",l=s.replace(/\bTEXTURE2D\b/g,u)}catch(n){console.error("["+f+"]: "+n)}return l}const z=function(){function n(n,e,t,o){var r=n;this.vShader=e;try{this.fShader=this.initShader(r,t,"fragment"),this.shape=o&&o.shape;var i=this.program=r.createProgram();r.attachShader(i,this.vShader),r.attachShader(i,this.fShader),r.linkProgram(i)}catch(n){throw new Error(n)}}return n.prototype.initShader=function(n,e,t){void 0===t&&(t="vertex");var o,r="vertex"===t?n.VERTEX_SHADER:n.FRAGMENT_SHADER;if("vertex"===t&&this.vShader)o=this.vShader;else if(o=n.createShader(r),"vertex"===t&&(this.vShader=o),n.shaderSource(o,e),n.compileShader(o),!n.getShaderParameter(o,n.COMPILE_STATUS))throw new Error("compile: "+n.getShaderInfoLog(o));return o},n.prototype.setProgram=function(n,e,t){n.useProgram(this.program),t||this.runVertexShader(n,e)},n.prototype.runVertexShader=function(n,e){var t=n.getAttribLocation(this.program,"position");n.enableVertexAttribArray(t),n.bindBuffer(n.ARRAY_BUFFER,e),n.vertexAttribPointer(t,2,n.FLOAT,!1,0,0)},n.Sampler="uSampler",n}();var Y,q=(Y=function(n,e){return(Y=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])})(n,e)},function(n,e){function t(){this.constructor=n}Y(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),K=function(n,e,t,o){return new(t||(t=Promise))((function(r,i){function a(n){try{u(o.next(n))}catch(n){i(n)}}function s(n){try{u(o.throw(n))}catch(n){i(n)}}function u(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,s)}u((o=o.apply(n,e||[])).next())}))},Z=function(n,e){var t,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,o=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){a.label=i[1];break}if(6===i[0]&&a.label<r[1]){a.label=r[1],r=i;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(i);break}r[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(n,a)}catch(n){i=[6,n],o=0}finally{t=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};const J=function(n){function e(){var e=n.call(this)||this;return e.cacheTextures={},e.uniformLocations={},e.texturesMap={},e.queryList=[],e.currentTexture=null,e.width_shape_out=1,e.height_shape_out=1,e.width_texture_out=1,e.height_texture_out=1,e.channel=0,e.total_shape=0,e}return q(e,n),e.prototype.init=function(){return K(this,void 0,void 0,(function(){var n;return Z(this,(function(e){return n=this.gl=b.createWebGLRenderingContext(),this.gl?(this.glVersion=b.getWebglVersion(),this.textureConf=T.getTextureConfig(n),this.MAX_TEXTURE_SIZE=c.get("MAX_TEXTURE_SIZE")||n.getParameter(n.MAX_TEXTURE_SIZE),n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),this.vertexBuffer=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer),n.bufferData(n.ARRAY_BUFFER,F,n.STATIC_DRAW),this.vShader=b.initShader(n,h.VS_SHADER,y[this.glVersion-1]),this.frameBuffer=n.createFramebuffer(),n.bindFramebuffer(n.FRAMEBUFFER,this.frameBuffer),this.pbo=n.createBuffer(),[2]):[2]}))}))},e.prototype.createProgram=function(n){var e=this,t=n.op,o=n.outTensor,r=n.inputTensors,i=n.shaderParams,a=n.runtime,s=n.isFinalOp,u=null;try{var l=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o}([o],r);l.forEach((function(n){return b.genTextureInfoFromTensorShape(e.MAX_TEXTURE_SIZE,n)}));var c=W(this.textureConf,t,l,i,a);(u=new z(this.gl,this.vShader,c,o)).fsCode=c;var f=T.genOutputTexture(this.gl,this.textureConf,o,s);this.texturesMap[o.tensorId]=f,this.program=u}catch(n){console.error("webgl createProgram: "+t.name+" -- "+n)}return u},e.prototype.runProgram=function(n,e){var t=this,o=function(n,e){if(2===e&&c.get("performance")){var t=n.getExtension("EXT_disjoint_timer_query_webgl2");if(!t)return;var o=n.createQuery();return n.beginQuery(t.TIME_ELAPSED_EXT,o),o}return null}(this.gl,this.glVersion),r=n.isPackedOp;n.program.forEach((function(o,i){var a=n.outputTensors[i],s=a.tensorId;t.setOutProps(a),"frameBuffer"===n.bufferType?t.attachFrameBuffer(s):t.attachColorBuffer(),o.setProgram(t.gl,t.vertexBuffer,e),t.program=o,t.render(n,e,i,r)})),n.tensorData=null,o&&(this.queryList.push({name:n.name,query:o,count:1}),o=function(n,e,t){if(2===e&&c.get("performance")){var o=n.getExtension("EXT_disjoint_timer_query_webgl2");if(!o)return;n.endQuery(o.TIME_ELAPSED_EXT)}return t}(this.gl,this.glVersion,o))},e.prototype.read=function(n){return K(this,void 0,void 0,(function(){var e,t,o,r;return Z(this,(function(i){switch(i.label){case 0:return c.get("webgl_gpu_pipeline")?(e=this.gl,this.frameBuffer=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffer),[2,[]]):(t=this.createPBO(),[4,this.createAndWaitForFence()]);case 1:return i.sent(),o=this.downloadFloat32TensorFromBuffer(t),r=n?n.shape:[],c.get("webgl_pack_output")?[2,o.slice(0,d(r))]:[2,o]}}))}))},e.prototype.createPBO=function(){var n,e=this.textureConf;if(2===this.glVersion){var t=this.gl,o=this.pbo;t.bindBuffer(t.PIXEL_PACK_BUFFER,o);var r=16*this.width_texture_out*this.height_texture_out;return t.bufferData(t.PIXEL_PACK_BUFFER,r,t.STREAM_READ),t.readPixels(0,0,this.width_texture_out,this.height_texture_out,t.RGBA,t.FLOAT,0),t.bindBuffer(t.PIXEL_PACK_BUFFER,null),o}var i=this.gl,a=i.FLOAT;return e.isFloatTextureReadPixelsEnabled?n=new Float32Array(this.width_texture_out*this.height_texture_out*4):(n=new Uint8Array(this.width_texture_out*this.height_texture_out*4),a=i.UNSIGNED_BYTE),i.readPixels(0,0,this.width_texture_out,this.height_texture_out,i.RGBA,a,n),e.isFloatTextureReadPixelsEnabled?n:new Float32Array(n.buffer)},e.prototype.createAndWaitForFence=function(){return K(this,void 0,void 0,(function(){var n,e,t,o,r=this;return Z(this,(function(i){return n=this.gl,e=null!=n.fenceSync,t=function(){return!0},e&&(o=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0),n.flush(),t=function(){var e=n.clientWaitSync(o,0,0);return e===n.ALREADY_SIGNALED||e===n.CONDITION_SATISFIED}),[2,new Promise((function(n){r.pollItem(t,n)}))]}))}))},e.prototype.pollItem=function(n,e){var t=function(){n()?e():setTimeout(t,1)};t()},e.prototype.downloadFloat32TensorFromBuffer=function(n){var e=4*this.width_texture_out*this.height_texture_out;if(2===this.glVersion){var t=this.gl,o=new Float32Array(e);t.bindBuffer(t.PIXEL_PACK_BUFFER,n),t.getBufferSubData(t.PIXEL_PACK_BUFFER,0,o),t.bindBuffer(t.PIXEL_PACK_BUFFER,null);var r=[];if(c.get("webgl_pack_output"))return Array.from(o);for(var i=0;i<this.width_texture_out*this.height_texture_out;i++)r.push(o[4*i]);return r}var a=n,s=[];for(i=0;i<this.width_texture_out*this.height_texture_out;i++){var u=this.textureConf.isFloatTextureReadPixelsEnabled?4*i:i;s.push(a[u])}return s},e.prototype.setOutProps=function(n){var e=n.width_shape,t=void 0===e?1:e,o=n.height_shape,r=void 0===o?1:o,i=n.width_texture,a=void 0===i?1:i,s=n.height_texture,u=void 0===s?1:s,l=n.channel,c=void 0===l?0:l,f=n.total_shape,h=void 0===f?0:f;this.width_shape_out=t,this.height_shape_out=r,this.width_texture_out=a,this.height_texture_out=u,this.channel=c,this.total_shape=h},e.prototype.attachColorBuffer=function(){var n=this.gl;n.bindFramebuffer(n.FRAMEBUFFER,null),n.canvas.width=this.width_shape_out,n.canvas.height=this.height_shape_out,n.viewport(0,0,n.canvas.width,n.canvas.height),n.scissor(0,0,n.canvas.width,n.canvas.height)},e.prototype.attachFrameBuffer=function(n){this.currentTexture=this.texturesMap[n];var e=this.gl;e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.currentTexture,0),e.viewport(0,0,this.width_texture_out,this.height_texture_out),e.scissor(0,0,this.width_texture_out,this.height_texture_out)},e.prototype.render=function(n,e,t,o){var r=this;void 0===e&&(e=!1),void 0===o&&(o=!1);var i=n.inputTensors,a=void 0===i?[]:i,s=n.uniform,u=void 0===s?null:s,l=n.iLayer,c=void 0===l?0:l,f=n.modelName,h=this.gl,p=0;a.forEach((function(n){r.initTexture(p,n,o);var i=r.getUniformLoc("texture_"+n.name,c,e,t,f);i&&h.uniform1i(i,p++)})),u&&this.setUniform(u,c,e,t,f),h.drawArrays(h.TRIANGLE_STRIP,0,4)},e.prototype.initTexture=function(n,e,t){var o,r=this.gl,i=this.textureConf,a=e.tensorId,s=t||e.isPacked,u=e.data;if(e.persistable){this.cacheTextures=this.cacheTextures||{};var l=this.cacheTextures[a];l?(o=l,u&&b.genTextureInfoFromTensorShape(this.MAX_TEXTURE_SIZE,e)):(o=r.createTexture(),this.cacheTextures[a]=o)}else o=this.texturesMap[a];r.activeTexture(r["TEXTURE"+n]),r.bindTexture(r.TEXTURE_2D,o),u&&(T.uploadDataToTexture(r,i,e,s),e.data=null)},e.prototype.setUniform=function(n,e,t,o,r){var i=this,a=Object.keys(n),s=this.gl;a.forEach((function(a){var u=n[a].type,l=n[a].value,c=i.getUniformLoc(a,e,t,o,r);b.setUniformParam(s,c,u,l)}))},e.prototype.getUniformLoc=function(n,e,t,o,r){var i=r+"_";if(t)return this.uniformLocations[i+e][n+o];var a=this.gl.getUniformLocation(this.program.program,n);return this.uniformLocations[i+e]=this.uniformLocations[i+e]||{},this.uniformLocations[i+e][n+o]=a,a},e.prototype.dispose=function(){},e}((function(){})),Q={mainFunc:function(n,e){var t=n.origin,o=n.filter,r=n.out,i=n.bias,a=e.groups,s=void 0===a?1:a,u=e.strides,l=void 0===u?[]:u,c=e.paddings,f=void 0===c?[]:c,h=e.dilations,p=void 0===h?[]:h,g=e.fuse_relu,d=e.filter_nearest_vec4,v=e.filter_remainder_vec4,m=e.act_type,_=l[0],x=void 0===_?1:_,P=l[1],b=void 0===P?1:P,T=f[0],y=void 0===T?0:T,F=f[1],w=void 0===F?0:F,E=p[0],A=void 0===E?1:E,O=p[1],V=void 0===O?1:O;return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        int x = oPos.a;\n        int c = oPos.g;\n        int y = oPos.b;\n        int b = oPos.r;\n        float res = 0.0;\n\n        // 获取output的坐标\n        int oTensorChannel = (c / ("+r.channel+" / "+s+")) * "+o.channel+";\n        int oy = y * "+x+" - "+y+";\n        for (int fy = 0; fy < "+o.height_shape+"; fy++) {\n            if (oy >= "+t.height_shape+") {\n                break;\n            }\n            if (oy < 0) {\n                oy += "+A+";\n                continue;\n            }\n            int ox = x * "+b+" - "+w+";\n            for (int fx = 0; fx < "+o.width_shape+"; fx++) {\n                if (ox >= "+t.width_shape+") {\n                    break;\n                }\n                if (ox < 0) {\n                    ox += "+V+";\n                    continue;\n                }\n                // channel计算\n                for (int j = 0; j < "+d+"; j += 4) {\n                    vec4 fValues = vec4(\n                        getValueFromTensorPos_filter(c, j, fy, fx),\n                        getValueFromTensorPos_filter(c, j + 1, fy, fx),\n                        getValueFromTensorPos_filter(c, j + 2, fy, fx),\n                        getValueFromTensorPos_filter(c, j + 3, fy, fx)\n                    );\n\n                    vec4 oValues = vec4(\n                        getValueFromTensorPos_origin(b, oTensorChannel + j, oy, ox),\n                        getValueFromTensorPos_origin(b, oTensorChannel + j + 1, oy, ox),\n                        getValueFromTensorPos_origin(b, oTensorChannel + j + 2, oy, ox),\n                        getValueFromTensorPos_origin(b, oTensorChannel + j + 3, oy, ox)\n                      );\n\n                    res += dot(fValues, oValues);\n                }\n\n                if ("+v+" == 1) {\n                    res += dot(\n                        getValueFromTensorPos_filter(c, "+d+", fy, fx),\n                        getValueFromTensorPos_origin(b, oTensorChannel + "+d+", oy, ox));\n                } else if ("+v+" == 2) {\n                    vec2 fValues = vec2(\n                        getValueFromTensorPos_filter(c, "+d+", fy, fx),\n                        getValueFromTensorPos_filter(c, "+d+" + 1, fy, fx)\n                    );\n                    vec2 oValues = vec2(\n                        getValueFromTensorPos_origin(b, oTensorChannel + "+d+", oy, ox),\n                        getValueFromTensorPos_origin(b, oTensorChannel + "+d+" + 1, oy, ox)\n                      );\n                    res += dot(fValues, oValues);\n                } else if ("+v+" == 3) {\n                    vec3 fValues = vec3(\n                        getValueFromTensorPos_filter(c, "+d+", fy, fx),\n                        getValueFromTensorPos_filter(c, "+d+" + 1, fy, fx),\n                        getValueFromTensorPos_filter(c, "+d+" + 2, fy, fx)\n                    );\n                    vec3 oValues = vec3(\n                        getValueFromTensorPos_origin(b, oTensorChannel + "+d+", oy, ox),\n                        getValueFromTensorPos_origin(b, oTensorChannel + "+d+" + 1, oy, ox),\n                        getValueFromTensorPos_origin(b, oTensorChannel + "+d+" + 2, oy, ox)\n                    );\n                    res += dot(fValues, oValues);\n                }\n\n                ox += "+V+";\n            }\n            oy += "+A+";\n        }\n\n        "+(i?"res += getValueFromTensorPos_bias(0, 0, 0, c);":"")+"\n\n        if ("+g+") {\n            res = max(0.0, res);\n        }\n        else if ("+("relu6"===m)+") {\n            res = min(max(0.0, res), 6.0);\n        }\n\n        setOutput(res);\n    }\n    "},textureFuncConf:{filter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"],bias:["getValueFromTensorPos"]},behaviors:["adaptPaddings","isApplySeparableConv","batchComputeConv2d","processBias"]};function $(n,e){var t=n[0],o=n[1],r=n[2],i=n[3];if(1===t&&1===o)return[[1,1,r],3,[i],1,[r,i]];var a=n.slice(0,e),s=n.slice(e);return[a,a.length,s,s.length,[a.reduce((function(n,e){return n*e})),s.reduce((function(n,e){return n*e}))]]}function nn(n,e,t){if(1===t)return"\n            int getTensorPosFromArrayIndex_"+n+"(int n) {\n                return calMod(n, "+e[0]+");\n            }\n        ";var o=g(e);return o.push(1),"\n    ivec"+t+" shapeVec_"+n+" = ivec"+t+"("+o.join(", ")+");\n    ivec"+t+" getTensorPosFromArrayIndex_"+n+"(int n) {\n        ivec"+t+" pos;\n        pos[0] = n / shapeVec_"+n+"[0];\n        for (int i = 1; i < "+t+"; i++) {\n            n = calMod(n, shapeVec_"+n+"[i - 1]);\n            pos[i] = n / shapeVec_"+n+"[i];\n        }\n        return pos;\n    }\n    "}function en(n){return 1===n?"int":"ivec"+n}function tn(n){var e=n.total_shape,t=n.channel,o=n.height_shape,r=n.width_shape;return[e/t/o/r,t,o,r]}const on={mainFunc:function(n,e){var t=n.origin,o=e.transpose_X,r=void 0!==o&&o,i=e.transpose_Y,a=void 0!==i&&i,s=e.trans_x,u=void 0!==s&&s,l=e.trans_y,c=r||u,f=a||void 0!==l&&l;return"\n    void main() {\n        float res = 0.0;\n        // 获取output的坐标\n        ivec4 out_pos = getOutputTensorPos();\n        ivec4 origin_pos = out_pos;\n        if ("+c+") {\n            origin_pos[3] = origin_pos[2];\n        }\n        ivec4 counter_pos = out_pos;\n        if ("+f+") {\n            counter_pos[2] = counter_pos[3];\n        }\n\n        for (int j = 0; j < "+(c?t.height_shape:t.width_shape)+"; j++) {\n            if ("+c+") {\n                origin_pos[2] = j;\n            }\n            else {\n                origin_pos[3] = j;\n            }\n            if ("+f+") {\n                counter_pos[3] = j;\n            }\n            else {\n                counter_pos[2] = j;\n            }\n            float o = getValueFromTensorPos_origin(origin_pos[0], origin_pos[1], origin_pos[2], origin_pos[3]);\n            float c = getValueFromTensorPos_counter(counter_pos[0], counter_pos[1], counter_pos[2], counter_pos[3]);\n            \n            res += c * o;\n        }\n        setOutput(res);\n    }\n    "},textureFuncConf:{counter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]}};function rn(n,e){var t=n[0],o=n[1],r=n[2],i=n[3];if(1===t&&1===o)return[[1,1,r],3,[i],1,[r,i]];var a=n.slice(0,e),s=n.slice(e);return[a,a.length,s,s.length,[a.reduce((function(n,e){return n*e})),s.reduce((function(n,e){return n*e}))]]}function an(n,e,t){if(1===t)return"\n            int getTensorPosFromArrayIndex_"+n+"(int n) {\n                return calMod(n, "+e[0]+");\n            }\n        ";var o=g(e);return o.push(1),"\n    ivec"+t+" shapeVec_"+n+" = ivec"+t+"("+o.join(", ")+");\n    ivec"+t+" getTensorPosFromArrayIndex_"+n+"(int n) {\n        ivec"+t+" pos;\n        pos[0] = n / shapeVec_"+n+"[0];\n        for (int i = 1; i < "+t+"; i++) {\n            n = calMod(n, shapeVec_"+n+"[i - 1]);\n            pos[i] = n / shapeVec_"+n+"[i];\n        }\n        return pos;\n    }\n    "}function sn(n){return 1===n?"int":"ivec"+n}function un(n){var e=n.total_shape,t=n.channel,o=n.height_shape,r=n.width_shape;return[e/t/o/r,t,o,r]}const ln={mainFunc:function(n,e){return"\n    // start函数\n    void main(void) {\n        vec2 outCoord = vCoord.xy * (_2d_shape_texture_out);\n        int index = int(outCoord.x) + int(outCoord.y) * int("+n.out.width_texture+");\n        ivec4 originPos = getTensorPosFromArrayIndex_origin(index);\n        float res = getValueFromTensorPos_origin(originPos[0], originPos[1], originPos[2], originPos[3]);\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getTensorPosFromArrayIndex","getValueFromTensorPos"]}},cn={mainFunc:function(n,e){var t=n.out,o=n.origin,r=e.align_mode,i=void 0===r?1:r,a=e.align_corners,s=void 0===a||a;return"\n    // start函数\n\n    vec4 getData(float n, float scale, bool align_flag, int in_len) {\n        float m = align_flag ? ((n + 0.5) / scale - 0.5) : (n / scale);\n        int a1 = int(floor(m));\n        a1 = a1 > 0 ? a1 : 0;\n        int a2 = (a1 + 1) < (in_len - 1) ? (a1 + 1) : (in_len - 1);\n\n        float idx_src = (n + 0.5) / scale - 0.5;\n        idx_src = idx_src > 0.0 ? idx_src : 0.0;\n        float b1 = align_flag ? (idx_src - float(a1)) : (n / scale - float(a1));\n        float b2 = 1.0 - b1;\n        return vec4(float(a1), float(a2), b1, b2);\n    }\n\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n\n        bool align_flag = "+i+" == 0 && !"+s+";\n\n        float scale_x = 0.0;\n        float scale_y = 0.0;\n        if ("+s+") {\n            scale_x = float("+t.width_shape+" - 1) / float("+o.width_shape+" - 1);\n            scale_y = float("+t.height_shape+" - 1) / float("+o.height_shape+" - 1);\n        }\n        else {\n            scale_x = float("+t.width_shape+") / float("+o.width_shape+");\n            scale_y = float("+t.height_shape+") / float("+o.height_shape+");\n        }\n\n        vec4 vx = getData(float(oPos.a), scale_x, align_flag, "+o.width_shape+");\n        vec4 vy = getData(float(oPos.b), scale_y, align_flag, "+o.height_shape+");\n\n        int x1 = int(vx.r);\n        int x2 = int(vx.g);\n        float x3 = vx.b;\n        float x4 = vx.a;\n        int y1 = int(vy.r);\n        int y2 = int(vy.g);\n        float y3 = vy.b;\n        float y4 = vy.a;\n\n        float value11 = getValueFromTensorPos_origin(oPos.r, oPos.g, y1, x1);\n        float value12 = getValueFromTensorPos_origin(oPos.r, oPos.g, y2, x1);\n        float value21 = getValueFromTensorPos_origin(oPos.r, oPos.g, y1, x2);\n        float value22 = getValueFromTensorPos_origin(oPos.r, oPos.g, y2, x2);\n        float value = x4 * y4 * value11 + x4 * y3 * value12 + x3 * y4 * value21 + x3 * y3 * value22;\n        setOutput(float(value));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},fn=cn;var hn={relu:["transToPrelu"],relu6:["transToRelu6"],leaky_relu:["transToLeakyrelu"],transToLeakyrelu:["transToLeakyrelu"],scale:["transToScale"],sigmoid:["transToSigmoid"],hard_sigmoid:["transToHardSigmoid"],pow:["transToPow"],sqrt:["transToSqrt"],tanh:["transToTanh"]};function pn(n,e){var t=e.multi_value,o=void 0===t?1:t,r=e.bias_value,i=void 0===r?0:r;return"\n    // start函数\n    void main(void) {\n        // 输出数据\n        float o = getPixelsFromTexturePos_origin(vCoord).r;\n        float res = "+e.active_function+"(o, float("+o+"), float("+i+"));\n        setOutput(res);\n    }\n    "}function gn(n){return{mainFunc:pn,textureFuncConf:{origin:["getPixelsFromTexturePos"]},behaviors:hn[n]}}const dn={mainFunc:function(n,e){var t=e.axes,o=Array.isArray(t)?t:[t],r=[0,1,2,3].filter((function(n){return n>=o.length}));return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float o = 0.0;\n        o = getValueFromTensorPos_origin("+[0,1,2,3].map((function(n){return o.indexOf(n)>-1?0:"oPos["+r.splice(0,1)+"]"})).join(",")+");\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},vn={mainFunc:function(n,e){var t=n.origin,o=n.out,r=e.align_corners;return"\n    // start函数\n    int getData(float n, float scale, bool align_corners) {\n        float m = align_corners ? (n / scale + 0.5) : (n / scale);\n        return int(floor(m));\n    }\n\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        \n        float scale_x = 0.0;\n        float scale_y = 0.0;\n        if ("+r+") {\n            scale_x = float("+o.width_shape+" -1) / float("+t.width_shape+" - 1);\n            scale_y = float("+o.height_shape+" - 1) / float("+t.height_shape+" - 1);\n        }\n        else {\n            scale_x = float("+o.width_shape+") / float("+t.width_shape+");\n            scale_y = float("+o.height_shape+") / float("+t.height_shape+");\n        }\n    \n        int vx = getData(float(oPos.a), scale_x, "+r+");\n        int vy = getData(float(oPos.b), scale_y, "+r+");\n        \n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, vy, vx);\n        setOutput(float(o));\n}\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},commonFuncConf:["transferFromNHWCtoNCHW"]};var mn=function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o};const _n={mainFunc:function(n,e){var t=n.origin,o=n.image,r=n.out,i=e.variances,a=void 0===i?[.1,.1,.2,.2]:i,s=e.fixed_sizes,u=e.fixed_ratios,l=e.densities,c=e.flatten_to_2d,f=e.clip,h=e.step_w,p=void 0===h?0:h,d=e.step_h,v=void 0===d?0:d,_=e.offset,x=void 0===_?.5:_,P=e.runtime,b=void 0===P?0:P,T=o.height_shape,y=o.width_shape,F=t.height_shape,w=t.width_shape,E=r.total_shape,A=r.channel,O=r.height_shape,V=r.width_shape,C=E/A/O/V,R=g([C,A,O,V]),S=p,D=v;0!==p&&0!==v||(S=y/w,D=T/F);var k=Math.round(.5*(S+D)),I=u.map((function(n){return Math.sqrt(n)})),M=1===I.length?"sqrt_fixed_ratios":"sqrt_fixed_ratios[r]",L=u.length,U=O,j=C,N=A;c&&(j=F,N=w,U=O/F/w);var G=g([j,N,U,V]),X=B("out1",{numbers_shape:mn(G,[1]),length_shape:4}),H=l.map((function(n){return n*n*L})),W=H.length,z=function(n){var e="ivec2 calRemain(int remain, int curAccIndex, int s) {",t=n.length;if(1===t)e+="\n            int accIndex0 = density_acc_shape;\n\n            if (remain >= accIndex0) {\n                s++;\n                remain -= accIndex0;\n            }\n            else {\n                return ivec2(remain, s);\n            }\n            ";else for(var o=0;o<t;o++)e+="\n            int accIndex"+o+" = density_acc_shape["+o+"];\n\n            if (remain >= accIndex"+o+") {\n                s++;\n                remain -= accIndex"+o+";\n            }\n            else {\n                return ivec2(remain, s);\n            }\n            ";return e+"\n    }\n    "}(H),Y=f?"v = min(max(v, 0.), 1.);":"",q=1===W?"density_acc_shape":"density_acc_shape[0]",K="\n    float getFloat4TensorVal(vec4 tensor, int index) {\n        if (index == 0) {\n            return tensor[0];\n        }\n        else if (index == 1) {\n            return tensor[1];\n        }\n        else if (index == 2) {\n            return tensor[2];\n        }\n        else if (index == 3) {\n            return tensor[3];\n        }\n    }\n    float getFloat3TensorVal(vec3 tensor, int index) {\n        if (index == 0) {\n            return tensor[0];\n        }\n        else if (index == 1) {\n            return tensor[1];\n        }\n        else if (index == 2) {\n            return tensor[2];\n        }\n    }\n    float getFloat2TensorVal(vec2 tensor, int index) {\n        if (index == 0) {\n            return tensor[0];\n        }\n        else if (index == 1) {\n            return tensor[1];\n        }\n    }\n    float getFloat1TensorVal(float tensor, int index) {\n        return tensor;\n    }\n    int getInt4TensorVal(ivec4 tensor, int index) {\n        if (index == 0) {\n            return tensor[0];\n        }\n        else if (index == 1) {\n            return tensor[1];\n        }\n        else if (index == 2) {\n            return tensor[2];\n        }\n        else if (index == 3) {\n            return tensor[3];\n        }\n    }\n    int getInt3TensorVal(ivec3 tensor, int index) {\n        if (index == 0) {\n            return tensor[0];\n        }\n        else if (index == 1) {\n            return tensor[1];\n        }\n        else if (index == 2) {\n            return tensor[2];\n        }\n    }\n    int getInt2TensorVal(ivec2 tensor, int index) {\n        if (index == 0) {\n            return tensor[0];\n        }\n        else if (index == 1) {\n            return tensor[1];\n        }\n    }\n\n    int getInt1TensorVal(int tensor, int index) {\n       return tensor;\n    }\n\n    "+X+"\n    \n        "+m(l,"densities")+"\n        "+m(s,"fixed_sizes")+"\n        "+m(I,"sqrt_fixed_ratios")+"\n        "+function(n,e){if(1===n.length)return"int "+e+" = int("+n[0]+");";for(var t=n.length,o="\n        ivec"+t+" "+e+" = ivec"+t+"(\n    ",r=0;r<t;r++)o+=n[r]+",";return o.slice(0,-1)+");"}(H,"density_acc_shape")+"\n    \n    "+z+"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        int rr = int(oPos.r);\n        int gg = int(oPos.g);\n        int bb = int(oPos.b);\n        int aa = int(oPos.a);\n\n        // 输出坐标转换为输入坐标\n        int index = rr * "+R[0]+" + gg * "+R[1]+" + bb * "+R[2]+" + aa;\n        ivec4 realOutPos = getTensorPosFromArrayIndex_out1(index);\n        int h = realOutPos.r;\n        int w = realOutPos.g;\n        int b = realOutPos.b;\n        int a = realOutPos.a;\n    ";return 1===b?"\n        "+m(a,"variances")+"\n        "+K+"\n        setOutput(getFloat4TensorVal(variances, aa));\n        }":"\n            "+K+"\n            // 求idx 对应的 s, r, di, dj\n            int s = 0;\n            int remain = b;\n            int curAccIndex = "+q+";\n\n            ivec2 remainInfo = calRemain(remain, curAccIndex, s);\n            remain = remainInfo[0];\n            s = remainInfo[1];\n            int density = int(getFloat"+l.length+"TensorVal(densities, s));\n            int r = int(floor(float(remain / density / density)));\n            remain -= r * density * density;\n\n            float di = floor(float(remain / density));\n            float dj = float(remain - int(di) * density);\n\n            float center_x = (float(w) + float("+x+")) * float("+S+");\n            float center_y = (float(h) + float("+x+")) * float("+D+");\n            float fixed_size = getFloat"+s.length+"TensorVal(fixed_sizes, s);\n            float shift = float("+k+") / float(density);\n\n            float v = 0.0;\n            if (a == 0 || a == 2) {\n                float box_width_ratio = fixed_size * "+M+";\n                float density_center_x = center_x - float("+k+") / 2. + shift / 2.;\n                float center_x_temp = density_center_x + dj * shift;\n                if (a == 0) {\n                    v = max((center_x_temp - box_width_ratio / 2.) / float("+y+"), 0.);\n                }\n                else {\n                    v = min((center_x_temp + box_width_ratio / 2.) / float("+y+"), 1.);\n                }\n            }\n            else {\n                float box_height_ratio = fixed_size / "+M+";\n                float density_center_y = center_y - float("+k+") / 2. + shift / 2.;\n                float center_y_temp = density_center_y + di * shift;\n                if (a == 1) {\n                    v = max((center_y_temp - box_height_ratio / 2.) / float("+T+"), 0.);\n                }\n                else {\n                    v = min((center_y_temp + box_height_ratio / 2.) / float("+T+"), 1.);\n                }\n            }\n\n            "+Y+"\n\n            setOutput(v);\n        }\n        "},textureFuncConf:{image:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]}},xn={mainFunc:function(n,e){var t=n.origin,o=n.image,r=n.out,i=e.variances,a=void 0===i?[.1,.1,.2,.2]:i,s=e.flip,u=e.clip,l=e.step_w,c=void 0===l?0:l,f=e.step_h,h=void 0===f?0:f,p=e.offset,g=void 0===p?.5:p,d=e.runtime,_=void 0===d?0:d,x=e.min_sizes,P=void 0===x?[]:x,b=e.max_sizes,T=void 0===b?[]:b,y=e.aspect_ratios,F=void 0===y?[]:y,w=e.min_max_aspect_ratios_order,E=void 0!==w&&w,A=o.height_shape,O=o.width_shape,V=t.height_shape,C=t.width_shape,R=r.channel,S=r.height_shape,D=c,k=h;0!==c&&0!==h||(D=O/C,k=A/V);var I=[1];F.forEach((function(n){1!==n&&(I.push(Math.sqrt(n)),s&&I.push(Math.sqrt(1/n)))}));var M=I.length,L=u?"res = min(max(res, 0.), 1.);":"",U="\n    float getFloat4TensorVal(vec4 tensor, int index) {\n        if (index == 0) {\n            return tensor[0];\n        }\n        else if (index == 1) {\n            return tensor[1];\n        }\n        else if (index == 2) {\n            return tensor[2];\n        }\n        else if (index == 3) {\n            return tensor[3];\n        }\n    }\n\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        int nn = int(oPos.r);\n        int cc = int(oPos.g);\n        int hh = int(oPos.b);\n        int ww = int(oPos.a);\n\n\n        \n        "+v(P,"min_sizes")+"\n        "+v(T,"max_sizes")+"\n        "+v(I,"aspect_ratios")+"\n    \n\n    ";return 1===_?"\n            "+m(a,"variances")+"\n            "+U+"\n            float res = 0.0;\n            res = getFloat4TensorVal(variances, ww);\n            setOutput(float(res));\n        }":"\n            "+U+"\n            int idx = nn * "+R*S+" + cc * "+S+" + hh;\n            int as_num = "+M+";\n            float offset = "+g+";\n            \n            int feature_width = "+C+";\n            int num_priors = "+S+";\n            float step_width = float("+D+");\n            float step_height = float("+k+");\n\n            float im_width = float("+O+");\n            float im_height = float("+A+");\n\n            bool min_max_aspect_ratios_order = "+E+";\n\n            // 求idx 对应的 h w p m\n            int h = int(idx / (num_priors * feature_width));\n            int w = (idx / num_priors) % feature_width;\n            int p = idx % num_priors;\n            int m = "+(T.length>0)+" ? int(p / (as_num + 1)) : int(p / as_num);\n            float cx = (float(w) + offset) * step_width;\n            float cy = (float(h) + offset) * step_height;\n            float min_size = float(min_sizes[m]);\n            float bw = 0.0;\n            float bh = 0.0;\n\n            "+(T.length>0?"\n            int s = p % (as_num + 1);\n            if ("+!E+") {\n                if (s < as_num) {\n                    float ar = aspect_ratios[s];\n                    bw = min_size * ar / 2.0;\n                    bh = min_size / ar / 2.0;\n                }\n                else {\n                    float max_size = float(max_sizes[m]);\n                    bw = sqrt(min_size * max_size) / 2.0;\n                    bh = bw;\n                }\n            }\n            else {\n                if (s == 0) {\n                    bh = min_size / 2.0;\n                    bw = bh;\n                }\n                else if (s == 1) {\n                    float max_size = float(max_sizes[m]);\n                    bw = sqrt(min_size * max_size) / 2.0;\n                    bh = bw;\n                }\n                else {\n                    float ar = aspect_ratios[s - 1];\n                    bw = min_size * sqrt(ar) / 2.0;\n                    bh = min_size / sqrt(ar) / 2.0;\n                }\n            }":"\n            int s = p % as_num;\n            float ar = aspect_ratios[s];\n            bw = min_size * ar / 2.0;\n            bh = min_size / ar / 2.0;\n        ")+"\n            float res = 0.0;\n            if (ww == 0) {\n                res = (cx - bw) / im_width;\n            }\n            else if (ww == 1) {\n                res = (cy - bh) / im_height;\n            }\n            else if (ww == 2) {\n                res = (cx + bw) / im_width;\n            }\n            else {\n                res = (cy + bh) / im_height;\n            }\n\n            "+L+"\n\n            setOutput(float(res));\n        }\n        "},textureFuncConf:{image:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]},behaviors:[]};var Pn={arg_max:{mainFunc:function(n,e){var t=n.origin,o=e.axis,r=void 0===o?-1:o,i=e.flatten,a=t.total_shape,s=t.height_shape,u=t.width_shape,l=t.channel,c=t.length_unformatted_shape,f=a/(u*s*l),h=r<0?3:4-c+r,p=[f,l,s,u][h];return"\n\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        float o = 0.0;\n        int pos = 0;\n        if ("+!i+") {\n            if ("+h+" == 1) {\n                float tmp = getValueFromTensorPos_origin(oPos.g, 0, oPos.b, oPos.a);\n                for (int index = 0; index < "+p+"; index++) {\n                    o = getValueFromTensorPos_origin(oPos.g, index, oPos.b, oPos.a);\n                    if (o > tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }\n            }\n            else if ("+h+" == 2) {\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, 0, oPos.a);\n                for (int index = 0; index < "+p+"; index++) {\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, index, oPos.a);\n                    if (o > tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }\n            }\n            else if ("+h+" == 3) {\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, 0);\n                for (int index = 0; index < "+p+"; index++) {\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, index);\n                    if (o > tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }\n            }\n            else {\n                float tmp = getValueFromTensorPos_origin(0, oPos.g, oPos.b, oPos.a);\n                for (int index = 0; index < "+p+"; index++) {\n                    o = getValueFromTensorPos_origin(index, oPos.g, oPos.b, oPos.a);\n                    if (o > tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }\n            }\n        }\n        else {\n            int index = 0;\n            float tmp = getValueFromTensorPos_origin(0, 0, 0, 0);\n            for (int n = 0; n < "+f+"; n++) {\n                for (int c = 0; c < "+l+"; c++) {\n                    for (int h = 0; h < "+s+"; h++) {\n                        for (int w = 0; w < "+u+"; w++) {\n                            o = getValueFromTensorPos_origin(n, c, h, w);\n                            if (o > tmp) {\n                                tmp = o;\n                                pos = index;\n                            }\n                            index++;\n                        }\n                    }\n                }\n            }\n        }\n        setOutput(float(pos));\n    }"},textureFuncConf:{origin:["getValueFromTensorPos"]}},arg_min:{mainFunc:function(n,e){for(var t=n.origin,o=e.axis,r=void 0===o?-1:o,i=e.flatten,a=t.total_shape,s=t.height_shape,u=t.width_shape,l=t.channel,c=a/(u*s*l),f=[c,l,s,u],h=0,p=0;p<4&&!(f[p]>1);p++)h++;var g=r<0?4-h+r:r,d=f[g=h+g];return"\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        float o = 0.0;\n        int pos = 0;\n        if ("+!i+") {\n            if ("+g+" == 1) {\n                float tmp = getValueFromTensorPos_origin(oPos.g, 0, oPos.b, oPos.a);\n                for (int index = 0; index < "+d+"; index++) {\n                    o = getValueFromTensorPos_origin(oPos.g, index, oPos.b, oPos.a);\n                    if (o < tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }\n            }\n            else if ("+g+" == 2) {\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, 0, oPos.a);\n                for (int index = 0; index < "+d+"; index++) {\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, index, oPos.a);\n                    if (o < tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }\n            }\n            else if ("+g+" == 3) {\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, 0);\n                for (int index = 0; index < "+d+"; index++) {\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, index);\n                    if (o < tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }     \n            }\n            else {\n                float tmp = getValueFromTensorPos_origin(0, oPos.g, oPos.b, oPos.a);\n                for (int index = 0; index < "+d+"; index++) {\n                    o = getValueFromTensorPos_origin(index, oPos.g, oPos.b, oPos.a);\n                    if (o < tmp) {\n                        tmp = o;\n                        pos = index;\n                    }\n                }\n            }\n        }\n        else {\n            int index = 0;\n            float tmp = getValueFromTensorPos_origin(0, 0, 0, 0);\n            for (int n = 0; n < "+c+"; n++) {\n                for (int c = 0; c < "+l+"; c++) {\n                    for (int h = 0; h < "+s+"; h++) {\n                        for (int w = 0; w < "+u+"; w++) {\n                            o = getValueFromTensorPos_origin(n, c, h, w);\n                            if (o < tmp) {\n                                tmp = o;\n                                pos = index;\n                            }\n                            index++;\n                        }\n                    }\n                }\n            }\n        }\n        setOutput(float(pos));\n    }"},textureFuncConf:{origin:["getValueFromTensorPos"]}},conv2d:Q,conv2d_packing:{mainFunc:function(n,e){var t=n.origin,o=n.filter,r=n.out,i=n.bias,a=e.groups,s=void 0===a?1:a,u=e.strides,l=void 0===u?[]:u,c=e.paddings,f=void 0===c?[]:c,h=e.dilations,p=void 0===h?[]:h,g=e.fuse_relu,d=e.act_type,v=l[0],m=void 0===v?1:v,_=l[1],x=void 0===_?1:_,P=f[0],b=void 0===P?0:P,T=f[1],y=void 0===T?0:T,F=p[0],w=void 0===F?1:F,E=p[1],A=void 0===E?1:E;return"\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        int x = oPos.a;\n        int c = oPos.g;\n        int y = oPos.b;\n        int b = oPos.r;\n        vec4 res = vec4(0.0, 0.0, 0.0, 0.0);\n\n        int oy = y * "+m+" - "+b+";\n        for (int fy = 0; fy < "+o.height_shape+"; fy++) {\n            if (oy >= "+t.height_shape+") {\n                break;\n            }\n            if (oy < 0) {\n                oy += "+w+";\n                continue;\n            }\n            int ox = x * "+x+" - "+y+";\n            for (int fx = 0; fx < "+o.width_shape+"; fx++) {\n                if (ox >= "+t.width_shape+") {\n                    break;\n                }\n                if (ox < 0) {\n                    ox += "+A+";\n                    continue;\n                }\n                // channel计算\n                for (int j = 0; j < "+o.channel+"; j += 1) {\n                    int c0 = (c / ("+r.channel+" * 4 / "+s+")) * "+o.channel+" + j;\n                    vec4 fValue = getValueFromTensorPosPacking_filter(c * 4, j, fy, fx);\n                    vec4 oValue = getValueFromTensorPosPacking_origin(b, c0, oy, ox);\n\n                    for (int packed_index = 0; packed_index < 4; packed_index++) {\n                        if (packed_index == 0) {\n                            res.r += dot(fValue, oValue);\n                        } else if (packed_index == 1) {\n                            int c1 = ((c + 1) / ("+r.channel+" * 4 / "+s+")) * "+o.channel+" + j;\n                            oValue = getValueFromTensorPosPacking_origin(b, c1, oy, ox);\n                            fValue = getValueFromTensorPosPacking_filter(c * 4 + 1, j, fy, fx);\n                            res.g += dot(fValue, oValue);\n                        } else if (packed_index == 2) {\n                            int c2 = ((c + 2) / ("+r.channel+" * 4 / "+s+")) * "+o.channel+" + j;\n                            oValue = getValueFromTensorPosPacking_origin(b, c2, oy, ox);\n                            fValue = getValueFromTensorPosPacking_filter(c * 4 + 2, j, fy, fx);\n                            res.b += dot(fValue, oValue);\n                        } else if (packed_index == 3) {\n                            int c3 = ((c + 3) / ("+r.channel+" * 4 / "+s+")) * "+o.channel+" + j;\n                            oValue = getValueFromTensorPosPacking_origin(b, c3, oy, ox);\n                            fValue = getValueFromTensorPosPacking_filter(c * 4 + 3, j, fy, fx);\n                            res.a += dot(fValue, oValue);\n                        }\n                    }\n                }\n                ox += "+A+";\n            }\n            oy += "+w+";\n        }\n\n        "+(i?"res += getValueFromTensorPosPacking_bias(0, c, 0, 0);":"")+"\n\n        if ("+g+") {\n            res = max(vec4(0.0, 0.0, 0.0, 0.0), res);\n        }\n        else if ("+("relu6"===d)+") {\n            res = min(max(vec4(0.0, 0.0, 0.0, 0.0), res), vec4(6.0, 6.0, 6.0, 6.0));\n        }\n        setPackedOutput(res);\n    }\n    "},textureFuncConf:{filter:["getValueFromTensorPosPacking"],origin:["getValueFromTensorPosPacking"],bias:["getValueFromTensorPosPacking"]},behaviors:["adaptPaddings","isApplySeparableConv","batchComputeConv2d","processBias"]},conv2d_transpose:{mainFunc:function(n,e){var t=n.origin,o=n.filter,r=n.out,i=e.groups,a=void 0===i?1:i,s=e.strides,u=void 0===s?[]:s,l=e.paddings,c=void 0===l?[]:l,f=e.dilations,h=void 0===f?[]:f,p=u[0],g=void 0===p?1:p,d=u[1],v=void 0===d?1:d,m=c[0],_=void 0===m?0:m,x=c[1],P=void 0===x?0:x;P=o.height_shape-P-1,_=o.width_shape-_-1;var b=h[0],T=void 0===b?1:b,y=h[1],F=void 0===y?1:y;return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        int x = oPos.a;\n        int c = oPos.g;\n        int y = oPos.b;\n        int b = oPos.r;\n        float res = 0.0;\n        int temp_x = 0;\n        int temp_y = 0;\n        float o = 0.0;\n        float f = 0.0;\n\n        // 获取output的坐标\n        int oTensorChannel = int(c * "+a+" / "+r.channel+") * "+t.channel+";\n        int oy = y - "+P+";\n        const int groupLen = int("+t.channel+" / "+a+");\n        int groupIndex = int(c / groupLen);\n\n        for (int fy = 0; fy < "+o.height_shape+"; fy++) {\n            if (oy < 0) {\n                oy += "+T+";\n                continue;\n            }\n            int ox = x - "+_+";\n            for (int fx = 0; fx < "+o.width_shape+"; fx++) {\n\n                if (ox < 0) {\n                    ox += "+F+";\n                    continue;\n                }\n                // channel计算\n                for (int j = 0; j < groupLen; j++) {\n                    int curIndex = j + b * groupLen;\n                    if (calMod(ox, int("+v+")) == 0 && calMod(oy, int("+g+")) == 0) {\n                        temp_x = int(floor(float(ox) / float("+v+")));\n                        temp_y = int(floor(float(oy) / float("+g+")));\n                        if (temp_x < "+t.width_shape+" && temp_y < "+t.height_shape+") {\n                            o = getValueFromTensorPos_origin(b, curIndex , temp_y, temp_x);\n                            f = getValueFromTensorPos_filter(\n                                curIndex,\n                                int(c / "+a+"),\n                                "+o.height_shape+"-1-fy,\n                                "+o.width_shape+"-1-fx\n                            );\n                            res += f * o;\n                        }\n                    }\n                }\n                ox += "+F+";\n            }\n            oy += "+T+";\n        }\n        setOutput(float(res));\n    }\n"},textureFuncConf:{filter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]},behaviors:["adaptPaddings","isApplySeparableConv","batchComputeConv2d","processBias"]},depthwise_conv2d:Q,conv2d_depthwise:Q,conv2d_elementwise_add:{mainFunc:function(n,e){var t=n.origin,o=n.filter,r=n.out,i=n.counter,a=e.active_function,s=e.groups,u=void 0===s?1:s,l=e.axis,c=e.strides,f=void 0===c?[]:c,h=e.paddings,p=void 0===h?[]:h,g=e.dilations,d=void 0===g?[]:g,v=e.multi_value,m=e.bias_value,_=f[0],x=void 0===_?1:_,P=f[1],b=void 0===P?1:P,T=p[0],y=void 0===T?0:T,F=p[1],w=void 0===F?0:F,E=d[0],A=void 0===E?1:E,O=d[1],V=void 0===O?1:O;return"\n    // start函数\n\n    float getValueFromCounter(int index) {\n        float xPos = float(index) / float("+i.width_shape+");\n        vec4 pixels = TEXTURE2D(texture_counter, vec2(xPos, 0.5));\n        return pixels.r;\n    }\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n\n        int x = oPos.a;\n        int c = oPos.g;\n        int y = oPos.b;\n        int b = oPos.r;\n        int addAxis = oPos["+l+"];\n        float res = getValueFromCounter(addAxis);\n\n        // 获取output的坐标\n        int oTensorChannel = (c / ("+r.channel+" / "+u+")) * "+o.channel+";\n        int oy = y * "+x+" - "+y+";\n        for (int fy = 0; fy < "+o.height_shape+"; fy++) {\n            if (oy >= "+t.height_shape+") {\n                break;\n            }\n            if (oy < 0) {\n                oy += "+A+";\n                continue;\n            }\n            int ox = x * "+b+" - "+w+";\n            for (int fx = 0; fx < "+o.width_shape+"; fx++) {\n                if (ox >= "+t.width_shape+") {\n                    break;\n                }\n                if (ox < 0) {\n                    ox += "+V+";\n                    continue;\n                }\n                // channel计算\n                for (int j = 0; j < "+o.channel+"; j++) {\n                    float f = getValueFromTensorPos_filter(c, j, fy, fx);\n                    float o = getValueFromTensorPos_origin(b, oTensorChannel + j, oy, ox);\n                    res += f * o;\n                }\n                ox += "+V+";\n            }\n            oy += "+A+";\n        }\n        setOutput("+a+"(res,  "+v+",  "+m+"));\n    }\n"},textureFuncConf:{filter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"],counter:["getValueFromTensorPos"]},behaviors:["mergeAttrs","checkIsMerge","setActiveFunc"]},pool2d:{mainFunc:function(n,e){var t=n.origin,o=e.strides,r=void 0===o?[]:o,i=e.paddings,a=void 0===i?[]:i,s=e.pooling_type,u=e.ksize,l=r[0],c=void 0===l?1:l,f=r[1],h=void 0===f?1:f,p=a[0],g=void 0===p?0:p,d=a[1],v=void 0===d?0:d,m=u[0],_=u[1];return"\n    // start函数\n    void main(void) {\n        float res = 0.0;\n        if ("+s+" == 1) {\n            res = -1.70141184e38;\n        }\n        // 获取output的坐标\n        ivec4 out_pos = getOutputTensorPos();\n        // X、Y方向的移动步长\n        int count_pool = 0;\n        int oy_base = out_pos[2] * "+c+" - "+g+";\n        int ox_base = out_pos[3] * "+h+" - "+v+";\n        for (int fy = 0; fy < "+m+"; fy++) {\n            int oy = oy_base + fy;\n            if (oy >= "+t.height_shape+") {\n                break;\n            }\n            if (oy < 0) {\n                continue;\n            }\n            for (int fx = 0; fx < "+_+"; fx++) {\n                int ox = ox_base + fx;\n                if (ox >= "+t.width_shape+") {\n                    break;\n                }\n                if (ox < 0) {\n                    continue;\n                }\n                // origin数据\n                float curr = getValueFromTensorPos_origin(out_pos[0], out_pos[1], oy, ox);\n                if ("+s+" == 1) {\n                    if (curr > res) {\n                        res = curr;\n                    }\n                } else {\n                    res += curr;\n                    // 在平均池化模式忽略填充值(exclusive默认为true）\n                    count_pool++;\n                }\n            }\n        }\n        if ("+s+" != 1) {\n            res = res / float(count_pool);\n        }\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},behaviors:["isMax","setPacked","setAdaptive","isGlobalPooling"]},pool2d_max:{mainFunc:function(n,e){var t=n.origin,o=e.strides,r=void 0===o?[]:o,i=e.paddings,a=void 0===i?[]:i,s=e.ksize,u=e.global_pooling,l=e.runtime,c=r[0],f=void 0===c?1:c,h=r[1],p=void 0===h?1:h,g=a[0],d=void 0===g?0:g,v=a[1],m=void 0===v?0:v,_=s[0],x=s[1],P=function(n){var e=n.total_shape,t=n.channel,o=n.height_shape,r=n.width_shape;return[e/t/o/r,t,o,r]}(t),b="",T="setOutput(float(res));";return 0===l&&!0===u&&(b="\n            if (curr > res) {\n                index = "+P[2]*P[3]+" * out_pos[1] + "+P[3]+" * oy + ox;\n            }\n        ",T="setOutput(float(index));"),"\n    // start函数\n    void main(void) {\n        float res = -1.70141184e38;\n        int index = 0;\n        // 获取output的坐标\n        ivec4 out_pos = getOutputTensorPos();\n        int b = out_pos[0];\n        int c = out_pos[1];\n        int y = out_pos[2];\n        int x = out_pos[3];\n        // X、Y方向的移动步长\n        int oy_base = out_pos[2] * "+f+" - "+d+";\n        int ox_base = out_pos[3] * "+p+" - "+m+";\n        for (int fy = 0; fy < "+_+"; fy++) {\n            int oy = oy_base + fy;\n            if (oy >= "+t.height_shape+") {\n                break;\n            }\n            if (oy < 0) {\n                continue;\n            }\n            for (int fx = 0; fx < "+x+"; fx++) {\n                int ox = ox_base + fx;\n                if (ox >= "+t.width_shape+") {\n                    break;\n                }\n                if (ox < 0) {\n                    continue;\n                }\n                // origin数据\n                float curr = getValueFromTensorPos_origin(out_pos[0], out_pos[1], oy, ox);\n                "+b+"\n                res = max(res, curr);\n            }\n        }\n        "+T+"\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},behaviors:["isMax","setPacked","setAdaptive","isGlobalPooling"]},pool2d_winograd:{mainFunc:function(n,e){var t=n.origin,o=n.pool,r=e.strides,i=void 0===r?[]:r,a=e.paddings,s=void 0===a?[]:a,u=e.type_pool,l=i[0],c=void 0===l?1:l,f=i[1],h=void 0===f?1:f,p=s[0],g=void 0===p?0:p,d=s[1],v=void 0===d?0:d,m=t.height_shape,_=t.width_texture,x=t.height_texture;return"\n\n    float getValueFromTensorPosPacked_origin(int r, int g, int b, int a) {\n        int y = b / 2;\n        int yOffset = calMod(b, 2);\n        int x = a / 2;\n        int xOffset = calMod(a, 2);\n        int height = "+m+" + "+t.offset_y+";\n        vec4 pixels = TEXTURE2D(\n            texture_origin,\n            vec2((float(x) + 0.5) / float("+_+"),\n            (float(g * height / 2 + y) + 0.5) / float("+x+"))\n        );\n        int index = 0;\n        if (xOffset == 0 && yOffset == 0) {\n            return pixels[0];\n        }\n        else if (xOffset == 1 && yOffset == 0) {\n            return pixels[1];\n        }\n        else if (xOffset == 0 && yOffset == 1) {\n            return pixels[2];\n        }\n        return pixels[3];\n    }\n\n    // start函数\n    void main(void) {\n        float res = (-1.0 / exp(-20.0));\n        // 获取output的坐标\n        ivec4 out_pos = getOutputTensorPos();\n        // int b = out_pos[0];\n        // int c = out_pos[1];\n        // int y = out_pos[2];\n        // int x = out_pos[3];\n        // X、Y方向的移动步长\n        int count_pool = 0;\n        int oy_base = out_pos[2] * "+c+" - "+g+";\n        int ox_base = out_pos[3] * "+h+" - "+v+";\n\n        for (int fy = 0; fy < "+o.height_shape+"; fy++) {\n            int oy = oy_base + fy;\n            if (oy >= "+t.height_shape+") {\n                break;\n            }\n            if (oy < 0) {\n                continue;\n            }\n            for (int fx = 0; fx < "+o.width_shape+"; fx++) {\n                int ox = ox_base + fx;\n                if (ox >= "+t.width_shape+") {\n                    break;\n                }\n                if (ox < 0) {\n                    continue;\n                }\n                // origin数据\n                float curr = getValueFromTensorPosPacked_origin(out_pos[0], out_pos[1], oy, ox);\n                if ("+u+" == 1) {\n                    if (curr > res) {\n                        res = curr;\n                    }\n                } else {\n                    res += curr;\n                    // 在平均池化模式忽略填充值(exclusive默认为true）\n                    count_pool++;\n                }\n            }\n        }\n        if ("+u+" != 1) {\n            res = res / float(count_pool);\n        }\n        setOutput(res);\n    }\n    "},behaviors:["isMax","setPacked","setAdaptive","isGlobalPooling"]},elementwise_add:{mainFunc:function(n,e){var t=e.counterPos,o=e.Scale_y,r=void 0===o?1:o,i=e.Scale_x,a=void 0===i?1:i,s=e.Scale_out,u=void 0===s?1:s;return"\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n\n        float c = getValueFromTensorPos_counter("+t+");\n        float res = float("+u/r+") * c + float("+u/a+") * o;\n        setOutput(float(res));\n    }\n    "},textureFuncConf:{counter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]},behaviors:["processElementwiseAxis","genElementwiseCounterPos"]},elementwise_mul:{mainFunc:function(n,e){var t=n.counter,o=e.counterPos,r=e.Scale_y,i=void 0===r?1:r,a=e.Scale_x,s=void 0===a?1:a,u=e.Scale_out,l=void 0===u?1:u;return"\n    ivec4 formatNCHW(int n, int c, int h, int w) {\n        int newN = n;\n        int newC = c;\n        int newH = h;\n        int newW = w;\n\n        if (n >= "+t.height_texture/t.height_shape+") {\n            newN = int("+t.height_texture/t.height_shape+");\n        }\n        if (c >= "+t.channel+") {\n            newC = int("+(t.channel-1)+");\n        }\n        if (h >= "+t.height_shape+") {\n            newH = "+(t.height_shape-1)+";\n        }\n        if (w >= "+t.width_shape+") {\n            newW = "+(t.width_shape-1)+";\n        }\n        return ivec4(newN, newC, newH, newW);\n    }\n\n    // start函数\n    void main() {\n        // 输出数据\n        ivec4 oPos1 = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\n        ivec4 oPos = formatNCHW(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\n\n        float c = getValueFromTensorPos_counter("+o+");\n        float res = float("+l/s+") * o * float("+1/i+") * c;\n        setOutput(float(res));\n    }\n\n    "},textureFuncConf:{counter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]},behaviors:["processElementwiseAxis","genElementwiseCounterPos"]},elementwise_div:{mainFunc:function(n,e){var t=n.counter,o=e.counterPos,r=e.Scale_y,i=void 0===r?1:r,a=e.Scale_x,s=void 0===a?1:a,u=e.Scale_out,l=void 0===u?1:u;return"\n    ivec4 formatNCHW(int n, int c, int h, int w) {\n        int newN = n;\n        int newC = c;\n        int newH = h;\n        int newW = w;\n\n        if (n >= "+t.height_texture/t.height_shape+") {\n            newN = int("+t.height_texture/t.height_shape+");\n        }\n        if (c >= "+t.channel+") {\n            newC = int("+(t.channel-1)+");\n        }\n        if (h >= "+t.height_shape+") {\n            newH = "+(t.height_shape-1)+";\n        }\n        if (w >= "+t.width_shape+") {\n            newW = "+(t.width_shape-1)+";\n        }\n        return ivec4(newN, newC, newH, newW);\n    }\n\n    // start函数\n    void main() {\n        // 输出数据\n        ivec4 oPos1 = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\n        ivec4 oPos = formatNCHW(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\n\n        float c = getValueFromTensorPos_counter("+o+");\n        float res = float("+l+") * (float("+1/s+") * o / (float("+1/i+") * c));\n        setOutput(float(res));\n    }\n\n    "},textureFuncConf:{counter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]},behaviors:["processElementwiseAxis","genElementwiseCounterPos"]},elementwise_pow:{mainFunc:function(n,e){var t=e.counterPos,o=e.Scale_y,r=void 0===o?1:o,i=e.Scale_x,a=void 0===i?1:i,s=e.Scale_out,u=void 0===s?1:s;return"\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n\n        float c = getValueFromTensorPos_counter("+t+");\n        float res = pow(float("+u/a+") * o, float("+u/r+") * c);\n        setOutput(float(res));\n    }\n    "},textureFuncConf:{counter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]},behaviors:["processElementwiseAxis","genElementwiseCounterPos"]},elementwise_sub:{mainFunc:function(n,e){var t=e.counterPos,o=e.Scale_y,r=void 0===o?1:o,i=e.Scale_x,a=void 0===i?1:i,s=e.Scale_out,u=void 0===s?1:s;return"\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n\n        float c = getValueFromTensorPos_counter("+t+");\n        float res = float("+u/a+") * o - float("+u/r+") * c;\n        setOutput(float(res));\n    }\n    "},textureFuncConf:{counter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]},behaviors:["processElementwiseAxis","genElementwiseCounterPos"]},mul:{mainFunc:function(n,e){var t=n.origin,o=n.counter,r=e.x_num_col_dims,i=e.y_num_col_dims,a=tn(t),s=tn(o),u=$(a,r),l=u[0],c=u[1],f=u[2],h=u[3],p=u[4],g=$(s,i),d=g[0],v=g[1],m=g[2],_=g[3];return"\n    "+nn("x1",l,c)+"\n    "+nn("x2",f,h)+"\n    "+nn("y1",d,v)+"\n    "+nn("y2",m,_)+"\n\n    // start函数\n    void main(void) {\n        float res = 0.0;\n        // 获取output的坐标\n        ivec4 opos = getOutputTensorPos();\n        float temp = 0.0;\n\n        // output is 2D\n        int b = opos.b;\n        int a = opos.a;\n\n        "+en(c)+" x1 = getTensorPosFromArrayIndex_x1(b);\n        "+en(_)+" y2 = getTensorPosFromArrayIndex_y2(a);\n\n        for (int j = 0; j < "+p[1]+"; j++) {\n            "+en(h)+" x2 = getTensorPosFromArrayIndex_x2(j);\n            "+en(v)+" y1 = getTensorPosFromArrayIndex_y1(j);\n\n            ivec4 xPos = ivec4("+en(c)+"(x1), "+en(h)+"(x2));\n            ivec4 yPos = ivec4("+en(v)+"(y1), "+en(_)+"(y2));\n\n            float o = getValueFromTensorPos_origin(xPos.r, xPos.g, xPos.b, xPos.a);\n            float c = getValueFromTensorPos_counter(yPos.r, yPos.g, yPos.b, yPos.a);\n            res += c * o;\n        }\n\n        setOutput(res);\n    }\n    "},textureFuncConf:{counter:["getValueFromTensorPos"],origin:["getValueFromTensorPos"]}},matmul:on,matmul_v2:on,fc:{mainFunc:function(n,e){var t=n.origin,o=n.weight,r=e.x_num_col_dims,i=e.y_num_col_dims,a=un(t),s=un(o),u=rn(a,r),l=u[0],c=u[1],f=u[2],h=u[3],p=u[4],g=rn(s,i),d=g[0],v=g[1],m=g[2],_=g[3];return"\n    "+an("x1",l,c)+"\n    "+an("x2",f,h)+"\n    "+an("y1",d,v)+"\n    "+an("y2",m,_)+"\n\n    // start函数\n    void main(void) {\n        float res = 0.0;\n        // 获取output的坐标\n        ivec4 opos = getOutputTensorPos();\n        float bias = getValueFromTensorPos_bias(opos.r, opos.g, opos.b, opos.a);\n        float temp = 0.0;\n\n        // output is 2D\n        int b = opos.b;\n        int a = opos.a;\n\n        "+sn(c)+" x1 = getTensorPosFromArrayIndex_x1(b);\n        "+sn(_)+" y2 = getTensorPosFromArrayIndex_y2(a);\n\n        for (int j = 0; j < "+p[1]+"; j++) {\n            "+sn(h)+" x2 = getTensorPosFromArrayIndex_x2(j);\n            "+sn(v)+" y1 = getTensorPosFromArrayIndex_y1(j);\n\n            ivec4 xPos = ivec4("+sn(c)+"(x1), "+sn(h)+"(x2));\n            ivec4 yPos = ivec4("+sn(v)+"(y1), "+sn(_)+"(y2));\n\n            float o = getValueFromTensorPos_origin(xPos.r, xPos.g, xPos.b, xPos.a);\n            float c = getValueFromTensorPos_weight(yPos.r, yPos.g, yPos.b, yPos.a);\n            res += c * o;\n        }\n\n        res = res + bias;\n        setOutput(res);\n    }\n    "},textureFuncConf:{weight:["getValueFromTensorPos"],origin:["getValueFromTensorPos"],bias:["getValueFromTensorPos"]}},dropout:{mainFunc:function(n,e){return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float o = 0.0;\n        o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n        if ("+("downgrade_in_infer"===e.dropout_implementation)+") {\n            o = o * (1.0 - "+e.dropout_prob+");\n        }\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},concat:{mainFunc:function(n,e){var t=e.dim,o=Object.keys(n).filter((function(n){return"out"!==n})).map((function(e){return n[e]})).map((function(n){var e=n.width_shape,o=n.height_shape,r=n.channel;return[n.total_shape/(e*o*r),r,o,e][t]})),r=o.map((function(n,e){return o.slice(0,e+1).reduce((function(n,e){return n+e}),0)})),i="";return r.forEach((function(n,e){i+=0===e?"\n            if (oPos["+t+"] < "+n+") {\n                o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n            }\n            ":"\n            else if (oPos["+t+"] < "+n+") {\n                oPos["+t+"] = oPos["+t+"] - "+r[e-1]+";\n                o = getValueFromTensorPos_origin_"+e+"(oPos.r, oPos.g, oPos.b, oPos.a);\n            }\n            "})),"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float o = 0.0;\n        "+i+"\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{"@all":["getValueFromTensorPos"]},behaviors:["normalizeDim"]},concat_mul:{mainFunc:function(n,e){var t=e.dim,o=Object.keys(n).filter((function(n){return"out"!==n})).map((function(e){return n[e]})).map((function(n){var e=n.width_shape,o=n.height_shape,r=n.channel;return[n.total_shape/(e*o*r),r,o,e][t]})),r=o.map((function(n,e){return o.slice(0,e+1).reduce((function(n,e){return n+e}),0)})),i="";return r.forEach((function(n,e){i+=0===e?"\n            if (oPos["+t+"] < "+n+") {\n                o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n            }":"\n            else if (oPos["+t+"] < "+n+") {\n                oPos["+t+"] = oPos["+t+"] - "+r[e-1]+";\n                o = getValueFromTensorPos_origin_"+e+"(oPos.r, oPos.g, oPos.b, oPos.a);\n            }\n            "})),"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float o = 0.0;\n        "+i+"\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{"@all":["getValueFromTensorPos"]},behaviors:["normalizeDim"]},split:{mainFunc:function(n,e){var t=e.target_length,o=e.num,r=e.dim;return"\n    // start函数\n    void main(void) {\n        int length = int("+t+" / "+o+");\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        oPos["+r+"] = oPos["+r+"] + layer_run_time * length;\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},behaviors:["normalizeDim"]},softmax:{mainFunc:function(n,e){var t=n.origin,o=e.axis,r=o;return(!o||o<0)&&(r=(o||-1)+4),"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        const int n = int("+t.total_shape+"/"+t.channel+"/"+t.height_shape+"/"+t.width_shape+");\n        float o = getValueFromTensorPos_origin(oPos[0], oPos[1], oPos[2], oPos[3]);\n        // 输出坐标转换为输入坐标\n        float total = 0.0;\n        float res = 0.0;\n        if ("+r+" == 0) {\n            for (int i = 0; i < n; i++){\n            float temp = getValueFromTensorPos_origin(i, oPos[1], oPos[2], oPos[3]);\n            total += exp(temp);\n            }\n            res = exp(o) / total;\n        }\n        else if ("+r+" == 1) {\n            for (int i = 0; i < "+t.channel+"; i++){\n            float temp = getValueFromTensorPos_origin(oPos[0], i, oPos[2], oPos[3]);\n            total += exp(temp);\n            }\n            res = exp(o) / total;\n        }\n        else {\n            for (int i = 0; i < "+t.width_shape+"; i++){\n            float temp = getValueFromTensorPos_origin(oPos[0], oPos[1], oPos[2], i);\n            total += exp(temp);\n            }\n            res = exp(o) / total;\n        }\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},batchnorm:{mainFunc:function(n,e){var t=n.bias,o=n.scale,r=n.mean,i=n.variance,a=e.epsilon;return"\n    // start函数\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n\n        // 归一化数据\n        vec4 scale = getPixelsFromTexturePos_scale(vec2( float(oPos.g) / float("+o.width_texture+") + 0.00001, 0.0));\n        vec4 bias = getPixelsFromTexturePos_bias(vec2( float(oPos.g) / float("+t.width_texture+") + 0.00001, 0.0));\n        vec4 mean = getPixelsFromTexturePos_mean(vec2((float(oPos.g)) / float("+r.width_texture+")  + 0.00001, 0.0));\n        vec4 variance = getPixelsFromTexturePos_variance(\n            vec2((float(oPos.g)) / float("+i.width_texture+") + 0.00001,\n            0.0)\n        );\n\n        float x = (o - mean[0]) / sqrt(variance[0] + "+a+");\n        float res = scale[0] * x + bias[0];\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"],scale:["getPixelsFromTexturePos"],bias:["getPixelsFromTexturePos"],mean:["getPixelsFromTexturePos"],variance:["getPixelsFromTexturePos"]}},reshape:ln,reshape2:ln,bilinear_interp:cn,transpose2:{mainFunc:function(n,e){var t=e.perm_arr,o=e.perm_size,r=t[0],i=t[1],a=t[2];return"\n    // start函数\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n\n        // 转置 坐标变换\n        float o = 0.0;\n        if ("+o+" == 1) {\n            o = getValueFromTensorPos_origin(oPos[0], oPos[1], oPos[2], oPos[3]);\n        }\n        else if ("+o+" == 2) {\n            o = getValueFromTensorPos_origin(\n                oPos[0], oPos[1],\n                oPos[(2 + "+r+") > 3 ? 3 : (2 + "+r+")],\n                oPos[(2 + "+i+") > 3 ? 3 : (2 + "+i+")]\n            );\n        }\n        else if ("+o+" == 3) {\n            o = getValueFromTensorPos_origin(\n                oPos[0],\n                oPos[(1 + "+r+") > 3 ? 3 : (1 + "+r+")],\n                oPos[(1 + "+i+") > 3 ? 3 : (1 + "+i+")],\n                oPos[(1 + "+a+") > 3 ? 3 : (1 + "+a+")]\n            );\n        }\n        else if ("+o+" == 4) {\n            o = getValueFromTensorPos_origin(\n                oPos["+r+"],\n                oPos["+i+"],\n                oPos["+a+"],\n                oPos["+t[3]+"]\n            );\n        }\n\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},behaviors:["normalizePerm"]},unpacked_2_packed:{mainFunc:function(n,e){return"\n    // start函数\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        vec4 out4;\n        for (int i = 0; i < 4; i++) {\n            vec4 o = getValueFromTensorPosPacking_origin(oPos[0], oPos[1] * 4 + i, oPos[2], oPos[3]);\n            out4[i] = o[0];\n        }\n        setPackedOutput(out4);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPosPacking"]}},packed_2_unpacked:{mainFunc:function(n,e){return"\n    // start函数\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        float res = 0.0;\n        int c1 = calMod(oPos[1], 4);\n        vec4 o = getValueFromTensorPosPacking_origin(oPos[0], oPos[1] / 4, oPos[2], oPos[3]);\n\n        if (c1 == 0) {\n            res = o.r;\n        } else if (c1 == 1) {\n            res = o.g;\n        } else if (c1 == 2) {\n            res = o.b;\n        } else if (c1 == 3) {\n            res = o.a;\n        }\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPosPacking"]}},unsqueeze2:{mainFunc:function(n,e){var t=n.origin,o=e.axes,r=t.length_unformatted_shape,i=Array.isArray(o)?o:[o],a=4-r-i.length,s=i.map((function(n){return n+a})),u=[0,1,2,3].filter((function(n){return-1===s.indexOf(n)})).map((function(n){return"oPos["+n+"]"})),l=Array.from(new Array(s.length),(function(){return"0"}));return u.splice.apply(u,function(){for(var n=0,e=0,t=arguments.length;e<t;e++)n+=arguments[e].length;var o=Array(n),r=0;for(e=0;e<t;e++)for(var i=arguments[e],a=0,s=i.length;a<s;a++,r++)o[r]=i[a];return o}([0,0],l)),"\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        float o = 0.0;\n        o = getValueFromTensorPos_origin("+u.join(",")+");\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},flatten_contiguous_range:{mainFunc:function(n,e){var t=n.origin,o=n.out;return"\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        int sumVal = oPos.a\n            + oPos.b * "+o.width_shape+"\n            + oPos.g * "+o.height_shape+" * "+o.width_shape+"\n            + oPos.r * "+o.channel+" * "+o.width_shape+" * "+o.height_shape+";\n        ivec4 new_oPos = transferFromNHWCtoNCHW(\n            sumVal,\n            "+t.channel+",\n            "+t.width_shape+",\n            "+t.height_shape+",\n            "+t.total_shape+"\n        );\n        float o = getValueFromTensorPos_origin(new_oPos.r, new_oPos.g, new_oPos.b, new_oPos.a);\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},commonFuncConf:["transferFromNHWCtoNCHW"]},flatten2:ln,greater_than:{mainFunc:function(n,e){return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float x = getValueFromTensorPos_input(oPos.r, oPos.g, oPos.b, oPos.a);\n        float y = getValueFromTensorPos_counter(oPos.r, oPos.g, oPos.b, oPos.a);\n\n        setOutput(bool(x >= y));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"],counter:["getValueFromTensorPos"]}},reduce_sum:{mainFunc:function(n,e){return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float o = 0.0;\n        for (int i = 0; i < "+e.inputs_dim+"; i++) {\n            oPos["+e.dim+"] = i;\n            o += getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);;\n        }\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},behaviors:["normalizeDim"]},where:{mainFunc:function(n,e){return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float x = getValueFromTensorPos_input(oPos.r, oPos.g, oPos.b, oPos.a);\n        float y = getValueFromTensorPos_counter(oPos.r, oPos.g, oPos.b, oPos.a);\n        float condition = getValueFromTensorPos_condition(oPos.r, oPos.g, oPos.b, oPos.a);\n        float o = 0.0;\n\n        if (bool(condition)) {\n            o = x;\n        }\n        else {\n            o = y;\n        }\n        setOutput(o);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"],counter:["getValueFromTensorPos"],condition:["getValueFromTensorPos"]}},connect:{mainFunc:function(n,e){var t=n.out,o=t.total_shape,r=t.width_shape,i=t.height_shape,a=t.channel,s=g([o/(r*i*a),a,i,r]),u=Object.keys(n).filter((function(n){return"out"!==n})).map((function(e){return n[e].total_shape})),l=u.map((function(n,e){return u.slice(0,e+1).reduce((function(n,e){return n+e}),0)})),c="";return l.forEach((function(n,e){c+=0===e?"\n            if (sumVal < "+n+") {\n                co = getTensorPosFromArrayIndex_origin(sumVal);\n                o = getValueFromTensorPos_origin(co.r, co.g, co.b, co.a);\n            }":"\n            else if (sumVal < "+n+") {\n                co = getTensorPosFromArrayIndex_origin_"+e+"(sumVal - "+l[e-1]+");\n                o = getValueFromTensorPos_origin_"+e+"(co.r, co.g, co.b, co.a);\n            }\n            "})),"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        float o = 0.0;\n        ivec4 co;\n        int sumVal = oPos.b * "+s[2]+" + oPos.a;\n        "+c+"\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{"@all":["getValueFromTensorPos","getTensorPosFromArrayIndex"]}},reduce_mean:{mainFunc:function(n,e){var t=e.inputs_dim;return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        float o = 0.0;\n        for (int i = 0; i < "+t+"; i++) {\n            oPos["+e.dim+"] = i;\n            o += getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n        }\n        o = o / float("+t+");\n        setOutput(o);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},behaviors:["normalizeDim"]},hard_swish:{mainFunc:function(n,e){var t=e.offset,o=void 0===t?3:t,r=e.scale,i=void 0===r?6:r,a=e.threshold;return"\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n        float res = o * min(max(0.0, o + float("+o+")), float("+(void 0===a?6:a)+")) / float("+i+");\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},nearest_interp:vn,nearest_interp_v2:vn,cast:{mainFunc:function(n,e){var t="";switch(e.out_dtype){case 0:t="\n            float res_bool = 0.0;\n            if (o != 0.0) {\n                res_bool = 1.0;\n            }\n            setOutput(res_bool);";break;case 1:case 2:case 3:t="\n            int res_int = int(o);\n            setOutput(float(res_int));";break;default:t="       \n            float res_float = o;\n            setOutput(res_float);"}return"\n    void main() {\n       // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n        "+t+"\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},fill_constant_batch_size_like:{mainFunc:function(n,e){return"\n    // start函数\n    void main(void) {\n        float res = float("+e.value+");\n        setOutput(res);\n    }\n"}},rnn_matmul:{mainFunc:function(n,e){var t=n.weightlist_0,o=e.input_axis,r=e.state_axis,i=e.batch,a=e.reverse,s=void 0!==a&&a?i-o-1:o;return"\n    void main() {\n         float res = 0.0;\n        // 获取output的坐标\n        ivec4 out_pos = getOutputTensorPos();\n        \n        if ("+(0===o)+") {\n            res = getValueFromTensorPos_origin(out_pos[0], "+s+", out_pos[2], out_pos[3]);\n            setOutput(res);\n            return;\n        }\n        \n        ivec4 origin_pos = out_pos;\n        ivec4 weight_pos = out_pos;\n\n        weight_pos[1] = 0;\n        weight_pos[2] = weight_pos[3];\n\n        float o = 0.0;\n        float w_hh = 0.0;\n        float prestate_h = 0.0;\n        res = getValueFromTensorPos_origin(out_pos[0], "+s+", out_pos[2], out_pos[3]);\n        for (int j = 0; j < "+t.width_shape+"; j++) {\n            prestate_h = getValueFromTensorPos_prestate(origin_pos[0], origin_pos[1], origin_pos[2], j);\n            w_hh = getValueFromTensorPos_weightlist_0(out_pos[0], "+r+", out_pos[3], j);\n            o += w_hh * prestate_h;\n        }\n        res += o;\n\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"],prestate:["getValueFromTensorPos"],weightlist_0:["getValueFromTensorPos"]}},rnn_hidden:{mainFunc:function(n,e){var t=e.state_axis,o=e.hidden_size;return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        float origin = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n        float cell = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + "+o+");\n        float appender = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + "+2*o+");\n        float fourth = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + "+3*o+");\n        float counter  = getValueFromTensorPos_counter(oPos.r, "+t+", oPos.b, oPos.a);\n        float i = 1.0 / (1.0 + exp(-origin));\n        float f = 1.0 / (1.0 + exp(-cell));\n        float o = 1.0 / (1.0 + exp(-fourth));\n        float c = f * counter + i * tanh_calc(appender);\n        float h = o * tanh_calc(c);\n        \n        setOutput(h);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"],counter:["getValueFromTensorPos"]}},rnn_cell:{mainFunc:function(n,e){var t=e.state_axis,o=e.hidden_size;return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        float origin = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\n        float cell = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + "+o+");\n        float appender = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + "+2*o+");\n        float fourth = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + "+3*o+");\n        float counter  = getValueFromTensorPos_counter(oPos.r, "+t+", oPos.b, oPos.a);\n        float i = 1.0 / (1.0 + exp(-origin));\n        float f = 1.0 / (1.0 + exp(-cell));\n        float c = f * counter + i * tanh_calc(appender);\n        \n        setOutput(c);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"],counter:["getValueFromTensorPos"]}},rnn_origin:{mainFunc:function(n,e){var t=n.weightlist_0,o=n.weightlist_1,r=e.state_axis;return"\n    void main() {\n        float res = 0.0;\n        // 获取output的坐标\n        ivec4 out_pos = getOutputTensorPos();\n        ivec4 origin_pos = out_pos;\n        ivec4 weight_pos = out_pos;\n      \n        weight_pos[1] = 0;\n        weight_pos[2] = weight_pos[3];\n\n        float b_ih = getValueFromTensorPos_weightlist_2(0, 0, 0, out_pos[3]);\n        float b_hh = getValueFromTensorPos_weightlist_3(0, 0, 0, out_pos[3]);\n        \n        for (int j = 0; j < "+t.width_shape+"; j++) {\n            float o = getValueFromTensorPos_origin(origin_pos[0], origin_pos[1], 0, j);\n            float w_ih = getValueFromTensorPos_weightlist_0(0, 0, out_pos[3], j);\n            res += w_ih * o;\n        }\n        res += b_ih;\n\n        for (int j = 0; j < "+o.width_shape+"; j++) {\n                float prestate = getValueFromTensorPos_prestate(0, 0, 0, j);\n                float w_hh = getValueFromTensorPos_weightlist_1(0, "+r+", out_pos[3], j);\n                res += w_hh * prestate;\n        }\n        res += b_hh;\n \n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"],prestate:["getValueFromTensorPos"],weightlist_0:["getValueFromTensorPos"],weightlist_1:["getValueFromTensorPos"],weightlist_2:["getValueFromTensorPos"],weightlist_3:["getValueFromTensorPos"]}},pool2d_avg:{mainFunc:function(n,e){var t=n.origin,o=e.strides,r=void 0===o?[]:o,i=e.paddings,a=void 0===i?[]:i,s=e.ksize,u=r[0],l=void 0===u?1:u,c=r[1],f=void 0===c?1:c,h=a[0],p=void 0===h?0:h,g=a[1],d=void 0===g?0:g,v=s[0],m=s[1];return"\n    // start函数\n    void main(void) {\n        float res = 0.0;\n        // 获取output的坐标\n        ivec4 out_pos = getOutputTensorPos();\n        // X、Y方向的移动步长\n        int oy_base = out_pos[2] * "+l+" - "+p+";\n        int ox_base = out_pos[3] * "+f+" - "+d+";\n        for (int fy = 0; fy < "+v+"; fy++) {\n            int oy = oy_base + fy;\n            if (oy >= "+t.height_shape+") {\n                break;\n            }\n            if (oy < 0) {\n                continue;\n            }\n            for (int fx = 0; fx < "+m+"; fx++) {\n                int ox = ox_base + fx;\n                if (ox >= "+t.width_shape+") {\n                    break;\n                }\n                if (ox < 0) {\n                    continue;\n                }\n                // origin数据\n                float curr = getValueFromTensorPos_origin(out_pos[0], out_pos[1], oy, ox);\n                res += curr;\n                // 在平均池化模式忽略填充值(exclusive默认为true）\n            }\n        }\n        res = res / float("+v+" * "+m+");\n        setOutput(res);\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},behaviors:["setPacked","setAdaptive","isGlobalPooling"]},prelu:gn("prelu"),relu6:gn("relu6"),leakyRelu:gn("leakyRelu"),scale:gn("scale"),sigmoid:gn("sigmoid"),relu:gn("relu"),hard_sigmoid:gn("hard_sigmoid"),pow:gn("pow"),sqrt:gn("sqrt"),tanh:gn("tanh"),squeeze2:dn,pad3d:{mainFunc:function(n,e){var t=n.origin,o=e.paddings,r=e.mode,i=e.value,a=function(n){var e=n.total_shape,t=n.channel,o=n.height_shape,r=n.width_shape;return[e/t/o/r,t,o,r]}(t),s={reflect:"\n            int a;\n            int b;\n            if (oPos.a - "+o[0]+" < 0) {\n                a = "+o[0]+" - oPos.a;\n            }\n            else if (oPos.a - "+o[0]+" >= "+a[3]+") {\n                a = "+a[3]+" - (oPos.a - "+o[0]+" - "+a[3]+" + 1) - 1;\n            }\n            else {\n                a = oPos.a - "+o[0]+";\n            }\n            if (oPos.b - "+o[2]+" < 0) {\n                b = "+o[2]+" - oPos.b;\n            }\n            else if (oPos.b - "+o[2]+" >= "+a[2]+") {\n                b = "+a[2]+" - (oPos.b - "+o[2]+" - "+a[2]+" + 1) - 1;\n            }\n            else {\n                b = oPos.b - "+o[2]+";\n            }\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, b, a);\n        ",replicate:"\n            int a;\n            int b;\n            if (oPos.a - "+o[0]+" < 0) {\n                a = 0;\n            }\n            else if (oPos.a - "+o[0]+" >= "+a[3]+") {\n                a = "+a[3]+" - 1;\n            }\n            else {\n                a = oPos.a - "+o[0]+";\n            }\n            if (oPos.b - "+o[2]+" < 0) {\n                b = 0;\n            }\n            else if (oPos.b - "+o[2]+" >= "+a[2]+") {\n                b = "+a[2]+" - 1;\n            }\n            else {\n                b = oPos.b - "+o[2]+";\n            }\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, b, a);\n        ",circular:"\n            int a;\n            int b;\n            if (oPos.a - "+o[0]+" < 0) {\n                a = int(mod(float("+o[0]+" + oPos.a - 1), float("+a[3]+")));\n            }\n            else if (oPos.a - "+o[0]+" >= "+a[3]+") {\n                a = int(mod(float(oPos.a - "+o[0]+" - "+a[3]+"), float("+a[3]+")));\n            }\n            else {\n                a = oPos.a - "+o[0]+";\n            }\n            if (oPos.b - "+o[2]+" < 0) {\n                b = int(mod(float("+o[2]+" + oPos.b - 1), float("+a[2]+")));\n            }\n            else if (oPos.b - "+o[2]+" >= "+a[2]+") {\n                b = int(mod(float(oPos.b - "+o[2]+" - "+a[2]+"), float("+a[2]+")));\n            }\n            else {\n                b = oPos.b - "+o[2]+";\n            }\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, b, a);\n        ",constant:"",undefined:""};return"\n    // start函数\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        float o = "+(i||"0.0")+";\n        if (oPos.a - "+o[0]+" >= 0\n            && oPos.b - "+o[2]+" >= 0\n            && oPos.a - "+o[0]+" < "+a[3]+"\n            && oPos.b - "+o[2]+" < "+a[2]+"\n        ) {\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b - "+o[2]+", oPos.a - "+o[0]+");\n        }\n        else {\n            "+s[r]+"\n        }\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]}},bilinear_interp_v2:fn,shuffle_channel:{mainFunc:function(n,e){var t=n.out,o=e.group,r=void 0===o?2:o,i=t.total_shape,a=t.height_shape,s=t.width_shape,u=t.channel,l=[1,0,2,3];return"\n    // start函数\n    void main(void) {\n        // 输出数据\n        ivec4 oPos = getOutputTensorPos();\n        float o = 0.0;\n\n        int sumVal = oPos.a\n            + oPos.b * "+s+"\n            + oPos.g * "+a+" * "+s+"\n            + oPos.r * "+u+" * "+s+" * "+a+";\n\n        ivec4 transpose_out_pos = transferFromNHWCtoNCHW(\n            sumVal,\n            "+r+",\n            "+s+",\n            "+a+",\n            "+i+"\n        );\n\n        ivec4 transpose_in_pos = ivec4(transpose_out_pos["+l[0]+"],\n            transpose_out_pos["+l[1]+"], transpose_out_pos["+l[2]+"], transpose_out_pos["+l[3]+"]);\n        int sumVal2 = transpose_in_pos.a\n            + transpose_in_pos.b * "+s+"\n            + transpose_in_pos.g * "+a+" * "+s+"\n            + transpose_in_pos.r * "+u/r+" * "+s+" * "+a+";\n        ivec4 origin_oPos = transferFromNHWCtoNCHW(\n            sumVal2,\n            "+u+",\n            "+s+",\n            "+a+",\n            "+i+"\n        );\n\n\n        o = getValueFromTensorPos_origin(\n            origin_oPos[0],\n            origin_oPos[1],\n            origin_oPos[2],\n            origin_oPos[3]\n        );\n\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},commonFuncConf:["transferFromNHWCtoNCHW"]},pack_out:{mainFunc:function(n,e){return"\n\n    // start函数\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        vec2 outCoord = vCoord.xy * _2d_shape_texture_out;\n        int index = int(outCoord.x) + int(outCoord.y) * int("+n.out.width_texture+");\n\n        int first = index * 4;\n        int sec = index * 4 + 1;\n        int third = index * 4 + 2;\n        int fourth = index * 4 + 3;\n\n        ivec4 rPos = getTensorPosFromArrayIndex_origin(first);\n        ivec4 gPos = getTensorPosFromArrayIndex_origin(sec);\n        ivec4 bPos = getTensorPosFromArrayIndex_origin(third);\n        ivec4 aPos = getTensorPosFromArrayIndex_origin(fourth);\n\n        float r = getValueFromTensorPos_origin(rPos.r, rPos.g, rPos.b, rPos.a);\n        float g = getValueFromTensorPos_origin(gPos.r, gPos.g, gPos.b, gPos.a);\n        float b = getValueFromTensorPos_origin(bPos.r, bPos.g, bPos.b, bPos.a);\n        float a = getValueFromTensorPos_origin(aPos.r, aPos.g, aPos.b, aPos.a);\n\n        setPackedOutput(vec4(r, g, b, a));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos","getTensorPosFromArrayIndex"]}},nhwc_2_nchw:{mainFunc:function(n,e){var t=n.origin,o=n.out;return"\n    void main() {\n        ivec4 oPos = getOutputTensorPos();\n        // 输出坐标转换为输入坐标\n        int sumVal = oPos.a * "+o.channel+"\n            + oPos.b * "+o.width_shape+" * "+o.channel+"\n            + oPos.g\n            + oPos.r * "+o.channel+" * "+o.width_shape+" * "+o.height_shape+";\n        ivec4 new_oPos = transferFromNHWCtoNCHW(\n            sumVal,\n            "+t.channel+",\n            "+t.width_shape+",\n            "+t.height_shape+",\n            "+t.total_shape+"\n        );\n        float o = getValueFromTensorPos_origin(new_oPos.r, new_oPos.g, new_oPos.b, new_oPos.a);\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPos"]},commonFuncConf:["transferFromNHWCtoNCHW"]},feedPost:{mainFunc:function(n,e){var t=n.out,o=e.mean,r=void 0===o?[0,0,0]:o,i=e.std,a=void 0===i?[1,1,1]:i,s=t.total_shape,u=t.height_shape,l=t.width_shape,c=t.channel;return"\n    // start函数\n    void main(void) {\n        ivec4 nhwcPos = getOutputTensorPos();\n        int sumVal = nhwcPos.a\n            + nhwcPos.b * "+l+"\n            + nhwcPos.g * "+u+" * "+l+"\n            + nhwcPos.r * "+c+" * "+l+" * "+u+";\n\n        ivec4 oPos = transferFromNHWCtoNCHW(\n            sumVal,\n            "+c+",\n            "+l+",\n            "+u+",\n            "+s+"\n        );\n        float res = 0.0;\n        int c1 = int(mod(float(oPos[1]), 4.0));\n        int c = oPos[1];\n        vec4 o = getValueFromTensorPosPacking_origin(oPos[0], c / 4, oPos[2], oPos[3]);\n\n        if (c1 == 0) {\n            res = o.r;\n        } else if (c1 == 1) {\n            res = o.g;\n        } else if (c1 == 2) {\n            res = o.b;\n        } else if (c1 == 3) {\n            res = o.a;\n        }\n\n        if (c == 0) {\n            res = (res - float("+r[0]+")) / float("+a[0]+");\n        } else if (c == 1) {\n            res = (res - float("+r[1]+")) / float("+a[1]+");\n        } else if (c == 2) {\n            res = (res - float("+r[2]+")) / float("+a[2]+");\n        }\n        setOutput(float(res));\n    }\n    "},textureFuncConf:{origin:["getValueFromTensorPosPacking"]},commonFuncConf:["transferFromNHWCtoNCHW"]},imgFeed:{mainFunc:function(){return"\n    uniform vec2 u_scale;\n    void main(void) {\n        vec2 outCoord = vCoord.xy;\n        vec2 newPos = vCoord / u_scale;\n        vec2 startPos = (1.0 / u_scale - 1.0) / 2.0;\n        bool exceedX = u_scale.y == 1.0 && (newPos.x < startPos.x || newPos.x > (1.0 + startPos.x));\n        bool exceedY = u_scale.x == 1.0 && (newPos.y < startPos.y || newPos.y > (1.0 + startPos.y));\n        if (exceedX || exceedY) {\n            setPackedOutput(vec4(1.0, 1.0, 1.0, 1.0));\n            return;\n        }\n        newPos = newPos - startPos;\n        vec4 counter = TEXTURE2D(texture_origin, newPos);\n        setPackedOutput(counter);\n    }\n    "},textureFuncConf:{origin:[]}},box_coder:{mainFunc:function(n,e){var t="decode_center_size"===e.code_type;return"\n    // start函数\n    vec2 getPriorBoxData(int r, int g, int b, int m, int n) {\n        float start = getValueFromTensorPos_priorbox(r, g, b, m);\n        float end = getValueFromTensorPos_priorbox(r, g, b, n);\n        float len = end - start;\n        return vec2(start + len / 2.0, len);\n    }\n    vec2 getBoxVarData(int r, int g, int b, int m, int n) {\n        return vec2(\n            getValueFromTensorPos_priorboxvar(r, g, b, m),\n            getValueFromTensorPos_priorboxvar(r, g, b, n)\n        );\n    }\n    vec2 getTargetBoxData(int r, int g, int b, int m, int n) {\n        "+(t?"\n            return vec2(\n                getValueFromTensorPos_targetbox(r, g, b, m),\n                getValueFromTensorPos_targetbox(r, g, b, n)\n            );\n        ":"\n            float start = getValueFromTensorPos_targetbox(r, g, b, m);\n            float end = getValueFromTensorPos_targetbox(r, g, b, n);\n            float len = end - start;\n            return vec2(start + len / 2.0, len);\n        ")+"\n    }\n\n    void main(void) {\n        ivec4 oPos = getOutputTensorPos();\n        int r = int(oPos.r);\n        int g = int(oPos.g);\n        int b = int(oPos.b);\n        int a = int(oPos.a);\n        // 输出坐标转换为输入坐标\n        float o = 0.0;\n\n        int m = 0;\n        int n = 0;\n        if (a == 0 || a == "+(t?2:1)+") {\n            m = 0;\n            n = 2;\n        }\n        else {\n            m = 1;\n            n = 3;\n        }\n        vec2 priorbox = getPriorBoxData(r, g, b, m, n);\n        vec2 boxvar = getBoxVarData(r, g, b, m, n);\n        vec2 targetbox = getTargetBoxData(r, g, b, m, n);\n        float p1 = priorbox.r;\n        float p2 = priorbox.g;\n        float t1 = targetbox.r;\n        float t2 = targetbox.g;\n        float v1 = boxvar.r;\n        float v2 = boxvar.g;\n\n        "+(t?"\n            float b1 = p2 * v1 * t1 + p1;\n            float b2 = exp(v2 * t2) * p2;\n            if (a == 0 || a == 1) {\n                o = b1 - b2 / 2.0 ;\n            }\n            else {\n                o = b1 + b2 / 2.0;\n            }\n        ":"\n            if (a == 0 || a == 1) {\n                o = (t1 - p1) / p2 / v1;\n            }\n            else {\n                o = log(abs(t2 / p2)) / v2;\n            }\n        ")+"\n        setOutput(float(o));\n    }\n    "},textureFuncConf:{targetbox:["getValueFromTensorPos"],priorbox:["getValueFromTensorPos"],priorboxvar:["getValueFromTensorPos"]},behaviors:[]},density_prior_box:_n,prior_box:xn},bn=new J;!function(n,e,t){u.backend=n,e&&(u.backendInstance=e),t&&Object.keys(t).forEach((function(n){!function(n,e){var t=n.conf,o=n.params,r=n.main,i=n.mainFunc,a=n.textureFuncConf,s=n.commonFuncConf,l=n.behaviors,c=void 0===l?[]:l,f=u.backend+"_"+e;u.opRegistry.ops[f]||(u.opRegistry.ops[f]={name:e,conf:t,params:o,main:r,mainFunc:i,textureFuncConf:a,commonFuncConf:s,behaviors:c})}(t[n],n)}))}("webgl",bn,Pn)}},e={};function t(o){if(e[o])return e[o].exports;var r=e[o]={exports:{}};return n[o](r,r.exports,t),r.exports}return t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t(646)})()},function(n,e,t){n.exports=t(5)},,,function(n,e,t){"use strict";t.r(e),t.d(e,"load",(function(){return g})),t.d(e,"preheat",(function(){return d})),t.d(e,"getGrayValue",(function(){return v})),t.d(e,"drawHumanSeg",(function(){return m})),t.d(e,"blurBackground",(function(){return _})),t.d(e,"drawMask",(function(){return x}));var o=t(0),r=(t(1),function(n,e,t){var o=function(n,e,t){var o=new RegExp("\\b"+e+" \\w+ (\\w+)","ig");n.replace(o,(function(n,e){return t[e]=0,n}))},r=function(n,e,t){var o=n.createShader(t);return n.shaderSource(o,e),n.compileShader(o),n.getShaderParameter(o,n.COMPILE_STATUS)?o:(console.log(n.getShaderInfoLog(o)),null)};this.uniform={},this.attribute={};var i=r(n,e,n.VERTEX_SHADER),a=r(n,t,n.FRAGMENT_SHADER);for(var s in this.id=n.createProgram(),n.attachShader(this.id,i),n.attachShader(this.id,a),n.linkProgram(this.id),n.getProgramParameter(this.id,n.LINK_STATUS)||console.log(n.getProgramInfoLog(this.id)),n.useProgram(this.id),o(e,"attribute",this.attribute),this.attribute)this.attribute[s]=n.getAttribLocation(this.id,s);for(var u in o(e,"uniform",this.uniform),o(t,"uniform",this.uniform),this.uniform)this.uniform[u]=n.getUniformLocation(this.id,u)}),i=window.WebGLImageFilter=function(n){n||(n={});var e=null,t=0,o=null,i=!1,a=-1,s=[null,null],u=[],l=-1,c=-1,f=null,h=null,p=n.canvas||document.createElement("canvas"),g={};if(!(e=p.getContext("webgl")||p.getContext("experimental-webgl")))throw"Couldn't get WebGL context";this.addFilter=function(n){var e=Array.prototype.slice.call(arguments,1),t=y[n];u.push({func:t,args:e})},this.reset=function(){u=[]};var d=!1;this.dispose=function(){e.deleteTexture(o),o=null,d=!1},this.apply=function(n){if(v(n.width,n.height),t=0,o||(o=e.createTexture()),e.bindTexture(e.TEXTURE_2D,o),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),d?e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n):(e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),d=!0),0==u.length){P(T.FRAGMENT_IDENTITY);return x(),p}for(var r=0;r<u.length;r++){i=r==u.length-1;var a=u[r];a.func.apply(this,a.args||[])}return p};var v=function(n,t){if(n!=l||t!=c){if(p.width=l=n,p.height=c=t,!f){var o=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);f=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,o,e.STATIC_DRAW),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}e.viewport(0,0,l,c),s=[null,null]}},m=function(n){return s[n]=s[n]||_(l,c),s[n]},_=function(n,t){var o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o);var r=e.createRenderbuffer();e.bindRenderbuffer(e.RENDERBUFFER,r);var i=e.createTexture();return e.bindTexture(e.TEXTURE_2D,i),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n,t,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),{fbo:o,texture:i}},x=function(n){var r=null,s=null,u=!1;r=0==t?o:m(a).texture,t++,!i||n&b.INTERMEDIATE?s=m(a=(a+1)%2).fbo:(s=null,u=t%2==0),e.bindTexture(e.TEXTURE_2D,r),e.bindFramebuffer(e.FRAMEBUFFER,s),e.uniform1f(h.uniform.flipY,u?-1:1),e.drawArrays(e.TRIANGLES,0,6)},P=function(n){if(g[n])return h=g[n],e.useProgram(h.id),h;h=new r(e,T.VERTEX_IDENTITY,n);var t=Float32Array.BYTES_PER_ELEMENT,o=4*t;return e.enableVertexAttribArray(h.attribute.pos),e.vertexAttribPointer(h.attribute.pos,2,e.FLOAT,!1,o,0*t),e.enableVertexAttribArray(h.attribute.uv),e.vertexAttribPointer(h.attribute.uv,2,e.FLOAT,!1,o,2*t),g[n]=h,h},b={INTERMEDIATE:1},T={};T.VERTEX_IDENTITY=["precision highp float;","attribute vec2 pos;","attribute vec2 uv;","varying vec2 vUv;","uniform float flipY;","void main(void) {","vUv = uv;","gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);","}"].join("\n"),T.FRAGMENT_IDENTITY=["precision highp float;","varying vec2 vUv;","uniform sampler2D texture;","void main(void) {","gl_FragColor = texture2D(texture, vUv);","}"].join("\n");var y={colorMatrix:function(n){var t=new Float32Array(n);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;var o=1==t[18]&&0==t[3]&&0==t[8]&&0==t[13]&&0==t[15]&&0==t[16]&&0==t[17]&&0==t[19]?y.colorMatrix.SHADER.WITHOUT_ALPHA:y.colorMatrix.SHADER.WITH_ALPHA,r=P(o);e.uniform1fv(r.uniform.m,t),x()}};y.colorMatrix.SHADER={},y.colorMatrix.SHADER.WITH_ALPHA=["precision highp float;","varying vec2 vUv;","uniform sampler2D texture;","uniform float m[20];","void main(void) {","vec4 c = texture2D(texture, vUv);","gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];","gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];","gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];","gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];","}"].join("\n"),y.colorMatrix.SHADER.WITHOUT_ALPHA=["precision highp float;","varying vec2 vUv;","uniform sampler2D texture;","uniform float m[20];","void main(void) {","vec4 c = texture2D(texture, vUv);","gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];","gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];","gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];","gl_FragColor.a = c.a;","}"].join("\n"),y.brightness=function(n){var e=(n||0)+1;y.colorMatrix([e,0,0,0,0,0,e,0,0,0,0,0,e,0,0,0,0,0,1,0])},y.saturation=function(n){var e=2*(n||0)/3+1,t=-.5*(e-1);y.colorMatrix([e,t,t,0,0,t,e,t,0,0,t,t,e,0,0,0,0,0,1,0])},y.desaturate=function(){y.saturation(-1)},y.contrast=function(n){var e=(n||0)+1,t=-128*(e-1);y.colorMatrix([e,0,0,0,t,0,e,0,0,t,0,0,e,0,t,0,0,0,1,0])},y.negative=function(){y.contrast(-2)},y.hue=function(n){n=(n||0)/180*Math.PI;var e=Math.cos(n),t=Math.sin(n);y.colorMatrix([.213+.787*e+-.213*t,.715+-.715*e+-.715*t,.072+-.072*e+.928*t,0,0,.213+-.213*e+.143*t,.715+e*(1-.715)+.14*t,.072+-.072*e+-.283*t,0,0,.213+-.213*e+-.787*t,.715+-.715*e+.715*t,.072+.928*e+.072*t,0,0,0,0,0,1,0])},y.desaturateLuminance=function(){y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},y.sepia=function(){y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},y.brownie=function(){y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},y.vintagePinhole=function(){y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},y.kodachrome=function(){y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},y.technicolor=function(){y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},y.polaroid=function(){y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},y.shiftToBGR=function(){y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},y.convolution=function(n){var t=new Float32Array(n),o=1/l,r=1/c,i=P(y.convolution.SHADER);e.uniform1fv(i.uniform.m,t),e.uniform2f(i.uniform.px,o,r),x()},y.convolution.SHADER=["precision highp float;","varying vec2 vUv;","uniform sampler2D texture;","uniform vec2 px;","uniform float m[9];","void main(void) {","vec4 c11 = texture2D(texture, vUv - px);","vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y));","vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y));","vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) );","vec4 c22 = texture2D(texture, vUv);","vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) );","vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) );","vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) );","vec4 c33 = texture2D(texture, vUv + px );","gl_FragColor = ","c11 * m[0] + c12 * m[1] + c22 * m[2] +","c21 * m[3] + c22 * m[4] + c23 * m[5] +","c31 * m[6] + c32 * m[7] + c33 * m[8];","gl_FragColor.a = c22.a;","}"].join("\n"),y.detectEdges=function(){y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},y.sobelX=function(){y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},y.sobelY=function(){y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},y.sharpen=function(n){var e=n||1;y.convolution.call(this,[0,-1*e,0,-1*e,1+4*e,-1*e,0,-1*e,0])},y.emboss=function(n){var e=n||1;y.convolution.call(this,[-2*e,-1*e,0,-1*e,1,1*e,0,1*e,2*e])},y.blur=function(n){var t=n/7/l,o=n/7/c,r=P(y.blur.SHADER);e.uniform2f(r.uniform.px,0,o),x(b.INTERMEDIATE),e.uniform2f(r.uniform.px,t,0),x()},y.blur.SHADER=["precision highp float;","varying vec2 vUv;","uniform sampler2D texture;","uniform vec2 px;","void main(void) {","gl_FragColor = vec4(0.0);","gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;","gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;","gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;","gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;","gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;","gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;","gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;","gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;","gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;","gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;","gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;","gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;","gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;","gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;","gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;","}"].join("\n"),y.pixelate=function(n){var t=n/l,o=n/c,r=P(y.pixelate.SHADER);e.uniform2f(r.uniform.size,t,o),x()},y.pixelate.SHADER=["precision highp float;","varying vec2 vUv;","uniform vec2 size;","uniform sampler2D texture;","vec2 pixelate(vec2 coord, vec2 size) {","return floor( coord / size ) * size;","}","void main(void) {","gl_FragColor = vec4(0.0);","vec2 coord = pixelate(vUv, size);","gl_FragColor += texture2D(texture, coord);","}"].join("\n")},a=function(n,e,t,o){return new(t||(t=Promise))((function(r,i){function a(n){try{u(o.next(n))}catch(n){i(n)}}function s(n){try{u(o.throw(n))}catch(n){i(n)}}function u(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(a,s)}u((o=o.apply(n,e||[])).next())}))},s=function(n,e){var t,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,o=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){a.label=i[1];break}if(6===i[0]&&a.label<r[1]){a.label=r[1],r=i;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(i);break}r[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(n,a)}catch(n){i=[6,n],o=0}finally{t=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},u=null,l=null,c=398,f=224,h=null,p=new i;function g(n,e,t){return void 0===n&&(n=!0),void 0===e&&(e=!1),void 0===t&&(t=null),a(this,void 0,void 0,(function(){var r;return s(this,(function(i){switch(i.label){case 0:return"https://paddlejs.bj.bcebos.com/models/fuse/humanseg/humanseg_398x224_fuse_activation/model.json","https://paddlejs.bj.bcebos.com/models/fuse/humanseg/humanseg_288x160_fuse_activation/model.json",r=t||(e?"https://paddlejs.bj.bcebos.com/models/fuse/humanseg/humanseg_288x160_fuse_activation/model.json":"https://paddlejs.bj.bcebos.com/models/fuse/humanseg/humanseg_398x224_fuse_activation/model.json"),e&&(c=288,f=160),u=new o.Runner({modelPath:r,needPreheat:void 0===n||n,mean:[.5,.5,.5],std:[.5,.5,.5],webglFeedProcess:!0}),o.env.set("webgl_pack_channel",!0),o.env.set("webgl_pack_output",!0),[4,u.init()];case 1:return i.sent(),u.feedShape&&(c=u.feedShape.fw,f=u.feedShape.fh),[2]}}))}))}function d(){return a(this,void 0,void 0,(function(){return s(this,(function(n){switch(n.label){case 0:return[4,u.preheat()];case 1:return[2,n.sent()]}}))}))}function v(n){return a(this,void 0,void 0,(function(){var e;return s(this,(function(t){switch(t.label){case 0:return l=n,[4,u.predict(n)];case 1:return e=t.sent(),h=function(){var n=c,e=f,t=n/e,o=l.naturalWidth||l.width,r=l.naturalHeight||l.height,i=0,a=0,s=0,u=0,h=r,p=o,g=o/r;t/g>=1?(n=e*g,i=Math.floor((c-n)/2),p=h*t,s=Math.floor((p-o)/2)):(e=n/g,a=Math.floor((f-e)/2),h=p/t,u=Math.floor((h-r)/2));return{x:i,y:a,sw:n,sh:e,bx:s,by:u,bw:p,bh:h}}(),[2,{width:c,height:f,data:e}]}}))}))}function m(n,e,t){var o=l.naturalWidth||l.width,r=l.naturalHeight||l.height,i=e.getContext("2d");e.width=c,e.height=f;var a=document.createElement("canvas"),s=a.getContext("2d");a.width=c,a.height=f;var u=i.getImageData(0,0,c,f);s.drawImage(l,h.x,h.y,h.sw,h.sh);for(var p=s.getImageData(0,0,c,f),g=0;g<c*f;g++)255*n[g+c*f]>100&&(u.data[4*g]=p.data[4*g],u.data[4*g+1]=p.data[4*g+1],u.data[4*g+2]=p.data[4*g+2],u.data[4*g+3]=255*n[g+c*f]);s.putImageData(u,0,0),e.width=o,e.height=r,t&&i.drawImage(t,-h.bx,-h.by,h.bw,h.bh),i.drawImage(a,-h.bx,-h.by,h.bw,h.bh)}function _(n,e){var t=l.naturalWidth||l.width,o=l.naturalHeight||l.height,r=document.createElement("canvas"),i=r.getContext("2d");r.width=c,r.height=f;var a=e.getContext("2d");e.width=t,e.height=o;var s=i.getImageData(0,0,c,f);i.drawImage(l,h.x,h.y,h.sw,h.sh);var u=i.getImageData(0,0,c,f);p.dispose();for(var g=p.apply(r),d=0;d<c*f;d++)255*n[d+c*f]>150&&(s.data[4*d]=u.data[4*d],s.data[4*d+1]=u.data[4*d+1],s.data[4*d+2]=u.data[4*d+2],s.data[4*d+3]=255*n[d+c*f]);i.putImageData(s,0,0),a.drawImage(g,-h.bx,-h.by,h.bw,h.bh),a.drawImage(r,-h.bx,-h.by,h.bw,h.bh)}function x(n,e,t){var o=document.createElement("canvas"),r=o.getContext("2d");o.width=c,o.height=f,r.drawImage(t,0,0,c,f);var i=e.getContext("2d");e.width=c,e.height=f;for(var a=r.getImageData(0,0,c,f),s=0;s<c*f;s++)255*n[s+c*f]>150&&(a.data[4*s+3]=255*n[s]);r.putImageData(a,0,0),i.drawImage(o,0,0,c,f)}p.reset(),p.addFilter("blur",10)}])}));

/***/ }),

/***/ "./node_modules/.pnpm/agora-rtc-sdk-ng@4.13.0/node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/agora-rtc-sdk-ng@4.13.0/node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, Buffer, process) {/**
 * AgoraWebSDK_N-v4.13.0-0-g14700235-dirty Copyright AgoraInc.
 */

!function(e,t){ true?module.exports=t():undefined}(this,(function(){"use strict";var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},t=function(e){return e&&e.Math==Math&&e},r=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof e&&e)||function(){return this}()||Function("return this")(),i={},n=function(e){try{return!!e()}catch(e){return!0}},o=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),s=!n((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")})),a=s,c=Function.prototype.call,d=a?c.bind(c):function(){return c.apply(c,arguments)},u={},A={}.propertyIsEnumerable,h=Object.getOwnPropertyDescriptor,l=h&&!A.call({1:2},1);u.f=l?function(e){var t=h(this,e);return!!t&&t.enumerable}:A;var p,g,E=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},f=s,I=Function.prototype,m=I.bind,_=I.call,C=f&&m.bind(_,_),S=f?function(e){return e&&C(e)}:function(e){return e&&function(){return _.apply(e,arguments)}},v=S,T=v({}.toString),R=v("".slice),y=function(e){return R(T(e),8,-1)},w=S,b=n,O=y,N=r.Object,D=w("".split),P=b((function(){return!N("z").propertyIsEnumerable(0)}))?function(e){return"String"==O(e)?D(e,""):N(e)}:N,L=r.TypeError,k=function(e){if(null==e)throw L("Can't call method on "+e);return e},B=P,M=k,U=function(e){return B(M(e))},x=function(e){return"function"==typeof e},Q=x,F=function(e){return"object"==typeof e?null!==e:Q(e)},V=r,j=x,G=function(e){return j(e)?e:void 0},K=function(e,t){return arguments.length<2?G(V[e]):V[e]&&V[e][t]},H=S({}.isPrototypeOf),W=K("navigator","userAgent")||"",Y=r,J=W,q=Y.process,X=Y.Deno,z=q&&q.versions||X&&X.version,Z=z&&z.v8;Z&&(g=(p=Z.split("."))[0]>0&&p[0]<4?1:+(p[0]+p[1])),!g&&J&&(!(p=J.match(/Edge\/(\d+)/))||p[1]>=74)&&(p=J.match(/Chrome\/(\d+)/))&&(g=+p[1]);var $=g,ee=$,te=n,re=!!Object.getOwnPropertySymbols&&!te((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&ee&&ee<41})),ie=re&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,ne=K,oe=x,se=H,ae=ie,ce=r.Object,de=ae?function(e){return"symbol"==typeof e}:function(e){var t=ne("Symbol");return oe(t)&&se(t.prototype,ce(e))},ue=r.String,Ae=function(e){try{return ue(e)}catch(e){return"Object"}},he=x,le=Ae,pe=r.TypeError,ge=function(e){if(he(e))return e;throw pe(le(e)+" is not a function")},Ee=ge,fe=function(e,t){var r=e[t];return null==r?void 0:Ee(r)},Ie=d,me=x,_e=F,Ce=r.TypeError,Se={exports:{}},ve=r,Te=Object.defineProperty,Re=function(e,t){try{Te(ve,e,{value:t,configurable:!0,writable:!0})}catch(r){ve[e]=t}return t},ye=Re,we="__core-js_shared__",be=r[we]||ye(we,{}),Oe=be;(Se.exports=function(e,t){return Oe[e]||(Oe[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.20.3",mode:"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.20.3/LICENSE",source:"https://github.com/zloirock/core-js"});var Ne=k,De=r.Object,Pe=function(e){return De(Ne(e))},Le=Pe,ke=S({}.hasOwnProperty),Be=Object.hasOwn||function(e,t){return ke(Le(e),t)},Me=S,Ue=0,xe=Math.random(),Qe=Me(1..toString),Fe=function(e){return"Symbol("+(void 0===e?"":e)+")_"+Qe(++Ue+xe,36)},Ve=r,je=Se.exports,Ge=Be,Ke=Fe,He=re,We=ie,Ye=je("wks"),Je=Ve.Symbol,qe=Je&&Je.for,Xe=We?Je:Je&&Je.withoutSetter||Ke,ze=function(e){if(!Ge(Ye,e)||!He&&"string"!=typeof Ye[e]){var t="Symbol."+e;He&&Ge(Je,e)?Ye[e]=Je[e]:Ye[e]=We&&qe?qe(t):Xe(t)}return Ye[e]},Ze=d,$e=F,et=de,tt=fe,rt=function(e,t){var r,i;if("string"===t&&me(r=e.toString)&&!_e(i=Ie(r,e)))return i;if(me(r=e.valueOf)&&!_e(i=Ie(r,e)))return i;if("string"!==t&&me(r=e.toString)&&!_e(i=Ie(r,e)))return i;throw Ce("Can't convert object to primitive value")},it=ze,nt=r.TypeError,ot=it("toPrimitive"),st=function(e,t){if(!$e(e)||et(e))return e;var r,i=tt(e,ot);if(i){if(void 0===t&&(t="default"),r=Ze(i,e,t),!$e(r)||et(r))return r;throw nt("Can't convert object to primitive value")}return void 0===t&&(t="number"),rt(e,t)},at=de,ct=function(e){var t=st(e,"string");return at(t)?t:t+""},dt=F,ut=r.document,At=dt(ut)&&dt(ut.createElement),ht=function(e){return At?ut.createElement(e):{}},lt=ht,pt=!o&&!n((function(){return 7!=Object.defineProperty(lt("div"),"a",{get:function(){return 7}}).a})),gt=o,Et=d,ft=u,It=E,mt=U,_t=ct,Ct=Be,St=pt,vt=Object.getOwnPropertyDescriptor;i.f=gt?vt:function(e,t){if(e=mt(e),t=_t(t),St)try{return vt(e,t)}catch(e){}if(Ct(e,t))return It(!Et(ft.f,e,t),e[t])};var Tt={},Rt=o&&n((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype})),yt=r,wt=F,bt=yt.String,Ot=yt.TypeError,Nt=function(e){if(wt(e))return e;throw Ot(bt(e)+" is not an object")},Dt=o,Pt=pt,Lt=Rt,kt=Nt,Bt=ct,Mt=r.TypeError,Ut=Object.defineProperty,xt=Object.getOwnPropertyDescriptor,Qt="enumerable",Ft="configurable",Vt="writable";Tt.f=Dt?Lt?function(e,t,r){if(kt(e),t=Bt(t),kt(r),"function"==typeof e&&"prototype"===t&&"value"in r&&Vt in r&&!r.writable){var i=xt(e,t);i&&i.writable&&(e[t]=r.value,r={configurable:Ft in r?r.configurable:i.configurable,enumerable:Qt in r?r.enumerable:i.enumerable,writable:!1})}return Ut(e,t,r)}:Ut:function(e,t,r){if(kt(e),t=Bt(t),kt(r),Pt)try{return Ut(e,t,r)}catch(e){}if("get"in r||"set"in r)throw Mt("Accessors not supported");return"value"in r&&(e[t]=r.value),e};var jt=Tt,Gt=E,Kt=o?function(e,t,r){return jt.f(e,t,Gt(1,r))}:function(e,t,r){return e[t]=r,e},Ht={exports:{}},Wt=x,Yt=be,Jt=S(Function.toString);Wt(Yt.inspectSource)||(Yt.inspectSource=function(e){return Jt(e)});var qt,Xt,zt,Zt=Yt.inspectSource,$t=x,er=Zt,tr=r.WeakMap,rr=$t(tr)&&/native code/.test(er(tr)),ir=Se.exports,nr=Fe,or=ir("keys"),sr=function(e){return or[e]||(or[e]=nr(e))},ar={},cr=rr,dr=r,ur=S,Ar=F,hr=Kt,lr=Be,pr=be,gr=sr,Er=ar,fr="Object already initialized",Ir=dr.TypeError,mr=dr.WeakMap;if(cr||pr.state){var _r=pr.state||(pr.state=new mr),Cr=ur(_r.get),Sr=ur(_r.has),vr=ur(_r.set);qt=function(e,t){if(Sr(_r,e))throw new Ir(fr);return t.facade=e,vr(_r,e,t),t},Xt=function(e){return Cr(_r,e)||{}},zt=function(e){return Sr(_r,e)}}else{var Tr=gr("state");Er[Tr]=!0,qt=function(e,t){if(lr(e,Tr))throw new Ir(fr);return t.facade=e,hr(e,Tr,t),t},Xt=function(e){return lr(e,Tr)?e[Tr]:{}},zt=function(e){return lr(e,Tr)}}var Rr={set:qt,get:Xt,has:zt,enforce:function(e){return zt(e)?Xt(e):qt(e,{})},getterFor:function(e){return function(t){var r;if(!Ar(t)||(r=Xt(t)).type!==e)throw Ir("Incompatible receiver, "+e+" required");return r}}},yr=o,wr=Be,br=Function.prototype,Or=yr&&Object.getOwnPropertyDescriptor,Nr=wr(br,"name"),Dr={EXISTS:Nr,PROPER:Nr&&"something"===function(){}.name,CONFIGURABLE:Nr&&(!yr||yr&&Or(br,"name").configurable)},Pr=r,Lr=x,kr=Be,Br=Kt,Mr=Re,Ur=Zt,xr=Dr.CONFIGURABLE,Qr=Rr.get,Fr=Rr.enforce,Vr=String(String).split("String");(Ht.exports=function(e,t,r,i){var n,o=!!i&&!!i.unsafe,s=!!i&&!!i.enumerable,a=!!i&&!!i.noTargetGet,c=i&&void 0!==i.name?i.name:t;Lr(r)&&("Symbol("===String(c).slice(0,7)&&(c="["+String(c).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!kr(r,"name")||xr&&r.name!==c)&&Br(r,"name",c),(n=Fr(r)).source||(n.source=Vr.join("string"==typeof c?c:""))),e!==Pr?(o?!a&&e[t]&&(s=!0):delete e[t],s?e[t]=r:Br(e,t,r)):s?e[t]=r:Mr(t,r)})(Function.prototype,"toString",(function(){return Lr(this)&&Qr(this).source||Ur(this)}));var jr={},Gr=Math.ceil,Kr=Math.floor,Hr=function(e){var t=+e;return t!=t||0===t?0:(t>0?Kr:Gr)(t)},Wr=Hr,Yr=Math.max,Jr=Math.min,qr=function(e,t){var r=Wr(e);return r<0?Yr(r+t,0):Jr(r,t)},Xr=Hr,zr=Math.min,Zr=function(e){return e>0?zr(Xr(e),9007199254740991):0},$r=Zr,ei=function(e){return $r(e.length)},ti=U,ri=qr,ii=ei,ni=function(e){return function(t,r,i){var n,o=ti(t),s=ii(o),a=ri(i,s);if(e&&r!=r){for(;s>a;)if((n=o[a++])!=n)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===r)return e||a||0;return!e&&-1}},oi={includes:ni(!0),indexOf:ni(!1)},si=Be,ai=U,ci=oi.indexOf,di=ar,ui=S([].push),Ai=function(e,t){var r,i=ai(e),n=0,o=[];for(r in i)!si(di,r)&&si(i,r)&&ui(o,r);for(;t.length>n;)si(i,r=t[n++])&&(~ci(o,r)||ui(o,r));return o},hi=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],li=Ai,pi=hi.concat("length","prototype");jr.f=Object.getOwnPropertyNames||function(e){return li(e,pi)};var gi={};gi.f=Object.getOwnPropertySymbols;var Ei=K,fi=jr,Ii=gi,mi=Nt,_i=S([].concat),Ci=Ei("Reflect","ownKeys")||function(e){var t=fi.f(mi(e)),r=Ii.f;return r?_i(t,r(e)):t},Si=Be,vi=Ci,Ti=i,Ri=Tt,yi=function(e,t,r){for(var i=vi(t),n=Ri.f,o=Ti.f,s=0;s<i.length;s++){var a=i[s];Si(e,a)||r&&Si(r,a)||n(e,a,o(t,a))}},wi=n,bi=x,Oi=/#|\.prototype\./,Ni=function(e,t){var r=Pi[Di(e)];return r==ki||r!=Li&&(bi(t)?wi(t):!!t)},Di=Ni.normalize=function(e){return String(e).replace(Oi,".").toLowerCase()},Pi=Ni.data={},Li=Ni.NATIVE="N",ki=Ni.POLYFILL="P",Bi=Ni,Mi=r,Ui=i.f,xi=Kt,Qi=Ht.exports,Fi=Re,Vi=yi,ji=Bi,Gi=function(e,t){var r,i,n,o,s,a=e.target,c=e.global,d=e.stat;if(r=c?Mi:d?Mi[a]||Fi(a,{}):(Mi[a]||{}).prototype)for(i in t){if(o=t[i],n=e.noTargetGet?(s=Ui(r,i))&&s.value:r[i],!ji(c?i:a+(d?".":"#")+i,e.forced)&&void 0!==n){if(typeof o==typeof n)continue;Vi(o,n)}(e.sham||n&&n.sham)&&xi(o,"sham",!0),Qi(r,i,o,e)}},Ki=r.Promise,Hi=Ht.exports,Wi=function(e,t,r){for(var i in t)Hi(e,i,t[i],r);return e},Yi=r,Ji=x,qi=Yi.String,Xi=Yi.TypeError,zi=S,Zi=Nt,$i=function(e){if("object"==typeof e||Ji(e))return e;throw Xi("Can't set "+qi(e)+" as a prototype")},en=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=zi(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),t=r instanceof Array}catch(e){}return function(r,i){return Zi(r),$i(i),t?e(r,i):r.__proto__=i,r}}():void 0),tn=Tt.f,rn=Be,nn=ze("toStringTag"),on=function(e,t,r){e&&!r&&(e=e.prototype),e&&!rn(e,nn)&&tn(e,nn,{configurable:!0,value:t})},sn=K,an=Tt,cn=o,dn=ze("species"),un=function(e){var t=sn(e),r=an.f;cn&&t&&!t[dn]&&r(t,dn,{configurable:!0,get:function(){return this}})},An=H,hn=r.TypeError,ln=function(e,t){if(An(t,e))return e;throw hn("Incorrect invocation")},pn=ge,gn=s,En=S(S.bind),fn=function(e,t){return pn(e),void 0===t?e:gn?En(e,t):function(){return e.apply(t,arguments)}},In={},mn=In,_n=ze("iterator"),Cn=Array.prototype,Sn=function(e){return void 0!==e&&(mn.Array===e||Cn[_n]===e)},vn={};vn[ze("toStringTag")]="z";var Tn=r,Rn="[object z]"===String(vn),yn=x,wn=y,bn=ze("toStringTag"),On=Tn.Object,Nn="Arguments"==wn(function(){return arguments}()),Dn=Rn?wn:function(e){var t,r,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=On(e),bn))?r:Nn?wn(t):"Object"==(i=wn(t))&&yn(t.callee)?"Arguments":i},Pn=Dn,Ln=fe,kn=In,Bn=ze("iterator"),Mn=function(e){if(null!=e)return Ln(e,Bn)||Ln(e,"@@iterator")||kn[Pn(e)]},Un=d,xn=ge,Qn=Nt,Fn=Ae,Vn=Mn,jn=r.TypeError,Gn=function(e,t){var r=arguments.length<2?Vn(e):t;if(xn(r))return Qn(Un(r,e));throw jn(Fn(e)+" is not iterable")},Kn=d,Hn=Nt,Wn=fe,Yn=fn,Jn=d,qn=Nt,Xn=Ae,zn=Sn,Zn=ei,$n=H,eo=Gn,to=Mn,ro=function(e,t,r){var i,n;Hn(e);try{if(!(i=Wn(e,"return"))){if("throw"===t)throw r;return r}i=Kn(i,e)}catch(e){n=!0,i=e}if("throw"===t)throw r;if(n)throw i;return Hn(i),r},io=r.TypeError,no=function(e,t){this.stopped=e,this.result=t},oo=no.prototype,so=ze("iterator"),ao=!1;try{var co=0,uo={next:function(){return{done:!!co++}},return:function(){ao=!0}};uo[so]=function(){return this},Array.from(uo,(function(){throw 2}))}catch(e){}var Ao=function(e,t){if(!t&&!ao)return!1;var r=!1;try{var i={};i[so]=function(){return{next:function(){return{done:r=!0}}}},e(i)}catch(e){}return r},ho=S,lo=n,po=x,go=Dn,Eo=Zt,fo=function(){},Io=[],mo=K("Reflect","construct"),_o=/^\s*(?:class|function)\b/,Co=ho(_o.exec),So=!_o.exec(fo),vo=function(e){if(!po(e))return!1;try{return mo(fo,Io,e),!0}catch(e){return!1}},To=function(e){if(!po(e))return!1;switch(go(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return So||!!Co(_o,Eo(e))}catch(e){return!0}};To.sham=!0;var Ro,yo,wo,bo,Oo=!mo||lo((function(){var e;return vo(vo.call)||!vo(Object)||!vo((function(){e=!0}))||e}))?To:vo,No=Oo,Do=Ae,Po=r.TypeError,Lo=function(e){if(No(e))return e;throw Po(Do(e)+" is not a constructor")},ko=Nt,Bo=Lo,Mo=ze("species"),Uo=function(e,t){var r,i=ko(e).constructor;return void 0===i||null==(r=ko(i)[Mo])?t:Bo(r)},xo=s,Qo=Function.prototype,Fo=Qo.apply,Vo=Qo.call,jo="object"==typeof Reflect&&Reflect.apply||(xo?Vo.bind(Fo):function(){return Vo.apply(Fo,arguments)}),Go=K("document","documentElement"),Ko=S([].slice),Ho=/(?:ipad|iphone|ipod).*applewebkit/i.test(W),Wo="process"==y(r.process),Yo=r,Jo=jo,qo=fn,Xo=x,zo=Be,Zo=n,$o=Go,es=Ko,ts=ht,rs=Ho,is=Wo,ns=Yo.setImmediate,os=Yo.clearImmediate,ss=Yo.process,as=Yo.Dispatch,cs=Yo.Function,ds=Yo.MessageChannel,us=Yo.String,As=0,hs={},ls="onreadystatechange";try{Ro=Yo.location}catch(e){}var ps=function(e){if(zo(hs,e)){var t=hs[e];delete hs[e],t()}},gs=function(e){return function(){ps(e)}},Es=function(e){ps(e.data)},fs=function(e){Yo.postMessage(us(e),Ro.protocol+"//"+Ro.host)};ns&&os||(ns=function(e){var t=es(arguments,1);return hs[++As]=function(){Jo(Xo(e)?e:cs(e),void 0,t)},yo(As),As},os=function(e){delete hs[e]},is?yo=function(e){ss.nextTick(gs(e))}:as&&as.now?yo=function(e){as.now(gs(e))}:ds&&!rs?(bo=(wo=new ds).port2,wo.port1.onmessage=Es,yo=qo(bo.postMessage,bo)):Yo.addEventListener&&Xo(Yo.postMessage)&&!Yo.importScripts&&Ro&&"file:"!==Ro.protocol&&!Zo(fs)?(yo=fs,Yo.addEventListener("message",Es,!1)):yo=ls in ts("script")?function(e){$o.appendChild(ts("script")).onreadystatechange=function(){$o.removeChild(this),ps(e)}}:function(e){setTimeout(gs(e),0)});var Is,ms,_s,Cs,Ss,vs,Ts,Rs,ys={set:ns,clear:os},ws=r,bs=/ipad|iphone|ipod/i.test(W)&&void 0!==ws.Pebble,Os=/web0s(?!.*chrome)/i.test(W),Ns=r,Ds=fn,Ps=i.f,Ls=ys.set,ks=Ho,Bs=bs,Ms=Os,Us=Wo,xs=Ns.MutationObserver||Ns.WebKitMutationObserver,Qs=Ns.document,Fs=Ns.process,Vs=Ns.Promise,js=Ps(Ns,"queueMicrotask"),Gs=js&&js.value;Gs||(Is=function(){var e,t;for(Us&&(e=Fs.domain)&&e.exit();ms;){t=ms.fn,ms=ms.next;try{t()}catch(e){throw ms?Cs():_s=void 0,e}}_s=void 0,e&&e.enter()},ks||Us||Ms||!xs||!Qs?!Bs&&Vs&&Vs.resolve?((Ts=Vs.resolve(void 0)).constructor=Vs,Rs=Ds(Ts.then,Ts),Cs=function(){Rs(Is)}):Us?Cs=function(){Fs.nextTick(Is)}:(Ls=Ds(Ls,Ns),Cs=function(){Ls(Is)}):(Ss=!0,vs=Qs.createTextNode(""),new xs(Is).observe(vs,{characterData:!0}),Cs=function(){vs.data=Ss=!Ss}));var Ks=Gs||function(e){var t={fn:e,next:void 0};_s&&(_s.next=t),ms||(ms=t,Cs()),_s=t},Hs={},Ws=ge,Ys=function(e){var t,r;this.promise=new e((function(e,i){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=i})),this.resolve=Ws(t),this.reject=Ws(r)};Hs.f=function(e){return new Ys(e)};var Js=Nt,qs=F,Xs=Hs,zs=function(e,t){if(Js(e),qs(t)&&t.constructor===e)return t;var r=Xs.f(e);return(0,r.resolve)(t),r.promise},Zs=r,$s=function(){this.head=null,this.tail=null};$s.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}};var ea,ta,ra,ia,na=$s,oa="object"==typeof window,sa=Gi,aa=r,ca=K,da=d,ua=Ki,Aa=Ht.exports,ha=Wi,la=en,pa=on,ga=un,Ea=ge,fa=x,Ia=F,ma=ln,_a=Zt,Ca=function(e,t,r){var i,n,o,s,a,c,d,u=r&&r.that,A=!(!r||!r.AS_ENTRIES),h=!(!r||!r.IS_ITERATOR),l=!(!r||!r.INTERRUPTED),p=Yn(t,u),g=function(e){return i&&ro(i,"normal",e),new no(!0,e)},E=function(e){return A?(qn(e),l?p(e[0],e[1],g):p(e[0],e[1])):l?p(e,g):p(e)};if(h)i=e;else{if(!(n=to(e)))throw io(Xn(e)+" is not iterable");if(zn(n)){for(o=0,s=Zn(e);s>o;o++)if((a=E(e[o]))&&$n(oo,a))return a;return new no(!1)}i=eo(e,n)}for(c=i.next;!(d=Jn(c,i)).done;){try{a=E(d.value)}catch(e){ro(i,"throw",e)}if("object"==typeof a&&a&&$n(oo,a))return a}return new no(!1)},Sa=Ao,va=Uo,Ta=ys.set,Ra=Ks,ya=zs,wa=function(e,t){var r=Zs.console;r&&r.error&&(1==arguments.length?r.error(e):r.error(e,t))},ba=Hs,Oa=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},Na=na,Da=Rr,Pa=Bi,La=oa,ka=Wo,Ba=$,Ma=ze("species"),Ua="Promise",xa=Da.getterFor(Ua),Qa=Da.set,Fa=Da.getterFor(Ua),Va=ua&&ua.prototype,ja=ua,Ga=Va,Ka=aa.TypeError,Ha=aa.document,Wa=aa.process,Ya=ba.f,Ja=Ya,qa=!!(Ha&&Ha.createEvent&&aa.dispatchEvent),Xa=fa(aa.PromiseRejectionEvent),za="unhandledrejection",Za=!1,$a=Pa(Ua,(function(){var e=_a(ja),t=e!==String(ja);if(!t&&66===Ba)return!0;if(Ba>=51&&/native code/.test(e))return!1;var r=new ja((function(e){e(1)})),i=function(e){e((function(){}),(function(){}))};return(r.constructor={})[Ma]=i,!(Za=r.then((function(){}))instanceof i)||!t&&La&&!Xa})),ec=$a||!Sa((function(e){ja.all(e).catch((function(){}))})),tc=function(e){var t;return!(!Ia(e)||!fa(t=e.then))&&t},rc=function(e,t){var r,i,n,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,u=e.domain;try{a?(s||(2===t.rejection&&ac(t),t.rejection=1),!0===a?r=o:(u&&u.enter(),r=a(o),u&&(u.exit(),n=!0)),r===e.promise?d(Ka("Promise-chain cycle")):(i=tc(r))?da(i,r,c,d):c(r)):d(o)}catch(e){u&&!n&&u.exit(),d(e)}},ic=function(e,t){e.notified||(e.notified=!0,Ra((function(){for(var r,i=e.reactions;r=i.get();)rc(r,e);e.notified=!1,t&&!e.rejection&&oc(e)})))},nc=function(e,t,r){var i,n;qa?((i=Ha.createEvent("Event")).promise=t,i.reason=r,i.initEvent(e,!1,!0),aa.dispatchEvent(i)):i={promise:t,reason:r},!Xa&&(n=aa["on"+e])?n(i):e===za&&wa("Unhandled promise rejection",r)},oc=function(e){da(Ta,aa,(function(){var t,r=e.facade,i=e.value;if(sc(e)&&(t=Oa((function(){ka?Wa.emit("unhandledRejection",i,r):nc(za,r,i)})),e.rejection=ka||sc(e)?2:1,t.error))throw t.value}))},sc=function(e){return 1!==e.rejection&&!e.parent},ac=function(e){da(Ta,aa,(function(){var t=e.facade;ka?Wa.emit("rejectionHandled",t):nc("rejectionhandled",t,e.value)}))},cc=function(e,t,r){return function(i){e(t,i,r)}},dc=function(e,t,r){e.done||(e.done=!0,r&&(e=r),e.value=t,e.state=2,ic(e,!0))},uc=function(e,t,r){if(!e.done){e.done=!0,r&&(e=r);try{if(e.facade===t)throw Ka("Promise can't be resolved itself");var i=tc(t);i?Ra((function(){var r={done:!1};try{da(i,t,cc(uc,r,e),cc(dc,r,e))}catch(t){dc(r,t,e)}})):(e.value=t,e.state=1,ic(e,!1))}catch(t){dc({done:!1},t,e)}}};if($a&&(Ga=(ja=function(e){ma(this,Ga),Ea(e),da(ea,this);var t=xa(this);try{e(cc(uc,t),cc(dc,t))}catch(e){dc(t,e)}}).prototype,(ea=function(e){Qa(this,{type:Ua,done:!1,notified:!1,parent:!1,reactions:new Na,rejection:!1,state:0,value:void 0})}).prototype=ha(Ga,{then:function(e,t){var r=Fa(this),i=Ya(va(this,ja));return r.parent=!0,i.ok=!fa(e)||e,i.fail=fa(t)&&t,i.domain=ka?Wa.domain:void 0,0==r.state?r.reactions.add(i):Ra((function(){rc(i,r)})),i.promise},catch:function(e){return this.then(void 0,e)}}),ta=function(){var e=new ea,t=xa(e);this.promise=e,this.resolve=cc(uc,t),this.reject=cc(dc,t)},ba.f=Ya=function(e){return e===ja||e===ra?new ta(e):Ja(e)},fa(ua)&&Va!==Object.prototype)){ia=Va.then,Za||(Aa(Va,"then",(function(e,t){var r=this;return new ja((function(e,t){da(ia,r,e,t)})).then(e,t)}),{unsafe:!0}),Aa(Va,"catch",Ga.catch,{unsafe:!0}));try{delete Va.constructor}catch(e){}la&&la(Va,Ga)}sa({global:!0,wrap:!0,forced:$a},{Promise:ja}),pa(ja,Ua,!1),ga(Ua),ra=ca(Ua),sa({target:Ua,stat:!0,forced:$a},{reject:function(e){var t=Ya(this);return da(t.reject,void 0,e),t.promise}}),sa({target:Ua,stat:!0,forced:$a},{resolve:function(e){return ya(this,e)}}),sa({target:Ua,stat:!0,forced:ec},{all:function(e){var t=this,r=Ya(t),i=r.resolve,n=r.reject,o=Oa((function(){var r=Ea(t.resolve),o=[],s=0,a=1;Ca(e,(function(e){var c=s++,d=!1;a++,da(r,t,e).then((function(e){d||(d=!0,o[c]=e,--a||i(o))}),n)})),--a||i(o)}));return o.error&&n(o.value),r.promise},race:function(e){var t=this,r=Ya(t),i=r.reject,n=Oa((function(){var n=Ea(t.resolve);Ca(e,(function(e){da(n,t,e).then(r.resolve,i)}))}));return n.error&&i(n.value),r.promise}});var Ac=Gi,hc=K,lc=jo,pc=S,gc=n,Ec=r.Array,fc=hc("JSON","stringify"),Ic=pc(/./.exec),mc=pc("".charAt),_c=pc("".charCodeAt),Cc=pc("".replace),Sc=pc(1..toString),vc=/[\uD800-\uDFFF]/g,Tc=/^[\uD800-\uDBFF]$/,Rc=/^[\uDC00-\uDFFF]$/,yc=function(e,t,r){var i=mc(r,t-1),n=mc(r,t+1);return Ic(Tc,e)&&!Ic(Rc,n)||Ic(Rc,e)&&!Ic(Tc,i)?"\\u"+Sc(_c(e,0),16):e},wc=gc((function(){return'"\\udf06\\ud834"'!==fc("\udf06\ud834")||'"\\udead"'!==fc("\udead")}));fc&&Ac({target:"JSON",stat:!0,forced:wc},{stringify:function(e,t,r){for(var i=0,n=arguments.length,o=Ec(n);i<n;i++)o[i]=arguments[i];var s=lc(fc,null,o);return"string"==typeof s?Cc(s,vc,yc):s}});var bc=function(e){try{return!!e()}catch(e){return!0}},Oc=!bc((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")})),Nc=Oc,Dc=Function.prototype,Pc=Dc.bind,Lc=Dc.call,kc=Nc&&Pc.bind(Lc,Lc),Bc=Nc?function(e){return e&&kc(e)}:function(e){return e&&function(){return Lc.apply(e,arguments)}},Mc=Bc({}.isPrototypeOf),Uc=function(e){return e&&e.Math==Math&&e},xc=Uc("object"==typeof globalThis&&globalThis)||Uc("object"==typeof window&&window)||Uc("object"==typeof self&&self)||Uc("object"==typeof e&&e)||function(){return this}()||Function("return this")(),Qc=Oc,Fc=Function.prototype,Vc=Fc.apply,jc=Fc.call,Gc="object"==typeof Reflect&&Reflect.apply||(Qc?jc.bind(Vc):function(){return jc.apply(Vc,arguments)}),Kc=function(e){return"function"==typeof e},Hc={},Wc=!bc((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Yc=Oc,Jc=Function.prototype.call,qc=Yc?Jc.bind(Jc):function(){return Jc.apply(Jc,arguments)},Xc={},zc={}.propertyIsEnumerable,Zc=Object.getOwnPropertyDescriptor,$c=Zc&&!zc.call({1:2},1);Xc.f=$c?function(e){var t=Zc(this,e);return!!t&&t.enumerable}:zc;var ed,td,rd=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},id=Bc,nd=id({}.toString),od=id("".slice),sd=function(e){return od(nd(e),8,-1)},ad=Bc,cd=bc,dd=sd,ud=xc.Object,Ad=ad("".split),hd=cd((function(){return!ud("z").propertyIsEnumerable(0)}))?function(e){return"String"==dd(e)?Ad(e,""):ud(e)}:ud,ld=xc.TypeError,pd=function(e){if(null==e)throw ld("Can't call method on "+e);return e},gd=hd,Ed=pd,fd=function(e){return gd(Ed(e))},Id=Kc,md=function(e){return"object"==typeof e?null!==e:Id(e)},_d={},Cd=_d,Sd=xc,vd=Kc,Td=function(e){return vd(e)?e:void 0},Rd=function(e,t){return arguments.length<2?Td(Cd[e])||Td(Sd[e]):Cd[e]&&Cd[e][t]||Sd[e]&&Sd[e][t]},yd=Rd("navigator","userAgent")||"",wd=xc,bd=yd,Od=wd.process,Nd=wd.Deno,Dd=Od&&Od.versions||Nd&&Nd.version,Pd=Dd&&Dd.v8;Pd&&(td=(ed=Pd.split("."))[0]>0&&ed[0]<4?1:+(ed[0]+ed[1])),!td&&bd&&(!(ed=bd.match(/Edge\/(\d+)/))||ed[1]>=74)&&(ed=bd.match(/Chrome\/(\d+)/))&&(td=+ed[1]);var Ld=td,kd=Ld,Bd=bc,Md=!!Object.getOwnPropertySymbols&&!Bd((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&kd&&kd<41})),Ud=Md&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,xd=Rd,Qd=Kc,Fd=Mc,Vd=Ud,jd=xc.Object,Gd=Vd?function(e){return"symbol"==typeof e}:function(e){var t=xd("Symbol");return Qd(t)&&Fd(t.prototype,jd(e))},Kd=xc.String,Hd=function(e){try{return Kd(e)}catch(e){return"Object"}},Wd=Kc,Yd=Hd,Jd=xc.TypeError,qd=function(e){if(Wd(e))return e;throw Jd(Yd(e)+" is not a function")},Xd=qd,zd=function(e,t){var r=e[t];return null==r?void 0:Xd(r)},Zd=qc,$d=Kc,eu=md,tu=xc.TypeError,ru={exports:{}},iu=xc,nu=Object.defineProperty,ou=function(e,t){try{nu(iu,e,{value:t,configurable:!0,writable:!0})}catch(r){iu[e]=t}return t},su="__core-js_shared__",au=xc[su]||ou(su,{}),cu=au;(ru.exports=function(e,t){return cu[e]||(cu[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.20.3",mode:"pure",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.20.3/LICENSE",source:"https://github.com/zloirock/core-js"});var du=pd,uu=xc.Object,Au=function(e){return uu(du(e))},hu=Au,lu=Bc({}.hasOwnProperty),pu=Object.hasOwn||function(e,t){return lu(hu(e),t)},gu=Bc,Eu=0,fu=Math.random(),Iu=gu(1..toString),mu=function(e){return"Symbol("+(void 0===e?"":e)+")_"+Iu(++Eu+fu,36)},_u=xc,Cu=ru.exports,Su=pu,vu=mu,Tu=Md,Ru=Ud,yu=Cu("wks"),wu=_u.Symbol,bu=wu&&wu.for,Ou=Ru?wu:wu&&wu.withoutSetter||vu,Nu=function(e){if(!Su(yu,e)||!Tu&&"string"!=typeof yu[e]){var t="Symbol."+e;Tu&&Su(wu,e)?yu[e]=wu[e]:yu[e]=Ru&&bu?bu(t):Ou(t)}return yu[e]},Du=qc,Pu=md,Lu=Gd,ku=zd,Bu=function(e,t){var r,i;if("string"===t&&$d(r=e.toString)&&!eu(i=Zd(r,e)))return i;if($d(r=e.valueOf)&&!eu(i=Zd(r,e)))return i;if("string"!==t&&$d(r=e.toString)&&!eu(i=Zd(r,e)))return i;throw tu("Can't convert object to primitive value")},Mu=Nu,Uu=xc.TypeError,xu=Mu("toPrimitive"),Qu=function(e,t){if(!Pu(e)||Lu(e))return e;var r,i=ku(e,xu);if(i){if(void 0===t&&(t="default"),r=Du(i,e,t),!Pu(r)||Lu(r))return r;throw Uu("Can't convert object to primitive value")}return void 0===t&&(t="number"),Bu(e,t)},Fu=Gd,Vu=function(e){var t=Qu(e,"string");return Fu(t)?t:t+""},ju=md,Gu=xc.document,Ku=ju(Gu)&&ju(Gu.createElement),Hu=function(e){return Ku?Gu.createElement(e):{}},Wu=Hu,Yu=!Wc&&!bc((function(){return 7!=Object.defineProperty(Wu("div"),"a",{get:function(){return 7}}).a})),Ju=Wc,qu=qc,Xu=Xc,zu=rd,Zu=fd,$u=Vu,eA=pu,tA=Yu,rA=Object.getOwnPropertyDescriptor;Hc.f=Ju?rA:function(e,t){if(e=Zu(e),t=$u(t),tA)try{return rA(e,t)}catch(e){}if(eA(e,t))return zu(!qu(Xu.f,e,t),e[t])};var iA=bc,nA=Kc,oA=/#|\.prototype\./,sA=function(e,t){var r=cA[aA(e)];return r==uA||r!=dA&&(nA(t)?iA(t):!!t)},aA=sA.normalize=function(e){return String(e).replace(oA,".").toLowerCase()},cA=sA.data={},dA=sA.NATIVE="N",uA=sA.POLYFILL="P",AA=sA,hA=qd,lA=Oc,pA=Bc(Bc.bind),gA=function(e,t){return hA(e),void 0===t?e:lA?pA(e,t):function(){return e.apply(t,arguments)}},EA={},fA=Wc&&bc((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype})),IA=xc,mA=md,_A=IA.String,CA=IA.TypeError,SA=function(e){if(mA(e))return e;throw CA(_A(e)+" is not an object")},vA=Wc,TA=Yu,RA=fA,yA=SA,wA=Vu,bA=xc.TypeError,OA=Object.defineProperty,NA=Object.getOwnPropertyDescriptor,DA="enumerable",PA="configurable",LA="writable";EA.f=vA?RA?function(e,t,r){if(yA(e),t=wA(t),yA(r),"function"==typeof e&&"prototype"===t&&"value"in r&&LA in r&&!r.writable){var i=NA(e,t);i&&i.writable&&(e[t]=r.value,r={configurable:PA in r?r.configurable:i.configurable,enumerable:DA in r?r.enumerable:i.enumerable,writable:!1})}return OA(e,t,r)}:OA:function(e,t,r){if(yA(e),t=wA(t),yA(r),TA)try{return OA(e,t,r)}catch(e){}if("get"in r||"set"in r)throw bA("Accessors not supported");return"value"in r&&(e[t]=r.value),e};var kA=EA,BA=rd,MA=Wc?function(e,t,r){return kA.f(e,t,BA(1,r))}:function(e,t,r){return e[t]=r,e},UA=xc,xA=Gc,QA=Bc,FA=Kc,VA=Hc.f,jA=AA,GA=_d,KA=gA,HA=MA,WA=pu,YA=function(e){var t=function(r,i,n){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(r);case 2:return new e(r,i)}return new e(r,i,n)}return xA(e,this,arguments)};return t.prototype=e.prototype,t},JA=function(e,t){var r,i,n,o,s,a,c,d,u=e.target,A=e.global,h=e.stat,l=e.proto,p=A?UA:h?UA[u]:(UA[u]||{}).prototype,g=A?GA:GA[u]||HA(GA,u,{})[u],E=g.prototype;for(n in t)r=!jA(A?n:u+(h?".":"#")+n,e.forced)&&p&&WA(p,n),s=g[n],r&&(a=e.noTargetGet?(d=VA(p,n))&&d.value:p[n]),o=r&&a?a:t[n],r&&typeof s==typeof o||(c=e.bind&&r?KA(o,UA):e.wrap&&r?YA(o):l&&FA(o)?QA(o):o,(e.sham||o&&o.sham||s&&s.sham)&&HA(c,"sham",!0),HA(g,n,c),l&&(WA(GA,i=u+"Prototype")||HA(GA,i,{}),HA(GA[i],n,o),e.real&&E&&!E[n]&&HA(E,n,o)))},qA=Math.ceil,XA=Math.floor,zA=function(e){var t=+e;return t!=t||0===t?0:(t>0?XA:qA)(t)},ZA=zA,$A=Math.min,eh=function(e){return e>0?$A(ZA(e),9007199254740991):0},th=function(e){return eh(e.length)},rh=qd,ih=Au,nh=hd,oh=th,sh=xc.TypeError,ah=function(e){return function(t,r,i,n){rh(r);var o=ih(t),s=nh(o),a=oh(o),c=e?a-1:0,d=e?-1:1;if(i<2)for(;;){if(c in s){n=s[c],c+=d;break}if(c+=d,e?c<0:a<=c)throw sh("Reduce of empty array with no initial value")}for(;e?c>=0:a>c;c+=d)c in s&&(n=r(n,s[c],c,o));return n}},ch={left:ah(!1),right:ah(!0)},dh=bc,uh=function(e,t){var r=[][e];return!!r&&dh((function(){r.call(null,t||function(){throw 1},1)}))},Ah="process"==sd(xc.process),hh=ch.left,lh=Ld,ph=Ah;JA({target:"Array",proto:!0,forced:!uh("reduce")||!ph&&lh>79&&lh<83},{reduce:function(e){var t=arguments.length;return hh(this,e,t,t>1?arguments[1]:void 0)}});var gh=_d,Eh=function(e){return gh[e+"Prototype"]},fh=Eh("Array").reduce,Ih=Mc,mh=fh,_h=Array.prototype,Ch=function(e){var t=e.reduce;return e===_h||Ih(_h,e)&&t===_h.reduce?mh:t},Sh=Ch,vh=Dn,Th=r.String,Rh=function(e){if("Symbol"===vh(e))throw TypeError("Cannot convert a Symbol value to a string");return Th(e)},yh=Nt,wh=function(){var e=yh(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},bh=n,Oh=r.RegExp,Nh=bh((function(){var e=Oh("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),Dh=Nh||bh((function(){return!Oh("a","y").sticky})),Ph={BROKEN_CARET:Nh||bh((function(){var e=Oh("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:Dh,UNSUPPORTED_Y:Nh},Lh={},kh=Ai,Bh=hi,Mh=Object.keys||function(e){return kh(e,Bh)},Uh=o,xh=Rt,Qh=Tt,Fh=Nt,Vh=U,jh=Mh;Lh.f=Uh&&!xh?Object.defineProperties:function(e,t){Fh(e);for(var r,i=Vh(t),n=jh(t),o=n.length,s=0;o>s;)Qh.f(e,r=n[s++],i[r]);return e};var Gh,Kh=Nt,Hh=Lh,Wh=hi,Yh=ar,Jh=Go,qh=ht,Xh=sr("IE_PROTO"),zh=function(){},Zh=function(e){return"<script>"+e+"</"+"script>"},$h=function(e){e.write(Zh("")),e.close();var t=e.parentWindow.Object;return e=null,t},el=function(){try{Gh=new ActiveXObject("htmlfile")}catch(e){}var e,t;el="undefined"!=typeof document?document.domain&&Gh?$h(Gh):((t=qh("iframe")).style.display="none",Jh.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Zh("document.F=Object")),e.close(),e.F):$h(Gh);for(var r=Wh.length;r--;)delete el.prototype[Wh[r]];return el()};Yh[Xh]=!0;var tl=Object.create||function(e,t){var r;return null!==e?(zh.prototype=Kh(e),r=new zh,zh.prototype=null,r[Xh]=e):r=el(),void 0===t?r:Hh.f(r,t)},rl=n,il=r.RegExp,nl=rl((function(){var e=il(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),ol=n,sl=r.RegExp,al=ol((function(){var e=sl("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),cl=d,dl=S,ul=Rh,Al=wh,hl=Ph,ll=Se.exports,pl=tl,gl=Rr.get,El=nl,fl=al,Il=ll("native-string-replace",String.prototype.replace),ml=RegExp.prototype.exec,_l=ml,Cl=dl("".charAt),Sl=dl("".indexOf),vl=dl("".replace),Tl=dl("".slice),Rl=function(){var e=/a/,t=/b*/g;return cl(ml,e,"a"),cl(ml,t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),yl=hl.BROKEN_CARET,wl=void 0!==/()??/.exec("")[1];(Rl||wl||yl||El||fl)&&(_l=function(e){var t,r,i,n,o,s,a,c=this,d=gl(c),u=ul(e),A=d.raw;if(A)return A.lastIndex=c.lastIndex,t=cl(_l,A,u),c.lastIndex=A.lastIndex,t;var h=d.groups,l=yl&&c.sticky,p=cl(Al,c),g=c.source,E=0,f=u;if(l&&(p=vl(p,"y",""),-1===Sl(p,"g")&&(p+="g"),f=Tl(u,c.lastIndex),c.lastIndex>0&&(!c.multiline||c.multiline&&"\n"!==Cl(u,c.lastIndex-1))&&(g="(?: "+g+")",f=" "+f,E++),r=new RegExp("^(?:"+g+")",p)),wl&&(r=new RegExp("^"+g+"$(?!\\s)",p)),Rl&&(i=c.lastIndex),n=cl(ml,l?r:c,f),l?n?(n.input=Tl(n.input,E),n[0]=Tl(n[0],E),n.index=c.lastIndex,c.lastIndex+=n[0].length):c.lastIndex=0:Rl&&n&&(c.lastIndex=c.global?n.index+n[0].length:i),wl&&n&&n.length>1&&cl(Il,n[0],r,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0)})),n&&h)for(n.groups=s=pl(null),o=0;o<h.length;o++)s[(a=h[o])[0]]=n[a[1]];return n});var bl=_l;Gi({target:"RegExp",proto:!0,forced:/./.exec!==bl},{exec:bl});var Ol=tl,Nl=Tt,Dl=ze("unscopables"),Pl=Array.prototype;null==Pl[Dl]&&Nl.f(Pl,Dl,{configurable:!0,value:Ol(null)});var Ll,kl,Bl,Ml=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Ul=r,xl=Be,Ql=x,Fl=Pe,Vl=Ml,jl=sr("IE_PROTO"),Gl=Ul.Object,Kl=Gl.prototype,Hl=Vl?Gl.getPrototypeOf:function(e){var t=Fl(e);if(xl(t,jl))return t[jl];var r=t.constructor;return Ql(r)&&t instanceof r?r.prototype:t instanceof Gl?Kl:null},Wl=n,Yl=x,Jl=Hl,ql=Ht.exports,Xl=ze("iterator"),zl=!1;[].keys&&("next"in(Bl=[].keys())?(kl=Jl(Jl(Bl)))!==Object.prototype&&(Ll=kl):zl=!0),(null==Ll||Wl((function(){var e={};return Ll[Xl].call(e)!==e})))&&(Ll={}),Yl(Ll[Xl])||ql(Ll,Xl,(function(){return this}));var Zl={IteratorPrototype:Ll,BUGGY_SAFARI_ITERATORS:zl},$l=Zl.IteratorPrototype,ep=tl,tp=E,rp=on,ip=In,np=function(){return this},op=Gi,sp=d,ap=Dr,cp=x,dp=function(e,t,r,i){var n=t+" Iterator";return e.prototype=ep($l,{next:tp(+!i,r)}),rp(e,n,!1),ip[n]=np,e},up=Hl,Ap=en,hp=on,lp=Kt,pp=Ht.exports,gp=In,Ep=ap.PROPER,fp=ap.CONFIGURABLE,Ip=Zl.IteratorPrototype,mp=Zl.BUGGY_SAFARI_ITERATORS,_p=ze("iterator"),Cp="keys",Sp="values",vp="entries",Tp=function(){return this},Rp=U,yp=function(e){Pl[Dl][e]=!0},wp=In,bp=Rr,Op=Tt.f,Np=function(e,t,r,i,n,o,s){dp(r,t,i);var a,c,d,u=function(e){if(e===n&&g)return g;if(!mp&&e in l)return l[e];switch(e){case Cp:case Sp:case vp:return function(){return new r(this,e)}}return function(){return new r(this)}},A=t+" Iterator",h=!1,l=e.prototype,p=l[_p]||l["@@iterator"]||n&&l[n],g=!mp&&p||u(n),E="Array"==t&&l.entries||p;if(E&&(a=up(E.call(new e)))!==Object.prototype&&a.next&&(up(a)!==Ip&&(Ap?Ap(a,Ip):cp(a[_p])||pp(a,_p,Tp)),hp(a,A,!0)),Ep&&n==Sp&&p&&p.name!==Sp&&(fp?lp(l,"name",Sp):(h=!0,g=function(){return sp(p,this)})),n)if(c={values:u(Sp),keys:o?g:u(Cp),entries:u(vp)},s)for(d in c)(mp||h||!(d in l))&&pp(l,d,c[d]);else op({target:t,proto:!0,forced:mp||h},c);return l[_p]!==g&&pp(l,_p,g,{name:n}),gp[t]=g,c},Dp=o,Pp="Array Iterator",Lp=bp.set,kp=bp.getterFor(Pp),Bp=Np(Array,"Array",(function(e,t){Lp(this,{type:Pp,target:Rp(e),index:0,kind:t})}),(function(){var e=kp(this),t=e.target,r=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:i,done:!1}:"values"==r?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),Mp=wp.Arguments=wp.Array;if(yp("keys"),yp("values"),yp("entries"),Dp&&"values"!==Mp.name)try{Op(Mp,"name",{value:"values"})}catch(e){}var Up=ht("span").classList,xp=Up&&Up.constructor&&Up.constructor.prototype,Qp=xp===Object.prototype?void 0:xp,Fp=r,Vp={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},jp=Qp,Gp=Bp,Kp=Kt,Hp=ze,Wp=Hp("iterator"),Yp=Hp("toStringTag"),Jp=Gp.values,qp=function(e,t){if(e){if(e[Wp]!==Jp)try{Kp(e,Wp,Jp)}catch(t){e[Wp]=Jp}if(e[Yp]||Kp(e,Yp,t),Vp[t])for(var r in Gp)if(e[r]!==Gp[r])try{Kp(e,r,Gp[r])}catch(t){e[r]=Gp[r]}}};for(var Xp in Vp)qp(Fp[Xp]&&Fp[Xp].prototype,Xp);qp(jp,"DOMTokenList");var zp=x,Zp=F,$p=en,eg=function(e,t,r){var i,n;return $p&&zp(i=t.constructor)&&i!==r&&Zp(n=i.prototype)&&n!==r.prototype&&$p(e,n),e},tg=Rh,rg=function(e,t){return void 0===e?arguments.length<2?"":t:tg(e)},ig=F,ng=Kt,og=S("".replace),sg=String(Error("zxcasd").stack),ag=/\n\s*at [^:]*:[^\n]*/,cg=ag.test(sg),dg=function(e,t){if(cg&&"string"==typeof e)for(;t--;)e=og(e,ag,"");return e},ug=E,Ag=!n((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",ug(1,7)),7!==e.stack)})),hg=K,lg=Be,pg=Kt,gg=H,Eg=en,fg=yi,Ig=eg,mg=rg,_g=function(e,t){ig(t)&&"cause"in t&&ng(e,"cause",t.cause)},Cg=dg,Sg=Ag,vg=Gi,Tg=jo,Rg=function(e,t,r,i){var n=i?2:1,o=e.split("."),s=o[o.length-1],a=hg.apply(null,o);if(a){var c=a.prototype;if(lg(c,"cause")&&delete c.cause,!r)return a;var d=hg("Error"),u=t((function(e,t){var r=mg(i?t:e,void 0),o=i?new a(e):new a;return void 0!==r&&pg(o,"message",r),Sg&&pg(o,"stack",Cg(o.stack,2)),this&&gg(c,this)&&Ig(o,this,u),arguments.length>n&&_g(o,arguments[n]),o}));u.prototype=c,"Error"!==s&&(Eg?Eg(u,d):fg(u,d,{name:!0})),fg(u,a);try{c.name!==s&&pg(c,"name",s),c.constructor=u}catch(e){}return u}},yg="WebAssembly",wg=r.WebAssembly,bg=7!==Error("e",{cause:7}).cause,Og=function(e,t){var r={};r[e]=Rg(e,t,bg),vg({global:!0,forced:bg},r)},Ng=function(e,t){if(wg&&wg[e]){var r={};r[e]=Rg("WebAssembly."+e,t,bg),vg({target:yg,stat:!0,forced:bg},r)}};Og("Error",(function(e){return function(t){return Tg(e,this,arguments)}})),Og("EvalError",(function(e){return function(t){return Tg(e,this,arguments)}})),Og("RangeError",(function(e){return function(t){return Tg(e,this,arguments)}})),Og("ReferenceError",(function(e){return function(t){return Tg(e,this,arguments)}})),Og("SyntaxError",(function(e){return function(t){return Tg(e,this,arguments)}})),Og("TypeError",(function(e){return function(t){return Tg(e,this,arguments)}})),Og("URIError",(function(e){return function(t){return Tg(e,this,arguments)}})),Ng("CompileError",(function(e){return function(t){return Tg(e,this,arguments)}})),Ng("LinkError",(function(e){return function(t){return Tg(e,this,arguments)}})),Ng("RuntimeError",(function(e){return function(t){return Tg(e,this,arguments)}}));let Dg=!0,Pg=!0;function Lg(e,t,r){const i=e.match(t);return i&&i.length>=r&&parseInt(i[r],10)}function kg(e,t,r){if(!e.RTCPeerConnection)return;const i=e.RTCPeerConnection.prototype,n=i.addEventListener;i.addEventListener=function(e,i){if(e!==t)return n.apply(this,arguments);const o=e=>{const t=r(e);t&&(i.handleEvent?i.handleEvent(t):i(t))};return this._eventMap=this._eventMap||{},this._eventMap[t]||(this._eventMap[t]=new Map),this._eventMap[t].set(i,o),n.apply(this,[e,o])};const o=i.removeEventListener;i.removeEventListener=function(e,r){if(e!==t||!this._eventMap||!this._eventMap[t])return o.apply(this,arguments);if(!this._eventMap[t].has(r))return o.apply(this,arguments);const i=this._eventMap[t].get(r);return this._eventMap[t].delete(r),0===this._eventMap[t].size&&delete this._eventMap[t],0===Object.keys(this._eventMap).length&&delete this._eventMap,o.apply(this,[e,i])},Object.defineProperty(i,"on"+t,{get(){return this["_on"+t]},set(e){this["_on"+t]&&(this.removeEventListener(t,this["_on"+t]),delete this["_on"+t]),e&&this.addEventListener(t,this["_on"+t]=e)},enumerable:!0,configurable:!0})}function Bg(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(Dg=e,e?"adapter.js logging disabled":"adapter.js logging enabled")}function Mg(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(Pg=!e,"adapter.js deprecation warnings "+(e?"disabled":"enabled"))}function Ug(){if("object"==typeof window){if(Dg)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}}function xg(e,t){Pg&&console.warn(e+" is deprecated, please use "+t+" instead.")}function Qg(e){const t={browser:null,version:null};if(void 0===e||!e.navigator)return t.browser="Not a browser.",t;const{navigator:r}=e;if(r.mozGetUserMedia)t.browser="firefox",t.version=Lg(r.userAgent,/Firefox\/(\d+)\./,1);else if(r.webkitGetUserMedia||!1===e.isSecureContext&&e.webkitRTCPeerConnection&&!e.RTCIceGatherer)t.browser="chrome",t.version=Lg(r.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else if(r.mediaDevices&&r.userAgent.match(/Edge\/(\d+).(\d+)$/))t.browser="edge",t.version=Lg(r.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!e.RTCPeerConnection||!r.userAgent.match(/AppleWebKit\/(\d+)\./))return t.browser="Not a supported browser.",t;t.browser="safari",t.version=Lg(r.userAgent,/AppleWebKit\/(\d+)\./,1),t.supportsUnifiedPlan=e.RTCRtpTransceiver&&"currentDirection"in e.RTCRtpTransceiver.prototype}return t}function Fg(e){return"[object Object]"===Object.prototype.toString.call(e)}function Vg(e){var t;return Fg(e)?Sh(t=Object.keys(e)).call(t,(function(t,r){const i=Fg(e[r]),n=i?Vg(e[r]):e[r],o=i&&!Object.keys(n).length;return void 0===n||o?t:Object.assign(t,{[r]:n})}),{}):e}function jg(e,t,r){const i=r?"outbound-rtp":"inbound-rtp",n=new Map;if(null===t)return n;const o=[];return e.forEach(e=>{"track"===e.type&&e.trackIdentifier===t.id&&o.push(e)}),o.forEach(t=>{e.forEach(r=>{r.type===i&&r.trackId===t.id&&function e(t,r,i){r&&!i.has(r.id)&&(i.set(r.id,r),Object.keys(r).forEach(n=>{n.endsWith("Id")?e(t,t.get(r[n]),i):n.endsWith("Ids")&&r[n].forEach(r=>{e(t,t.get(r),i)})}))}(e,r,n)})}),n}var Gg=ru.exports,Kg=mu,Hg=Gg("keys"),Wg=function(e){return Hg[e]||(Hg[e]=Kg(e))},Yg=!bc((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Jg=xc,qg=pu,Xg=Kc,zg=Au,Zg=Yg,$g=Wg("IE_PROTO"),eE=Jg.Object,tE=eE.prototype,rE=Zg?eE.getPrototypeOf:function(e){var t=zg(e);if(qg(t,$g))return t[$g];var r=t.constructor;return Xg(r)&&t instanceof r?r.prototype:t instanceof eE?tE:null},iE=xc,nE=Kc,oE=iE.String,sE=iE.TypeError,aE=Bc,cE=SA,dE=function(e){if("object"==typeof e||nE(e))return e;throw sE("Can't set "+oE(e)+" as a prototype")},uE=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=aE(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),t=r instanceof Array}catch(e){}return function(r,i){return cE(r),dE(i),t?e(r,i):r.__proto__=i,r}}():void 0),AE={},hE=zA,lE=Math.max,pE=Math.min,gE=function(e,t){var r=hE(e);return r<0?lE(r+t,0):pE(r,t)},EE=fd,fE=gE,IE=th,mE=function(e){return function(t,r,i){var n,o=EE(t),s=IE(o),a=fE(i,s);if(e&&r!=r){for(;s>a;)if((n=o[a++])!=n)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===r)return e||a||0;return!e&&-1}},_E={includes:mE(!0),indexOf:mE(!1)},CE={},SE=pu,vE=fd,TE=_E.indexOf,RE=CE,yE=Bc([].push),wE=function(e,t){var r,i=vE(e),n=0,o=[];for(r in i)!SE(RE,r)&&SE(i,r)&&yE(o,r);for(;t.length>n;)SE(i,r=t[n++])&&(~TE(o,r)||yE(o,r));return o},bE=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],OE=wE,NE=bE.concat("length","prototype");AE.f=Object.getOwnPropertyNames||function(e){return OE(e,NE)};var DE={};DE.f=Object.getOwnPropertySymbols;var PE=Rd,LE=AE,kE=DE,BE=SA,ME=Bc([].concat),UE=PE("Reflect","ownKeys")||function(e){var t=LE.f(BE(e)),r=kE.f;return r?ME(t,r(e)):t},xE=pu,QE=UE,FE=Hc,VE=EA,jE={},GE=wE,KE=bE,HE=Object.keys||function(e){return GE(e,KE)},WE=Wc,YE=fA,JE=EA,qE=SA,XE=fd,zE=HE;jE.f=WE&&!YE?Object.defineProperties:function(e,t){qE(e);for(var r,i=XE(t),n=zE(t),o=n.length,s=0;o>s;)JE.f(e,r=n[s++],i[r]);return e};var ZE,$E=Rd("document","documentElement"),ef=SA,tf=jE,rf=bE,nf=CE,of=$E,sf=Hu,af=Wg("IE_PROTO"),cf=function(){},df=function(e){return"<script>"+e+"</"+"script>"},uf=function(e){e.write(df("")),e.close();var t=e.parentWindow.Object;return e=null,t},Af=function(){try{ZE=new ActiveXObject("htmlfile")}catch(e){}var e,t;Af="undefined"!=typeof document?document.domain&&ZE?uf(ZE):((t=sf("iframe")).style.display="none",of.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(df("document.F=Object")),e.close(),e.F):uf(ZE);for(var r=rf.length;r--;)delete Af.prototype[rf[r]];return Af()};nf[af]=!0;var hf=Object.create||function(e,t){var r;return null!==e?(cf.prototype=ef(e),r=new cf,cf.prototype=null,r[af]=e):r=Af(),void 0===t?r:tf.f(r,t)},lf=Bc("".replace),pf=String(Error("zxcasd").stack),gf=/\n\s*at [^:]*:[^\n]*/,Ef=gf.test(pf),ff=md,If=MA,mf={},_f=mf,Cf=Nu("iterator"),Sf=Array.prototype,vf=function(e){return void 0!==e&&(_f.Array===e||Sf[Cf]===e)},Tf={};Tf[Nu("toStringTag")]="z";var Rf="[object z]"===String(Tf),yf=xc,wf=Rf,bf=Kc,Of=sd,Nf=Nu("toStringTag"),Df=yf.Object,Pf="Arguments"==Of(function(){return arguments}()),Lf=wf?Of:function(e){var t,r,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Df(e),Nf))?r:Pf?Of(t):"Object"==(i=Of(t))&&bf(t.callee)?"Arguments":i},kf=Lf,Bf=zd,Mf=mf,Uf=Nu("iterator"),xf=function(e){if(null!=e)return Bf(e,Uf)||Bf(e,"@@iterator")||Mf[kf(e)]},Qf=qc,Ff=qd,Vf=SA,jf=Hd,Gf=xf,Kf=xc.TypeError,Hf=function(e,t){var r=arguments.length<2?Gf(e):t;if(Ff(r))return Vf(Qf(r,e));throw Kf(jf(e)+" is not iterable")},Wf=qc,Yf=SA,Jf=zd,qf=function(e,t,r){var i,n;Yf(e);try{if(!(i=Jf(e,"return"))){if("throw"===t)throw r;return r}i=Wf(i,e)}catch(e){n=!0,i=e}if("throw"===t)throw r;if(n)throw i;return Yf(i),r},Xf=gA,zf=qc,Zf=SA,$f=Hd,eI=vf,tI=th,rI=Mc,iI=Hf,nI=xf,oI=qf,sI=xc.TypeError,aI=function(e,t){this.stopped=e,this.result=t},cI=aI.prototype,dI=function(e,t,r){var i,n,o,s,a,c,d,u=r&&r.that,A=!(!r||!r.AS_ENTRIES),h=!(!r||!r.IS_ITERATOR),l=!(!r||!r.INTERRUPTED),p=Xf(t,u),g=function(e){return i&&oI(i,"normal",e),new aI(!0,e)},E=function(e){return A?(Zf(e),l?p(e[0],e[1],g):p(e[0],e[1])):l?p(e,g):p(e)};if(h)i=e;else{if(!(n=nI(e)))throw sI($f(e)+" is not iterable");if(eI(n)){for(o=0,s=tI(e);s>o;o++)if((a=E(e[o]))&&rI(cI,a))return a;return new aI(!1)}i=iI(e,n)}for(c=i.next;!(d=zf(c,i)).done;){try{a=E(d.value)}catch(e){oI(i,"throw",e)}if("object"==typeof a&&a&&rI(cI,a))return a}return new aI(!1)},uI=Lf,AI=xc.String,hI=function(e){if("Symbol"===uI(e))throw TypeError("Cannot convert a Symbol value to a string");return AI(e)},lI=hI,pI=rd,gI=!bc((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",pI(1,7)),7!==e.stack)})),EI=JA,fI=xc,II=Mc,mI=rE,_I=uE,CI=function(e,t,r){for(var i=QE(t),n=VE.f,o=FE.f,s=0;s<i.length;s++){var a=i[s];xE(e,a)||r&&xE(r,a)||n(e,a,o(t,a))}},SI=hf,vI=MA,TI=rd,RI=function(e,t){if(Ef&&"string"==typeof e)for(;t--;)e=lf(e,gf,"");return e},yI=function(e,t){ff(t)&&"cause"in t&&If(e,"cause",t.cause)},wI=dI,bI=function(e,t){return void 0===e?arguments.length<2?"":t:lI(e)},OI=gI,NI=Nu("toStringTag"),DI=fI.Error,PI=[].push,LI=function(e,t){var r,i=arguments.length>2?arguments[2]:void 0,n=II(kI,this);_I?r=_I(new DI,n?mI(this):kI):(r=n?this:SI(kI),vI(r,NI,"Error")),void 0!==t&&vI(r,"message",bI(t)),OI&&vI(r,"stack",RI(r.stack,1)),yI(r,i);var o=[];return wI(e,PI,{that:o}),vI(r,"errors",o),r};_I?_I(LI,DI):CI(LI,DI,{name:!0});var kI=LI.prototype=SI(DI.prototype,{constructor:TI(1,LI),message:TI(1,""),name:TI(1,"AggregateError")});EI({global:!0},{AggregateError:LI});var BI=Kc,MI=au,UI=Bc(Function.toString);BI(MI.inspectSource)||(MI.inspectSource=function(e){return UI(e)});var xI,QI,FI,VI=MI.inspectSource,jI=Kc,GI=VI,KI=xc.WeakMap,HI=jI(KI)&&/native code/.test(GI(KI)),WI=xc,YI=Bc,JI=md,qI=MA,XI=pu,zI=au,ZI=Wg,$I=CE,em="Object already initialized",tm=WI.TypeError,rm=WI.WeakMap;if(HI||zI.state){var im=zI.state||(zI.state=new rm),nm=YI(im.get),om=YI(im.has),sm=YI(im.set);xI=function(e,t){if(om(im,e))throw new tm(em);return t.facade=e,sm(im,e,t),t},QI=function(e){return nm(im,e)||{}},FI=function(e){return om(im,e)}}else{var am=ZI("state");$I[am]=!0,xI=function(e,t){if(XI(e,am))throw new tm(em);return t.facade=e,qI(e,am,t),t},QI=function(e){return XI(e,am)?e[am]:{}},FI=function(e){return XI(e,am)}}var cm,dm,um,Am={set:xI,get:QI,has:FI,enforce:function(e){return FI(e)?QI(e):xI(e,{})},getterFor:function(e){return function(t){var r;if(!JI(t)||(r=QI(t)).type!==e)throw tm("Incompatible receiver, "+e+" required");return r}}},hm=Wc,lm=pu,pm=Function.prototype,gm=hm&&Object.getOwnPropertyDescriptor,Em=lm(pm,"name"),fm={EXISTS:Em,PROPER:Em&&"something"===function(){}.name,CONFIGURABLE:Em&&(!hm||hm&&gm(pm,"name").configurable)},Im=MA,mm=function(e,t,r,i){i&&i.enumerable?e[t]=r:Im(e,t,r)},_m=bc,Cm=Kc,Sm=hf,vm=rE,Tm=mm,Rm=Nu("iterator"),ym=!1;[].keys&&("next"in(um=[].keys())?(dm=vm(vm(um)))!==Object.prototype&&(cm=dm):ym=!0);var wm=null==cm||_m((function(){var e={};return cm[Rm].call(e)!==e}));Cm((cm=wm?{}:Sm(cm))[Rm])||Tm(cm,Rm,(function(){return this}));var bm={IteratorPrototype:cm,BUGGY_SAFARI_ITERATORS:ym},Om=Lf,Nm=Rf?{}.toString:function(){return"[object "+Om(this)+"]"},Dm=Rf,Pm=EA.f,Lm=MA,km=pu,Bm=Nm,Mm=Nu("toStringTag"),Um=function(e,t,r,i){if(e){var n=r?e:e.prototype;km(n,Mm)||Pm(n,Mm,{configurable:!0,value:t}),i&&!Dm&&Lm(n,"toString",Bm)}},xm=bm.IteratorPrototype,Qm=hf,Fm=rd,Vm=Um,jm=mf,Gm=function(){return this},Km=function(e,t,r,i){var n=t+" Iterator";return e.prototype=Qm(xm,{next:Fm(+!i,r)}),Vm(e,n,!1,!0),jm[n]=Gm,e},Hm=JA,Wm=qc,Ym=Km,Jm=rE,qm=Um,Xm=mm,zm=mf,Zm=fm.PROPER,$m=bm.BUGGY_SAFARI_ITERATORS,e_=Nu("iterator"),t_="keys",r_="values",i_="entries",n_=function(){return this},o_=function(e,t,r,i,n,o,s){Ym(r,t,i);var a,c,d,u=function(e){if(e===n&&g)return g;if(!$m&&e in l)return l[e];switch(e){case t_:case r_:case i_:return function(){return new r(this,e)}}return function(){return new r(this)}},A=t+" Iterator",h=!1,l=e.prototype,p=l[e_]||l["@@iterator"]||n&&l[n],g=!$m&&p||u(n),E="Array"==t&&l.entries||p;if(E&&(a=Jm(E.call(new e)))!==Object.prototype&&a.next&&(qm(a,A,!0,!0),zm[A]=n_),Zm&&n==r_&&p&&p.name!==r_&&(h=!0,g=function(){return Wm(p,this)}),n)if(c={values:u(r_),keys:o?g:u(t_),entries:u(i_)},s)for(d in c)($m||h||!(d in l))&&Xm(l,d,c[d]);else Hm({target:t,proto:!0,forced:$m||h},c);return s&&l[e_]!==g&&Xm(l,e_,g,{name:n}),zm[t]=g,c},s_=fd,a_=mf,c_=Am;EA.f;var d_=o_,u_="Array Iterator",A_=c_.set,h_=c_.getterFor(u_);d_(Array,"Array",(function(e,t){A_(this,{type:u_,target:s_(e),index:0,kind:t})}),(function(){var e=h_(this),t=e.target,r=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:i,done:!1}:"values"==r?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),a_.Arguments=a_.Array;var l_=xc.Promise,p_=mm,g_=function(e,t,r){for(var i in t)r&&r.unsafe&&e[i]?e[i]=t[i]:p_(e,i,t[i],r);return e},E_=Rd,f_=EA,I_=Wc,m_=Nu("species"),__=Mc,C_=xc.TypeError,S_=function(e,t){if(__(t,e))return e;throw C_("Incorrect invocation")},v_=Nu("iterator"),T_=!1;try{var R_=0,y_={next:function(){return{done:!!R_++}},return:function(){T_=!0}};y_[v_]=function(){return this},Array.from(y_,(function(){throw 2}))}catch(e){}var w_=Bc,b_=bc,O_=Kc,N_=Lf,D_=VI,P_=function(){},L_=[],k_=Rd("Reflect","construct"),B_=/^\s*(?:class|function)\b/,M_=w_(B_.exec),U_=!B_.exec(P_),x_=function(e){if(!O_(e))return!1;try{return k_(P_,L_,e),!0}catch(e){return!1}},Q_=function(e){if(!O_(e))return!1;switch(N_(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return U_||!!M_(B_,D_(e))}catch(e){return!0}};Q_.sham=!0;var F_,V_,j_,G_,K_=!k_||b_((function(){var e;return x_(x_.call)||!x_(Object)||!x_((function(){e=!0}))||e}))?Q_:x_,H_=K_,W_=Hd,Y_=xc.TypeError,J_=SA,q_=function(e){if(H_(e))return e;throw Y_(W_(e)+" is not a constructor")},X_=Nu("species"),z_=function(e,t){var r,i=J_(e).constructor;return void 0===i||null==(r=J_(i)[X_])?t:q_(r)},Z_=Bc([].slice),$_=/(?:ipad|iphone|ipod).*applewebkit/i.test(yd),eC=xc,tC=Gc,rC=gA,iC=Kc,nC=pu,oC=bc,sC=$E,aC=Z_,cC=Hu,dC=$_,uC=Ah,AC=eC.setImmediate,hC=eC.clearImmediate,lC=eC.process,pC=eC.Dispatch,gC=eC.Function,EC=eC.MessageChannel,fC=eC.String,IC=0,mC={},_C="onreadystatechange";try{F_=eC.location}catch(e){}var CC=function(e){if(nC(mC,e)){var t=mC[e];delete mC[e],t()}},SC=function(e){return function(){CC(e)}},vC=function(e){CC(e.data)},TC=function(e){eC.postMessage(fC(e),F_.protocol+"//"+F_.host)};AC&&hC||(AC=function(e){var t=aC(arguments,1);return mC[++IC]=function(){tC(iC(e)?e:gC(e),void 0,t)},V_(IC),IC},hC=function(e){delete mC[e]},uC?V_=function(e){lC.nextTick(SC(e))}:pC&&pC.now?V_=function(e){pC.now(SC(e))}:EC&&!dC?(G_=(j_=new EC).port2,j_.port1.onmessage=vC,V_=rC(G_.postMessage,G_)):eC.addEventListener&&iC(eC.postMessage)&&!eC.importScripts&&F_&&"file:"!==F_.protocol&&!oC(TC)?(V_=TC,eC.addEventListener("message",vC,!1)):V_=_C in cC("script")?function(e){sC.appendChild(cC("script")).onreadystatechange=function(){sC.removeChild(this),CC(e)}}:function(e){setTimeout(SC(e),0)});var RC,yC,wC,bC,OC,NC,DC,PC,LC={set:AC,clear:hC},kC=xc,BC=/ipad|iphone|ipod/i.test(yd)&&void 0!==kC.Pebble,MC=/web0s(?!.*chrome)/i.test(yd),UC=xc,xC=gA,QC=Hc.f,FC=LC.set,VC=$_,jC=BC,GC=MC,KC=Ah,HC=UC.MutationObserver||UC.WebKitMutationObserver,WC=UC.document,YC=UC.process,JC=UC.Promise,qC=QC(UC,"queueMicrotask"),XC=qC&&qC.value;XC||(RC=function(){var e,t;for(KC&&(e=YC.domain)&&e.exit();yC;){t=yC.fn,yC=yC.next;try{t()}catch(e){throw yC?bC():wC=void 0,e}}wC=void 0,e&&e.enter()},VC||KC||GC||!HC||!WC?!jC&&JC&&JC.resolve?((DC=JC.resolve(void 0)).constructor=JC,PC=xC(DC.then,DC),bC=function(){PC(RC)}):KC?bC=function(){YC.nextTick(RC)}:(FC=xC(FC,UC),bC=function(){FC(RC)}):(OC=!0,NC=WC.createTextNode(""),new HC(RC).observe(NC,{characterData:!0}),bC=function(){NC.data=OC=!OC}));var zC=XC||function(e){var t={fn:e,next:void 0};wC&&(wC.next=t),yC||(yC=t,bC()),wC=t},ZC={},$C=qd,eS=function(e){var t,r;this.promise=new e((function(e,i){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=i})),this.resolve=$C(t),this.reject=$C(r)};ZC.f=function(e){return new eS(e)};var tS=SA,rS=md,iS=ZC,nS=function(e,t){if(tS(e),rS(t)&&t.constructor===e)return t;var r=iS.f(e);return(0,r.resolve)(t),r.promise},oS=xc,sS=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},aS=function(){this.head=null,this.tail=null};aS.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}};var cS,dS,uS,AS="object"==typeof window,hS=JA,lS=xc,pS=Rd,gS=qc,ES=l_,fS=g_,IS=Um,mS=function(e){var t=E_(e),r=f_.f;I_&&t&&!t[m_]&&r(t,m_,{configurable:!0,get:function(){return this}})},_S=qd,CS=Kc,SS=md,vS=S_,TS=VI,RS=dI,yS=function(e,t){if(!t&&!T_)return!1;var r=!1;try{var i={};i[v_]=function(){return{next:function(){return{done:r=!0}}}},e(i)}catch(e){}return r},wS=z_,bS=LC.set,OS=zC,NS=nS,DS=function(e,t){var r=oS.console;r&&r.error&&(1==arguments.length?r.error(e):r.error(e,t))},PS=ZC,LS=sS,kS=aS,BS=Am,MS=AA,US=AS,xS=Ah,QS=Ld,FS=Nu("species"),VS="Promise",jS=BS.getterFor(VS),GS=BS.set,KS=BS.getterFor(VS),HS=ES&&ES.prototype,WS=ES,YS=HS,JS=lS.TypeError,qS=lS.document,XS=lS.process,zS=PS.f,ZS=zS,$S=!!(qS&&qS.createEvent&&lS.dispatchEvent),ev=CS(lS.PromiseRejectionEvent),tv="unhandledrejection",rv=MS(VS,(function(){var e=TS(WS),t=e!==String(WS);if(!t&&66===QS)return!0;if(!YS.finally)return!0;if(QS>=51&&/native code/.test(e))return!1;var r=new WS((function(e){e(1)})),i=function(e){e((function(){}),(function(){}))};return(r.constructor={})[FS]=i,!(r.then((function(){}))instanceof i)||!t&&US&&!ev})),iv=rv||!yS((function(e){WS.all(e).catch((function(){}))})),nv=function(e){var t;return!(!SS(e)||!CS(t=e.then))&&t},ov=function(e,t){var r,i,n,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,u=e.domain;try{a?(s||(2===t.rejection&&uv(t),t.rejection=1),!0===a?r=o:(u&&u.enter(),r=a(o),u&&(u.exit(),n=!0)),r===e.promise?d(JS("Promise-chain cycle")):(i=nv(r))?gS(i,r,c,d):c(r)):d(o)}catch(e){u&&!n&&u.exit(),d(e)}},sv=function(e,t){e.notified||(e.notified=!0,OS((function(){for(var r,i=e.reactions;r=i.get();)ov(r,e);e.notified=!1,t&&!e.rejection&&cv(e)})))},av=function(e,t,r){var i,n;$S?((i=qS.createEvent("Event")).promise=t,i.reason=r,i.initEvent(e,!1,!0),lS.dispatchEvent(i)):i={promise:t,reason:r},!ev&&(n=lS["on"+e])?n(i):e===tv&&DS("Unhandled promise rejection",r)},cv=function(e){gS(bS,lS,(function(){var t,r=e.facade,i=e.value;if(dv(e)&&(t=LS((function(){xS?XS.emit("unhandledRejection",i,r):av(tv,r,i)})),e.rejection=xS||dv(e)?2:1,t.error))throw t.value}))},dv=function(e){return 1!==e.rejection&&!e.parent},uv=function(e){gS(bS,lS,(function(){var t=e.facade;xS?XS.emit("rejectionHandled",t):av("rejectionhandled",t,e.value)}))},Av=function(e,t,r){return function(i){e(t,i,r)}},hv=function(e,t,r){e.done||(e.done=!0,r&&(e=r),e.value=t,e.state=2,sv(e,!0))},lv=function(e,t,r){if(!e.done){e.done=!0,r&&(e=r);try{if(e.facade===t)throw JS("Promise can't be resolved itself");var i=nv(t);i?OS((function(){var r={done:!1};try{gS(i,t,Av(lv,r,e),Av(hv,r,e))}catch(t){hv(r,t,e)}})):(e.value=t,e.state=1,sv(e,!1))}catch(t){hv({done:!1},t,e)}}};rv&&(YS=(WS=function(e){vS(this,YS),_S(e),gS(cS,this);var t=jS(this);try{e(Av(lv,t),Av(hv,t))}catch(e){hv(t,e)}}).prototype,(cS=function(e){GS(this,{type:VS,done:!1,notified:!1,parent:!1,reactions:new kS,rejection:!1,state:0,value:void 0})}).prototype=fS(YS,{then:function(e,t){var r=KS(this),i=zS(wS(this,WS));return r.parent=!0,i.ok=!CS(e)||e,i.fail=CS(t)&&t,i.domain=xS?XS.domain:void 0,0==r.state?r.reactions.add(i):OS((function(){ov(i,r)})),i.promise},catch:function(e){return this.then(void 0,e)}}),dS=function(){var e=new cS,t=jS(e);this.promise=e,this.resolve=Av(lv,t),this.reject=Av(hv,t)},PS.f=zS=function(e){return e===WS||e===uS?new dS(e):ZS(e)}),hS({global:!0,wrap:!0,forced:rv},{Promise:WS}),IS(WS,VS,!1,!0),mS(VS),uS=pS(VS),hS({target:VS,stat:!0,forced:rv},{reject:function(e){var t=zS(this);return gS(t.reject,void 0,e),t.promise}}),hS({target:VS,stat:!0,forced:true},{resolve:function(e){return NS(this===uS?WS:this,e)}}),hS({target:VS,stat:!0,forced:iv},{all:function(e){var t=this,r=zS(t),i=r.resolve,n=r.reject,o=LS((function(){var r=_S(t.resolve),o=[],s=0,a=1;RS(e,(function(e){var c=s++,d=!1;a++,gS(r,t,e).then((function(e){d||(d=!0,o[c]=e,--a||i(o))}),n)})),--a||i(o)}));return o.error&&n(o.value),r.promise},race:function(e){var t=this,r=zS(t),i=r.reject,n=LS((function(){var n=_S(t.resolve);RS(e,(function(e){gS(n,t,e).then(r.resolve,i)}))}));return n.error&&i(n.value),r.promise}});var pv=qc,gv=qd,Ev=ZC,fv=sS,Iv=dI;JA({target:"Promise",stat:!0},{allSettled:function(e){var t=this,r=Ev.f(t),i=r.resolve,n=r.reject,o=fv((function(){var r=gv(t.resolve),n=[],o=0,s=1;Iv(e,(function(e){var a=o++,c=!1;s++,pv(r,t,e).then((function(e){c||(c=!0,n[a]={status:"fulfilled",value:e},--s||i(n))}),(function(e){c||(c=!0,n[a]={status:"rejected",reason:e},--s||i(n))}))})),--s||i(n)}));return o.error&&n(o.value),r.promise}});var mv=qd,_v=Rd,Cv=qc,Sv=ZC,vv=sS,Tv=dI,Rv="No one promise resolved";JA({target:"Promise",stat:!0},{any:function(e){var t=this,r=_v("AggregateError"),i=Sv.f(t),n=i.resolve,o=i.reject,s=vv((function(){var i=mv(t.resolve),s=[],a=0,c=1,d=!1;Tv(e,(function(e){var u=a++,A=!1;c++,Cv(i,t,e).then((function(e){A||d||(d=!0,n(e))}),(function(e){A||d||(A=!0,s[u]=e,--c||o(new r(s,Rv)))}))})),--c||o(new r(s,Rv))}));return s.error&&o(s.value),i.promise}});var yv=l_,wv=Rd,bv=Kc,Ov=z_,Nv=nS;JA({target:"Promise",proto:!0,real:!0,forced:!!yv&&bc((function(){yv.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=Ov(this,wv("Promise")),r=bv(e);return this.then(r?function(r){return Nv(t,e()).then((function(){return r}))}:e,r?function(r){return Nv(t,e()).then((function(){throw r}))}:e)}});var Dv=Bc,Pv=zA,Lv=hI,kv=pd,Bv=Dv("".charAt),Mv=Dv("".charCodeAt),Uv=Dv("".slice),xv=function(e){return function(t,r){var i,n,o=Lv(kv(t)),s=Pv(r),a=o.length;return s<0||s>=a?e?"":void 0:(i=Mv(o,s))<55296||i>56319||s+1===a||(n=Mv(o,s+1))<56320||n>57343?e?Bv(o,s):i:e?Uv(o,s,s+2):n-56320+(i-55296<<10)+65536}},Qv={codeAt:xv(!1),charAt:xv(!0)},Fv=Qv.charAt,Vv=hI,jv=Am,Gv=o_,Kv="String Iterator",Hv=jv.set,Wv=jv.getterFor(Kv);Gv(String,"String",(function(e){Hv(this,{type:Kv,string:Vv(e),index:0})}),(function(){var e,t=Wv(this),r=t.string,i=t.index;return i>=r.length?{value:void 0,done:!0}:(e=Fv(r,i),t.index+=e.length,{value:e,done:!1})}));var Yv=_d.Promise,Jv={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},qv=xc,Xv=Lf,zv=MA,Zv=mf,$v=Nu("toStringTag");for(var eT in Jv){var tT=qv[eT],rT=tT&&tT.prototype;rT&&Xv(rT)!==$v&&zv(rT,$v,eT),Zv[eT]=Zv.Array}var iT=Yv,nT=iT,oT=Wo,sT=o,aT=n,cT=Nt,dT=tl,uT=rg,AT=Error.prototype.toString,hT=aT((function(){if(sT){var e=dT(Object.defineProperty({},"name",{get:function(){return this===e}}));if("true"!==AT.call(e))return!0}return"2: 1"!==AT.call({message:1,name:2})||"Error"!==AT.call({})}))?function(){var e=cT(this),t=uT(e.name,"Error"),r=uT(e.message);return t?r?t+": "+r:t:r}:AT,lT={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}},pT=Gi,gT=function(e){try{if(oT)return Function('return require("'+e+'")')()}catch(e){}},ET=K,fT=n,IT=tl,mT=E,_T=Tt.f,CT=Lh.f,ST=Ht.exports,vT=Be,TT=ln,RT=Nt,yT=hT,wT=rg,bT=lT,OT=dg,NT=Rr,DT=o,PT="DOMException",LT="DATA_CLONE_ERR",kT=ET("Error"),BT=ET(PT)||function(){try{(new(ET("MessageChannel")||gT("worker_threads").MessageChannel)).port1.postMessage(new WeakMap)}catch(e){if(e.name==LT&&25==e.code)return e.constructor}}(),MT=BT&&BT.prototype,UT=kT.prototype,xT=NT.set,QT=NT.getterFor(PT),FT="stack"in kT(PT),VT=function(e){return vT(bT,e)&&bT[e].m?bT[e].c:0},jT=function(){TT(this,GT);var e=arguments.length,t=wT(e<1?void 0:arguments[0]),r=wT(e<2?void 0:arguments[1],"Error"),i=VT(r);if(xT(this,{type:PT,name:r,message:t,code:i}),DT||(this.name=r,this.message=t,this.code=i),FT){var n=kT(t);n.name=PT,_T(this,"stack",mT(1,OT(n.stack,1)))}},GT=jT.prototype=IT(UT),KT=function(e){return{enumerable:!0,configurable:!0,get:e}},HT=function(e){return KT((function(){return QT(this)[e]}))};DT&&CT(GT,{name:HT("name"),message:HT("message"),code:HT("code")}),_T(GT,"constructor",mT(1,jT));var WT=fT((function(){return!(new BT instanceof kT)})),YT=WT||fT((function(){return UT.toString!==yT||"2: 1"!==String(new BT(1,2))})),JT=WT||fT((function(){return 25!==new BT(1,"DataCloneError").code}));WT||25!==BT.DATA_CLONE_ERR||MT.DATA_CLONE_ERR;pT({global:!0,forced:WT},{DOMException:WT?jT:BT});var qT=ET(PT),XT=qT.prototype;for(var zT in YT&&BT===qT&&ST(XT,"toString",yT),JT&&DT&&BT===qT&&_T(XT,"code",KT((function(){return VT(RT(this).name)}))),bT)if(vT(bT,zT)){var ZT=bT[zT],$T=ZT.s,eR=mT(6,ZT.c);vT(qT,$T)||_T(qT,$T,eR),vT(XT,$T)||_T(XT,$T,eR)}var tR=Gi,rR=K,iR=E,nR=Tt.f,oR=Be,sR=ln,aR=eg,cR=rg,dR=lT,uR=dg,AR="DOMException",hR=rR("Error"),lR=rR(AR),pR=function(){sR(this,gR);var e=arguments.length,t=cR(e<1?void 0:arguments[0]),r=cR(e<2?void 0:arguments[1],"Error"),i=new lR(t,r),n=hR(t);return n.name=AR,nR(i,"stack",iR(1,uR(n.stack,1))),aR(i,this,pR),i},gR=pR.prototype=lR.prototype,ER="stack"in hR(AR),fR="stack"in new lR(1,2),IR=ER&&!fR;tR({global:!0,forced:IR},{DOMException:IR?pR:lR});var mR=rR(AR),_R=mR.prototype;if(_R.constructor!==mR)for(var CR in nR(_R,"constructor",iR(1,mR)),dR)if(oR(dR,CR)){var SR=dR[CR],vR=SR.s;oR(mR,vR)||nR(mR,vR,iR(6,SR.c))}var TR="DOMException";on(K(TR),TR);var RR=S,yR=Ht.exports,wR=bl,bR=n,OR=ze,NR=Kt,DR=OR("species"),PR=RegExp.prototype,LR=S,kR=Hr,BR=Rh,MR=k,UR=LR("".charAt),xR=LR("".charCodeAt),QR=LR("".slice),FR=function(e){return function(t,r){var i,n,o=BR(MR(t)),s=kR(r),a=o.length;return s<0||s>=a?e?"":void 0:(i=xR(o,s))<55296||i>56319||s+1===a||(n=xR(o,s+1))<56320||n>57343?e?UR(o,s):i:e?QR(o,s,s+2):n-56320+(i-55296<<10)+65536}},VR={codeAt:FR(!1),charAt:FR(!0)}.charAt,jR=S,GR=Pe,KR=Math.floor,HR=jR("".charAt),WR=jR("".replace),YR=jR("".slice),JR=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,qR=/\$([$&'`]|\d{1,2})/g,XR=d,zR=Nt,ZR=x,$R=y,ey=bl,ty=r.TypeError,ry=jo,iy=d,ny=S,oy=function(e,t,r,i){var n=OR(e),o=!bR((function(){var t={};return t[n]=function(){return 7},7!=""[e](t)})),s=o&&!bR((function(){var t=!1,r=/a/;return"split"===e&&((r={}).constructor={},r.constructor[DR]=function(){return r},r.flags="",r[n]=/./[n]),r.exec=function(){return t=!0,null},r[n](""),!t}));if(!o||!s||r){var a=RR(/./[n]),c=t(n,""[e],(function(e,t,r,i,n){var s=RR(e),c=t.exec;return c===wR||c===PR.exec?o&&!n?{done:!0,value:a(t,r,i)}:{done:!0,value:s(r,t,i)}:{done:!1}}));yR(String.prototype,e,c[0]),yR(PR,n,c[1])}i&&NR(PR[n],"sham",!0)},sy=n,ay=Nt,cy=x,dy=Hr,uy=Zr,Ay=Rh,hy=k,ly=function(e,t,r){return t+(r?VR(e,t).length:1)},py=fe,gy=function(e,t,r,i,n,o){var s=r+e.length,a=i.length,c=qR;return void 0!==n&&(n=GR(n),c=JR),WR(o,c,(function(o,c){var d;switch(HR(c,0)){case"$":return"$";case"&":return e;case"`":return YR(t,0,r);case"'":return YR(t,s);case"<":d=n[YR(c,1,-1)];break;default:var u=+c;if(0===u)return o;if(u>a){var A=KR(u/10);return 0===A?o:A<=a?void 0===i[A-1]?HR(c,1):i[A-1]+HR(c,1):o}d=i[u-1]}return void 0===d?"":d}))},Ey=function(e,t){var r=e.exec;if(ZR(r)){var i=XR(r,e,t);return null!==i&&zR(i),i}if("RegExp"===$R(e))return XR(ey,e,t);throw ty("RegExp#exec called on incompatible receiver")},fy=ze("replace"),Iy=Math.max,my=Math.min,_y=ny([].concat),Cy=ny([].push),Sy=ny("".indexOf),vy=ny("".slice),Ty="$0"==="a".replace(/./,"$0"),Ry=!!/./[fy]&&""===/./[fy]("a","$0");oy("replace",(function(e,t,r){var i=Ry?"$":"$0";return[function(e,r){var i=hy(this),n=null==e?void 0:py(e,fy);return n?iy(n,e,i,r):iy(t,Ay(i),e,r)},function(e,n){var o=ay(this),s=Ay(e);if("string"==typeof n&&-1===Sy(n,i)&&-1===Sy(n,"$<")){var a=r(t,o,s,n);if(a.done)return a.value}var c=cy(n);c||(n=Ay(n));var d=o.global;if(d){var u=o.unicode;o.lastIndex=0}for(var A=[];;){var h=Ey(o,s);if(null===h)break;if(Cy(A,h),!d)break;""===Ay(h[0])&&(o.lastIndex=ly(s,uy(o.lastIndex),u))}for(var l,p="",g=0,E=0;E<A.length;E++){for(var f=Ay((h=A[E])[0]),I=Iy(my(dy(h.index),s.length),0),m=[],_=1;_<h.length;_++)Cy(m,void 0===(l=h[_])?l:String(l));var C=h.groups;if(c){var S=_y([f],m,I,s);void 0!==C&&Cy(S,C);var v=Ay(ry(n,void 0,S))}else v=gy(f,s,I,m,C,n);I>=g&&(p+=vy(s,g,I)+v,g=I+f.length)}return p+vy(s,g)}]}),!!sy((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!Ty||Ry);var yy=F,wy=y,by=ze("match"),Oy=o,Ny=r,Dy=S,Py=Bi,Ly=eg,ky=Kt,By=Tt.f,My=jr.f,Uy=H,xy=function(e){var t;return yy(e)&&(void 0!==(t=e[by])?!!t:"RegExp"==wy(e))},Qy=Rh,Fy=wh,Vy=Ph,jy=Ht.exports,Gy=n,Ky=Be,Hy=Rr.enforce,Wy=un,Yy=nl,Jy=al,qy=ze("match"),Xy=Ny.RegExp,zy=Xy.prototype,Zy=Ny.SyntaxError,$y=Dy(Fy),ew=Dy(zy.exec),tw=Dy("".charAt),rw=Dy("".replace),iw=Dy("".indexOf),nw=Dy("".slice),ow=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,sw=/a/g,aw=/a/g,cw=new Xy(sw)!==sw,dw=Vy.MISSED_STICKY,uw=Vy.UNSUPPORTED_Y,Aw=Oy&&(!cw||dw||Yy||Jy||Gy((function(){return aw[qy]=!1,Xy(sw)!=sw||Xy(aw)==aw||"/a/i"!=Xy(sw,"i")})));if(Py("RegExp",Aw)){for(var hw=function(e,t){var r,i,n,o,s,a,c=Uy(zy,this),d=xy(e),u=void 0===t,A=[],h=e;if(!c&&d&&u&&e.constructor===hw)return e;if((d||Uy(zy,e))&&(e=e.source,u&&(t="flags"in h?h.flags:$y(h))),e=void 0===e?"":Qy(e),t=void 0===t?"":Qy(t),h=e,Yy&&"dotAll"in sw&&(i=!!t&&iw(t,"s")>-1)&&(t=rw(t,/s/g,"")),r=t,dw&&"sticky"in sw&&(n=!!t&&iw(t,"y")>-1)&&uw&&(t=rw(t,/y/g,"")),Jy&&(e=(o=function(e){for(var t,r=e.length,i=0,n="",o=[],s={},a=!1,c=!1,d=0,u="";i<=r;i++){if("\\"===(t=tw(e,i)))t+=tw(e,++i);else if("]"===t)a=!1;else if(!a)switch(!0){case"["===t:a=!0;break;case"("===t:ew(ow,nw(e,i+1))&&(i+=2,c=!0),n+=t,d++;continue;case">"===t&&c:if(""===u||Ky(s,u))throw new Zy("Invalid capture group name");s[u]=!0,o[o.length]=[u,d],c=!1,u="";continue}c?u+=t:n+=t}return[n,o]}(e))[0],A=o[1]),s=Ly(Xy(e,t),c?this:zy,hw),(i||n||A.length)&&(a=Hy(s),i&&(a.dotAll=!0,a.raw=hw(function(e){for(var t,r=e.length,i=0,n="",o=!1;i<=r;i++)"\\"!==(t=tw(e,i))?o||"."!==t?("["===t?o=!0:"]"===t&&(o=!1),n+=t):n+="[\\s\\S]":n+=t+tw(e,++i);return n}(e),r)),n&&(a.sticky=!0),A.length&&(a.groups=A)),e!==h)try{ky(s,"source",""===h?"(?:)":h)}catch(e){}return s},lw=function(e){e in hw||By(hw,e,{configurable:!0,get:function(){return Xy[e]},set:function(t){Xy[e]=t}})},pw=My(Xy),gw=0;pw.length>gw;)lw(pw[gw++]);zy.constructor=hw,hw.prototype=zy,jy(Ny,"RegExp",hw)}Wy("RegExp");var Ew=r,fw=o,Iw=nl,mw=y,_w=Tt.f,Cw=Rr.get,Sw=RegExp.prototype,vw=Ew.TypeError;fw&&Iw&&_w(Sw,"dotAll",{configurable:!0,get:function(){if(this!==Sw){if("RegExp"===mw(this))return!!Cw(this).dotAll;throw vw("Incompatible receiver, RegExp required")}}});const Tw=Ug;function Rw(e,t){const r=e&&e.navigator;if(!r.mediaDevices)return;const i=function(e){if("object"!=typeof e||e.mandatory||e.optional)return e;const t={};return Object.keys(e).forEach(r=>{if("require"===r||"advanced"===r||"mediaSource"===r)return;const i="object"==typeof e[r]?e[r]:{ideal:e[r]};void 0!==i.exact&&"number"==typeof i.exact&&(i.min=i.max=i.exact);const n=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):"deviceId"===t?"sourceId":t};if(void 0!==i.ideal){t.optional=t.optional||[];let e={};"number"==typeof i.ideal?(e[n("min",r)]=i.ideal,t.optional.push(e),e={},e[n("max",r)]=i.ideal,t.optional.push(e)):(e[n("",r)]=i.ideal,t.optional.push(e))}void 0!==i.exact&&"number"!=typeof i.exact?(t.mandatory=t.mandatory||{},t.mandatory[n("",r)]=i.exact):["min","max"].forEach(e=>{void 0!==i[e]&&(t.mandatory=t.mandatory||{},t.mandatory[n(e,r)]=i[e])})}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},n=function(e,n){if(t.version>=61)return n(e);if((e=JSON.parse(JSON.stringify(e)))&&"object"==typeof e.audio){const t=function(e,t,r){t in e&&!(r in e)&&(e[r]=e[t],delete e[t])};t((e=JSON.parse(JSON.stringify(e))).audio,"autoGainControl","googAutoGainControl"),t(e.audio,"noiseSuppression","googNoiseSuppression"),e.audio=i(e.audio)}if(e&&"object"==typeof e.video){let o=e.video.facingMode;o=o&&("object"==typeof o?o:{ideal:o});const s=t.version<66;if(o&&("user"===o.exact||"environment"===o.exact||"user"===o.ideal||"environment"===o.ideal)&&(!r.mediaDevices.getSupportedConstraints||!r.mediaDevices.getSupportedConstraints().facingMode||s)){let t;if(delete e.video.facingMode,"environment"===o.exact||"environment"===o.ideal?t=["back","rear"]:"user"!==o.exact&&"user"!==o.ideal||(t=["front"]),t)return r.mediaDevices.enumerateDevices().then(r=>{let s=(r=r.filter(e=>"videoinput"===e.kind)).find(e=>t.some(t=>e.label.toLowerCase().includes(t)));return!s&&r.length&&t.includes("back")&&(s=r[r.length-1]),s&&(e.video.deviceId=o.exact?{exact:s.deviceId}:{ideal:s.deviceId}),e.video=i(e.video),Tw("chrome: "+JSON.stringify(e)),n(e)})}e.video=i(e.video)}return Tw("chrome: "+JSON.stringify(e)),n(e)},o=function(e){return t.version>=64?e:{name:{PermissionDeniedError:"NotAllowedError",PermissionDismissedError:"NotAllowedError",InvalidStateError:"NotAllowedError",DevicesNotFoundError:"NotFoundError",ConstraintNotSatisfiedError:"OverconstrainedError",TrackStartError:"NotReadableError",MediaDeviceFailedDueToShutdown:"NotAllowedError",MediaDeviceKillSwitchOn:"NotAllowedError",TabCaptureError:"AbortError",ScreenCaptureError:"AbortError",DeviceCaptureError:"AbortError"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&": ")+this.message}}};if(r.getUserMedia=function(e,t,i){n(e,e=>{r.webkitGetUserMedia(e,t,e=>{i&&i(o(e))})})}.bind(r),r.mediaDevices.getUserMedia){const e=r.mediaDevices.getUserMedia.bind(r.mediaDevices);r.mediaDevices.getUserMedia=function(t){return n(t,t=>e(t).then(e=>{if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach(e=>{e.stop()}),new DOMException("","NotFoundError");return e},e=>nT.reject(o(e))))}}}function yw(e){e.MediaStream=e.MediaStream||e.webkitMediaStream}function ww(e){if("object"==typeof e&&e.RTCPeerConnection&&!("ontrack"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,"ontrack",{get(){return this._ontrack},set(e){this._ontrack&&this.removeEventListener("track",this._ontrack),this.addEventListener("track",this._ontrack=e)},enumerable:!0,configurable:!0});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=t=>{t.stream.addEventListener("addtrack",r=>{let i;i=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(e=>e.track&&e.track.id===r.track.id):{track:r.track};const n=new Event("track");n.track=r.track,n.receiver=i,n.transceiver={receiver:i},n.streams=[t.stream],this.dispatchEvent(n)}),t.stream.getTracks().forEach(r=>{let i;i=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(e=>e.track&&e.track.id===r.id):{track:r};const n=new Event("track");n.track=r,n.receiver=i,n.transceiver={receiver:i},n.streams=[t.stream],this.dispatchEvent(n)})},this.addEventListener("addstream",this._ontrackpoly)),t.apply(this,arguments)}}else kg(e,"track",e=>(e.transceiver||Object.defineProperty(e,"transceiver",{value:{receiver:e.receiver}}),e))}function bw(e){if("object"==typeof e&&e.RTCPeerConnection&&!("getSenders"in e.RTCPeerConnection.prototype)&&"createDTMFSender"in e.RTCPeerConnection.prototype){const t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&("audio"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};const r=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,i){let n=r.apply(this,arguments);return n||(n=t(this,e),this._senders.push(n)),n};const i=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){i.apply(this,arguments);const t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}const r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._senders=this._senders||[],r.apply(this,[e]),e.getTracks().forEach(e=>{this._senders.push(t(this,e))})};const i=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){this._senders=this._senders||[],i.apply(this,[e]),e.getTracks().forEach(e=>{const t=this._senders.find(t=>t.track===e);t&&this._senders.splice(this._senders.indexOf(t),1)})}}else if("object"==typeof e&&e.RTCPeerConnection&&"getSenders"in e.RTCPeerConnection.prototype&&"createDTMFSender"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!("dtmf"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e},Object.defineProperty(e.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function Ow(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,r,i]=arguments;if(arguments.length>0&&"function"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||"function"!=typeof e))return t.apply(this,[]);const n=function(e){const t={};return e.result().forEach(e=>{const r={id:e.id,timestamp:e.timestamp,type:{localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[e.type]||e.type};e.names().forEach(t=>{r[t]=e.stat(t)}),t[r.id]=r}),t},o=function(e){return new Map(Object.keys(e).map(t=>[t,e[t]]))};if(arguments.length>=2){const i=function(e){r(o(n(e)))};return t.apply(this,[i,e])}return new nT((e,r)=>{t.apply(this,[function(t){e(o(n(t)))},r])}).then(r,i)}}function Nw(e){if(!("object"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&e.RTCRtpReceiver))return;if(!("getStats"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e});const r=e.RTCPeerConnection.prototype.addTrack;r&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=r.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){const e=this;return this._pc.getStats().then(t=>jg(t,e.track,!0))}}if(!("getStats"in e.RTCRtpReceiver.prototype)){const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e}),kg(e,"track",e=>(e.receiver._pc=e.srcElement,e)),e.RTCRtpReceiver.prototype.getStats=function(){const e=this;return this._pc.getStats().then(t=>jg(t,e.track,!1))}}if(!("getStats"in e.RTCRtpSender.prototype)||!("getStats"in e.RTCRtpReceiver.prototype))return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof e.MediaStreamTrack){const e=arguments[0];let t,r,i;return this.getSenders().forEach(r=>{r.track===e&&(t?i=!0:t=r)}),this.getReceivers().forEach(t=>(t.track===e&&(r?i=!0:r=t),t.track===e)),i||t&&r?nT.reject(new DOMException("There are more than one sender or receiver for the track.","InvalidAccessError")):t?t.getStats():r?r.getStats():nT.reject(new DOMException("There is no sender or receiver for the track.","InvalidAccessError"))}return t.apply(this,arguments)}}function Dw(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map(e=>this._shimmedLocalStreams[e][0])};const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,r){if(!r)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};const i=t.apply(this,arguments);return this._shimmedLocalStreams[r.id]?-1===this._shimmedLocalStreams[r.id].indexOf(i)&&this._shimmedLocalStreams[r.id].push(i):this._shimmedLocalStreams[r.id]=[r,i],i};const r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach(e=>{if(this.getSenders().find(t=>t.track===e))throw new DOMException("Track already exists.","InvalidAccessError")});const t=this.getSenders();r.apply(this,arguments);const i=this.getSenders().filter(e=>-1===t.indexOf(e));this._shimmedLocalStreams[e.id]=[e].concat(i)};const i=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],i.apply(this,arguments)};const n=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach(t=>{const r=this._shimmedLocalStreams[t].indexOf(e);-1!==r&&this._shimmedLocalStreams[t].splice(r,1),1===this._shimmedLocalStreams[t].length&&delete this._shimmedLocalStreams[t]}),n.apply(this,arguments)}}function Pw(e,t){if(!e.RTCPeerConnection)return;if(e.RTCPeerConnection.prototype.addTrack&&t.version>=65)return Dw(e);const r=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){const e=r.apply(this);return this._reverseStreams=this._reverseStreams||{},e.map(e=>this._reverseStreams[e.id])};const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},t.getTracks().forEach(e=>{if(this.getSenders().find(t=>t.track===e))throw new DOMException("Track already exists.","InvalidAccessError")}),!this._reverseStreams[t.id]){const r=new e.MediaStream(t.getTracks());this._streams[t.id]=r,this._reverseStreams[r.id]=t,t=r}i.apply(this,[t])};const n=e.RTCPeerConnection.prototype.removeStream;function o(e,t){let r=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(t=>{const i=e._reverseStreams[t],n=e._streams[i.id];r=r.replace(new RegExp(n.id,"g"),i.id)}),new RTCSessionDescription({type:t.type,sdp:r})}function s(e,t){let r=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(t=>{const i=e._reverseStreams[t],n=e._streams[i.id];r=r.replace(new RegExp(i.id,"g"),n.id)}),new RTCSessionDescription({type:t.type,sdp:r})}e.RTCPeerConnection.prototype.removeStream=function(e){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},n.apply(this,[this._streams[e.id]||e]),delete this._reverseStreams[this._streams[e.id]?this._streams[e.id].id:e.id],delete this._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,r){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");const i=[].slice.call(arguments,1);if(1!==i.length||!i[0].getTracks().find(e=>e===t))throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.","NotSupportedError");const n=this.getSenders().find(e=>e.track===t);if(n)throw new DOMException("Track already exists.","InvalidAccessError");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};const o=this._streams[r.id];if(o)o.addTrack(t),nT.resolve().then(()=>{this.dispatchEvent(new Event("negotiationneeded"))});else{const i=new e.MediaStream([t]);this._streams[r.id]=i,this._reverseStreams[i.id]=r,this.addStream(i)}return this.getSenders().find(e=>e.track===t)},["createOffer","createAnswer"].forEach((function(t){const r=e.RTCPeerConnection.prototype[t],i={[t](){const e=arguments;return arguments.length&&"function"==typeof arguments[0]?r.apply(this,[t=>{const r=o(this,t);e[0].apply(null,[r])},t=>{e[1]&&e[1].apply(null,t)},arguments[2]]):r.apply(this,arguments).then(e=>o(this,e))}};e.RTCPeerConnection.prototype[t]=i[t]}));const a=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=s(this,arguments[0]),a.apply(this,arguments)):a.apply(this,arguments)};const c=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,"localDescription");Object.defineProperty(e.RTCPeerConnection.prototype,"localDescription",{get(){const e=c.get.apply(this);return""===e.type?e:o(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");if(!e._pc)throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.","TypeError");if(!(e._pc===this))throw new DOMException("Sender was not created by this connection.","InvalidAccessError");let t;this._streams=this._streams||{},Object.keys(this._streams).forEach(r=>{this._streams[r].getTracks().find(t=>e.track===t)&&(t=this._streams[r])}),t&&(1===t.getTracks().length?this.removeStream(this._reverseStreams[t.id]):t.removeTrack(e.track),this.dispatchEvent(new Event("negotiationneeded")))}}function Lw(e,t){!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=e.webkitRTCPeerConnection),e.RTCPeerConnection&&t.version<53&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(t){const r=e.RTCPeerConnection.prototype[t],i={[t](){return arguments[0]=new("addIceCandidate"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),r.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=i[t]}))}function kw(e,t){kg(e,"negotiationneeded",e=>{const r=e.target;if(!(t.version<72||r.getConfiguration&&"plan-b"===r.getConfiguration().sdpSemantics)||"stable"===r.signalingState)return e})}var Bw=Object.freeze({__proto__:null,shimMediaStream:yw,shimOnTrack:ww,shimGetSendersWithDtmf:bw,shimGetStats:Ow,shimSenderReceiverGetStats:Nw,shimAddTrackRemoveTrackWithNative:Dw,shimAddTrackRemoveTrack:Pw,shimPeerConnection:Lw,fixNegotiationNeeded:kw,shimGetUserMedia:Rw,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&"getDisplayMedia"in e.navigator.mediaDevices||e.navigator.mediaDevices&&("function"==typeof t?e.navigator.mediaDevices.getDisplayMedia=function(r){return t(r).then(t=>{const i=r.video&&r.video.width,n=r.video&&r.video.height,o=r.video&&r.video.frameRate;return r.video={mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:t,maxFrameRate:o||3}},i&&(r.video.mandatory.maxWidth=i),n&&(r.video.mandatory.maxHeight=n),e.navigator.mediaDevices.getUserMedia(r)})}:console.error("shimGetDisplayMedia: getSourceId argument is not a function"))}});var Mw={exports:{}};!function(e){var t={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};t.localCName=t.generateIdentifier(),t.splitLines=function(e){return e.trim().split("\n").map((function(e){return e.trim()}))},t.splitSections=function(e){return e.split("\nm=").map((function(e,t){return(t>0?"m="+e:e).trim()+"\r\n"}))},t.getDescription=function(e){var r=t.splitSections(e);return r&&r[0]},t.getMediaSections=function(e){var r=t.splitSections(e);return r.shift(),r},t.matchPrefix=function(e,r){return t.splitLines(e).filter((function(e){return 0===e.indexOf(r)}))},t.parseCandidate=function(e){for(var t,r={foundation:(t=0===e.indexOf("a=candidate:")?e.substring(12).split(" "):e.substring(10).split(" "))[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]},i=8;i<t.length;i+=2)switch(t[i]){case"raddr":r.relatedAddress=t[i+1];break;case"rport":r.relatedPort=parseInt(t[i+1],10);break;case"tcptype":r.tcpType=t[i+1];break;case"ufrag":r.ufrag=t[i+1],r.usernameFragment=t[i+1];break;default:r[t[i]]=t[i+1]}return r},t.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);var r=e.type;return t.push("typ"),t.push(r),"host"!==r&&e.relatedAddress&&e.relatedPort&&(t.push("raddr"),t.push(e.relatedAddress),t.push("rport"),t.push(e.relatedPort)),e.tcpType&&"tcp"===e.protocol.toLowerCase()&&(t.push("tcptype"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push("ufrag"),t.push(e.usernameFragment||e.ufrag)),"candidate:"+t.join(" ")},t.parseIceOptions=function(e){return e.substr(14).split(" ")},t.parseRtpMap=function(e){var t=e.substr(9).split(" "),r={payloadType:parseInt(t.shift(),10)};return t=t[0].split("/"),r.name=t[0],r.clockRate=parseInt(t[1],10),r.channels=3===t.length?parseInt(t[2],10):1,r.numChannels=r.channels,r},t.writeRtpMap=function(e){var t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);var r=e.channels||e.numChannels||1;return"a=rtpmap:"+t+" "+e.name+"/"+e.clockRate+(1!==r?"/"+r:"")+"\r\n"},t.parseExtmap=function(e){var t=e.substr(9).split(" ");return{id:parseInt(t[0],10),direction:t[0].indexOf("/")>0?t[0].split("/")[1]:"sendrecv",uri:t[1]}},t.writeExtmap=function(e){return"a=extmap:"+(e.id||e.preferredId)+(e.direction&&"sendrecv"!==e.direction?"/"+e.direction:"")+" "+e.uri+"\r\n"},t.parseFmtp=function(e){for(var t,r={},i=e.substr(e.indexOf(" ")+1).split(";"),n=0;n<i.length;n++)r[(t=i[n].trim().split("="))[0].trim()]=t[1];return r},t.writeFmtp=function(e){var t="",r=e.payloadType;if(void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var i=[];Object.keys(e.parameters).forEach((function(t){e.parameters[t]?i.push(t+"="+e.parameters[t]):i.push(t)})),t+="a=fmtp:"+r+" "+i.join(";")+"\r\n"}return t},t.parseRtcpFb=function(e){var t=e.substr(e.indexOf(" ")+1).split(" ");return{type:t.shift(),parameter:t.join(" ")}},t.writeRtcpFb=function(e){var t="",r=e.payloadType;return void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((function(e){t+="a=rtcp-fb:"+r+" "+e.type+(e.parameter&&e.parameter.length?" "+e.parameter:"")+"\r\n"})),t},t.parseSsrcMedia=function(e){var t=e.indexOf(" "),r={ssrc:parseInt(e.substr(7,t-7),10)},i=e.indexOf(":",t);return i>-1?(r.attribute=e.substr(t+1,i-t-1),r.value=e.substr(i+1)):r.attribute=e.substr(t+1),r},t.parseSsrcGroup=function(e){var t=e.substr(13).split(" ");return{semantics:t.shift(),ssrcs:t.map((function(e){return parseInt(e,10)}))}},t.getMid=function(e){var r=t.matchPrefix(e,"a=mid:")[0];if(r)return r.substr(6)},t.parseFingerprint=function(e){var t=e.substr(14).split(" ");return{algorithm:t[0].toLowerCase(),value:t[1]}},t.getDtlsParameters=function(e,r){return{role:"auto",fingerprints:t.matchPrefix(e+r,"a=fingerprint:").map(t.parseFingerprint)}},t.writeDtlsParameters=function(e,t){var r="a=setup:"+t+"\r\n";return e.fingerprints.forEach((function(e){r+="a=fingerprint:"+e.algorithm+" "+e.value+"\r\n"})),r},t.getIceParameters=function(e,r){var i=t.splitLines(e);return{usernameFragment:(i=i.concat(t.splitLines(r))).filter((function(e){return 0===e.indexOf("a=ice-ufrag:")}))[0].substr(12),password:i.filter((function(e){return 0===e.indexOf("a=ice-pwd:")}))[0].substr(10)}},t.writeIceParameters=function(e){return"a=ice-ufrag:"+e.usernameFragment+"\r\na=ice-pwd:"+e.password+"\r\n"},t.parseRtpParameters=function(e){for(var r={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},i=t.splitLines(e)[0].split(" "),n=3;n<i.length;n++){var o=i[n],s=t.matchPrefix(e,"a=rtpmap:"+o+" ")[0];if(s){var a=t.parseRtpMap(s),c=t.matchPrefix(e,"a=fmtp:"+o+" ");switch(a.parameters=c.length?t.parseFmtp(c[0]):{},a.rtcpFeedback=t.matchPrefix(e,"a=rtcp-fb:"+o+" ").map(t.parseRtcpFb),r.codecs.push(a),a.name.toUpperCase()){case"RED":case"ULPFEC":r.fecMechanisms.push(a.name.toUpperCase())}}}return t.matchPrefix(e,"a=extmap:").forEach((function(e){r.headerExtensions.push(t.parseExtmap(e))})),r},t.writeRtpDescription=function(e,r){var i="";i+="m="+e+" ",i+=r.codecs.length>0?"9":"0",i+=" UDP/TLS/RTP/SAVPF ",i+=r.codecs.map((function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType})).join(" ")+"\r\n",i+="c=IN IP4 0.0.0.0\r\n",i+="a=rtcp:9 IN IP4 0.0.0.0\r\n",r.codecs.forEach((function(e){i+=t.writeRtpMap(e),i+=t.writeFmtp(e),i+=t.writeRtcpFb(e)}));var n=0;return r.codecs.forEach((function(e){e.maxptime>n&&(n=e.maxptime)})),n>0&&(i+="a=maxptime:"+n+"\r\n"),i+="a=rtcp-mux\r\n",r.headerExtensions&&r.headerExtensions.forEach((function(e){i+=t.writeExtmap(e)})),i},t.parseRtpEncodingParameters=function(e){var r,i=[],n=t.parseRtpParameters(e),o=-1!==n.fecMechanisms.indexOf("RED"),s=-1!==n.fecMechanisms.indexOf("ULPFEC"),a=t.matchPrefix(e,"a=ssrc:").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return"cname"===e.attribute})),c=a.length>0&&a[0].ssrc,d=t.matchPrefix(e,"a=ssrc-group:FID").map((function(e){return e.substr(17).split(" ").map((function(e){return parseInt(e,10)}))}));d.length>0&&d[0].length>1&&d[0][0]===c&&(r=d[0][1]),n.codecs.forEach((function(e){if("RTX"===e.name.toUpperCase()&&e.parameters.apt){var t={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&r&&(t.rtx={ssrc:r}),i.push(t),o&&((t=JSON.parse(JSON.stringify(t))).fec={ssrc:c,mechanism:s?"red+ulpfec":"red"},i.push(t))}})),0===i.length&&c&&i.push({ssrc:c});var u=t.matchPrefix(e,"b=");return u.length&&(u=0===u[0].indexOf("b=TIAS:")?parseInt(u[0].substr(7),10):0===u[0].indexOf("b=AS:")?1e3*parseInt(u[0].substr(5),10)*.95-16e3:void 0,i.forEach((function(e){e.maxBitrate=u}))),i},t.parseRtcpParameters=function(e){var r={},i=t.matchPrefix(e,"a=ssrc:").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return"cname"===e.attribute}))[0];i&&(r.cname=i.value,r.ssrc=i.ssrc);var n=t.matchPrefix(e,"a=rtcp-rsize");r.reducedSize=n.length>0,r.compound=0===n.length;var o=t.matchPrefix(e,"a=rtcp-mux");return r.mux=o.length>0,r},t.parseMsid=function(e){var r,i=t.matchPrefix(e,"a=msid:");if(1===i.length)return{stream:(r=i[0].substr(7).split(" "))[0],track:r[1]};var n=t.matchPrefix(e,"a=ssrc:").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return"msid"===e.attribute}));return n.length>0?{stream:(r=n[0].value.split(" "))[0],track:r[1]}:void 0},t.generateSessionId=function(){return Math.random().toString().substr(2,21)},t.writeSessionBoilerplate=function(e,r,i){var n=void 0!==r?r:2;return"v=0\r\no="+(i||"thisisadapterortc")+" "+(e||t.generateSessionId())+" "+n+" IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},t.writeMediaSection=function(e,r,i,n){var o=t.writeRtpDescription(e.kind,r);if(o+=t.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=t.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),"offer"===i?"actpass":"active"),o+="a=mid:"+e.mid+"\r\n",e.direction?o+="a="+e.direction+"\r\n":e.rtpSender&&e.rtpReceiver?o+="a=sendrecv\r\n":e.rtpSender?o+="a=sendonly\r\n":e.rtpReceiver?o+="a=recvonly\r\n":o+="a=inactive\r\n",e.rtpSender){var s="msid:"+n.id+" "+e.rtpSender.track.id+"\r\n";o+="a="+s,o+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" "+s,e.sendEncodingParameters[0].rtx&&(o+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" "+s,o+="a=ssrc-group:FID "+e.sendEncodingParameters[0].ssrc+" "+e.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return o+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" cname:"+t.localCName+"\r\n",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" cname:"+t.localCName+"\r\n"),o},t.getDirection=function(e,r){for(var i=t.splitLines(e),n=0;n<i.length;n++)switch(i[n]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return i[n].substr(2)}return r?t.getDirection(r):"sendrecv"},t.getKind=function(e){return t.splitLines(e)[0].split(" ")[0].substr(2)},t.isRejected=function(e){return"0"===e.split(" ",2)[1]},t.parseMLine=function(e){var r=t.splitLines(e)[0].substr(2).split(" ");return{kind:r[0],port:parseInt(r[1],10),protocol:r[2],fmt:r.slice(3).join(" ")}},t.parseOLine=function(e){var r=t.matchPrefix(e,"o=")[0].substr(2).split(" ");return{username:r[0],sessionId:r[1],sessionVersion:parseInt(r[2],10),netType:r[3],addressType:r[4],address:r[5]}},t.isValidSDP=function(e){if("string"!=typeof e||0===e.length)return!1;for(var r=t.splitLines(e),i=0;i<r.length;i++)if(r[i].length<2||"="!==r[i].charAt(1))return!1;return!0},e.exports=t}(Mw);var Uw=Mw.exports;function xw(e,t,r,i,n){var o=Uw.writeRtpDescription(e.kind,t);if(o+=Uw.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=Uw.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),"offer"===r?"actpass":n||"active"),o+="a=mid:"+e.mid+"\r\n",e.rtpSender&&e.rtpReceiver?o+="a=sendrecv\r\n":e.rtpSender?o+="a=sendonly\r\n":e.rtpReceiver?o+="a=recvonly\r\n":o+="a=inactive\r\n",e.rtpSender){var s=e.rtpSender._initialTrackId||e.rtpSender.track.id;e.rtpSender._initialTrackId=s;var a="msid:"+(i?i.id:"-")+" "+s+"\r\n";o+="a="+a,o+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" "+a,e.sendEncodingParameters[0].rtx&&(o+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" "+a,o+="a=ssrc-group:FID "+e.sendEncodingParameters[0].ssrc+" "+e.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return o+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" cname:"+Uw.localCName+"\r\n",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" cname:"+Uw.localCName+"\r\n"),o}function Qw(e,t){var r={codecs:[],headerExtensions:[],fecMechanisms:[]},i=function(e,t){e=parseInt(e,10);for(var r=0;r<t.length;r++)if(t[r].payloadType===e||t[r].preferredPayloadType===e)return t[r]},n=function(e,t,r,n){var o=i(e.parameters.apt,r),s=i(t.parameters.apt,n);return o&&s&&o.name.toLowerCase()===s.name.toLowerCase()};return e.codecs.forEach((function(i){for(var o=0;o<t.codecs.length;o++){var s=t.codecs[o];if(i.name.toLowerCase()===s.name.toLowerCase()&&i.clockRate===s.clockRate){if("rtx"===i.name.toLowerCase()&&i.parameters&&s.parameters.apt&&!n(i,s,e.codecs,t.codecs))continue;(s=JSON.parse(JSON.stringify(s))).numChannels=Math.min(i.numChannels,s.numChannels),r.codecs.push(s),s.rtcpFeedback=s.rtcpFeedback.filter((function(e){for(var t=0;t<i.rtcpFeedback.length;t++)if(i.rtcpFeedback[t].type===e.type&&i.rtcpFeedback[t].parameter===e.parameter)return!0;return!1}));break}}})),e.headerExtensions.forEach((function(e){for(var i=0;i<t.headerExtensions.length;i++){var n=t.headerExtensions[i];if(e.uri===n.uri){r.headerExtensions.push(n);break}}})),r}function Fw(e,t,r){return-1!=={offer:{setLocalDescription:["stable","have-local-offer"],setRemoteDescription:["stable","have-remote-offer"]},answer:{setLocalDescription:["have-remote-offer","have-local-pranswer"],setRemoteDescription:["have-local-offer","have-remote-pranswer"]}}[t][e].indexOf(r)}function Vw(e,t){var r=e.getRemoteCandidates().find((function(e){return t.foundation===e.foundation&&t.ip===e.ip&&t.port===e.port&&t.priority===e.priority&&t.protocol===e.protocol&&t.type===e.type}));return r||e.addRemoteCandidate(t),!r}function jw(e,t){var r=new Error(t);return r.name=e,r.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[e],r}var Gw=function(e,t){function r(t,r){r.addTrack(t),r.dispatchEvent(new e.MediaStreamTrackEvent("addtrack",{track:t}))}function i(t,r,i,n){var o=new Event("track");o.track=r,o.receiver=i,o.transceiver={receiver:i},o.streams=n,e.setTimeout((function(){t._dispatchEvent("track",o)}))}var n=function(r){var i=this,n=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach((function(e){i[e]=n[e].bind(n)})),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState="stable",this.iceConnectionState="new",this.connectionState="new",this.iceGatheringState="new",r=JSON.parse(JSON.stringify(r||{})),this.usingBundle="max-bundle"===r.bundlePolicy,"negotiate"===r.rtcpMuxPolicy)throw jw("NotSupportedError","rtcpMuxPolicy 'negotiate' is not supported");switch(r.rtcpMuxPolicy||(r.rtcpMuxPolicy="require"),r.iceTransportPolicy){case"all":case"relay":break;default:r.iceTransportPolicy="all"}switch(r.bundlePolicy){case"balanced":case"max-compat":case"max-bundle":break;default:r.bundlePolicy="balanced"}if(r.iceServers=function(e,t){var r=!1;return(e=JSON.parse(JSON.stringify(e))).filter((function(e){if(e&&(e.urls||e.url)){var i=e.urls||e.url;e.url&&!e.urls&&console.warn("RTCIceServer.url is deprecated! Use urls instead.");var n="string"==typeof i;return n&&(i=[i]),i=i.filter((function(e){return 0!==e.indexOf("turn:")||-1===e.indexOf("transport=udp")||-1!==e.indexOf("turn:[")||r?0===e.indexOf("stun:")&&t>=14393&&-1===e.indexOf("?transport=udp"):(r=!0,!0)})),delete e.url,e.urls=n?i[0]:i,!!i.length}}))}(r.iceServers||[],t),this._iceGatherers=[],r.iceCandidatePoolSize)for(var o=r.iceCandidatePoolSize;o>0;o--)this._iceGatherers.push(new e.RTCIceGatherer({iceServers:r.iceServers,gatherPolicy:r.iceTransportPolicy}));else r.iceCandidatePoolSize=0;this._config=r,this.transceivers=[],this._sdpSessionId=Uw.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};Object.defineProperty(n.prototype,"localDescription",{configurable:!0,get:function(){return this._localDescription}}),Object.defineProperty(n.prototype,"remoteDescription",{configurable:!0,get:function(){return this._remoteDescription}}),n.prototype.onicecandidate=null,n.prototype.onaddstream=null,n.prototype.ontrack=null,n.prototype.onremovestream=null,n.prototype.onsignalingstatechange=null,n.prototype.oniceconnectionstatechange=null,n.prototype.onconnectionstatechange=null,n.prototype.onicegatheringstatechange=null,n.prototype.onnegotiationneeded=null,n.prototype.ondatachannel=null,n.prototype._dispatchEvent=function(e,t){this._isClosed||(this.dispatchEvent(t),"function"==typeof this["on"+e]&&this["on"+e](t))},n.prototype._emitGatheringStateChange=function(){var e=new Event("icegatheringstatechange");this._dispatchEvent("icegatheringstatechange",e)},n.prototype.getConfiguration=function(){return this._config},n.prototype.getLocalStreams=function(){return this.localStreams},n.prototype.getRemoteStreams=function(){return this.remoteStreams},n.prototype._createTransceiver=function(e,t){var r=this.transceivers.length>0,i={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&r)i.iceTransport=this.transceivers[0].iceTransport,i.dtlsTransport=this.transceivers[0].dtlsTransport;else{var n=this._createIceAndDtlsTransports();i.iceTransport=n.iceTransport,i.dtlsTransport=n.dtlsTransport}return t||this.transceivers.push(i),i},n.prototype.addTrack=function(t,r){if(this._isClosed)throw jw("InvalidStateError","Attempted to call addTrack on a closed peerconnection.");var i;if(this.transceivers.find((function(e){return e.track===t})))throw jw("InvalidAccessError","Track already exists.");for(var n=0;n<this.transceivers.length;n++)this.transceivers[n].track||this.transceivers[n].kind!==t.kind||(i=this.transceivers[n]);return i||(i=this._createTransceiver(t.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(r)&&this.localStreams.push(r),i.track=t,i.stream=r,i.rtpSender=new e.RTCRtpSender(t,i.dtlsTransport),i.rtpSender},n.prototype.addStream=function(e){var r=this;if(t>=15025)e.getTracks().forEach((function(t){r.addTrack(t,e)}));else{var i=e.clone();e.getTracks().forEach((function(e,t){var r=i.getTracks()[t];e.addEventListener("enabled",(function(e){r.enabled=e.enabled}))})),i.getTracks().forEach((function(e){r.addTrack(e,i)}))}},n.prototype.removeTrack=function(t){if(this._isClosed)throw jw("InvalidStateError","Attempted to call removeTrack on a closed peerconnection.");if(!(t instanceof e.RTCRtpSender))throw new TypeError("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.");var r=this.transceivers.find((function(e){return e.rtpSender===t}));if(!r)throw jw("InvalidAccessError","Sender was not created by this connection.");var i=r.stream;r.rtpSender.stop(),r.rtpSender=null,r.track=null,r.stream=null,-1===this.transceivers.map((function(e){return e.stream})).indexOf(i)&&this.localStreams.indexOf(i)>-1&&this.localStreams.splice(this.localStreams.indexOf(i),1),this._maybeFireNegotiationNeeded()},n.prototype.removeStream=function(e){var t=this;e.getTracks().forEach((function(e){var r=t.getSenders().find((function(t){return t.track===e}));r&&t.removeTrack(r)}))},n.prototype.getSenders=function(){return this.transceivers.filter((function(e){return!!e.rtpSender})).map((function(e){return e.rtpSender}))},n.prototype.getReceivers=function(){return this.transceivers.filter((function(e){return!!e.rtpReceiver})).map((function(e){return e.rtpReceiver}))},n.prototype._createIceGatherer=function(t,r){var i=this;if(r&&t>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var n=new e.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(n,"state",{value:"new",writable:!0}),this.transceivers[t].bufferedCandidateEvents=[],this.transceivers[t].bufferCandidates=function(e){var r=!e.candidate||0===Object.keys(e.candidate).length;n.state=r?"completed":"gathering",null!==i.transceivers[t].bufferedCandidateEvents&&i.transceivers[t].bufferedCandidateEvents.push(e)},n.addEventListener("localcandidate",this.transceivers[t].bufferCandidates),n},n.prototype._gather=function(t,r){var i=this,n=this.transceivers[r].iceGatherer;if(!n.onlocalcandidate){var o=this.transceivers[r].bufferedCandidateEvents;this.transceivers[r].bufferedCandidateEvents=null,n.removeEventListener("localcandidate",this.transceivers[r].bufferCandidates),n.onlocalcandidate=function(e){if(!(i.usingBundle&&r>0)){var o=new Event("icecandidate");o.candidate={sdpMid:t,sdpMLineIndex:r};var s=e.candidate,a=!s||0===Object.keys(s).length;if(a)"new"!==n.state&&"gathering"!==n.state||(n.state="completed");else{"new"===n.state&&(n.state="gathering"),s.component=1,s.ufrag=n.getLocalParameters().usernameFragment;var c=Uw.writeCandidate(s);o.candidate=Object.assign(o.candidate,Uw.parseCandidate(c)),o.candidate.candidate=c,o.candidate.toJSON=function(){return{candidate:o.candidate.candidate,sdpMid:o.candidate.sdpMid,sdpMLineIndex:o.candidate.sdpMLineIndex,usernameFragment:o.candidate.usernameFragment}}}var d=Uw.getMediaSections(i._localDescription.sdp);d[o.candidate.sdpMLineIndex]+=a?"a=end-of-candidates\r\n":"a="+o.candidate.candidate+"\r\n",i._localDescription.sdp=Uw.getDescription(i._localDescription.sdp)+d.join("");var u=i.transceivers.every((function(e){return e.iceGatherer&&"completed"===e.iceGatherer.state}));"gathering"!==i.iceGatheringState&&(i.iceGatheringState="gathering",i._emitGatheringStateChange()),a||i._dispatchEvent("icecandidate",o),u&&(i._dispatchEvent("icecandidate",new Event("icecandidate")),i.iceGatheringState="complete",i._emitGatheringStateChange())}},e.setTimeout((function(){o.forEach((function(e){n.onlocalcandidate(e)}))}),0)}},n.prototype._createIceAndDtlsTransports=function(){var t=this,r=new e.RTCIceTransport(null);r.onicestatechange=function(){t._updateIceConnectionState(),t._updateConnectionState()};var i=new e.RTCDtlsTransport(r);return i.ondtlsstatechange=function(){t._updateConnectionState()},i.onerror=function(){Object.defineProperty(i,"state",{value:"failed",writable:!0}),t._updateConnectionState()},{iceTransport:r,dtlsTransport:i}},n.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var r=this.transceivers[e].iceTransport;r&&(delete r.onicestatechange,delete this.transceivers[e].iceTransport);var i=this.transceivers[e].dtlsTransport;i&&(delete i.ondtlsstatechange,delete i.onerror,delete this.transceivers[e].dtlsTransport)},n.prototype._transceive=function(e,r,i){var n=Qw(e.localCapabilities,e.remoteCapabilities);r&&e.rtpSender&&(n.encodings=e.sendEncodingParameters,n.rtcp={cname:Uw.localCName,compound:e.rtcpParameters.compound},e.recvEncodingParameters.length&&(n.rtcp.ssrc=e.recvEncodingParameters[0].ssrc),e.rtpSender.send(n)),i&&e.rtpReceiver&&n.codecs.length>0&&("video"===e.kind&&e.recvEncodingParameters&&t<15019&&e.recvEncodingParameters.forEach((function(e){delete e.rtx})),e.recvEncodingParameters.length?n.encodings=e.recvEncodingParameters:n.encodings=[{}],n.rtcp={compound:e.rtcpParameters.compound},e.rtcpParameters.cname&&(n.rtcp.cname=e.rtcpParameters.cname),e.sendEncodingParameters.length&&(n.rtcp.ssrc=e.sendEncodingParameters[0].ssrc),e.rtpReceiver.receive(n))},n.prototype.setLocalDescription=function(e){var t,r,i=this;if(-1===["offer","answer"].indexOf(e.type))return Promise.reject(jw("TypeError",'Unsupported type "'+e.type+'"'));if(!Fw("setLocalDescription",e.type,i.signalingState)||i._isClosed)return Promise.reject(jw("InvalidStateError","Can not set local "+e.type+" in state "+i.signalingState));if("offer"===e.type)t=Uw.splitSections(e.sdp),r=t.shift(),t.forEach((function(e,t){var r=Uw.parseRtpParameters(e);i.transceivers[t].localCapabilities=r})),i.transceivers.forEach((function(e,t){i._gather(e.mid,t)}));else if("answer"===e.type){t=Uw.splitSections(i._remoteDescription.sdp),r=t.shift();var n=Uw.matchPrefix(r,"a=ice-lite").length>0;t.forEach((function(e,t){var o=i.transceivers[t],s=o.iceGatherer,a=o.iceTransport,c=o.dtlsTransport,d=o.localCapabilities,u=o.remoteCapabilities;if(!(Uw.isRejected(e)&&0===Uw.matchPrefix(e,"a=bundle-only").length)&&!o.rejected){var A=Uw.getIceParameters(e,r),h=Uw.getDtlsParameters(e,r);n&&(h.role="server"),i.usingBundle&&0!==t||(i._gather(o.mid,t),"new"===a.state&&a.start(s,A,n?"controlling":"controlled"),"new"===c.state&&c.start(h));var l=Qw(d,u);i._transceive(o,l.codecs.length>0,!1)}}))}return i._localDescription={type:e.type,sdp:e.sdp},"offer"===e.type?i._updateSignalingState("have-local-offer"):i._updateSignalingState("stable"),Promise.resolve()},n.prototype.setRemoteDescription=function(n){var o=this;if(-1===["offer","answer"].indexOf(n.type))return Promise.reject(jw("TypeError",'Unsupported type "'+n.type+'"'));if(!Fw("setRemoteDescription",n.type,o.signalingState)||o._isClosed)return Promise.reject(jw("InvalidStateError","Can not set remote "+n.type+" in state "+o.signalingState));var s={};o.remoteStreams.forEach((function(e){s[e.id]=e}));var a=[],c=Uw.splitSections(n.sdp),d=c.shift(),u=Uw.matchPrefix(d,"a=ice-lite").length>0,A=Uw.matchPrefix(d,"a=group:BUNDLE ").length>0;o.usingBundle=A;var h=Uw.matchPrefix(d,"a=ice-options:")[0];return o.canTrickleIceCandidates=!!h&&h.substr(14).split(" ").indexOf("trickle")>=0,c.forEach((function(i,c){var h=Uw.splitLines(i),l=Uw.getKind(i),p=Uw.isRejected(i)&&0===Uw.matchPrefix(i,"a=bundle-only").length,g=h[0].substr(2).split(" ")[2],E=Uw.getDirection(i,d),f=Uw.parseMsid(i),I=Uw.getMid(i)||Uw.generateIdentifier();if(p||"application"===l&&("DTLS/SCTP"===g||"UDP/DTLS/SCTP"===g))o.transceivers[c]={mid:I,kind:l,protocol:g,rejected:!0};else{var m,_,C,S,v,T,R,y,w;!p&&o.transceivers[c]&&o.transceivers[c].rejected&&(o.transceivers[c]=o._createTransceiver(l,!0));var b,O,N=Uw.parseRtpParameters(i);p||(b=Uw.getIceParameters(i,d),(O=Uw.getDtlsParameters(i,d)).role="client"),R=Uw.parseRtpEncodingParameters(i);var D=Uw.parseRtcpParameters(i),P=Uw.matchPrefix(i,"a=end-of-candidates",d).length>0,L=Uw.matchPrefix(i,"a=candidate:").map((function(e){return Uw.parseCandidate(e)})).filter((function(e){return 1===e.component}));if(("offer"===n.type||"answer"===n.type)&&!p&&A&&c>0&&o.transceivers[c]&&(o._disposeIceAndDtlsTransports(c),o.transceivers[c].iceGatherer=o.transceivers[0].iceGatherer,o.transceivers[c].iceTransport=o.transceivers[0].iceTransport,o.transceivers[c].dtlsTransport=o.transceivers[0].dtlsTransport,o.transceivers[c].rtpSender&&o.transceivers[c].rtpSender.setTransport(o.transceivers[0].dtlsTransport),o.transceivers[c].rtpReceiver&&o.transceivers[c].rtpReceiver.setTransport(o.transceivers[0].dtlsTransport)),"offer"!==n.type||p){if("answer"===n.type&&!p){_=(m=o.transceivers[c]).iceGatherer,C=m.iceTransport,S=m.dtlsTransport,v=m.rtpReceiver,T=m.sendEncodingParameters,y=m.localCapabilities,o.transceivers[c].recvEncodingParameters=R,o.transceivers[c].remoteCapabilities=N,o.transceivers[c].rtcpParameters=D,L.length&&"new"===C.state&&(!u&&!P||A&&0!==c?L.forEach((function(e){Vw(m.iceTransport,e)})):C.setRemoteCandidates(L)),A&&0!==c||("new"===C.state&&C.start(_,b,"controlling"),"new"===S.state&&S.start(O)),!Qw(m.localCapabilities,m.remoteCapabilities).codecs.filter((function(e){return"rtx"===e.name.toLowerCase()})).length&&m.sendEncodingParameters[0].rtx&&delete m.sendEncodingParameters[0].rtx,o._transceive(m,"sendrecv"===E||"recvonly"===E,"sendrecv"===E||"sendonly"===E),!v||"sendrecv"!==E&&"sendonly"!==E?delete m.rtpReceiver:(w=v.track,f?(s[f.stream]||(s[f.stream]=new e.MediaStream),r(w,s[f.stream]),a.push([w,v,s[f.stream]])):(s.default||(s.default=new e.MediaStream),r(w,s.default),a.push([w,v,s.default])))}}else{(m=o.transceivers[c]||o._createTransceiver(l)).mid=I,m.iceGatherer||(m.iceGatherer=o._createIceGatherer(c,A)),L.length&&"new"===m.iceTransport.state&&(!P||A&&0!==c?L.forEach((function(e){Vw(m.iceTransport,e)})):m.iceTransport.setRemoteCandidates(L)),y=e.RTCRtpReceiver.getCapabilities(l),t<15019&&(y.codecs=y.codecs.filter((function(e){return"rtx"!==e.name}))),T=m.sendEncodingParameters||[{ssrc:1001*(2*c+2)}];var k,B=!1;if("sendrecv"===E||"sendonly"===E){if(B=!m.rtpReceiver,v=m.rtpReceiver||new e.RTCRtpReceiver(m.dtlsTransport,l),B)w=v.track,f&&"-"===f.stream||(f?(s[f.stream]||(s[f.stream]=new e.MediaStream,Object.defineProperty(s[f.stream],"id",{get:function(){return f.stream}})),Object.defineProperty(w,"id",{get:function(){return f.track}}),k=s[f.stream]):(s.default||(s.default=new e.MediaStream),k=s.default)),k&&(r(w,k),m.associatedRemoteMediaStreams.push(k)),a.push([w,v,k])}else m.rtpReceiver&&m.rtpReceiver.track&&(m.associatedRemoteMediaStreams.forEach((function(t){var r=t.getTracks().find((function(e){return e.id===m.rtpReceiver.track.id}));r&&function(t,r){r.removeTrack(t),r.dispatchEvent(new e.MediaStreamTrackEvent("removetrack",{track:t}))}(r,t)})),m.associatedRemoteMediaStreams=[]);m.localCapabilities=y,m.remoteCapabilities=N,m.rtpReceiver=v,m.rtcpParameters=D,m.sendEncodingParameters=T,m.recvEncodingParameters=R,o._transceive(o.transceivers[c],!1,B)}}})),void 0===o._dtlsRole&&(o._dtlsRole="offer"===n.type?"active":"passive"),o._remoteDescription={type:n.type,sdp:n.sdp},"offer"===n.type?o._updateSignalingState("have-remote-offer"):o._updateSignalingState("stable"),Object.keys(s).forEach((function(t){var r=s[t];if(r.getTracks().length){if(-1===o.remoteStreams.indexOf(r)){o.remoteStreams.push(r);var n=new Event("addstream");n.stream=r,e.setTimeout((function(){o._dispatchEvent("addstream",n)}))}a.forEach((function(e){var t=e[0],n=e[1];r.id===e[2].id&&i(o,t,n,[r])}))}})),a.forEach((function(e){e[2]||i(o,e[0],e[1],[])})),e.setTimeout((function(){o&&o.transceivers&&o.transceivers.forEach((function(e){e.iceTransport&&"new"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification"),e.iceTransport.addRemoteCandidate({}))}))}),4e3),Promise.resolve()},n.prototype.close=function(){this.transceivers.forEach((function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()})),this._isClosed=!0,this._updateSignalingState("closed")},n.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event("signalingstatechange");this._dispatchEvent("signalingstatechange",t)},n.prototype._maybeFireNegotiationNeeded=function(){var t=this;"stable"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,e.setTimeout((function(){if(t.needNegotiation){t.needNegotiation=!1;var e=new Event("negotiationneeded");t._dispatchEvent("negotiationneeded",e)}}),0))},n.prototype._updateIceConnectionState=function(){var e,t={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(e){e.iceTransport&&!e.rejected&&t[e.iceTransport.state]++})),e="new",t.failed>0?e="failed":t.checking>0?e="checking":t.disconnected>0?e="disconnected":t.new>0?e="new":t.connected>0?e="connected":t.completed>0&&(e="completed"),e!==this.iceConnectionState){this.iceConnectionState=e;var r=new Event("iceconnectionstatechange");this._dispatchEvent("iceconnectionstatechange",r)}},n.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(e){e.iceTransport&&e.dtlsTransport&&!e.rejected&&(t[e.iceTransport.state]++,t[e.dtlsTransport.state]++)})),t.connected+=t.completed,e="new",t.failed>0?e="failed":t.connecting>0?e="connecting":t.disconnected>0?e="disconnected":t.new>0?e="new":t.connected>0&&(e="connected"),e!==this.connectionState){this.connectionState=e;var r=new Event("connectionstatechange");this._dispatchEvent("connectionstatechange",r)}},n.prototype.createOffer=function(){var r=this;if(r._isClosed)return Promise.reject(jw("InvalidStateError","Can not call createOffer after close"));var i=r.transceivers.filter((function(e){return"audio"===e.kind})).length,n=r.transceivers.filter((function(e){return"video"===e.kind})).length,o=arguments[0];if(o){if(o.mandatory||o.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==o.offerToReceiveAudio&&(i=!0===o.offerToReceiveAudio?1:!1===o.offerToReceiveAudio?0:o.offerToReceiveAudio),void 0!==o.offerToReceiveVideo&&(n=!0===o.offerToReceiveVideo?1:!1===o.offerToReceiveVideo?0:o.offerToReceiveVideo)}for(r.transceivers.forEach((function(e){"audio"===e.kind?--i<0&&(e.wantReceive=!1):"video"===e.kind&&--n<0&&(e.wantReceive=!1)}));i>0||n>0;)i>0&&(r._createTransceiver("audio"),i--),n>0&&(r._createTransceiver("video"),n--);var s=Uw.writeSessionBoilerplate(r._sdpSessionId,r._sdpSessionVersion++);r.transceivers.forEach((function(i,n){var o=i.track,s=i.kind,a=i.mid||Uw.generateIdentifier();i.mid=a,i.iceGatherer||(i.iceGatherer=r._createIceGatherer(n,r.usingBundle));var c=e.RTCRtpSender.getCapabilities(s);t<15019&&(c.codecs=c.codecs.filter((function(e){return"rtx"!==e.name}))),c.codecs.forEach((function(e){"H264"===e.name&&void 0===e.parameters["level-asymmetry-allowed"]&&(e.parameters["level-asymmetry-allowed"]="1"),i.remoteCapabilities&&i.remoteCapabilities.codecs&&i.remoteCapabilities.codecs.forEach((function(t){e.name.toLowerCase()===t.name.toLowerCase()&&e.clockRate===t.clockRate&&(e.preferredPayloadType=t.payloadType)}))})),c.headerExtensions.forEach((function(e){(i.remoteCapabilities&&i.remoteCapabilities.headerExtensions||[]).forEach((function(t){e.uri===t.uri&&(e.id=t.id)}))}));var d=i.sendEncodingParameters||[{ssrc:1001*(2*n+1)}];o&&t>=15019&&"video"===s&&!d[0].rtx&&(d[0].rtx={ssrc:d[0].ssrc+1}),i.wantReceive&&(i.rtpReceiver=new e.RTCRtpReceiver(i.dtlsTransport,s)),i.localCapabilities=c,i.sendEncodingParameters=d})),"max-compat"!==r._config.bundlePolicy&&(s+="a=group:BUNDLE "+r.transceivers.map((function(e){return e.mid})).join(" ")+"\r\n"),s+="a=ice-options:trickle\r\n",r.transceivers.forEach((function(e,t){s+=xw(e,e.localCapabilities,"offer",e.stream,r._dtlsRole),s+="a=rtcp-rsize\r\n",!e.iceGatherer||"new"===r.iceGatheringState||0!==t&&r.usingBundle||(e.iceGatherer.getLocalCandidates().forEach((function(e){e.component=1,s+="a="+Uw.writeCandidate(e)+"\r\n"})),"completed"===e.iceGatherer.state&&(s+="a=end-of-candidates\r\n"))}));var a=new e.RTCSessionDescription({type:"offer",sdp:s});return Promise.resolve(a)},n.prototype.createAnswer=function(){var r=this;if(r._isClosed)return Promise.reject(jw("InvalidStateError","Can not call createAnswer after close"));if("have-remote-offer"!==r.signalingState&&"have-local-pranswer"!==r.signalingState)return Promise.reject(jw("InvalidStateError","Can not call createAnswer in signalingState "+r.signalingState));var i=Uw.writeSessionBoilerplate(r._sdpSessionId,r._sdpSessionVersion++);r.usingBundle&&(i+="a=group:BUNDLE "+r.transceivers.map((function(e){return e.mid})).join(" ")+"\r\n"),i+="a=ice-options:trickle\r\n";var n=Uw.getMediaSections(r._remoteDescription.sdp).length;r.transceivers.forEach((function(e,o){if(!(o+1>n)){if(e.rejected)return"application"===e.kind?"DTLS/SCTP"===e.protocol?i+="m=application 0 DTLS/SCTP 5000\r\n":i+="m=application 0 "+e.protocol+" webrtc-datachannel\r\n":"audio"===e.kind?i+="m=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n":"video"===e.kind&&(i+="m=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n"),void(i+="c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:"+e.mid+"\r\n");var s;if(e.stream)"audio"===e.kind?s=e.stream.getAudioTracks()[0]:"video"===e.kind&&(s=e.stream.getVideoTracks()[0]),s&&t>=15019&&"video"===e.kind&&!e.sendEncodingParameters[0].rtx&&(e.sendEncodingParameters[0].rtx={ssrc:e.sendEncodingParameters[0].ssrc+1});var a=Qw(e.localCapabilities,e.remoteCapabilities);!a.codecs.filter((function(e){return"rtx"===e.name.toLowerCase()})).length&&e.sendEncodingParameters[0].rtx&&delete e.sendEncodingParameters[0].rtx,i+=xw(e,a,"answer",e.stream,r._dtlsRole),e.rtcpParameters&&e.rtcpParameters.reducedSize&&(i+="a=rtcp-rsize\r\n")}}));var o=new e.RTCSessionDescription({type:"answer",sdp:i});return Promise.resolve(o)},n.prototype.addIceCandidate=function(e){var t,r=this;return e&&void 0===e.sdpMLineIndex&&!e.sdpMid?Promise.reject(new TypeError("sdpMLineIndex or sdpMid required")):new Promise((function(i,n){if(!r._remoteDescription)return n(jw("InvalidStateError","Can not add ICE candidate without a remote description"));if(e&&""!==e.candidate){var o=e.sdpMLineIndex;if(e.sdpMid)for(var s=0;s<r.transceivers.length;s++)if(r.transceivers[s].mid===e.sdpMid){o=s;break}var a=r.transceivers[o];if(!a)return n(jw("OperationError","Can not add ICE candidate"));if(a.rejected)return i();var c=Object.keys(e.candidate).length>0?Uw.parseCandidate(e.candidate):{};if("tcp"===c.protocol&&(0===c.port||9===c.port))return i();if(c.component&&1!==c.component)return i();if((0===o||o>0&&a.iceTransport!==r.transceivers[0].iceTransport)&&!Vw(a.iceTransport,c))return n(jw("OperationError","Can not add ICE candidate"));var d=e.candidate.trim();0===d.indexOf("a=")&&(d=d.substr(2)),(t=Uw.getMediaSections(r._remoteDescription.sdp))[o]+="a="+(c.type?d:"end-of-candidates")+"\r\n",r._remoteDescription.sdp=Uw.getDescription(r._remoteDescription.sdp)+t.join("")}else for(var u=0;u<r.transceivers.length&&(r.transceivers[u].rejected||(r.transceivers[u].iceTransport.addRemoteCandidate({}),(t=Uw.getMediaSections(r._remoteDescription.sdp))[u]+="a=end-of-candidates\r\n",r._remoteDescription.sdp=Uw.getDescription(r._remoteDescription.sdp)+t.join(""),!r.usingBundle));u++);i()}))},n.prototype.getStats=function(t){if(t&&t instanceof e.MediaStreamTrack){var r=null;if(this.transceivers.forEach((function(e){e.rtpSender&&e.rtpSender.track===t?r=e.rtpSender:e.rtpReceiver&&e.rtpReceiver.track===t&&(r=e.rtpReceiver)})),!r)throw jw("InvalidAccessError","Invalid selector.");return r.getStats()}var i=[];return this.transceivers.forEach((function(e){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach((function(t){e[t]&&i.push(e[t].getStats())}))})),Promise.all(i).then((function(e){var t=new Map;return e.forEach((function(e){e.forEach((function(e){t.set(e.id,e)}))})),t}))};["RTCRtpSender","RTCRtpReceiver","RTCIceGatherer","RTCIceTransport","RTCDtlsTransport"].forEach((function(t){var r=e[t];if(r&&r.prototype&&r.prototype.getStats){var i=r.prototype.getStats;r.prototype.getStats=function(){return i.apply(this).then((function(e){var t=new Map;return Object.keys(e).forEach((function(r){var i;e[r].type={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[(i=e[r]).type]||i.type,t.set(r,e[r])})),t}))}}}));var o=["createOffer","createAnswer"];return o.forEach((function(e){var t=n.prototype[e];n.prototype[e]=function(){var e=arguments;return"function"==typeof e[0]||"function"==typeof e[1]?t.apply(this,[arguments[2]]).then((function(t){"function"==typeof e[0]&&e[0].apply(null,[t])}),(function(t){"function"==typeof e[1]&&e[1].apply(null,[t])})):t.apply(this,arguments)}})),(o=["setLocalDescription","setRemoteDescription","addIceCandidate"]).forEach((function(e){var t=n.prototype[e];n.prototype[e]=function(){var e=arguments;return"function"==typeof e[1]||"function"==typeof e[2]?t.apply(this,arguments).then((function(){"function"==typeof e[1]&&e[1].apply(null)}),(function(t){"function"==typeof e[2]&&e[2].apply(null,[t])})):t.apply(this,arguments)}})),["getStats"].forEach((function(e){var t=n.prototype[e];n.prototype[e]=function(){var e=arguments;return"function"==typeof e[1]?t.apply(this,arguments).then((function(){"function"==typeof e[1]&&e[1].apply(null)})):t.apply(this,arguments)}})),n};function Kw(e){const t=e&&e.navigator,r=t.mediaDevices.getUserMedia.bind(t.mediaDevices);t.mediaDevices.getUserMedia=function(e){return r(e).catch(e=>nT.reject(function(e){return{name:{PermissionDeniedError:"NotAllowedError"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString(){return this.name}}}(e)))}}function Hw(e){"getDisplayMedia"in e.navigator&&e.navigator.mediaDevices&&(e.navigator.mediaDevices&&"getDisplayMedia"in e.navigator.mediaDevices||(e.navigator.mediaDevices.getDisplayMedia=e.navigator.getDisplayMedia.bind(e.navigator)))}function Ww(e,t){if(e.RTCIceGatherer&&(e.RTCIceCandidate||(e.RTCIceCandidate=function(e){return e}),e.RTCSessionDescription||(e.RTCSessionDescription=function(e){return e}),t.version<15025)){const t=Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype,"enabled");Object.defineProperty(e.MediaStreamTrack.prototype,"enabled",{set(e){t.set.call(this,e);const r=new Event("enabled");r.enabled=e,this.dispatchEvent(r)}})}e.RTCRtpSender&&!("dtmf"in e.RTCRtpSender.prototype)&&Object.defineProperty(e.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=new e.RTCDtmfSender(this):"video"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),e.RTCDtmfSender&&!e.RTCDTMFSender&&(e.RTCDTMFSender=e.RTCDtmfSender);const r=Gw(e,t.version);e.RTCPeerConnection=function(e){return e&&e.iceServers&&(e.iceServers=function(e,t){let r=!1;return(e=JSON.parse(JSON.stringify(e))).filter(e=>{if(e&&(e.urls||e.url)){let t=e.urls||e.url;e.url&&!e.urls&&xg("RTCIceServer.url","RTCIceServer.urls");const i="string"==typeof t;return i&&(t=[t]),t=t.filter(e=>{if(0===e.indexOf("stun:"))return!1;const t=e.startsWith("turn")&&!e.startsWith("turn:[")&&e.includes("transport=udp");return t&&!r?(r=!0,!0):t&&!r}),delete e.url,e.urls=i?t[0]:t,!!t.length}})}(e.iceServers,t.version),Ug("ICE servers after filtering:",e.iceServers)),new r(e)},e.RTCPeerConnection.prototype=r.prototype}function Yw(e){e.RTCRtpSender&&!("replaceTrack"in e.RTCRtpSender.prototype)&&(e.RTCRtpSender.prototype.replaceTrack=e.RTCRtpSender.prototype.setTrack)}var Jw=Object.freeze({__proto__:null,shimPeerConnection:Ww,shimReplaceTrack:Yw,shimGetUserMedia:Kw,shimGetDisplayMedia:Hw}),qw=Gi,Xw=Ki,zw=n,Zw=K,$w=x,eb=Uo,tb=zs,rb=Ht.exports;if(qw({target:"Promise",proto:!0,real:!0,forced:!!Xw&&zw((function(){Xw.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=eb(this,Zw("Promise")),r=$w(e);return this.then(r?function(r){return tb(t,e()).then((function(){return r}))}:e,r?function(r){return tb(t,e()).then((function(){throw r}))}:e)}}),$w(Xw)){var ib=Zw("Promise").prototype.finally;Xw.prototype.finally!==ib&&rb(Xw.prototype,"finally",ib,{unsafe:!0})}function nb(e,t){const r=e&&e.navigator,i=e&&e.MediaStreamTrack;if(r.getUserMedia=function(e,t,i){xg("navigator.getUserMedia","navigator.mediaDevices.getUserMedia"),r.mediaDevices.getUserMedia(e).then(t,i)},!(t.version>55&&"autoGainControl"in r.mediaDevices.getSupportedConstraints())){const e=function(e,t,r){t in e&&!(r in e)&&(e[r]=e[t],delete e[t])},t=r.mediaDevices.getUserMedia.bind(r.mediaDevices);if(r.mediaDevices.getUserMedia=function(r){return"object"==typeof r&&"object"==typeof r.audio&&(r=JSON.parse(JSON.stringify(r)),e(r.audio,"autoGainControl","mozAutoGainControl"),e(r.audio,"noiseSuppression","mozNoiseSuppression")),t(r)},i&&i.prototype.getSettings){const t=i.prototype.getSettings;i.prototype.getSettings=function(){const r=t.apply(this,arguments);return e(r,"mozAutoGainControl","autoGainControl"),e(r,"mozNoiseSuppression","noiseSuppression"),r}}if(i&&i.prototype.applyConstraints){const t=i.prototype.applyConstraints;i.prototype.applyConstraints=function(r){return"audio"===this.kind&&"object"==typeof r&&(r=JSON.parse(JSON.stringify(r)),e(r,"autoGainControl","mozAutoGainControl"),e(r,"noiseSuppression","mozNoiseSuppression")),t.apply(this,[r])}}}}function ob(e){"object"==typeof e&&e.RTCTrackEvent&&"receiver"in e.RTCTrackEvent.prototype&&!("transceiver"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function sb(e,t){if("object"!=typeof e||!e.RTCPeerConnection&&!e.mozRTCPeerConnection)return;!e.RTCPeerConnection&&e.mozRTCPeerConnection&&(e.RTCPeerConnection=e.mozRTCPeerConnection),t.version<53&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(t){const r=e.RTCPeerConnection.prototype[t],i={[t](){return arguments[0]=new("addIceCandidate"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),r.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=i[t]}));const r={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"},i=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,n,o]=arguments;return i.apply(this,[e||null]).then(e=>{if(t.version<53&&!n)try{e.forEach(e=>{e.type=r[e.type]||e.type})}catch(t){if("TypeError"!==t.name)throw t;e.forEach((t,i)=>{e.set(i,Object.assign({},t,{type:r[t.type]||t.type}))})}return e}).then(n,o)}}function ab(e){if("object"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&"getStats"in e.RTCRtpSender.prototype)return;const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e});const r=e.RTCPeerConnection.prototype.addTrack;r&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=r.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):nT.resolve(new Map)}}function cb(e){if("object"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&"getStats"in e.RTCRtpReceiver.prototype)return;const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e}),kg(e,"track",e=>(e.receiver._pc=e.srcElement,e)),e.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function db(e){e.RTCPeerConnection&&!("removeStream"in e.RTCPeerConnection.prototype)&&(e.RTCPeerConnection.prototype.removeStream=function(e){xg("removeStream","removeTrack"),this.getSenders().forEach(t=>{t.track&&e.getTracks().includes(t.track)&&this.removeTrack(t)})})}function ub(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)}function Ab(e){if("object"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.addTransceiver;t&&(e.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];const e=arguments[1],r=e&&"sendEncodings"in e;r&&e.sendEncodings.forEach(e=>{if("rid"in e){if(!/^[a-z0-9]{0,16}$/i.test(e.rid))throw new TypeError("Invalid RID value provided.")}if("scaleResolutionDownBy"in e&&!(parseFloat(e.scaleResolutionDownBy)>=1))throw new RangeError("scale_resolution_down_by must be >= 1.0");if("maxFramerate"in e&&!(parseFloat(e.maxFramerate)>=0))throw new RangeError("max_framerate must be >= 0.0")});const i=t.apply(this,arguments);if(r){const{sender:t}=i,r=t.getParameters();(!("encodings"in r)||1===r.encodings.length&&0===Object.keys(r.encodings[0]).length)&&(r.encodings=e.sendEncodings,t.sendEncodings=e.sendEncodings,this.setParametersPromises.push(t.setParameters(r).then(()=>{delete t.sendEncodings}).catch(()=>{delete t.sendEncodings})))}return i})}function hb(e){if("object"!=typeof e||!e.RTCRtpSender)return;const t=e.RTCRtpSender.prototype.getParameters;t&&(e.RTCRtpSender.prototype.getParameters=function(){const e=t.apply(this,arguments);return"encodings"in e||(e.encodings=[].concat(this.sendEncodings||[{}])),e})}function lb(e){if("object"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(){return this.setParametersPromises&&this.setParametersPromises.length?nT.all(this.setParametersPromises).then(()=>t.apply(this,arguments)).finally(()=>{this.setParametersPromises=[]}):t.apply(this,arguments)}}function pb(e){if("object"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createAnswer;e.RTCPeerConnection.prototype.createAnswer=function(){return this.setParametersPromises&&this.setParametersPromises.length?nT.all(this.setParametersPromises).then(()=>t.apply(this,arguments)).finally(()=>{this.setParametersPromises=[]}):t.apply(this,arguments)}}var gb=Object.freeze({__proto__:null,shimOnTrack:ob,shimPeerConnection:sb,shimSenderGetStats:ab,shimReceiverGetStats:cb,shimRemoveStream:db,shimRTCDataChannel:ub,shimAddTransceiver:Ab,shimGetParameters:hb,shimCreateOffer:lb,shimCreateAnswer:pb,shimGetUserMedia:nb,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&"getDisplayMedia"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(e.navigator.mediaDevices.getDisplayMedia=function(r){if(!r||!r.video){const e=new DOMException("getDisplayMedia without video constraints is undefined");return e.name="NotFoundError",e.code=8,nT.reject(e)}return!0===r.video?r.video={mediaSource:t}:r.video.mediaSource=t,e.navigator.mediaDevices.getUserMedia(r)})}});function Eb(e){if("object"==typeof e&&e.RTCPeerConnection){if("getLocalStreams"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!("addStream"in e.RTCPeerConnection.prototype)){const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){this._localStreams||(this._localStreams=[]),this._localStreams.includes(e)||this._localStreams.push(e),e.getAudioTracks().forEach(r=>t.call(this,r,e)),e.getVideoTracks().forEach(r=>t.call(this,r,e))},e.RTCPeerConnection.prototype.addTrack=function(e){for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];return i&&i.forEach(e=>{this._localStreams?this._localStreams.includes(e)||this._localStreams.push(e):this._localStreams=[e]}),t.apply(this,arguments)}}"removeStream"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);const t=this._localStreams.indexOf(e);if(-1===t)return;this._localStreams.splice(t,1);const r=e.getTracks();this.getSenders().forEach(e=>{r.includes(e.track)&&this.removeTrack(e)})})}}function fb(e){if("object"==typeof e&&e.RTCPeerConnection&&("getRemoteStreams"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!("onaddstream"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,"onaddstream",{get(){return this._onaddstream},set(e){this._onaddstream&&(this.removeEventListener("addstream",this._onaddstream),this.removeEventListener("track",this._onaddstreampoly)),this.addEventListener("addstream",this._onaddstream=e),this.addEventListener("track",this._onaddstreampoly=e=>{e.streams.forEach(e=>{if(this._remoteStreams||(this._remoteStreams=[]),this._remoteStreams.includes(e))return;this._remoteStreams.push(e);const t=new Event("addstream");t.stream=e,this.dispatchEvent(t)})})}});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){const e=this;return this._onaddstreampoly||this.addEventListener("track",this._onaddstreampoly=function(t){t.streams.forEach(t=>{if(e._remoteStreams||(e._remoteStreams=[]),e._remoteStreams.indexOf(t)>=0)return;e._remoteStreams.push(t);const r=new Event("addstream");r.stream=t,e.dispatchEvent(r)})}),t.apply(e,arguments)}}}function Ib(e){if("object"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype,r=t.createOffer,i=t.createAnswer,n=t.setLocalDescription,o=t.setRemoteDescription,s=t.addIceCandidate;t.createOffer=function(e,t){const i=arguments.length>=2?arguments[2]:arguments[0],n=r.apply(this,[i]);return t?(n.then(e,t),nT.resolve()):n},t.createAnswer=function(e,t){const r=arguments.length>=2?arguments[2]:arguments[0],n=i.apply(this,[r]);return t?(n.then(e,t),nT.resolve()):n};let a=function(e,t,r){const i=n.apply(this,[e]);return r?(i.then(t,r),nT.resolve()):i};t.setLocalDescription=a,a=function(e,t,r){const i=o.apply(this,[e]);return r?(i.then(t,r),nT.resolve()):i},t.setRemoteDescription=a,a=function(e,t,r){const i=s.apply(this,[e]);return r?(i.then(t,r),nT.resolve()):i},t.addIceCandidate=a}function mb(e){const t=e&&e.navigator;if(t.mediaDevices&&t.mediaDevices.getUserMedia){const e=t.mediaDevices,r=e.getUserMedia.bind(e);t.mediaDevices.getUserMedia=e=>r(_b(e))}!t.getUserMedia&&t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,r,i){t.mediaDevices.getUserMedia(e).then(r,i)}.bind(t))}function _b(e){return e&&void 0!==e.video?Object.assign({},e,{video:Vg(e.video)}):e}function Cb(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,r){if(e&&e.iceServers){const t=[];for(let r=0;r<e.iceServers.length;r++){let i=e.iceServers[r];!i.hasOwnProperty("urls")&&i.hasOwnProperty("url")?(xg("RTCIceServer.url","RTCIceServer.urls"),i=JSON.parse(JSON.stringify(i)),i.urls=i.url,delete i.url,t.push(i)):t.push(e.iceServers[r])}e.iceServers=t}return new t(e,r)},e.RTCPeerConnection.prototype=t.prototype,"generateCertificate"in t&&Object.defineProperty(e.RTCPeerConnection,"generateCertificate",{get:()=>t.generateCertificate})}function Sb(e){"object"==typeof e&&e.RTCTrackEvent&&"receiver"in e.RTCTrackEvent.prototype&&!("transceiver"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function vb(e){const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){if(e){void 0!==e.offerToReceiveAudio&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);const t=this.getTransceivers().find(e=>"audio"===e.receiver.track.kind);!1===e.offerToReceiveAudio&&t?"sendrecv"===t.direction?t.setDirection?t.setDirection("sendonly"):t.direction="sendonly":"recvonly"===t.direction&&(t.setDirection?t.setDirection("inactive"):t.direction="inactive"):!0!==e.offerToReceiveAudio||t||this.addTransceiver("audio"),void 0!==e.offerToReceiveVideo&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);const r=this.getTransceivers().find(e=>"video"===e.receiver.track.kind);!1===e.offerToReceiveVideo&&r?"sendrecv"===r.direction?r.setDirection?r.setDirection("sendonly"):r.direction="sendonly":"recvonly"===r.direction&&(r.setDirection?r.setDirection("inactive"):r.direction="inactive"):!0!==e.offerToReceiveVideo||r||this.addTransceiver("video")}return t.apply(this,arguments)}}function Tb(e){"object"!=typeof e||e.AudioContext||(e.AudioContext=e.webkitAudioContext)}var Rb=Object.freeze({__proto__:null,shimLocalStreamsAPI:Eb,shimRemoteStreamsAPI:fb,shimCallbacksAPI:Ib,shimGetUserMedia:mb,shimConstraints:_b,shimRTCIceServerUrls:Cb,shimTrackEventTransceiver:Sb,shimCreateOfferLegacy:vb,shimAudioContext:Tb}),yb="\t\n\v\f\r                　\u2028\u2029\ufeff",wb=pd,bb=hI,Ob=Bc("".replace),Nb="[\t\n\v\f\r                　\u2028\u2029\ufeff]",Db=RegExp("^"+Nb+Nb+"*"),Pb=RegExp(Nb+Nb+"*$"),Lb=function(e){return function(t){var r=bb(wb(t));return 1&e&&(r=Ob(r,Db,"")),2&e&&(r=Ob(r,Pb,"")),r}},kb={start:Lb(1),end:Lb(2),trim:Lb(3)},Bb=fm.PROPER,Mb=bc,Ub=yb,xb=kb.trim;JA({target:"String",proto:!0,forced:function(e){return Mb((function(){return!!Ub[e]()||"​᠎"!=="​᠎"[e]()||Bb&&Ub[e].name!==e}))}("trim")},{trim:function(){return xb(this)}});var Qb=Eh("String").trim,Fb=Mc,Vb=Qb,jb=String.prototype,Gb=function(e){var t=e.trim;return"string"==typeof e||e===jb||Fb(jb,e)&&t===jb.trim?Vb:t},Kb=d;Gi({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return Kb(URL.prototype.toString,this)}});var Hb={exports:{}};!function(e){var t={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};t.localCName=t.generateIdentifier(),t.splitLines=function(e){return Gb(e).call(e).split("\n").map((function(e){return Gb(e).call(e)}))},t.splitSections=function(e){return e.split("\nm=").map((function(e,t){var r;return Gb(r=t>0?"m="+e:e).call(r)+"\r\n"}))},t.getDescription=function(e){var r=t.splitSections(e);return r&&r[0]},t.getMediaSections=function(e){var r=t.splitSections(e);return r.shift(),r},t.matchPrefix=function(e,r){return t.splitLines(e).filter((function(e){return 0===e.indexOf(r)}))},t.parseCandidate=function(e){for(var t,r={foundation:(t=0===e.indexOf("a=candidate:")?e.substring(12).split(" "):e.substring(10).split(" "))[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]},i=8;i<t.length;i+=2)switch(t[i]){case"raddr":r.relatedAddress=t[i+1];break;case"rport":r.relatedPort=parseInt(t[i+1],10);break;case"tcptype":r.tcpType=t[i+1];break;case"ufrag":r.ufrag=t[i+1],r.usernameFragment=t[i+1];break;default:r[t[i]]=t[i+1]}return r},t.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);var r=e.type;return t.push("typ"),t.push(r),"host"!==r&&e.relatedAddress&&e.relatedPort&&(t.push("raddr"),t.push(e.relatedAddress),t.push("rport"),t.push(e.relatedPort)),e.tcpType&&"tcp"===e.protocol.toLowerCase()&&(t.push("tcptype"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push("ufrag"),t.push(e.usernameFragment||e.ufrag)),"candidate:"+t.join(" ")},t.parseIceOptions=function(e){return e.substr(14).split(" ")},t.parseRtpMap=function(e){var t=e.substr(9).split(" "),r={payloadType:parseInt(t.shift(),10)};return t=t[0].split("/"),r.name=t[0],r.clockRate=parseInt(t[1],10),r.channels=3===t.length?parseInt(t[2],10):1,r.numChannels=r.channels,r},t.writeRtpMap=function(e){var t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);var r=e.channels||e.numChannels||1;return"a=rtpmap:"+t+" "+e.name+"/"+e.clockRate+(1!==r?"/"+r:"")+"\r\n"},t.parseExtmap=function(e){var t=e.substr(9).split(" ");return{id:parseInt(t[0],10),direction:t[0].indexOf("/")>0?t[0].split("/")[1]:"sendrecv",uri:t[1]}},t.writeExtmap=function(e){return"a=extmap:"+(e.id||e.preferredId)+(e.direction&&"sendrecv"!==e.direction?"/"+e.direction:"")+" "+e.uri+"\r\n"},t.parseFmtp=function(e){for(var t,r={},i=e.substr(e.indexOf(" ")+1).split(";"),n=0;n<i.length;n++){var o,s;t=Gb(o=i[n]).call(o).split("="),r[Gb(s=t[0]).call(s)]=t[1]}return r},t.writeFmtp=function(e){var t="",r=e.payloadType;if(void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var i=[];Object.keys(e.parameters).forEach((function(t){e.parameters[t]?i.push(t+"="+e.parameters[t]):i.push(t)})),t+="a=fmtp:"+r+" "+i.join(";")+"\r\n"}return t},t.parseRtcpFb=function(e){var t=e.substr(e.indexOf(" ")+1).split(" ");return{type:t.shift(),parameter:t.join(" ")}},t.writeRtcpFb=function(e){var t="",r=e.payloadType;return void 0!==e.preferredPayloadType&&(r=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((function(e){t+="a=rtcp-fb:"+r+" "+e.type+(e.parameter&&e.parameter.length?" "+e.parameter:"")+"\r\n"})),t},t.parseSsrcMedia=function(e){var t=e.indexOf(" "),r={ssrc:parseInt(e.substr(7,t-7),10)},i=e.indexOf(":",t);return i>-1?(r.attribute=e.substr(t+1,i-t-1),r.value=e.substr(i+1)):r.attribute=e.substr(t+1),r},t.parseSsrcGroup=function(e){var t=e.substr(13).split(" ");return{semantics:t.shift(),ssrcs:t.map((function(e){return parseInt(e,10)}))}},t.getMid=function(e){var r=t.matchPrefix(e,"a=mid:")[0];if(r)return r.substr(6)},t.parseFingerprint=function(e){var t=e.substr(14).split(" ");return{algorithm:t[0].toLowerCase(),value:t[1]}},t.getDtlsParameters=function(e,r){return{role:"auto",fingerprints:t.matchPrefix(e+r,"a=fingerprint:").map(t.parseFingerprint)}},t.writeDtlsParameters=function(e,t){var r="a=setup:"+t+"\r\n";return e.fingerprints.forEach((function(e){r+="a=fingerprint:"+e.algorithm+" "+e.value+"\r\n"})),r},t.parseCryptoLine=function(e){var t=e.substr(9).split(" ");return{tag:parseInt(t[0],10),cryptoSuite:t[1],keyParams:t[2],sessionParams:t.slice(3)}},t.writeCryptoLine=function(e){return"a=crypto:"+e.tag+" "+e.cryptoSuite+" "+("object"==typeof e.keyParams?t.writeCryptoKeyParams(e.keyParams):e.keyParams)+(e.sessionParams?" "+e.sessionParams.join(" "):"")+"\r\n"},t.parseCryptoKeyParams=function(e){if(0!==e.indexOf("inline:"))return null;var t=e.substr(7).split("|");return{keyMethod:"inline",keySalt:t[0],lifeTime:t[1],mkiValue:t[2]?t[2].split(":")[0]:void 0,mkiLength:t[2]?t[2].split(":")[1]:void 0}},t.writeCryptoKeyParams=function(e){return e.keyMethod+":"+e.keySalt+(e.lifeTime?"|"+e.lifeTime:"")+(e.mkiValue&&e.mkiLength?"|"+e.mkiValue+":"+e.mkiLength:"")},t.getCryptoParameters=function(e,r){return t.matchPrefix(e+r,"a=crypto:").map(t.parseCryptoLine)},t.getIceParameters=function(e,r){var i=t.matchPrefix(e+r,"a=ice-ufrag:")[0],n=t.matchPrefix(e+r,"a=ice-pwd:")[0];return i&&n?{usernameFragment:i.substr(12),password:n.substr(10)}:null},t.writeIceParameters=function(e){return"a=ice-ufrag:"+e.usernameFragment+"\r\na=ice-pwd:"+e.password+"\r\n"},t.parseRtpParameters=function(e){for(var r={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},i=t.splitLines(e)[0].split(" "),n=3;n<i.length;n++){var o=i[n],s=t.matchPrefix(e,"a=rtpmap:"+o+" ")[0];if(s){var a=t.parseRtpMap(s),c=t.matchPrefix(e,"a=fmtp:"+o+" ");switch(a.parameters=c.length?t.parseFmtp(c[0]):{},a.rtcpFeedback=t.matchPrefix(e,"a=rtcp-fb:"+o+" ").map(t.parseRtcpFb),r.codecs.push(a),a.name.toUpperCase()){case"RED":case"ULPFEC":r.fecMechanisms.push(a.name.toUpperCase())}}}return t.matchPrefix(e,"a=extmap:").forEach((function(e){r.headerExtensions.push(t.parseExtmap(e))})),r},t.writeRtpDescription=function(e,r){var i="";i+="m="+e+" ",i+=r.codecs.length>0?"9":"0",i+=" UDP/TLS/RTP/SAVPF ",i+=r.codecs.map((function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType})).join(" ")+"\r\n",i+="c=IN IP4 0.0.0.0\r\n",i+="a=rtcp:9 IN IP4 0.0.0.0\r\n",r.codecs.forEach((function(e){i+=t.writeRtpMap(e),i+=t.writeFmtp(e),i+=t.writeRtcpFb(e)}));var n=0;return r.codecs.forEach((function(e){e.maxptime>n&&(n=e.maxptime)})),n>0&&(i+="a=maxptime:"+n+"\r\n"),i+="a=rtcp-mux\r\n",r.headerExtensions&&r.headerExtensions.forEach((function(e){i+=t.writeExtmap(e)})),i},t.parseRtpEncodingParameters=function(e){var r,i=[],n=t.parseRtpParameters(e),o=-1!==n.fecMechanisms.indexOf("RED"),s=-1!==n.fecMechanisms.indexOf("ULPFEC"),a=t.matchPrefix(e,"a=ssrc:").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return"cname"===e.attribute})),c=a.length>0&&a[0].ssrc,d=t.matchPrefix(e,"a=ssrc-group:FID").map((function(e){return e.substr(17).split(" ").map((function(e){return parseInt(e,10)}))}));d.length>0&&d[0].length>1&&d[0][0]===c&&(r=d[0][1]),n.codecs.forEach((function(e){if("RTX"===e.name.toUpperCase()&&e.parameters.apt){var t={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&r&&(t.rtx={ssrc:r}),i.push(t),o&&((t=JSON.parse(JSON.stringify(t))).fec={ssrc:c,mechanism:s?"red+ulpfec":"red"},i.push(t))}})),0===i.length&&c&&i.push({ssrc:c});var u=t.matchPrefix(e,"b=");return u.length&&(u=0===u[0].indexOf("b=TIAS:")?parseInt(u[0].substr(7),10):0===u[0].indexOf("b=AS:")?1e3*parseInt(u[0].substr(5),10)*.95-16e3:void 0,i.forEach((function(e){e.maxBitrate=u}))),i},t.parseRtcpParameters=function(e){var r={},i=t.matchPrefix(e,"a=ssrc:").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return"cname"===e.attribute}))[0];i&&(r.cname=i.value,r.ssrc=i.ssrc);var n=t.matchPrefix(e,"a=rtcp-rsize");r.reducedSize=n.length>0,r.compound=0===n.length;var o=t.matchPrefix(e,"a=rtcp-mux");return r.mux=o.length>0,r},t.parseMsid=function(e){var r,i=t.matchPrefix(e,"a=msid:");if(1===i.length)return{stream:(r=i[0].substr(7).split(" "))[0],track:r[1]};var n=t.matchPrefix(e,"a=ssrc:").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return"msid"===e.attribute}));return n.length>0?{stream:(r=n[0].value.split(" "))[0],track:r[1]}:void 0},t.parseSctpDescription=function(e){var r,i=t.parseMLine(e),n=t.matchPrefix(e,"a=max-message-size:");n.length>0&&(r=parseInt(n[0].substr(19),10)),isNaN(r)&&(r=65536);var o=t.matchPrefix(e,"a=sctp-port:");if(o.length>0)return{port:parseInt(o[0].substr(12),10),protocol:i.fmt,maxMessageSize:r};if(t.matchPrefix(e,"a=sctpmap:").length>0){var s=t.matchPrefix(e,"a=sctpmap:")[0].substr(10).split(" ");return{port:parseInt(s[0],10),protocol:s[1],maxMessageSize:r}}},t.writeSctpDescription=function(e,t){var r=[];return r="DTLS/SCTP"!==e.protocol?["m="+e.kind+" 9 "+e.protocol+" "+t.protocol+"\r\n","c=IN IP4 0.0.0.0\r\n","a=sctp-port:"+t.port+"\r\n"]:["m="+e.kind+" 9 "+e.protocol+" "+t.port+"\r\n","c=IN IP4 0.0.0.0\r\n","a=sctpmap:"+t.port+" "+t.protocol+" 65535\r\n"],void 0!==t.maxMessageSize&&r.push("a=max-message-size:"+t.maxMessageSize+"\r\n"),r.join("")},t.generateSessionId=function(){return Math.random().toString().substr(2,21)},t.writeSessionBoilerplate=function(e,r,i){var n=void 0!==r?r:2;return"v=0\r\no="+(i||"thisisadapterortc")+" "+(e||t.generateSessionId())+" "+n+" IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},t.writeMediaSection=function(e,r,i,n){var o=t.writeRtpDescription(e.kind,r);if(o+=t.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=t.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),"offer"===i?"actpass":"active"),o+="a=mid:"+e.mid+"\r\n",e.direction?o+="a="+e.direction+"\r\n":e.rtpSender&&e.rtpReceiver?o+="a=sendrecv\r\n":e.rtpSender?o+="a=sendonly\r\n":e.rtpReceiver?o+="a=recvonly\r\n":o+="a=inactive\r\n",e.rtpSender){var s="msid:"+n.id+" "+e.rtpSender.track.id+"\r\n";o+="a="+s,o+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" "+s,e.sendEncodingParameters[0].rtx&&(o+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" "+s,o+="a=ssrc-group:FID "+e.sendEncodingParameters[0].ssrc+" "+e.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return o+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" cname:"+t.localCName+"\r\n",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" cname:"+t.localCName+"\r\n"),o},t.getDirection=function(e,r){for(var i=t.splitLines(e),n=0;n<i.length;n++)switch(i[n]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return i[n].substr(2)}return r?t.getDirection(r):"sendrecv"},t.getKind=function(e){return t.splitLines(e)[0].split(" ")[0].substr(2)},t.isRejected=function(e){return"0"===e.split(" ",2)[1]},t.parseMLine=function(e){var r=t.splitLines(e)[0].substr(2).split(" ");return{kind:r[0],port:parseInt(r[1],10),protocol:r[2],fmt:r.slice(3).join(" ")}},t.parseOLine=function(e){var r=t.matchPrefix(e,"o=")[0].substr(2).split(" ");return{username:r[0],sessionId:r[1],sessionVersion:parseInt(r[2],10),netType:r[3],addressType:r[4],address:r[5]}},t.isValidSDP=function(e){if("string"!=typeof e||0===e.length)return!1;for(var r=t.splitLines(e),i=0;i<r.length;i++)if(r[i].length<2||"="!==r[i].charAt(1))return!1;return!0},e.exports=t}(Hb);var Wb=Hb.exports;function Yb(e){if(!e.RTCIceCandidate||e.RTCIceCandidate&&"foundation"in e.RTCIceCandidate.prototype)return;const t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){if("object"==typeof e&&e.candidate&&0===e.candidate.indexOf("a=")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substr(2)),e.candidate&&e.candidate.length){const r=new t(e),i=Wb.parseCandidate(e.candidate),n=Object.assign(r,i);return n.toJSON=function(){return{candidate:n.candidate,sdpMid:n.sdpMid,sdpMLineIndex:n.sdpMLineIndex,usernameFragment:n.usernameFragment}},n}return new t(e)},e.RTCIceCandidate.prototype=t.prototype,kg(e,"icecandidate",t=>(t.candidate&&Object.defineProperty(t,"candidate",{value:new e.RTCIceCandidate(t.candidate),writable:"false"}),t))}function Jb(e,t){if(!e.RTCPeerConnection)return;"sctp"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,"sctp",{get(){return void 0===this._sctp?null:this._sctp}});const r=function(e){if(!e||!e.sdp)return!1;const t=Wb.splitSections(e.sdp);return t.shift(),t.some(e=>{const t=Wb.parseMLine(e);return t&&"application"===t.kind&&-1!==t.protocol.indexOf("SCTP")})},i=function(e){const t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);if(null===t||t.length<2)return-1;const r=parseInt(t[1],10);return r!=r?-1:r},n=function(e){let r=65536;return"firefox"===t.browser&&(r=t.version<57?-1===e?16384:2147483637:t.version<60?57===t.version?65535:65536:2147483637),r},o=function(e,r){let i=65536;"firefox"===t.browser&&57===t.version&&(i=65535);const n=Wb.matchPrefix(e.sdp,"a=max-message-size:");return n.length>0?i=parseInt(n[0].substr(19),10):"firefox"===t.browser&&-1!==r&&(i=2147483637),i},s=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,"chrome"===t.browser&&t.version>=76){const{sdpSemantics:e}=this.getConfiguration();"plan-b"===e&&Object.defineProperty(this,"sctp",{get(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(r(arguments[0])){const e=i(arguments[0]),t=n(e),r=o(arguments[0],e);let s;s=0===t&&0===r?Number.POSITIVE_INFINITY:0===t||0===r?Math.max(t,r):Math.min(t,r);const a={};Object.defineProperty(a,"maxMessageSize",{get:()=>s}),this._sctp=a}return s.apply(this,arguments)}}function qb(e){if(!e.RTCPeerConnection||!("createDataChannel"in e.RTCPeerConnection.prototype))return;function t(e,t){const r=e.send;e.send=function(){const i=arguments[0],n=i.length||i.size||i.byteLength;if("open"===e.readyState&&t.sctp&&n>t.sctp.maxMessageSize)throw new TypeError("Message too large (can send a maximum of "+t.sctp.maxMessageSize+" bytes)");return r.apply(e,arguments)}}const r=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){const e=r.apply(this,arguments);return t(e,this),e},kg(e,"datachannel",e=>(t(e.channel,e.target),e))}function Xb(e){if(!e.RTCPeerConnection||"connectionState"in e.RTCPeerConnection.prototype)return;const t=e.RTCPeerConnection.prototype;Object.defineProperty(t,"connectionState",{get(){return{completed:"connected",checking:"connecting"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(t,"onconnectionstatechange",{get(){return this._onconnectionstatechange||null},set(e){this._onconnectionstatechange&&(this.removeEventListener("connectionstatechange",this._onconnectionstatechange),delete this._onconnectionstatechange),e&&this.addEventListener("connectionstatechange",this._onconnectionstatechange=e)},enumerable:!0,configurable:!0}),["setLocalDescription","setRemoteDescription"].forEach(e=>{const r=t[e];t[e]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{const t=e.target;if(t._lastConnectionState!==t.connectionState){t._lastConnectionState=t.connectionState;const r=new Event("connectionstatechange",e);t.dispatchEvent(r)}return e},this.addEventListener("iceconnectionstatechange",this._connectionstatechangepoly)),r.apply(this,arguments)}})}function zb(e,t){if(!e.RTCPeerConnection)return;if("chrome"===t.browser&&t.version>=71)return;if("safari"===t.browser&&t.version>=605)return;const r=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(t){if(t&&t.sdp&&-1!==t.sdp.indexOf("\na=extmap-allow-mixed")){const r=t.sdp.split("\n").filter(e=>"a=extmap-allow-mixed"!==Gb(e).call(e)).join("\n");e.RTCSessionDescription&&t instanceof e.RTCSessionDescription?arguments[0]=new e.RTCSessionDescription({type:t.type,sdp:r}):t.sdp=r}return r.apply(this,arguments)}}function Zb(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const r=e.RTCPeerConnection.prototype.addIceCandidate;r&&0!==r.length&&(e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?("chrome"===t.browser&&t.version<78||"firefox"===t.browser&&t.version<68||"safari"===t.browser)&&arguments[0]&&""===arguments[0].candidate?nT.resolve():r.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),nT.resolve())})}var $b=Object.freeze({__proto__:null,shimRTCIceCandidate:Yb,shimMaxMessageSize:Jb,shimSendThrowTypeError:qb,shimConnectionState:Xb,removeExtmapAllowMixed:zb,shimAddIceCandidateNullOrEmpty:Zb});let eO,tO;!function(){let{window:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0};const r=Ug,i=Qg(e),n={browserDetails:i,commonShim:$b,extractVersion:Lg,disableLog:Bg,disableWarnings:Mg};switch(i.browser){case"chrome":if(!Bw||!Lw||!t.shimChrome)return r("Chrome shim is not included in this adapter release."),n;if(null===i.version)return r("Chrome shim can not determine version, not shimming."),n;r("adapter.js shimming chrome."),n.browserShim=Bw,Zb(e,i),Rw(e,i),yw(e),Lw(e,i),ww(e),Pw(e,i),bw(e),Ow(e),Nw(e),kw(e,i),Yb(e),Xb(e),Jb(e,i),qb(e),zb(e,i);break;case"firefox":if(!gb||!sb||!t.shimFirefox)return r("Firefox shim is not included in this adapter release."),n;r("adapter.js shimming firefox."),n.browserShim=gb,Zb(e,i),nb(e,i),sb(e,i),ob(e),db(e),ab(e),cb(e),ub(e),Ab(e),hb(e),lb(e),pb(e),Yb(e),Xb(e),Jb(e,i),qb(e);break;case"edge":if(!Jw||!Ww||!t.shimEdge)return r("MS edge shim is not included in this adapter release."),n;r("adapter.js shimming edge."),n.browserShim=Jw,Kw(e),Hw(e),Ww(e,i),Yw(e),Jb(e,i),qb(e);break;case"safari":if(!Rb||!t.shimSafari)return r("Safari shim is not included in this adapter release."),n;r("adapter.js shimming safari."),n.browserShim=Rb,Zb(e,i),Cb(e),vb(e),Ib(e),Eb(e),fb(e),Sb(e),mb(e),Tb(e),Yb(e),Jb(e,i),qb(e),zb(e,i);break;default:r("Unsupported browser!")}}({window:"undefined"==typeof window?void 0:window}),function(e){e.WIN_10="Windows 10",e.WIN_81="Windows 8.1",e.WIN_8="Windows 8",e.WIN_7="Windows 7",e.WIN_VISTA="Windows Vista",e.WIN_SERVER_2003="Windows Server 2003",e.WIN_XP="Windows XP",e.WIN_2000="Windows 2000",e.ANDROID="Android",e.OPEN_BSD="Open BSD",e.SUN_OS="Sun OS",e.LINUX="Linux",e.IOS="iOS",e.MAC_OS="Mac OS",e.QNX="QNX",e.UNIX="UNIX",e.BEOS="BeOS",e.OS_2="OS/2",e.SEARCH_BOT="Search Bot"}(eO||(eO={})),function(e){e.CHROME="Chrome",e.SAFARI="Safari",e.EDGE="Edge",e.FIREFOX="Firefox",e.OPERA="OPR",e.QQ="QQBrowser",e.WECHAT="MicroMessenger"}(tO||(tO={}));var rO={exports:{}};
/*!@license
	 * UAParser.js v0.7.28
	 * Lightweight JavaScript-based User-Agent string parser
	 * https://github.com/faisalman/ua-parser-js
	 *
	 * Copyright © 2012-2021 Faisal Salman <f@faisalman.com>
	 * Licensed under MIT License
	 */!function(t,r){!function(e,i){var n="function",o="object",s="string",a="model",c="name",d="type",u="vendor",A="version",h="architecture",l="console",p="mobile",g="tablet",E="smarttv",f="wearable",I="embedded",m={extend:function(e,t){var r={};for(var i in e)t[i]&&t[i].length%2==0?r[i]=t[i].concat(e[i]):r[i]=e[i];return r},has:function(e,t){return typeof e===s&&-1!==t.toLowerCase().indexOf(e.toLowerCase())},lowerize:function(e){return e.toLowerCase()},major:function(e){return typeof e===s?e.replace(/[^\d\.]/g,"").split(".")[0]:i},trim:function(e,t){return e=e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),void 0===t?e:e.substring(0,255)}},_={rgx:function(e,t){for(var r,s,a,c,d,u,A=0;A<t.length&&!d;){var h=t[A],l=t[A+1];for(r=s=0;r<h.length&&!d;)if(d=h[r++].exec(e))for(a=0;a<l.length;a++)u=d[++s],typeof(c=l[a])===o&&c.length>0?2==c.length?typeof c[1]==n?this[c[0]]=c[1].call(this,u):this[c[0]]=c[1]:3==c.length?typeof c[1]!==n||c[1].exec&&c[1].test?this[c[0]]=u?u.replace(c[1],c[2]):i:this[c[0]]=u?c[1].call(this,u,c[2]):i:4==c.length&&(this[c[0]]=u?c[3].call(this,u.replace(c[1],c[2])):i):this[c]=u||i;A+=2}},str:function(e,t){for(var r in t)if(typeof t[r]===o&&t[r].length>0){for(var n=0;n<t[r].length;n++)if(m.has(t[r][n],e))return"?"===r?i:r}else if(m.has(t[r],e))return"?"===r?i:r;return e}},C={browser:{oldSafari:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}},oldEdge:{version:{.1:"12.",21:"13.",31:"14.",39:"15.",41:"16.",42:"17.",44:"18."}}},os:{windows:{version:{ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2e3:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"}}}},S={browser:[[/\b(?:crmo|crios)\/([\w\.]+)/i],[A,[c,"Chrome"]],[/edg(?:e|ios|a)?\/([\w\.]+)/i],[A,[c,"Edge"]],[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]{3,6})\b.+version\/([\w\.-]+)/i,/(opera)(?:.+version\/|[\/\s]+)([\w\.]+)/i],[c,A],[/opios[\/\s]+([\w\.]+)/i],[A,[c,"Opera Mini"]],[/\sopr\/([\w\.]+)/i],[A,[c,"Opera"]],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i,/(avant\s|iemobile|slim)(?:browser)?[\/\s]?([\w\.]*)/i,/(ba?idubrowser)[\/\s]?([\w\.]+)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\/([\w\.-]+)/i,/(rekonq|puffin|brave|whale|qqbrowserlite|qq)\/([\w\.]+)/i,/(weibo)__([\d\.]+)/i],[c,A],[/(?:[\s\/]uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i],[A,[c,"UCBrowser"]],[/(?:windowswechat)?\sqbcore\/([\w\.]+)\b.*(?:windowswechat)?/i],[A,[c,"WeChat(Win) Desktop"]],[/micromessenger\/([\w\.]+)/i],[A,[c,"WeChat"]],[/konqueror\/([\w\.]+)/i],[A,[c,"Konqueror"]],[/trident.+rv[:\s]([\w\.]{1,9})\b.+like\sgecko/i],[A,[c,"IE"]],[/yabrowser\/([\w\.]+)/i],[A,[c,"Yandex"]],[/(avast|avg)\/([\w\.]+)/i],[[c,/(.+)/,"$1 Secure Browser"],A],[/focus\/([\w\.]+)/i],[A,[c,"Firefox Focus"]],[/opt\/([\w\.]+)/i],[A,[c,"Opera Touch"]],[/coc_coc_browser\/([\w\.]+)/i],[A,[c,"Coc Coc"]],[/dolfin\/([\w\.]+)/i],[A,[c,"Dolphin"]],[/coast\/([\w\.]+)/i],[A,[c,"Opera Coast"]],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[A,[c,"MIUI Browser"]],[/fxios\/([\w\.-]+)/i],[A,[c,"Firefox"]],[/(qihu|qhbrowser|qihoobrowser|360browser)/i],[[c,"360 Browser"]],[/(oculus|samsung|sailfish)browser\/([\w\.]+)/i],[[c,/(.+)/,"$1 Browser"],A],[/(comodo_dragon)\/([\w\.]+)/i],[[c,/_/g," "],A],[/\s(electron)\/([\w\.]+)\ssafari/i,/(tesla)(?:\sqtcarbrowser|\/(20[12]\d\.[\w\.-]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\/\s]?([\w\.]+)/i],[c,A],[/(MetaSr)[\/\s]?([\w\.]+)/i,/(LBBROWSER)/i],[c],[/;fbav\/([\w\.]+);/i],[A,[c,"Facebook"]],[/FBAN\/FBIOS|FB_IAB\/FB4A/i],[[c,"Facebook"]],[/safari\s(line)\/([\w\.]+)/i,/\b(line)\/([\w\.]+)\/iab/i,/(chromium|instagram)[\/\s]([\w\.-]+)/i],[c,A],[/\bgsa\/([\w\.]+)\s.*safari\//i],[A,[c,"GSA"]],[/headlesschrome(?:\/([\w\.]+)|\s)/i],[A,[c,"Chrome Headless"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[c,"Chrome WebView"],A],[/droid.+\sversion\/([\w\.]+)\b.+(?:mobile\ssafari|safari)/i],[A,[c,"Android Browser"]],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i],[c,A],[/version\/([\w\.]+)\s.*mobile\/\w+\s(safari)/i],[A,[c,"Mobile Safari"]],[/version\/([\w\.]+)\s.*(mobile\s?safari|safari)/i],[A,c],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[c,[A,_.str,C.browser.oldSafari.version]],[/(webkit|khtml)\/([\w\.]+)/i],[c,A],[/(navigator|netscape)\/([\w\.-]+)/i],[[c,"Netscape"],A],[/ile\svr;\srv:([\w\.]+)\).+firefox/i],[A,[c,"Firefox Reality"]],[/ekiohf.+(flow)\/([\w\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i,/(firefox)\/([\w\.]+)\s[\w\s\-]+\/[\w\.]+$/i,/(mozilla)\/([\w\.]+)\s.+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]*)/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[c,A]],cpu:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[[h,"amd64"]],[/(ia32(?=;))/i],[[h,m.lowerize]],[/((?:i[346]|x)86)[;\)]/i],[[h,"ia32"]],[/\b(aarch64|armv?8e?l?)\b/i],[[h,"arm64"]],[/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],[[h,"armhf"]],[/windows\s(ce|mobile);\sppc;/i],[[h,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[[h,/ower/,"",m.lowerize]],[/(sun4\w)[;\)]/i],[[h,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?:64|(?=v(?:[1-7]|[5-7]1)l?|;|eabi))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],[[h,m.lowerize]]],device:[[/\b(sch-i[89]0\d|shw-m380s|sm-[pt]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus\s10)/i],[a,[u,"Samsung"],[d,g]],[/\b((?:s[cgp]h|gt|sm)-\w+|galaxy\snexus)/i,/\ssamsung[\s-]([\w-]+)/i,/sec-(sgh\w+)/i],[a,[u,"Samsung"],[d,p]],[/\((ip(?:hone|od)[\s\w]*);/i],[a,[u,"Apple"],[d,p]],[/\((ipad);[\w\s\),;-]+apple/i,/applecoremedia\/[\w\.]+\s\((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i],[a,[u,"Apple"],[d,g]],[/\b((?:agr|ags[23]|bah2?|sht?)-a?[lw]\d{2})/i],[a,[u,"Huawei"],[d,g]],[/d\/huawei([\w\s-]+)[;\)]/i,/\b(nexus\s6p|vog-[at]?l\d\d|ane-[at]?l[x\d]\d|eml-a?l\d\da?|lya-[at]?l\d[\dc]|clt-a?l\d\di?|ele-l\d\d)/i,/\b(\w{2,4}-[atu][ln][01259][019])[;\)\s]/i],[a,[u,"Huawei"],[d,p]],[/\b(poco[\s\w]+)(?:\sbuild|\))/i,/\b;\s(\w+)\sbuild\/hm\1/i,/\b(hm[\s\-_]?note?[\s_]?(?:\d\w)?)\sbuild/i,/\b(redmi[\s\-_]?(?:note|k)?[\w\s_]+)(?:\sbuild|\))/i,/\b(mi[\s\-_]?(?:a\d|one|one[\s_]plus|note lte)?[\s_]?(?:\d?\w?)[\s_]?(?:plus)?)\sbuild/i],[[a,/_/g," "],[u,"Xiaomi"],[d,p]],[/\b(mi[\s\-_]?(?:pad)(?:[\w\s_]+))(?:\sbuild|\))/i],[[a,/_/g," "],[u,"Xiaomi"],[d,g]],[/;\s(\w+)\sbuild.+\soppo/i,/\s(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007)\b/i],[a,[u,"OPPO"],[d,p]],[/\svivo\s(\w+)(?:\sbuild|\))/i,/\s(v[12]\d{3}\w?[at])(?:\sbuild|;)/i],[a,[u,"Vivo"],[d,p]],[/\s(rmx[12]\d{3})(?:\sbuild|;)/i],[a,[u,"Realme"],[d,p]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)\b[\w\s]+build\//i,/\smot(?:orola)?[\s-](\w*)/i,/((?:moto[\s\w\(\)]+|xt\d{3,4}|nexus\s6)(?=\sbuild|\)))/i],[a,[u,"Motorola"],[d,p]],[/\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[a,[u,"Motorola"],[d,g]],[/((?=lg)?[vl]k\-?\d{3})\sbuild|\s3\.[\s\w;-]{10}lg?-([06cv9]{3,4})/i],[a,[u,"LG"],[d,g]],[/(lm-?f100[nv]?|nexus\s[45])/i,/lg[e;\s\/-]+((?!browser|netcast)\w+)/i,/\blg(\-?[\d\w]+)\sbuild/i],[a,[u,"LG"],[d,p]],[/(ideatab[\w\-\s]+)/i,/lenovo\s?(s(?:5000|6000)(?:[\w-]+)|tab(?:[\s\w]+)|yt[\d\w-]{6}|tb[\d\w-]{6})/i],[a,[u,"Lenovo"],[d,g]],[/(?:maemo|nokia).*(n900|lumia\s\d+)/i,/nokia[\s_-]?([\w\.-]*)/i],[[a,/_/g," "],[u,"Nokia"],[d,p]],[/droid.+;\s(pixel\sc)[\s)]/i],[a,[u,"Google"],[d,g]],[/droid.+;\s(pixel[\s\daxl]{0,6})(?:\sbuild|\))/i],[a,[u,"Google"],[d,p]],[/droid.+\s([c-g]\d{4}|so[-l]\w+|xq-a\w[4-7][12])(?=\sbuild\/|\).+chrome\/(?![1-6]{0,1}\d\.))/i],[a,[u,"Sony"],[d,p]],[/sony\stablet\s[ps]\sbuild\//i,/(?:sony)?sgp\w+(?:\sbuild\/|\))/i],[[a,"Xperia Tablet"],[u,"Sony"],[d,g]],[/\s(kb2005|in20[12]5|be20[12][59])\b/i,/\ba000(1)\sbuild/i,/\boneplus\s(a\d{4})[\s)]/i],[a,[u,"OnePlus"],[d,p]],[/(alexa)webm/i,/(kf[a-z]{2}wi)(\sbuild\/|\))/i,/(kf[a-z]+)(\sbuild\/|\)).+silk\//i],[a,[u,"Amazon"],[d,g]],[/(sd|kf)[0349hijorstuw]+(\sbuild\/|\)).+silk\//i],[[a,"Fire Phone"],[u,"Amazon"],[d,p]],[/\((playbook);[\w\s\),;-]+(rim)/i],[a,u,[d,g]],[/((?:bb[a-f]|st[hv])100-\d)/i,/\(bb10;\s(\w+)/i],[a,[u,"BlackBerry"],[d,p]],[/(?:\b|asus_)(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus\s7|padfone|p00[cj])/i],[a,[u,"ASUS"],[d,g]],[/\s(z[es]6[027][01][km][ls]|zenfone\s\d\w?)\b/i],[a,[u,"ASUS"],[d,p]],[/(nexus\s9)/i],[a,[u,"HTC"],[d,g]],[/(htc)[;_\s-]{1,2}([\w\s]+(?=\)|\sbuild)|\w+)/i,/(zte)-(\w*)/i,/(alcatel|geeksphone|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i],[u,[a,/_/g," "],[d,p]],[/droid[x\d\.\s;]+\s([ab][1-7]\-?[0178a]\d\d?)/i],[a,[u,"Acer"],[d,g]],[/droid.+;\s(m[1-5]\snote)\sbuild/i,/\bmz-([\w-]{2,})/i],[a,[u,"Meizu"],[d,p]],[/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i,/(microsoft);\s(lumia[\s\w]+)/i,/(lenovo)[_\s-]?([\w-]+)/i,/linux;.+(jolla);/i,/droid.+;\s(oppo)\s?([\w\s]+)\sbuild/i],[u,a,[d,p]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i,/[;\/]\s?(le[\s\-]+pan)[\s\-]+(\w{1,9})\sbuild/i,/[;\/]\s?(trinity)[\-\s]*(t\d{3})\sbuild/i,/\b(gigaset)[\s\-]+(q\w{1,9})\sbuild/i,/\b(vodafone)\s([\w\s]+)(?:\)|\sbuild)/i],[u,a,[d,g]],[/\s(surface\sduo)\s/i],[a,[u,"Microsoft"],[d,g]],[/droid\s[\d\.]+;\s(fp\du?)\sbuild/i],[a,[u,"Fairphone"],[d,p]],[/\s(u304aa)\sbuild/i],[a,[u,"AT&T"],[d,p]],[/sie-(\w*)/i],[a,[u,"Siemens"],[d,p]],[/[;\/]\s?(rct\w+)\sbuild/i],[a,[u,"RCA"],[d,g]],[/[;\/\s](venue[\d\s]{2,7})\sbuild/i],[a,[u,"Dell"],[d,g]],[/[;\/]\s?(q(?:mv|ta)\w+)\sbuild/i],[a,[u,"Verizon"],[d,g]],[/[;\/]\s(?:barnes[&\s]+noble\s|bn[rt])([\w\s\+]*)\sbuild/i],[a,[u,"Barnes & Noble"],[d,g]],[/[;\/]\s(tm\d{3}\w+)\sbuild/i],[a,[u,"NuVision"],[d,g]],[/;\s(k88)\sbuild/i],[a,[u,"ZTE"],[d,g]],[/;\s(nx\d{3}j)\sbuild/i],[a,[u,"ZTE"],[d,p]],[/[;\/]\s?(gen\d{3})\sbuild.*49h/i],[a,[u,"Swiss"],[d,p]],[/[;\/]\s?(zur\d{3})\sbuild/i],[a,[u,"Swiss"],[d,g]],[/[;\/]\s?((zeki)?tb.*\b)\sbuild/i],[a,[u,"Zeki"],[d,g]],[/[;\/]\s([yr]\d{2})\sbuild/i,/[;\/]\s(dragon[\-\s]+touch\s|dt)(\w{5})\sbuild/i],[[u,"Dragon Touch"],a,[d,g]],[/[;\/]\s?(ns-?\w{0,9})\sbuild/i],[a,[u,"Insignia"],[d,g]],[/[;\/]\s?((nxa|Next)-?\w{0,9})\sbuild/i],[a,[u,"NextBook"],[d,g]],[/[;\/]\s?(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05]))\sbuild/i],[[u,"Voice"],a,[d,p]],[/[;\/]\s?(lvtel\-)?(v1[12])\sbuild/i],[[u,"LvTel"],a,[d,p]],[/;\s(ph-1)\s/i],[a,[u,"Essential"],[d,p]],[/[;\/]\s?(v(100md|700na|7011|917g).*\b)\sbuild/i],[a,[u,"Envizen"],[d,g]],[/[;\/]\s?(trio[\s\w\-\.]+)\sbuild/i],[a,[u,"MachSpeed"],[d,g]],[/[;\/]\s?tu_(1491)\sbuild/i],[a,[u,"Rotor"],[d,g]],[/(shield[\w\s]+)\sbuild/i],[a,[u,"Nvidia"],[d,g]],[/(sprint)\s(\w+)/i],[u,a,[d,p]],[/(kin\.[onetw]{3})/i],[[a,/\./g," "],[u,"Microsoft"],[d,p]],[/droid\s[\d\.]+;\s(cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],[a,[u,"Zebra"],[d,g]],[/droid\s[\d\.]+;\s(ec30|ps20|tc[2-8]\d[kx])\)/i],[a,[u,"Zebra"],[d,p]],[/\s(ouya)\s/i,/(nintendo)\s([wids3utch]+)/i],[u,a,[d,l]],[/droid.+;\s(shield)\sbuild/i],[a,[u,"Nvidia"],[d,l]],[/(playstation\s[345portablevi]+)/i],[a,[u,"Sony"],[d,l]],[/[\s\(;](xbox(?:\sone)?(?!;\sxbox))[\s\);]/i],[a,[u,"Microsoft"],[d,l]],[/smart-tv.+(samsung)/i],[u,[d,E]],[/hbbtv.+maple;(\d+)/i],[[a,/^/,"SmartTV"],[u,"Samsung"],[d,E]],[/(?:linux;\snetcast.+smarttv|lg\snetcast\.tv-201\d)/i],[[u,"LG"],[d,E]],[/(apple)\s?tv/i],[u,[a,"Apple TV"],[d,E]],[/crkey/i],[[a,"Chromecast"],[u,"Google"],[d,E]],[/droid.+aft([\w])(\sbuild\/|\))/i],[a,[u,"Amazon"],[d,E]],[/\(dtv[\);].+(aquos)/i],[a,[u,"Sharp"],[d,E]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[u,m.trim],[a,m.trim],[d,E]],[/[\s\/\(](android\s|smart[-\s]?|opera\s)tv[;\)\s]/i],[[d,E]],[/((pebble))app\/[\d\.]+\s/i],[u,a,[d,f]],[/droid.+;\s(glass)\s\d/i],[a,[u,"Google"],[d,f]],[/droid\s[\d\.]+;\s(wt63?0{2,3})\)/i],[a,[u,"Zebra"],[d,f]],[/(tesla)(?:\sqtcarbrowser|\/20[12]\d\.[\w\.-]+)/i],[u,[d,I]],[/droid .+?; ([^;]+?)(?: build|\) applewebkit).+? mobile safari/i],[a,[d,p]],[/droid .+?;\s([^;]+?)(?: build|\) applewebkit).+?(?! mobile) safari/i],[a,[d,g]],[/\s(tablet|tab)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[d,m.lowerize]],[/(android[\w\.\s\-]{0,9});.+build/i],[a,[u,"Generic"]],[/(phone)/i],[[d,p]]],engine:[[/windows.+\sedge\/([\w\.]+)/i],[A,[c,"EdgeHTML"]],[/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],[A,[c,"Blink"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,/ekioh(flow)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[c,A],[/rv\:([\w\.]{1,9})\b.+(gecko)/i],[A,c]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[c,A],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)(?!.+xbox)/i],[c,[A,_.str,C.os.windows.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[c,"Windows"],[A,_.str,C.os.windows.version]],[/ip[honead]{2,4}\b(?:.*os\s([\w]+)\slike\smac|;\sopera)/i,/cfnetwork\/.+darwin/i],[[A,/_/g,"."],[c,"iOS"]],[/(mac\sos\sx)\s?([\w\s\.]*)/i,/(macintosh|mac(?=_powerpc)\s)(?!.+haiku)/i],[[c,"Mac OS"],[A,/_/g,"."]],[/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|sailfish|contiki)[\/\s-]?([\w\.]*)/i,/(blackberry)\w*\/([\w\.]*)/i,/(tizen|kaios)[\/\s]([\w\.]+)/i,/\((series40);/i],[c,A],[/\(bb(10);/i],[A,[c,"BlackBerry"]],[/(?:symbian\s?os|symbos|s60(?=;)|series60)[\/\s-]?([\w\.]*)/i],[A,[c,"Symbian"]],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[c,"Firefox OS"]],[/web0s;.+rt(tv)/i,/\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],[A,[c,"webOS"]],[/crkey\/([\d\.]+)/i],[A,[c,"Chromecast"]],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[c,"Chromium OS"],A],[/(nintendo|playstation)\s([wids345portablevuch]+)/i,/(xbox);\s+xbox\s([^\);]+)/i,/(mint)[\/\s\(\)]?(\w*)/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?=\slinux)|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus|raspbian)(?:\sgnu\/linux)?(?:\slinux)?[\/\s-]?(?!chrom|package)([\w\.-]*)/i,/(hurd|linux)\s?([\w\.]*)/i,/(gnu)\s?([\w\.]*)/i,/\s([frentopc-]{0,4}bsd|dragonfly)\s?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,/(haiku)\s(\w+)/i],[c,A],[/(sunos)\s?([\w\.\d]*)/i],[[c,"Solaris"],A],[/((?:open)?solaris)[\/\s-]?([\w\.]*)/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms|fuchsia)/i,/(unix)\s?([\w\.]*)/i],[c,A]]},v=function(t,r){if("object"==typeof t&&(r=t,t=i),!(this instanceof v))return new v(t,r).getResult();var n=t||(void 0!==e&&e.navigator&&e.navigator.userAgent?e.navigator.userAgent:""),o=r?m.extend(S,r):S;return this.getBrowser=function(){var e={name:i,version:i};return _.rgx.call(e,n,o.browser),e.major=m.major(e.version),e},this.getCPU=function(){var e={architecture:i};return _.rgx.call(e,n,o.cpu),e},this.getDevice=function(){var e={vendor:i,model:i,type:i};return _.rgx.call(e,n,o.device),e},this.getEngine=function(){var e={name:i,version:i};return _.rgx.call(e,n,o.engine),e},this.getOS=function(){var e={name:i,version:i};return _.rgx.call(e,n,o.os),e},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return n},this.setUA=function(e){return n=typeof e===s&&e.length>255?m.trim(e,255):e,this},this.setUA(n),this};v.VERSION="0.7.28",v.BROWSER={NAME:c,MAJOR:"major",VERSION:A},v.CPU={ARCHITECTURE:h},v.DEVICE={MODEL:a,VENDOR:u,TYPE:d,CONSOLE:l,MOBILE:p,SMARTTV:E,TABLET:g,WEARABLE:f,EMBEDDED:I},v.ENGINE={NAME:c,VERSION:A},v.OS={NAME:c,VERSION:A},t.exports&&(r=t.exports=v),r.UAParser=v;var T=void 0!==e&&(e.jQuery||e.Zepto);if(T&&!T.ua){var R=new v;T.ua=R.getResult(),T.ua.get=function(){return R.getUA()},T.ua.set=function(e){R.setUA(e);var t=R.getResult();for(var r in t)T.ua[r]=t[r]}}}("object"==typeof window?window:e)}(rO,rO.exports);const iO=new(0,rO.exports);let nO=iO.getResult();function oO(e){return e&&iO.setUA(e),nO=iO.getResult(),{name:sO(nO),version:aO(nO),os:cO(nO),osVersion:nO.os.version}}function sO(e){if("Blink"===e.engine.name&&"WeChat"!==e.browser.name)return tO.CHROME;switch(e.browser.name){case"Chrome Headless":case"Chrome":case"Chromium":return tO.CHROME;case"Safari":case"Mobile Safari":return tO.SAFARI;case"Edge":return tO.EDGE;case"Firefox":return tO.FIREFOX;case"QQBrowser":return tO.QQ;case"Opera":return tO.OPERA;case"WeChat":return tO.WECHAT;default:return e.browser.name||""}}function aO(e){let t;return t="Blink"===e.engine.name?e.engine.version||"":e.browser.version||"",t.split(".")[0]}function cO(e){switch(e.os.name){case"Windows":return e.os.version?e.os.name+" "+e.os.version:e.os.name;default:return e.os.name||""}}function dO(){return oO().os}function uO(){const e=oO();return!!("WebKit"===nO.engine.name&&e.os===eO.MAC_OS&&navigator.maxTouchPoints&&navigator.maxTouchPoints>0&&e.name!==tO.SAFARI||EO()&&e.name!==tO.SAFARI)}function AO(){const e=oO();if(uO()){if(e.os===eO.MAC_OS)return!0;if(e.os===eO.IOS){const e=nO.os.version&&nO.os.version.split(".");if(e&&14===Number(e[0])&&e[1]&&Number(e[1])>=3)return!0;if(e&&Number(e[0])>14)return!0}}return!1}function hO(){return"WebKit"===nO.engine.name}function lO(){return oO().name===tO.CHROME}function pO(){return oO().name===tO.SAFARI}function gO(){return oO().name===tO.FIREFOX}function EO(){return oO().os===eO.IOS}function fO(){const e=oO();if(e.os!==eO.IOS||!e.osVersion)return!1;const t=e.osVersion.split(".");return 13===Number(t[0])}function IO(){const e=oO();if(e.os!==eO.IOS||!e.osVersion)return!1;const t=e.osVersion.split(".");return 15===Number(t[0])}function mO(){const e=oO();if(e.os!==eO.IOS||!e.osVersion)return!1;const t=e.osVersion.split(".");return 15===Number(t[0])&&0===Number(t[1])}function _O(){const e=oO();if(e.os!==eO.IOS||!e.osVersion)return!1;const t=e.osVersion.split(".");return 15===Number(t[0])&&Number(t[1])>=1}function CO(){const e=oO();if(e.os!==eO.IOS||!e.osVersion)return!1;const t=e.osVersion.split(".");return 15===Number(t[0])&&Number(t[1])>=2}function SO(){return pO()&&navigator.maxTouchPoints>0}function vO(){return oO().name===tO.WECHAT}function TO(){return window.navigator.appVersion&&null!==window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)&&window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)[1]<=35}function RO(){const e=oO();if(e.name===tO.EDGE||e.name===tO.SAFARI)return!1;return!!navigator.userAgent.toLocaleLowerCase().match(/chrome\/[\d]./i)}function yO(){return oO().os===eO.ANDROID}var wO={exports:{}},bO=JA,OO=Wc,NO=EA.f;bO({target:"Object",stat:!0,forced:Object.defineProperty!==NO,sham:!OO},{defineProperty:NO});var DO=_d.Object,PO=wO.exports=function(e,t,r){return DO.defineProperty(e,t,r)};DO.defineProperty.sham&&(PO.sham=!0);var LO=wO.exports;function kO(e,t,r){return t in e?LO(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var BO,MO={exports:{}},UO=function(e,t){return function(){for(var r=new Array(arguments.length),i=0;i<r.length;i++)r[i]=arguments[i];return e.apply(t,r)}},xO=UO,QO=Object.prototype.toString,FO=(BO=Object.create(null),function(e){var t=QO.call(e);return BO[t]||(BO[t]=t.slice(8,-1).toLowerCase())});function VO(e){return e=e.toLowerCase(),function(t){return FO(t)===e}}function jO(e){return Array.isArray(e)}function GO(e){return void 0===e}var KO=VO("ArrayBuffer");function HO(e){return null!==e&&"object"==typeof e}function WO(e){if("object"!==FO(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}var YO=VO("Date"),JO=VO("File"),qO=VO("Blob"),XO=VO("FileList");function zO(e){return"[object Function]"===QO.call(e)}var ZO=VO("URLSearchParams");function $O(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),jO(e))for(var r=0,i=e.length;r<i;r++)t.call(null,e[r],r,e);else for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.call(null,e[n],n,e)}var eN=function(e){return function(t){return e&&t instanceof e}}("undefined"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array)),tN={isArray:jO,isArrayBuffer:KO,isBuffer:function(e){return null!==e&&!GO(e)&&null!==e.constructor&&!GO(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){var t="[object FormData]";return e&&("function"==typeof FormData&&e instanceof FormData||QO.call(e)===t||zO(e.toString)&&e.toString()===t)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&KO(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:HO,isPlainObject:WO,isUndefined:GO,isDate:YO,isFile:JO,isBlob:qO,isFunction:zO,isStream:function(e){return HO(e)&&zO(e.pipe)},isURLSearchParams:ZO,isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:$O,merge:function e(){var t={};function r(r,i){WO(t[i])&&WO(r)?t[i]=e(t[i],r):WO(r)?t[i]=e({},r):jO(r)?t[i]=r.slice():t[i]=r}for(var i=0,n=arguments.length;i<n;i++)$O(arguments[i],r);return t},extend:function(e,t,r){return $O(t,(function(t,i){e[i]=r&&"function"==typeof t?xO(t,r):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e},inherits:function(e,t,r,i){e.prototype=Object.create(t.prototype,i),e.prototype.constructor=e,r&&Object.assign(e.prototype,r)},toFlatObject:function(e,t,r){var i,n,o,s={};t=t||{};do{for(n=(i=Object.getOwnPropertyNames(e)).length;n-- >0;)s[o=i[n]]||(t[o]=e[o],s[o]=!0);e=Object.getPrototypeOf(e)}while(e&&(!r||r(e,t))&&e!==Object.prototype);return t},kindOf:FO,kindOfTest:VO,endsWith:function(e,t,r){e=String(e),(void 0===r||r>e.length)&&(r=e.length),r-=t.length;var i=e.indexOf(t,r);return-1!==i&&i===r},toArray:function(e){if(!e)return null;var t=e.length;if(GO(t))return null;for(var r=new Array(t);t-- >0;)r[t]=e[t];return r},isTypedArray:eN,isFileList:XO},rN=tN;function iN(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var nN=function(e,t,r){if(!t)return e;var i;if(r)i=r(t);else if(rN.isURLSearchParams(t))i=t.toString();else{var n=[];rN.forEach(t,(function(e,t){null!=e&&(rN.isArray(e)?t+="[]":e=[e],rN.forEach(e,(function(e){rN.isDate(e)?e=e.toISOString():rN.isObject(e)&&(e=JSON.stringify(e)),n.push(iN(t)+"="+iN(e))})))})),i=n.join("&")}if(i){var o=e.indexOf("#");-1!==o&&(e=e.slice(0,o)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e},oN=tN;function sN(){this.handlers=[]}sN.prototype.use=function(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!r&&r.synchronous,runWhen:r?r.runWhen:null}),this.handlers.length-1},sN.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},sN.prototype.forEach=function(e){oN.forEach(this.handlers,(function(t){null!==t&&e(t)}))};var aN=sN,cN=tN,dN=tN;function uN(e,t,r,i,n){Error.call(this),this.message=e,this.name="AxiosError",t&&(this.code=t),r&&(this.config=r),i&&(this.request=i),n&&(this.response=n)}dN.inherits(uN,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var AN=uN.prototype,hN={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach((function(e){hN[e]={value:e}})),Object.defineProperties(uN,hN),Object.defineProperty(AN,"isAxiosError",{value:!0}),uN.from=function(e,t,r,i,n,o){var s=Object.create(AN);return dN.toFlatObject(e,s,(function(e){return e!==Error.prototype})),uN.call(s,e.message,t,r,i,n),s.name=e.name,o&&Object.assign(s,o),s};var lN=uN,pN={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},gN=tN;var EN=function(e,t){t=t||new FormData;var r=[];function i(e){return null===e?"":gN.isDate(e)?e.toISOString():gN.isArrayBuffer(e)||gN.isTypedArray(e)?"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}return function e(n,o){if(gN.isPlainObject(n)||gN.isArray(n)){if(-1!==r.indexOf(n))throw Error("Circular reference detected in "+o);r.push(n),gN.forEach(n,(function(r,n){if(!gN.isUndefined(r)){var s,a=o?o+"."+n:n;if(r&&!o&&"object"==typeof r)if(gN.endsWith(n,"{}"))r=JSON.stringify(r);else if(gN.endsWith(n,"[]")&&(s=gN.toArray(r)))return void s.forEach((function(e){!gN.isUndefined(e)&&t.append(a,i(e))}));e(r,a)}})),r.pop()}else t.append(o,i(n))}(e),t},fN=lN,IN=tN,mN=IN.isStandardBrowserEnv()?{write:function(e,t,r,i,n,o){var s=[];s.push(e+"="+encodeURIComponent(t)),IN.isNumber(r)&&s.push("expires="+new Date(r).toGMTString()),IN.isString(i)&&s.push("path="+i),IN.isString(n)&&s.push("domain="+n),!0===o&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},_N=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)},CN=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e},SN=function(e,t){return e&&!_N(t)?CN(e,t):t},vN=tN,TN=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],RN=tN,yN=RN.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a");function i(e){var i=e;return t&&(r.setAttribute("href",i),i=r.href),r.setAttribute("href",i),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:"/"===r.pathname.charAt(0)?r.pathname:"/"+r.pathname}}return e=i(window.location.href),function(t){var r=RN.isString(t)?i(t):t;return r.protocol===e.protocol&&r.host===e.host}}():function(){return!0},wN=lN;function bN(e){wN.call(this,null==e?"canceled":e,wN.ERR_CANCELED),this.name="CanceledError"}tN.inherits(bN,wN,{__CANCEL__:!0});var ON=bN,NN=tN,DN=function(e,t,r){var i=r.config.validateStatus;r.status&&i&&!i(r.status)?t(new fN("Request failed with status code "+r.status,[fN.ERR_BAD_REQUEST,fN.ERR_BAD_RESPONSE][Math.floor(r.status/100)-4],r.config,r.request,r)):e(r)},PN=mN,LN=nN,kN=SN,BN=function(e){var t,r,i,n={};return e?(vN.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=vN.trim(e.substr(0,i)).toLowerCase(),r=vN.trim(e.substr(i+1)),t){if(n[t]&&TN.indexOf(t)>=0)return;n[t]="set-cookie"===t?(n[t]?n[t]:[]).concat([r]):n[t]?n[t]+", "+r:r}})),n):n},MN=yN,UN=pN,xN=lN,QN=ON,FN=function(e){var t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""},VN=function(e){return new Promise((function(t,r){var i,n=e.data,o=e.headers,s=e.responseType;function a(){e.cancelToken&&e.cancelToken.unsubscribe(i),e.signal&&e.signal.removeEventListener("abort",i)}NN.isFormData(n)&&NN.isStandardBrowserEnv()&&delete o["Content-Type"];var c=new XMLHttpRequest;if(e.auth){var d=e.auth.username||"",u=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";o.Authorization="Basic "+btoa(d+":"+u)}var A=kN(e.baseURL,e.url);function h(){if(c){var i="getAllResponseHeaders"in c?BN(c.getAllResponseHeaders()):null,n={data:s&&"text"!==s&&"json"!==s?c.response:c.responseText,status:c.status,statusText:c.statusText,headers:i,config:e,request:c};DN((function(e){t(e),a()}),(function(e){r(e),a()}),n),c=null}}if(c.open(e.method.toUpperCase(),LN(A,e.params,e.paramsSerializer),!0),c.timeout=e.timeout,"onloadend"in c?c.onloadend=h:c.onreadystatechange=function(){c&&4===c.readyState&&(0!==c.status||c.responseURL&&0===c.responseURL.indexOf("file:"))&&setTimeout(h)},c.onabort=function(){c&&(r(new xN("Request aborted",xN.ECONNABORTED,e,c)),c=null)},c.onerror=function(){r(new xN("Network Error",xN.ERR_NETWORK,e,c,c)),c=null},c.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",i=e.transitional||UN;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),r(new xN(t,i.clarifyTimeoutError?xN.ETIMEDOUT:xN.ECONNABORTED,e,c)),c=null},NN.isStandardBrowserEnv()){var l=(e.withCredentials||MN(A))&&e.xsrfCookieName?PN.read(e.xsrfCookieName):void 0;l&&(o[e.xsrfHeaderName]=l)}"setRequestHeader"in c&&NN.forEach(o,(function(e,t){void 0===n&&"content-type"===t.toLowerCase()?delete o[t]:c.setRequestHeader(t,e)})),NN.isUndefined(e.withCredentials)||(c.withCredentials=!!e.withCredentials),s&&"json"!==s&&(c.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&c.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&c.upload&&c.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(i=function(e){c&&(r(!e||e&&e.type?new QN:e),c.abort(),c=null)},e.cancelToken&&e.cancelToken.subscribe(i),e.signal&&(e.signal.aborted?i():e.signal.addEventListener("abort",i))),n||(n=null);var p=FN(A);p&&-1===["http","https","file"].indexOf(p)?r(new xN("Unsupported protocol "+p+":",xN.ERR_BAD_REQUEST,e)):c.send(n)}))},jN=tN,GN=function(e,t){cN.forEach(e,(function(r,i){i!==t&&i.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[i])}))},KN=lN,HN=EN,WN={"Content-Type":"application/x-www-form-urlencoded"};function YN(e,t){!jN.isUndefined(e)&&jN.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var JN,qN={transitional:pN,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(JN=VN),JN),transformRequest:[function(e,t){if(GN(t,"Accept"),GN(t,"Content-Type"),jN.isFormData(e)||jN.isArrayBuffer(e)||jN.isBuffer(e)||jN.isStream(e)||jN.isFile(e)||jN.isBlob(e))return e;if(jN.isArrayBufferView(e))return e.buffer;if(jN.isURLSearchParams(e))return YN(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString();var r,i=jN.isObject(e),n=t&&t["Content-Type"];if((r=jN.isFileList(e))||i&&"multipart/form-data"===n){var o=this.env&&this.env.FormData;return HN(r?{"files[]":e}:e,o&&new o)}return i||"application/json"===n?(YN(t,"application/json"),function(e,t,r){if(jN.isString(e))try{return(t||JSON.parse)(e),jN.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(r||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||qN.transitional,r=t&&t.silentJSONParsing,i=t&&t.forcedJSONParsing,n=!r&&"json"===this.responseType;if(n||i&&jN.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw KN.from(e,KN.ERR_BAD_RESPONSE,this,null,this.response);throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:null},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};jN.forEach(["delete","get","head"],(function(e){qN.headers[e]={}})),jN.forEach(["post","put","patch"],(function(e){qN.headers[e]=jN.merge(WN)}));var XN=qN,zN=tN,ZN=XN,$N=function(e){return!(!e||!e.__CANCEL__)},eD=tN,tD=function(e,t,r){var i=this||ZN;return zN.forEach(r,(function(r){e=r.call(i,e,t)})),e},rD=$N,iD=XN,nD=ON;function oD(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new nD}var sD=tN,aD=function(e,t){t=t||{};var r={};function i(e,t){return sD.isPlainObject(e)&&sD.isPlainObject(t)?sD.merge(e,t):sD.isPlainObject(t)?sD.merge({},t):sD.isArray(t)?t.slice():t}function n(r){return sD.isUndefined(t[r])?sD.isUndefined(e[r])?void 0:i(void 0,e[r]):i(e[r],t[r])}function o(e){if(!sD.isUndefined(t[e]))return i(void 0,t[e])}function s(r){return sD.isUndefined(t[r])?sD.isUndefined(e[r])?void 0:i(void 0,e[r]):i(void 0,t[r])}function a(r){return r in t?i(e[r],t[r]):r in e?i(void 0,e[r]):void 0}var c={url:o,method:o,data:o,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:a};return sD.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=c[e]||n,i=t(e);sD.isUndefined(i)&&t!==a||(r[e]=i)})),r},cD="0.27.2",dD=cD,uD=lN,AD={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){AD[e]=function(r){return typeof r===e||"a"+(t<1?"n ":" ")+e}}));var hD={};AD.transitional=function(e,t,r){function i(e,t){return"[Axios v"+dD+"] Transitional option '"+e+"'"+t+(r?". "+r:"")}return function(r,n,o){if(!1===e)throw new uD(i(n," has been removed"+(t?" in "+t:"")),uD.ERR_DEPRECATED);return t&&!hD[n]&&(hD[n]=!0,console.warn(i(n," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(r,n,o)}};var lD=tN,pD=nN,gD=aN,ED=function(e){return oD(e),e.headers=e.headers||{},e.data=tD.call(e,e.data,e.headers,e.transformRequest),e.headers=eD.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),eD.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||iD.adapter)(e).then((function(t){return oD(e),t.data=tD.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return rD(t)||(oD(e),t&&t.response&&(t.response.data=tD.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))},fD=aD,ID=SN,mD={assertOptions:function(e,t,r){if("object"!=typeof e)throw new uD("options must be an object",uD.ERR_BAD_OPTION_VALUE);for(var i=Object.keys(e),n=i.length;n-- >0;){var o=i[n],s=t[o];if(s){var a=e[o],c=void 0===a||s(a,o,e);if(!0!==c)throw new uD("option "+o+" must be "+c,uD.ERR_BAD_OPTION_VALUE)}else if(!0!==r)throw new uD("Unknown option "+o,uD.ERR_BAD_OPTION)}},validators:AD},_D=mD.validators;function CD(e){this.defaults=e,this.interceptors={request:new gD,response:new gD}}CD.prototype.request=function(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=fD(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var r=t.transitional;void 0!==r&&mD.assertOptions(r,{silentJSONParsing:_D.transitional(_D.boolean),forcedJSONParsing:_D.transitional(_D.boolean),clarifyTimeoutError:_D.transitional(_D.boolean)},!1);var i=[],n=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(n=n&&e.synchronous,i.unshift(e.fulfilled,e.rejected))}));var o,s=[];if(this.interceptors.response.forEach((function(e){s.push(e.fulfilled,e.rejected)})),!n){var a=[ED,void 0];for(Array.prototype.unshift.apply(a,i),a=a.concat(s),o=Promise.resolve(t);a.length;)o=o.then(a.shift(),a.shift());return o}for(var c=t;i.length;){var d=i.shift(),u=i.shift();try{c=d(c)}catch(e){u(e);break}}try{o=ED(c)}catch(e){return Promise.reject(e)}for(;s.length;)o=o.then(s.shift(),s.shift());return o},CD.prototype.getUri=function(e){e=fD(this.defaults,e);var t=ID(e.baseURL,e.url);return pD(t,e.params,e.paramsSerializer)},lD.forEach(["delete","get","head","options"],(function(e){CD.prototype[e]=function(t,r){return this.request(fD(r||{},{method:e,url:t,data:(r||{}).data}))}})),lD.forEach(["post","put","patch"],(function(e){function t(t){return function(r,i,n){return this.request(fD(n||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:r,data:i}))}}CD.prototype[e]=t(),CD.prototype[e+"Form"]=t(!0)}));var SD=CD,vD=ON;function TD(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var r=this;this.promise.then((function(e){if(r._listeners){var t,i=r._listeners.length;for(t=0;t<i;t++)r._listeners[t](e);r._listeners=null}})),this.promise.then=function(e){var t,i=new Promise((function(e){r.subscribe(e),t=e})).then(e);return i.cancel=function(){r.unsubscribe(t)},i},e((function(e){r.reason||(r.reason=new vD(e),t(r.reason))}))}TD.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},TD.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},TD.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},TD.source=function(){var e;return{token:new TD((function(t){e=t})),cancel:e}};var RD=TD,yD=tN,wD=tN,bD=UO,OD=SD,ND=aD;var DD=function e(t){var r=new OD(t),i=bD(OD.prototype.request,r);return wD.extend(i,OD.prototype,r),wD.extend(i,r),i.create=function(r){return e(ND(t,r))},i}(XN);DD.Axios=OD,DD.CanceledError=ON,DD.CancelToken=RD,DD.isCancel=$N,DD.VERSION=cD,DD.toFormData=EN,DD.AxiosError=lN,DD.Cancel=DD.CanceledError,DD.all=function(e){return Promise.all(e)},DD.spread=function(e){return function(t){return e.apply(null,t)}},DD.isAxiosError=function(e){return yD.isObject(e)&&!0===e.isAxiosError},MO.exports=DD,MO.exports.default=DD;var PD=MO.exports;class LD{constructor(e){kO(this,"logger",void 0),kO(this,"prefixLists",[]),this.logger=e}debug(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.debug(...this.prefixLists,...t)}info(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.info(...this.prefixLists,...t)}warning(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.warning(...this.prefixLists,...t)}error(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.logger.error(...this.prefixLists,...t)}prefix(e){return this.prefixLists.push(e),this}popPrefix(){return this.prefixLists.pop(),this}}class kD{constructor(){kO(this,"_events",{}),kO(this,"addListener",this.on)}getListeners(e){return this._events[e]?this._events[e].map(e=>e.listener):[]}on(e,t){this._events[e]||(this._events[e]=[]);const r=this._events[e];-1===this._indexOfListener(r,t)&&r.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const r=this._events[e];-1===this._indexOfListener(r,t)&&r.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const r=this._events[e],i=this._indexOfListener(r,t);-1!==i&&r.splice(i,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map(e=>e);for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];for(let r=0;r<t.length;r+=1){const n=t[r];n.once&&this.off(e,n.listener),n.listener.apply(this,i||[])}}_indexOfListener(e,t){let r=e.length;for(;r--;)if(e[r].listener===t)return r;return-1}}const BD=new class extends kD{reportLogUploadError(e){this.emit("REPORT_LOG_UPLOAD",e)}};let MD;!function(e){e.UNEXPECTED_ERROR="UNEXPECTED_ERROR",e.UNEXPECTED_RESPONSE="UNEXPECTED_RESPONSE",e.TIMEOUT="TIMEOUT",e.INVALID_PARAMS="INVALID_PARAMS",e.NOT_READABLE="NOT_READABLE",e.NOT_SUPPORTED="NOT_SUPPORTED",e.INVALID_OPERATION="INVALID_OPERATION",e.OPERATION_ABORTED="OPERATION_ABORTED",e.WEB_SECURITY_RESTRICT="WEB_SECURITY_RESTRICT",e.EXCHANGE_SDP_FAILED="EXCHANGE_SDP_FAILED",e.NETWORK_ERROR="NETWORK_ERROR",e.NETWORK_TIMEOUT="NETWORK_TIMEOUT",e.NETWORK_RESPONSE_ERROR="NETWORK_RESPONSE_ERROR",e.API_INVOKE_TIMEOUT="API_INVOKE_TIMEOUT",e.ENUMERATE_DEVICES_FAILED="ENUMERATE_DEVICES_FAILED",e.DEVICE_NOT_FOUND="DEVICE_NOT_FOUND",e.ELECTRON_IS_NULL="ELECTRON_IS_NULL",e.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR="ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR",e.CHROME_PLUGIN_NO_RESPONSE="CHROME_PLUGIN_NO_RESPONSE",e.CHROME_PLUGIN_NOT_INSTALL="CHROME_PLUGIN_NOT_INSTALL",e.MEDIA_OPTION_INVALID="MEDIA_OPTION_INVALID",e.PERMISSION_DENIED="PERMISSION_DENIED",e.CONSTRAINT_NOT_SATISFIED="CONSTRAINT_NOT_SATISFIED",e.TRACK_IS_DISABLED="TRACK_IS_DISABLED",e.GET_VIDEO_ELEMENT_VISIBLE_ERROR="GET_VIDEO_ELEMENT_VISIBLE_ERROR",e.SHARE_AUDIO_NOT_ALLOWED="SHARE_AUDIO_NOT_ALLOWED",e.LOW_STREAM_ENCODING_ERROR="LOW_STREAM_ENCODING_ERROR",e.SET_ENCODING_PARAMETER_ERROR="SET_ENCODING_PARAMETER_ERROR",e.TRACK_STATE_UNREACHABLE="TRACK_STATE_UNREACHABLE",e.INVALID_UINT_UID_FROM_STRING_UID="INVALID_UINT_UID_FROM_STRING_UID",e.CAN_NOT_GET_PROXY_SERVER="CAN_NOT_GET_PROXY_SERVER",e.CAN_NOT_GET_GATEWAY_SERVER="CAN_NOT_GET_GATEWAY_SERVER",e.VOID_GATEWAY_ADDRESS="VOID_GATEWAY_ADDRESS",e.UID_CONFLICT="UID_CONFLICT",e.MULTI_UNILBS_RESPONSE_ERROR="MULTI_UNILBS_RESPONSE_ERROR",e.UPDATE_TICKET_FAILED="UPDATE_TICKET_FAILED",e.INVALID_LOCAL_TRACK="INVALID_LOCAL_TRACK",e.INVALID_TRACK="INVALID_TRACK",e.SENDER_NOT_FOUND="SENDER_NOT_FOUND",e.CREATE_OFFER_FAILED="CREATE_OFFER_FAILED",e.SET_ANSWER_FAILED="SET_ANSWER_FAILED",e.ICE_FAILED="ICE_FAILED",e.PC_CLOSED="PC_CLOSED",e.SENDER_REPLACE_FAILED="SENDER_REPLACE_FAILED",e.GET_LOCAL_CAPABILITIES_FAILED="GET_LOCAL_CAPABILITIES_FAILED",e.GET_LOCAL_CONNECTION_PARAMS_FAILED="GET_LOCAL_CONNECTION_PARAMS_FAILED",e.SUBSCRIBE_FAILED="SUBSCRIBE_FAILED",e.UNSUBSCRIBE_FAILED="UNSUBSCRIBE_FAILED",e.GATEWAY_P2P_LOST="GATEWAY_P2P_LOST",e.NO_ICE_CANDIDATE="NO_ICE_CANDIDATE",e.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS="CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS",e.EXIST_DISABLED_VIDEO_TRACK="EXIST_DISABLED_VIDEO_TRACK",e.INVALID_REMOTE_USER="INVALID_REMOTE_USER",e.REMOTE_USER_IS_NOT_PUBLISHED="REMOTE_USER_IS_NOT_PUBLISHED",e.CUSTOM_REPORT_SEND_FAILED="CUSTOM_REPORT_SEND_FAILED",e.CUSTOM_REPORT_FREQUENCY_TOO_HIGH="CUSTOM_REPORT_FREQUENCY_TOO_HIGH",e.FETCH_AUDIO_FILE_FAILED="FETCH_AUDIO_FILE_FAILED",e.READ_LOCAL_AUDIO_FILE_ERROR="READ_LOCAL_AUDIO_FILE_ERROR",e.DECODE_AUDIO_FILE_FAILED="DECODE_AUDIO_FILE_FAILED",e.WS_ABORT="WS_ABORT",e.WS_DISCONNECT="WS_DISCONNECT",e.WS_ERR="WS_ERR",e.LIVE_STREAMING_TASK_CONFLICT="LIVE_STREAMING_TASK_CONFLICT",e.LIVE_STREAMING_INVALID_ARGUMENT="LIVE_STREAMING_INVALID_ARGUMENT",e.LIVE_STREAMING_INTERNAL_SERVER_ERROR="LIVE_STREAMING_INTERNAL_SERVER_ERROR",e.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED="LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED",e.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED="LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED",e.LIVE_STREAMING_CDN_ERROR="LIVE_STREAMING_CDN_ERROR",e.LIVE_STREAMING_INVALID_RAW_STREAM="LIVE_STREAMING_INVALID_RAW_STREAM",e.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT="LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT",e.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE="LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE",e.LIVE_STREAMING_WARN_FREQUENT_REQUEST="LIVE_STREAMING_WARN_FREQUENT_REQUEST",e.WEBGL_INTERNAL_ERROR="WEBGL_INTERNAL_ERROR",e.BEAUTY_PROCESSOR_INTERNAL_ERROR="BEAUTY_PROCESSOR_INTERNAL_ERROR",e.CROSS_CHANNEL_WAIT_STATUS_ERROR="CROSS_CHANNEL_WAIT_STATUS_ERROR",e.CROSS_CHANNEL_FAILED_JOIN_SRC="CROSS_CHANNEL_FAILED_JOIN_SEC",e.CROSS_CHANNEL_FAILED_JOIN_DEST="CROSS_CHANNEL_FAILED_JOIN_DEST",e.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST="CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST",e.CROSS_CHANNEL_SERVER_ERROR_RESPONSE="CROSS_CHANNEL_SERVER_ERROR_RESPONSE",e.METADATA_OUT_OF_RANGE="METADATA_OUT_OF_RANGE",e.LOCAL_AEC_ERROR="LOCAL_AEC_ERROR",e.INVALID_PLUGIN="INVALID_PLUGIN",e.DISCONNECT_P2P="DISCONNECT_P2P",e.INIT_WEBSOCKET_TIMEOUT="INIT_WEBSOCKET_TIMEOUT",e.CONVERTING_IMAGEDATA_TO_BLOB_FAILED="CONVERTING_IMAGEDATA_TO_BLOB_FAILED",e.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED="CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED"}(MD||(MD={}));class UD extends Error{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;super(t),kO(this,"code",void 0),kO(this,"message",void 0),kO(this,"data",void 0),kO(this,"name","AgoraRTCException"),this.code=e,this.message="AgoraRTCError ".concat(this.code,": ").concat(t),this.data=r}toString(){return this.data?"data: ".concat(JSON.stringify(this.data),"\n").concat(this.stack):"".concat(this.stack)}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"error";return"error"===e&&HD.error(this.toString()),"warning"===e&&HD.warning(this.toString()),this}throw(){throw this.print(),this}}const xD={timeout:500,timeoutFactor:1.5,maxRetryCount:1/0,maxRetryTimeout:1e4};function QD(e,t){const r=Math.floor(t.timeout*Math.pow(t.timeoutFactor,e));return Math.min(t.maxRetryTimeout,r)}function FD(e,t,r,i){const n=Object.assign({},xD,i);let o=n.timeout;const s=async()=>{await function(e){return new nT(t=>{window.setTimeout(t,e)})}(o),o*=n.timeoutFactor,o=Math.min(n.maxRetryTimeout,o)};let a=!1;const c=new nT(async(i,o)=>{t=t||(()=>!1),r=r||(()=>!0);for(let c=0;c<n.maxRetryCount;c+=1){if(a)return o(new UD(MD.OPERATION_ABORTED));try{const r=await e();if(!t(r,c))return i(r);if(c+1===n.maxRetryCount)return i(r);await s()}catch(e){if(!r(e,c))return o(e);if(c+1===n.maxRetryCount)return o(e);await s()}}});return c.cancel=()=>a=!0,c}function VD(){const e=new Date;return e.toTimeString().split(" ")[0]+":"+e.getMilliseconds()}const jD={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4},GD=Date.now(),KD=e=>{for(const t in jD)if(Object.prototype.hasOwnProperty.call(jD,t)&&jD[t]===e)return t;return"DEFAULT"};const HD=new class{constructor(){kO(this,"proxyServerURL",void 0),kO(this,"logLevel",jD.DEBUG),kO(this,"uploadState","collecting"),kO(this,"uploadLogWaitingList",[]),kO(this,"uploadLogUploadingList",[]),kO(this,"uploadErrorCount",0),kO(this,"currentLogID",0),kO(this,"url",void 0),kO(this,"extLog",(e,t)=>{this.appendLogToWaitingList(e,t)})}debug(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[jD.DEBUG].concat(t);this.log.apply(this,i)}info(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[jD.INFO].concat(t);this.log.apply(this,i)}warning(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[jD.WARNING].concat(t);this.log.apply(this,i)}error(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[jD.ERROR].concat(t);this.log.apply(this,i)}upload(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[jD.DEBUG].concat(t);this.uploadLog.apply(this,i)}setLogLevel(e){e=Math.min(Math.max(0,e),4),this.logLevel=e}enableLogUpload(){OP("UPLOAD_LOG",!0)}disableLogUpload(){OP("UPLOAD_LOG",!1),this.uploadLogUploadingList=[],this.uploadLogWaitingList=[]}setProxyServer(e){this.proxyServerURL=e}prefix(e){return new LD(this).prefix(e)}log(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(Date.now()-GD<100)return void setTimeout(()=>{this.log(...t)},Date.now()-GD);const i=Math.max(0,Math.min(4,t[0]));if(t[0]=VD()+" Agora-SDK [".concat(KD(i),"]:"),this.appendLogToWaitingList(i,t),i<this.logLevel)return;const n=VD()+" %cAgora-SDK [".concat(KD(i),"]:");let o=[];if(!NP("USE_NEW_LOG"))switch(i){case jD.DEBUG:o=[n,"color: #64B5F6;"].concat(t.slice(1)),console.log.apply(console,o);break;case jD.INFO:o=[n,"color: #1E88E5; font-weight: bold;"].concat(t.slice(1)),console.log.apply(console,o);break;case jD.WARNING:o=[n,"color: #FB8C00; font-weight: bold;"].concat(t.slice(1)),console.warn.apply(console,o);break;case jD.ERROR:o=[n,"color: #B00020; font-weight: bold;"].concat(t.slice(1)),console.error.apply(console,o)}}uploadLog(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(Date.now()-GD<100)return void setTimeout(()=>{this.uploadLog(...t)},Date.now()-GD);const i=Math.max(0,Math.min(4,t[0]));t[0]=VD()+" Agora-SDK [".concat(KD(i),"]:"),this.appendLogToWaitingList(i,t)}appendLogToWaitingList(e){if(!NP("UPLOAD_LOG"))return;let t="";for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];i.forEach(e=>{"object"==typeof e&&(e=JSON.stringify(e)),t+="".concat(e," ")}),this.uploadLogWaitingList.push({payload_str:t,log_level:e,log_item_id:this.currentLogID++}),"uploading"===this.uploadState&&0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}startUpload(){this.uploadState="uploading",0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}async uploadLogs(){const e=this.uploadLogUploadingList,t={sdk_version:IP,process_id:NP("PROCESS_ID"),payload:JSON.stringify(e)};return FD(async()=>{const e=await PD.post(this.url||(this.proxyServerURL?"https://".concat(this.proxyServerURL,"/ls/?h=").concat(NP("LOG_UPLOAD_SERVER"),"&p=443&d=upload/v1"):"https://".concat(NP("LOG_UPLOAD_SERVER"),"/upload/v1")),t,{responseType:"text"});if("OK"!==e.data){const t=new Error("unexpected upload log response");throw t.response=e,t}},()=>(this.uploadLogUploadingList=[],!1),e=>(e.response?BD.reportLogUploadError({status:e.response.status,data:e.response.data,headers:e.response.headers,message:e.message}):e.request?BD.reportLogUploadError({status:e.request.status,message:e.message}):BD.reportLogUploadError({status:-1,message:e.message}),!0),{timeout:NP("UPLOAD_LOG_REQUEST_RETRY_INTERVAL"),maxRetryTimeout:NP("UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL")})}uploadLogInterval(){0===this.uploadLogUploadingList.length&&0===this.uploadLogWaitingList.length||(0===this.uploadLogUploadingList.length&&(this.uploadLogUploadingList=this.uploadLogWaitingList.splice(0,NP("UPLOAD_LOG_LENGTH_EACH_TIME"))),this.uploadLogs().then(()=>{this.uploadErrorCount=0,this.uploadLogWaitingList.length>0&&window.setTimeout(()=>this.uploadLogInterval(),NP("UPLOAD_LOG_INTERVAL"))}).catch(e=>{this.uploadErrorCount+=1,this.uploadErrorCount<2?window.setTimeout(()=>this.uploadLogInterval(),NP("UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1")):window.setTimeout(()=>this.uploadLogInterval(),NP("UPLOAD_LOG_RETRY_INTERVAL_V1"))}))}},WD={debug:console.log,info:console.log,warning:console.warn,error:console.error},YD={debug:"color: #64B5F6;",info:"color: #1E88E5; font-weight: bold;",warning:"color: #FB8C00; font-weight: bold;",error:"color: #B00020; font-weight: bold;"},JD={debug:0,info:1,warning:2,error:3},qD=[];let XD,zD=0,ZD=0,$D=!1;function eP(){const e=new Date;return[e.getTime(),e.toTimeString().split(" ")[0]+":"+e.getMilliseconds()]}function tP(e){if(!NP("UPLOAD_LOG"))return;let t;switch(e.type){case HL.MISC:t=[e.timestamp,e.level,e.type,e.module,e.instanceId,[e.msg]];break;case HL.INTERNAL_EVENT:case HL.PUBLIC_EVENT:case HL.WEB_EVENT:t=[e.timestamp,e.level,e.type,e.module,e.instanceId,[e.event,e.msg]];break;case HL.INTERNAL_API:case HL.PUBLIC_API:case HL.WEB_API:t=[e.timestamp,e.level,e.type,e.module,e.instanceId,[e.api,e.args,e.result]]}qD.push(t)}function rP(e,t){const[r,i]=eP(),n="warning",o="".concat(i," %cAgora-SDK [").concat(n,"] [INTERNAL API]:"),s={[HL.WEB_API]:"logWebAPI",[HL.PUBLIC_API]:"logPublicAPI",[HL.INTERNAL_API]:"logInternalAPI",[HL.WEB_EVENT]:"logWebEvent",[HL.PUBLIC_EVENT]:"logPublicEvent",[HL.INTERNAL_EVENT]:"logInternalEvent",[HL.MISC]:"logMisc"}[e],a=[o,YD.warning,"Log.".concat(s),t];NP("USE_NEW_LOG")&&(nP(n)&&WD.warning.apply(console,a),tP({timestamp:r,level:n,module:"Log",instanceId:void 0,type:HL.INTERNAL_API,api:s,args:void 0,result:t.toString()}))}function iP(e){if(Array.isArray(e)){let[t,r]=e;return t||(t="Global"),{module:t,instanceId:r}}let t,r;if("string"!=typeof e.__moduleName)throw new Error("Cannot get __moduleName from log instance.");t=e.__moduleName;try{r=e.__instanceId}catch(e){throw new Error("Cannot get __instanceId from log instance.")}return{module:t,instanceId:r}}function nP(e){return JD[e]>=ZD}function oP(e,t,r,i,n,o){if(e===HL.PUBLIC_API||e===HL.WEB_API||e===HL.INTERNAL_API)try{const{module:s,instanceId:a}=iP(r);n=n&&JSON.stringify(n),o=o instanceof Error?o.toString():o&&JSON.stringify(o);const[c,d]=eP(),u=["".concat(d," %cAgora-SDK [").concat(t,"] [").concat({[HL.PUBLIC_API]:"PUBLIC API",[HL.WEB_API]:"WEB API",[HL.INTERNAL_API]:"INTERNAL API"}[e],"]:"),YD[t],"".concat(s).concat(a?"<".concat(a,">"):"",".").concat(i),n,o];NP("USE_NEW_LOG")&&(nP(t)&&WD[t].apply(console,u),tP({timestamp:c,level:t,module:s,instanceId:a,type:e,api:i,args:n,result:o}))}catch(t){rP(e,t)}}function sP(e,t,r,i,n){if(e===HL.WEB_EVENT||e===HL.INTERNAL_EVENT||e===HL.PUBLIC_EVENT)try{const{module:o,instanceId:s}=iP(r);"string"!=typeof n&&(n=n instanceof Error?n.toString():JSON.stringify(n));const[a,c]=eP(),d=["".concat(c," %cAgora-SDK [").concat(t,"] [").concat({[HL.WEB_EVENT]:"WEB EVENT",[HL.PUBLIC_EVENT]:"PUBLIC EVENT",[HL.INTERNAL_EVENT]:"INTERNAL EVENT"}[e],"]:"),YD[t],"".concat(o).concat(s?"<".concat(s,">"):"",".on(").concat(i,")"),n||""];NP("USE_NEW_LOG")&&(nP(t)&&WD[t].apply(console,d),tP({timestamp:a,level:t,module:o,instanceId:s,type:e,event:i,msg:n}))}catch(t){rP(e,t)}}function aP(e){XD=e}function cP(e,t,r){try{const{module:i,instanceId:n}=iP(t),[o,s]=eP(),a=["".concat(s," %cAgora-SDK [").concat(e,"] [MISC]:"),YD[e],"".concat(i).concat(n?"<".concat(n,">"):""),'"'.concat(r,'"')];NP("USE_NEW_LOG")&&(nP(e)&&WD[e].apply(console,a),tP({timestamp:o,level:e,module:i,instanceId:n,type:HL.MISC,msg:r}))}catch(e){hP("warning",["log"],"logMisc",void 0,e)}}function dP(e,t,r,i){sP(HL.INTERNAL_EVENT,e,t,r,i)}function uP(e,t,r,i){sP(HL.PUBLIC_EVENT,e,t,r,i)}function AP(e,t,r,i){sP(HL.WEB_EVENT,e,t,r,i)}function hP(e,t,r,i,n){oP(HL.INTERNAL_API,e,t,r,i,n)}function lP(e,t,r,i,n){oP(HL.WEB_API,e,t,r,i,n)}function pP(e,t,r,i,n){oP(HL.PUBLIC_API,e,t,r,i,n)}function gP(e,t){return function(r){return class extends r{get __moduleName(){return e}get __instanceId(){if(t){if("function"==typeof this[t])return this[t]();{const e=t.split(".");return e.length>0?Sh(e).call(e,(e,t)=>{try{return e?e[t]:e}catch(e){return}},this):this[t]}}}}}}async function EP(e){if(!e&&$D)return;if($D=!0,!NP("UPLOAD_LOG"))return void setTimeout(()=>EP(!0),NP("UPLOAD_LOG_TRY_INTERVAL_WHILE_OFF"));if(0===qD.length)return void setTimeout(()=>EP(!0),NP("UPLOAD_LOG_INTERVAL"));const t=qD.slice(0,NP("UPLOAD_LOG_LENGTH_EACH_TIME")),r={sdk_version:IP,log_version:NP("LOG_VERSION"),process_id:NP("PROCESS_ID"),index:zD,logs:JSON.stringify(t)};await FD(async()=>{const e=await PD.post(XD?"https://".concat(XD,"/ls/?h=").concat(NP("LOG_UPLOAD_SERVER"),"&p=443&d=upload/v1"):"https://".concat(NP("LOG_UPLOAD_SERVER"),"/upload/v1"),r,{responseType:"text"});if("OK"!==e.data)throw new Error("Log service response error ".concat(e.data));return e},void 0,void 0,{timeout:NP("UPLOAD_LOG_REQUEST_RETRY_INTERVAL"),maxRetryTimeout:NP("UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL")}),qD.splice(0,NP("UPLOAD_LOG_LENGTH_EACH_TIME")),zD+=t.length,setTimeout(()=>EP(!0),NP("UPLOAD_LOG_INTERVAL"))}const fP="v4.13.0-0-g14700235-dirty(7/25/2022, 7:29:54 PM)",IP=function(e){if(e.match(/[0-9]+\.[0-9]+\.[0-9]+$/))return e;const t=e.match(/([0-9]+\.[0-9]+\.[0-9]+)\-alpha\.([0-9]+)/);if(t&&t[1]&&t[2]){const e=t[1],r=t[2];return"".concat(e,".").concat(r)}const r=e.match(/([0-9]+\.[0-9]+\.[0-9]+)\-special\.([0-9]+)/);if(r&&r[1]&&r[2]){const e=r[1],t=r[2];return"".concat(e,".").concat(100*(Number(t)+1))}return"4.0.0.999"}("4.13.0"),mP=function(){try{return!0===JSON.parse("true")}catch(e){return!0}}(),_P={username:"test",password:"111111",turnServerURL:"",tcpport:3433,udpport:3478,forceturn:!1};const CP={"90p":kP(160,90),"90p_1":kP(160,90),"120p":kP(160,120,15,30,65),"120p_1":kP(160,120,15,30,65),"120p_3":kP(120,120,15,30,50),"120p_4":kP(212,120),"180p":kP(320,180,15,30,140),"180p_1":kP(320,180,15,30,140),"180p_3":kP(180,180,15,30,100),"180p_4":kP(240,180,15,30,120),"240p":kP(320,240,15,40,200),"240p_1":kP(320,240,15,40,200),"240p_3":kP(240,240,15,40,140),"240p_4":kP(424,240,15,40,220),"360p":kP(640,360,15,80,400),"360p_1":kP(640,360,15,80,400),"360p_3":kP(360,360,15,80,260),"360p_4":kP(640,360,30,80,600),"360p_6":kP(360,360,30,80,400),"360p_7":kP(480,360,15,80,320),"360p_8":kP(480,360,30,80,490),"360p_9":kP(640,360,15,80,800),"360p_10":kP(640,360,24,80,800),"360p_11":kP(640,360,24,80,1e3),"480p":kP(640,480,15,100,500),"480p_1":kP(640,480,15,100,500),"480p_2":kP(640,480,30,100,1e3),"480p_3":kP(480,480,15,100,400),"480p_4":kP(640,480,30,100,750),"480p_6":kP(480,480,30,100,600),"480p_8":kP(848,480,15,100,610),"480p_9":kP(848,480,30,100,930),"480p_10":kP(640,480,10,100,400),"720p":kP(1280,720,15,120,1130),"720p_1":kP(1280,720,15,120,1130),"720p_2":kP(1280,720,30,120,2e3),"720p_3":kP(1280,720,30,120,1710),"720p_5":kP(960,720,15,120,910),"720p_6":kP(960,720,30,120,1380),"1080p":kP(1920,1080,15,120,2080),"1080p_1":kP(1920,1080,15,120,2080),"1080p_2":kP(1920,1080,30,120,3e3),"1080p_3":kP(1920,1080,30,120,3150),"1080p_5":kP(1920,1080,60,120,4780),"1440p":kP(2560,1440,30,120,4850),"1440p_1":kP(2560,1440,30,120,4850),"1440p_2":kP(2560,1440,60,120,7350),"4k":kP(3840,2160,30,120,8910),"4k_1":kP(3840,2160,30,120,8910),"4k_3":kP(3840,2160,60,120,13500)},SP={"480p":BP(640,480,5),"480p_1":BP(640,480,5),"480p_2":BP(640,480,30),"480p_3":BP(640,480,15),"720p":BP(1280,720,5),"720p_1":BP(1280,720,5),"720p_2":BP(1280,720,30),"720p_3":BP(1280,720,15),"1080p":BP(1920,1080,5),"1080p_1":BP(1920,1080,5),"1080p_2":BP(1920,1080,30),"1080p_3":BP(1920,1080,15)},vP={"1SL1TL":MP(1,1),"3SL3TL":MP(3,3),"2SL3TL":MP(2,3)};function TP(e){return"string"==typeof e?Object.assign({},CP[e]):e}function RP(e){return"string"==typeof e?Object.assign({},SP[e]):e}function yP(e){return"string"==typeof e?Object.assign({},vP[e]):e}const wP={speech_low_quality:LP(16e3,!1),speech_standard:LP(32e3,!1,18),music_standard:LP(48e3,!1),standard_stereo:LP(48e3,!0,56),high_quality:LP(48e3,!1,128),high_quality_stereo:LP(48e3,!0,192)};function bP(e){return"string"==typeof e?Object.assign({},wP[e]):e}function OP(e,t,r){Object.keys(DP).includes(e)&&(!r&&Object.keys(PP).includes(e)||(DP[e]=t))}function NP(e){return DP[e]}const DP={PROCESS_ID:"",ENCRYPT_AES:!0,AREAS:["CHINA","GLOBAL"],WEBCS_DOMAIN:["webrtc2-ap-web-1.agora.io","webrtc2-2.ap.sd-rtn.com"],WEBCS_DOMAIN_BACKUP_LIST:["webrtc2-ap-web-3.agora.io","webrtc2-4.ap.sd-rtn.com"],PROXY_CS:["ap-proxy-1.agora.io","ap-proxy-2.agora.io"],CDS_AP:["cds-ap-web-1.agora.io","cds-web-2.ap.sd-rtn.com","cds-ap-web-3.agora.io","cds-web-4.ap.sd-rtn.com"],ACCOUNT_REGISTER:["sua-ap-web-1.agora.io","sua-web-2.ap.sd-rtn.com","sua-ap-web-3.agora.io","sua-web-4.ap.sd-rtn.com"],UAP_AP:["uap-ap-web-1.agora.io","uap-web-2.ap.sd-rtn.com","uap-ap-web-3.agora.io","uap-web-4.ap.sd-rtn.com"],LOG_UPLOAD_SERVER:"logservice.agora.io",EVENT_REPORT_DOMAIN:"statscollector-1.agora.io",EVENT_REPORT_BACKUP_DOMAIN:"web-2.statscollector.sd-rtn.com",GATEWAY_ADDRESS:[],GATEWAY_WSS_ADDRESS:"",LIVE_STREAMING_ADDRESS:"",HTTP_CONNECT_TIMEOUT:5e3,SIGNAL_REQUEST_TIMEOUT:1e4,REPORT_STATS:!0,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],SUBSCRIBE_TCC:!0,PING_PONG_TIME_OUT:10,WEBSOCKET_TIMEOUT_MIN:1e4,EVENT_REPORT_SEND_INTERVAL:3e3,CONFIG_DISTRIBUTE_INTERVAL:3e5,CANDIDATE_TIMEOUT:5e3,SHOW_REPORT_INVOKER_LOG:!1,JOIN_EXTEND:"",PUB_EXTEND:"",SUB_EXTEND:"",FORCE_TURN:!1,TURN_ENABLE_TCP:!0,TURN_ENABLE_UDP:!0,MAX_UPLOAD_CACHE:50,UPLOAD_CACHE_INTERVAL:2e3,AJAX_REQUEST_CONCURRENT:3,REPORT_APP_SCENARIO:void 0,GATEWAY_DOMAINS:["edge.agora.io","edge.sd-rtn.com"],WORKER_DOMAIN:"edge.agora.io",TURN_DOMAIN:"edge.agora.io",EVENT_REPORT_RETRY:!0,CHROME_FORCE_PLAN_B:!1,AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL:400,AUDIO_SOURCE_AVG_VOLUME_DURATION:3e3,AUDIO_VOLUME_INDICATION_INTERVAL:2e3,VOLUME_VOICE_WEIGHT:10,NORMAL_EVENT_QUEUE_CAPACITY:100,CUSTOM_REPORT:!0,CUSTOM_REPORT_LIMIT:20,PROXY_SERVER_TYPE2:"webnginx-proxy.agora.io",PROXY_SERVER_TYPE3:["webrtc-cloud-proxy.sd-rtn.com","webrtc-cloud-proxy.agora.io"],CUSTOM_PUB_ANSWER_MODIFIER:null,CUSTOM_SUB_ANSWER_MODIFIER:null,CUSTOM_PUB_OFFER_MODIFIER:null,CUSTOM_SUB_OFFER_MODIFIER:null,DSCP_TYPE:"high",REMOVE_NEW_CODECS:!0,FRAGEMENT_LENGTH:3,WEBSOCKET_COMPRESS:!1,SIMULCAST:!1,PRELOAD_MEDIA_COUNT:0,USE_RTX:!1,CHECK_VIDEO_VISIBLE_INTERVAL:3e4,ENUMERATE_DEVICES_INTERVAL:!1,ENUMERATE_DEVICES_INTERVAL_TIME:1e4,USE_NEW_TOKEN:!1,JOIN_WITH_FALLBACK_SIGNAL_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE:!1,JOIN_WITH_FALLBACK_PROXY_PENDING_DURATION:2e3,USE_TURN_SERVER_OF_GATEWAY:!1,H264_PROFILE_LEVEL_ID:"",USE_NEW_LOG:!1,LOG_VERSION:3,MEDIA_DEVICE_CONSTRAINTS:null,ENCRYPT_PROXY_USERNAME_AND_PSW:!0,SDP_LOGGING:!1,REMOTE_AUDIO_TRACK_USES_WEB_AUDIO:!1,LOCAL_AUDIO_TRACK_USES_WEB_AUDIO:!0,BITRATE_ADAPTER_TYPE:"STANDARD_BITRATE",AI_DENOISER_PARAMETERS:{},ADJUST_3A_FROM_PLUGINS:!0,RAISE_H264_BASELINE_PRIORITY:!0,FILTER_SEND_H264_BASELINE:!1,ENABLE_PUBLISHED_USER_LIST:!0,MAX_SUBSCRIPTION:50,X_GOOGLE_START_BITRATE:void 0,NEW_REPORT_SERVER:!1,NEW_REPORT_SERVER_DOMAINS:["data-reporting.agora.io","data-reporting.agora.io"],VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT:3e5,VIDEO_INSPECT_INTERVAL_MINIMUM:1e3,VIDEO_INSPECT_QUALITY_RATIO:.9,VIDEO_INSPECT_WORKER_MANAGER_HOST:"edge.agora.io",VIDEO_INSPECT_WORKER_MANAGER_PORT:"",VIDEO_INSPECT_WORKER_PORT:"",SHOW_VIDEO_INSPECT_WORKER_MESSAGE:!1,STATS_COLLECTOR_PORT:443,FORCE_TURN_TCP:!1,SUBSCRIBE_AUDIO_FILTER_TOPN:void 0,ENABLE_PUBLISH_AUDIO_FILTER:void 0,WEBAUDIO_INIT_OPTIONS:void 0,FILTER_VIDEO_FEC:!0,FILTER_AUDIO_FEC:!1,ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6e4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1e5,AUDIO_CONTEXT:null,WEBCS_BACKUP_CONNECT_TIMEOUT:6e3,PLAYER_STATE_DEFER:2e3,SIGNAL_REQUEST_WATCH_INTERVAL:1e3,FILEPATH_LENMAX:255,DUALSTREAM_OPERATION_CHECK:!0,MEDIA_ELEMENT_EXISTS_DEPTH:3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2e3,STATS_FILTER:{transportId:!0,googTrackId:!0},UPLOAD_LOG_INTERVAL:3e3,UPLOAD_LOG_REQUEST_RETRY_INTERVAL:2e3,UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL:2e4,UPLOAD_LOG_TRY_INTERVAL_WHILE_OFF:5e3,UPLOAD_LOG_RETRY_INTERVAL_V1:1e4,UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1:200,UPLOAD_LOG_LENGTH_EACH_TIME:10,APP_TYPE:0},PP={};function LP(e,t,r){return{sampleRate:e,stereo:t,bitrate:r}}function kP(e,t,r,i,n){return{width:e,height:t,frameRate:r,bitrateMin:i,bitrateMax:n}}function BP(e,t,r,i,n){return{width:{max:e},height:{max:t},frameRate:r,bitrateMin:i,bitrateMax:n}}function MP(e,t){return{numSpatialLayers:e,numTemporalLayers:t}}mP||(DP.WEBCS_DOMAIN=["ap-web-1-oversea.agora.io","ap-web-1-north-america.agora.io"],DP.WEBCS_DOMAIN_BACKUP_LIST=["ap-web-2-oversea.agora.io","ap-web-2-north-america.agora.io"],DP.PROXY_CS=["proxy-ap-web-oversea.agora.io","proxy-ap-web-america.agora.io"],DP.CDS_AP=["cds-ap-web-oversea.agora.io","cds-ap-web-america.agora.io","cds-ap-web-america2.agora.io"],DP.ACCOUNT_REGISTER=["sua-ap-web-oversea.agora.io","sua-ap-web-america.agora.io","sua-ap-web-america2.agora.io"],DP.UAP_AP=["uap-ap-web-oversea.agora.io","uap-ap-web-america.agora.io","uap-ap-web-america2.agora.io"],DP.LOG_UPLOAD_SERVER="logservice-oversea.agora.io",DP.EVENT_REPORT_DOMAIN="statscollector-1-oversea.agora.io",DP.EVENT_REPORT_BACKUP_DOMAIN="statscollector-2-oversea.agora.io",DP.PROXY_SERVER_TYPE3="webrtc-cloud-proxy.agora.io",DP.AREAS=["NORTH_AMERICA","OVERSEA"]);const UP=[[0,1,2,3,4,5,5],[0,2,2,3,4,5,5],[0,3,3,3,4,5,5],[0,4,4,4,4,5,5],[0,5,5,5,5,5,5]],xP=[],QP=[];var FP=Vu,VP=EA,jP=rd,GP=function(e,t,r){var i=FP(t);i in e?VP.f(e,i,jP(0,r)):e[i]=r},KP=gE,HP=th,WP=GP,YP=xc.Array,JP=Math.max,qP=function(e,t,r){for(var i=HP(e),n=KP(t,i),o=KP(void 0===r?i:r,i),s=YP(JP(o-n,0)),a=0;n<o;n++,a++)WP(s,a,e[n]);return s.length=a,s},XP=qP,zP=Math.floor,ZP=function(e,t){var r=e.length,i=zP(r/2);return r<8?$P(e,t):eL(e,ZP(XP(e,0,i),t),ZP(XP(e,i),t),t)},$P=function(e,t){for(var r,i,n=e.length,o=1;o<n;){for(i=o,r=e[o];i&&t(e[i-1],r)>0;)e[i]=e[--i];i!==o++&&(e[i]=r)}return e},eL=function(e,t,r,i){for(var n=t.length,o=r.length,s=0,a=0;s<n||a<o;)e[s+a]=s<n&&a<o?i(t[s],r[a])<=0?t[s++]:r[a++]:s<n?t[s++]:r[a++];return e},tL=ZP,rL=yd.match(/firefox\/(\d+)/i),iL=!!rL&&+rL[1],nL=/MSIE|Trident/.test(yd),oL=yd.match(/AppleWebKit\/(\d+)\./),sL=!!oL&&+oL[1],aL=JA,cL=Bc,dL=qd,uL=Au,AL=th,hL=hI,lL=bc,pL=tL,gL=uh,EL=iL,fL=nL,IL=Ld,mL=sL,_L=[],CL=cL(_L.sort),SL=cL(_L.push),vL=lL((function(){_L.sort(void 0)})),TL=lL((function(){_L.sort(null)})),RL=gL("sort"),yL=!lL((function(){if(IL)return IL<70;if(!(EL&&EL>3)){if(fL)return!0;if(mL)return mL<603;var e,t,r,i,n="";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:r=3;break;case 68:case 71:r=4;break;default:r=2}for(i=0;i<47;i++)_L.push({k:t+i,v:r})}for(_L.sort((function(e,t){return t.v-e.v})),i=0;i<_L.length;i++)t=_L[i].k.charAt(0),n.charAt(n.length-1)!==t&&(n+=t);return"DGBEFHACIJK"!==n}}));aL({target:"Array",proto:!0,forced:vL||!TL||!RL||!yL},{sort:function(e){void 0!==e&&dL(e);var t=uL(this);if(yL)return void 0===e?CL(t):CL(t,e);var r,i,n=[],o=AL(t);for(i=0;i<o;i++)i in t&&SL(n,t[i]);for(pL(n,function(e){return function(t,r){return void 0===r?-1:void 0===t?1:void 0!==e?+e(t,r)||0:hL(t)>hL(r)?1:-1}}(e)),r=n.length,i=0;i<r;)t[i]=n[i++];for(;i<o;)delete t[i++];return t}});var wL=Eh("Array").sort,bL=Mc,OL=wL,NL=Array.prototype,DL=function(e){var t=e.sort;return e===NL||bL(NL,e)&&t===NL.sort?OL:t};function PL(e,t){if("boolean"!=typeof e)throw new UD(MD.INVALID_PARAMS,"Invalid ".concat(t,": The value is of the boolean type."))}function LL(e,t,r){if(r.includes(e))return;throw new UD(MD.INVALID_PARAMS,"".concat(t," can only be set as ").concat(JSON.stringify(r)))}function kL(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e4,n=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(e<r||e>i||n&&!jL(e)){throw new UD(MD.INVALID_PARAMS,"invalid ".concat(t,": the value range is [").concat(r,", ").concat(i,"]. integer only"))}}function BL(e,t){if("number"!=typeof e){if(!(e.min||e.max||e.ideal||e.exact)){throw new UD(MD.INVALID_PARAMS,"".concat(t," is not a valid ConstrainLong"))}void 0!==e.min&&kL(e.min,"".concat(t,".min"),0,1/0),void 0!==e.max&&kL(e.max,"".concat(t,".max"),1,1/0),void 0!==e.exact&&kL(e.exact,"".concat(t,".exact"),1,1/0),void 0!==e.ideal&&kL(e.ideal,"".concat(t,".ideal"),1,1/0)}else kL(e,t,1,1/0)}function ML(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:255,n=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(null==e)throw new UD(MD.INVALID_PARAMS,"".concat(t||"param"," cannot be empty"));if(!VL(e,r,i,n))throw new UD(MD.INVALID_PARAMS,"Invalid ".concat(t||"string param",": Length of the string: [").concat(r,",").concat(i,"].").concat(n?" ASCII characters only.":""))}function UL(e,t){if(!Array.isArray(e))throw new UD(MD.INVALID_PARAMS,"".concat(t," should be an array"))}function xL(e){if("string"!=typeof e||!/^[a-zA-Z0-9 \!\#\$\%\&\(\)\+\-\:\;\<\=\.\>\?\@\[\]\^\_\{\}\|\~\,]{1,64}$/.test(e))throw HD.error("Invalid Channel Name ".concat(e)),new UD(MD.INVALID_PARAMS,"The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,")}function QL(e){if(!(t=e,"number"==typeof t&&Math.floor(t)===t&&0<=t&&t<=4294967295||VL(e,1,255)))throw HD.error("Invalid UID ".concat(e," ").concat(typeof e)),new UD(MD.INVALID_PARAMS,"[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]");var t;"string"==typeof e&&HD.warning("You input a string as the user ID, to ensure better end-user experience, Agora highly suggests not using a string as the user ID.")}function FL(e){return null==e}function VL(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:255,i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return"string"==typeof e&&e.length<=r&&e.length>=t&&(!i||GL(e))}function jL(e){return"number"==typeof e&&e%1==0}function GL(e){if("string"!=typeof e)return!1;for(let t=0;t<e.length;t+=1){const r=e.charCodeAt(t);if(r<0||r>255)return!1}return!0}let KL,HL,WL;!function(e){e.FREE="free",e.UPLOADING="uploading"}(KL||(KL={})),function(e){e[e.MISC=0]="MISC",e[e.INTERNAL_EVENT=1]="INTERNAL_EVENT",e[e.PUBLIC_EVENT=2]="PUBLIC_EVENT",e[e.WEB_EVENT=3]="WEB_EVENT",e[e.INTERNAL_API=4]="INTERNAL_API",e[e.WEB_API=5]="WEB_API",e[e.PUBLIC_API=6]="PUBLIC_API"}(HL||(HL={})),function(e){e.NONE="none",e.INIT="init",e.CANPLAY="canplay",e.PLAYING="playing",e.PAUSED="paused",e.SUSPEND="suspend",e.STALLED="stalled",e.WAITING="waiting",e.ERROR="error",e.DESTROYED="destroyed",e.ABORT="abort",e.ENDED="ended",e.EMPTIED="emptied",e.LOADEDDATA="loadeddata"}(WL||(WL={}));const YL={uninit:100,none:110,init:120,loadeddata:130,canplay:200,playing:210,paused:220,suspend:300,stalled:310,waiting:320,error:330,destroyed:340,abort:350,ended:360,emptied:370};function JL(e){return ML(e.reportId,"params.reportId",0,100,!1),ML(e.category,"params.category",0,100,!1),ML(e.event,"params.event",0,100,!1),ML(e.label,"params.label",0,100,!1),kL(e.value,"params.value",Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,!1),!0}const qL={sid:"",lts:0,success:null,cname:null,uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0};let XL,zL,ZL,$L,ek,tk,rk,ik,nk,ok,sk,ak,ck,dk,uk,Ak,hk,lk,pk,gk,Ek,fk,Ik,mk;function _k(e){return kL(e.timeout,"config.timeout",0,1e5),kL(e.timeoutFactor,"config.timeoutFactor",0,100,!1),kL(e.maxRetryCount,"config.maxRetryConfig",0,1/0),kL(e.maxRetryTimeout,"config.maxRetryTimeout",0,1/0),!0}function Ck(e){return LL(e.codec,"config.codec",["vp8","vp9","av1","h264"]),LL(e.mode,"config.mode",["rtc","live"]),void 0!==e.audioCodec&&LL(e.audioCodec,"config.audioCodec",["opus","pcmu","pcma","g722"]),void 0!==e.proxyServer&&ML(e.proxyServer,"config.proxyServer",1,1e4),void 0!==e.turnServer&&vk(e.turnServer),void 0!==e.httpRetryConfig&&_k(e.httpRetryConfig),void 0!==e.websocketRetryConfig&&_k(e.websocketRetryConfig),!0}function Sk(e){if(!Array.isArray(e)||e.length<1)return!1;try{e.forEach(e=>{if(!e.urls)throw Error()})}catch(e){return!1}return!0}function vk(e){return ML(e.turnServerURL,"turnServerURL"),ML(e.username,"username"),ML(e.password,"password"),e.udpport&&kL(e.udpport,"udpport",1,99999,!0),e.forceturn&&PL(e.forceturn,"forceturn"),e.security&&PL(e.security,"security"),e.tcpport&&kL(e.tcpport,"tcpport",1,99999,!0),!0}function Tk(e){return void 0!==e.level&&LL(e.level,"level",[1,2,3]),!0}!function(e){e.PUBLISH="publish",e.SUBSCRIBE="subscribe",e.WS_COMPRESSOR_INIT="ws_compressor_init",e.SESSION_INIT="session_init",e.JOIN_CHOOSE_SERVER="join_choose_server",e.REQ_USER_ACCOUNT="req_user_account",e.JOIN_GATEWAY="join_gateway",e.REJOIN_GATEWAY="rejoin_gateway",e.STREAM_SWITCH="stream_switch",e.REQUEST_PROXY_WORKER_MANAGER="request_proxy_worker_manager",e.REQUEST_PROXY_APPCENTER="request_proxy_appcenter",e.FIRST_VIDEO_RECEIVED="first_video_received",e.FIRST_AUDIO_RECEIVED="first_audio_received",e.FIRST_VIDEO_DECODE="first_video_decode",e.FIRST_AUDIO_DECODE="first_audio_decode",e.ON_ADD_AUDIO_STREAM="on_add_audio_stream",e.ON_ADD_VIDEO_STREAM="on_add_video_stream",e.ON_UPDATE_STREAM="on_update_stream",e.ON_REMOVE_STREAM="on_remove_stream",e.USER_ANALYTICS="req_user_analytics"}(XL||(XL={})),function(e){e.SESSION="io.agora.pb.Wrtc.Session",e.JOIN_CHOOSE_SERVER="io.agora.pb.Wrtc.JoinChooseServer",e.REQ_USER_ACCOUNT="io.agora.pb.Wrtc.ReqUserAccount",e.JOIN_GATEWAY="io.agora.pb.Wrtc.JoinGateway",e.RE_JOIN_GATEWAY="io.agora.pb.Wrtc.ReJoinGateway",e.PUBLISH="io.agora.pb.Wrtc.Publish",e.SUBSCRIBE="io.agora.pb.Wrtc.Subscribe",e.WS_COMPRESSOR_INIT="io.agora.pb.Wrtc.WsCompressorInit",e.STREAM_SWITCH="io.agora.pb.Wrtc.StreamSwitch",e.AUDIO_SENDING_STOPPED="io.agora.pb.Wrtc.AudioSendingStopped",e.VIDEO_SENDING_STOPPED="io.agora.pb.Wrtc.VideoSendingStopped",e.REQUEST_PROXY_APPCENTER="io.agora.pb.Wrtc.RequestProxyAppCenter",e.REQUEST_PROXY_WORKER_MANAGER="io.agora.pb.Wrtc.RequestProxyWorkerManager",e.API_INVOKE="io.agora.pb.Wrtc.ApiInvoke",e.FIRST_VIDEO_RECEIVED="io.agora.pb.Wrtc.FirstVideoReceived",e.FIRST_AUDIO_RECEIVED="io.agora.pb.Wrtc.FirstAudioReceived",e.FIRST_VIDEO_DECODE="io.agora.pb.Wrtc.FirstVideoDecode",e.FIRST_AUDIO_DECODE="io.agora.pb.Wrtc.FirstAudioDecode",e.ON_ADD_AUDIO_STREAM="io.agora.pb.Wrtc.OnAddAudioStream",e.ON_ADD_VIDEO_STREAM="io.agora.pb.Wrtc.OnAddVideoStream",e.ON_UPDATE_STREAM="io.agora.pb.Wrtc.OnUpdateStream",e.ON_REMOVE_STREAM="io.agora.pb.Wrtc.OnRemoveStream",e.JOIN_CHANNEL_TIMEOUT="io.agora.pb.Wrtc.JoinChannelTimeout",e.PEER_PUBLISH_STATUS="io.agora.pb.Wrtc.PeerPublishStatus",e.WORKER_EVENT="io.agora.pb.Wrtc.WorkerEvent",e.AP_WORKER_EVENT="io.agora.pb.Wrtc.APWorkerEvent",e.JOIN_WEB_PROXY_AP="io.agora.pb.Wrtc.JoinWebProxyAP",e.WEBSOCKET_QUIT="io.agora.pb.Wrtc.WebSocketQuit",e.USER_ANALYTICS="io.agora.pb.Wrtc.UserAnalytics",e.AUTOPLAY_FAILED="io.agora.pb.Wrtc.AutoplayFailed"}(zL||(zL={})),function(e){e[e.WORKER_EVENT=156]="WORKER_EVENT",e[e.AP_WORKER_EVENT=160]="AP_WORKER_EVENT"}(ZL||(ZL={})),function(e){e[e.SESSION=26]="SESSION",e[e.JOIN_CHOOSE_SERVER=27]="JOIN_CHOOSE_SERVER",e[e.REQ_USER_ACCOUNT=196]="REQ_USER_ACCOUNT",e[e.JOIN_GATEWAY=28]="JOIN_GATEWAY",e[e.PUBLISH=30]="PUBLISH",e[e.SUBSCRIBE=29]="SUBSCRIBE",e[e.WS_COMPRESSOR_INIT=9430]="WS_COMPRESSOR_INIT",e[e.STREAM_SWITCH=32]="STREAM_SWITCH",e[e.AUDIO_SENDING_STOPPED=33]="AUDIO_SENDING_STOPPED",e[e.VIDEO_SENDING_STOPPED=34]="VIDEO_SENDING_STOPPED",e[e.REQUEST_PROXY_APPCENTER=35]="REQUEST_PROXY_APPCENTER",e[e.REQUEST_PROXY_WORKER_MANAGER=36]="REQUEST_PROXY_WORKER_MANAGER",e[e.API_INVOKE=41]="API_INVOKE",e[e.FIRST_VIDEO_RECEIVED=348]="FIRST_VIDEO_RECEIVED",e[e.FIRST_AUDIO_RECEIVED=349]="FIRST_AUDIO_RECEIVED",e[e.FIRST_VIDEO_DECODE=350]="FIRST_VIDEO_DECODE",e[e.FIRST_AUDIO_DECODE=351]="FIRST_AUDIO_DECODE",e[e.ON_ADD_AUDIO_STREAM=352]="ON_ADD_AUDIO_STREAM",e[e.ON_ADD_VIDEO_STREAM=353]="ON_ADD_VIDEO_STREAM",e[e.ON_UPDATE_STREAM=356]="ON_UPDATE_STREAM",e[e.ON_REMOVE_STREAM=355]="ON_REMOVE_STREAM",e[e.JOIN_CHANNEL_TIMEOUT=407]="JOIN_CHANNEL_TIMEOUT",e[e.PEER_PUBLISH_STATUS=408]="PEER_PUBLISH_STATUS",e[e.WORKER_EVENT=156]="WORKER_EVENT",e[e.AP_WORKER_EVENT=160]="AP_WORKER_EVENT",e[e.JOIN_WEB_PROXY_AP=700]="JOIN_WEB_PROXY_AP",e[e.WEBSOCKET_QUIT=671]="WEBSOCKET_QUIT",e[e.USER_ANALYTICS=1e4]="USER_ANALYTICS",e[e.AUTOPLAY_FAILED=9178]="AUTOPLAY_FAILED"}($L||($L={})),function(e){e.CREATE_CLIENT="createClient",e.CHECK_SYSTEM_REQUIREMENTS="checkSystemRequirements",e.SET_AREA="setArea",e.CHECK_VIDEO_TRACK_IS_ACTIVE="checkVideoTrackIsActive",e.CHECK_AUDIO_TRACK_IS_ACTIVE="checkAudioTrackIsActive",e.CREATE_MIC_AUDIO_TRACK="createMicrophoneAudioTrack",e.CREATE_CUSTOM_AUDIO_TRACK="createCustomAudioTrack",e.CREATE_BUFFER_AUDIO_TRACK="createBufferSourceAudioTrack",e.CREATE_CAM_VIDEO_TRACK="createCameraVideoTrack",e.CREATE_CUSTOM_VIDEO_TRACK="createCustomVideoTrack",e.CREATE_MIC_AND_CAM_TRACKS="createMicrophoneAndCameraTracks",e.CREATE_SCREEN_VIDEO_TRACK="createScreenVideoTrack",e.SET_ENCRYPTION_CONFIG="Client.setEncryptionConfig",e.START_PROXY_SERVER="Client.startProxyServer",e.STOP_PROXY_SERVER="Client.stopProxyServer",e.SET_PROXY_SERVER="Client.setProxyServer",e.SET_TURN_SERVER="Client.setTurnServer",e.SET_CLIENT_ROLE="Client.setClientRole",e.SET_LOW_STREAM_PARAMETER="Client.setLowStreamParameter",e.ENABLE_DUAL_STREAM="Client.enableDualStream",e.DISABLE_DUAL_STREAM="Client.disableDualStream",e.JOIN="Client.join",e.LEAVE="Client.leave",e.PUBLISH="Client.publish",e.UNPUBLISH="Client.unpublish",e.SUBSCRIBE="Client.subscribe",e.MASS_SUBSCRIBE="Client.massSubscribe",e.MASS_UNSUBSCRIBE="Client.massUnsubscribe",e.UNSUBSCRIBE="Client.unsubscribe",e.RENEW_TOKEN="Client.renewToken",e.SET_REMOTE_VIDEO_STREAM_TYPE="Client.setRemoteVideoStreamType",e.SET_STREAM_FALLBACK_OPTION="Client.setStreamFallbackOption",e.ENABLE_AUDIO_VOLUME_INDICATOR="Client.enableAudioVolumeIndicator",e.SEND_CUSTOM_REPORT_MESSAGE="Client.sendCustomReportMessage",e.INSPECT_VIDEO_CONTENT="Client.inspectVideoContent",e.STOP_INSPECT_VIDEO_CONTENT="Client.stopInspectVideoContent",e.JOIN_FALLBACK_TO_PROXY="Client._joinFallbackToProxy",e.ON_LIVE_STREAM_WARNING="Client.onLiveStreamWarning",e.ON_LIVE_STREAM_ERROR="Client.onLiveStreamingError",e.START_LIVE_STREAMING="Client.startLiveStreaming",e.SET_LIVE_TRANSCODING="Client.setLiveTranscoding",e.STOP_LIVE_STREAMING="Client.stopLiveStreaming",e.ADD_INJECT_STREAM_URL="Client.addInjectStreamUrl",e.REMOVE_INJECT_STREAM_URL="Client.removeInjectStreamUrl",e.START_CHANNEL_MEDIA_RELAY="Client.startChannelMediaRelay",e.UPDATE_CHANNEL_MEDIA_RELAY="Client.updateChannelMediaRelay",e.STOP_CHANNEL_MEDIA_RELAY="Client.stopChannelMediaRelay",e.REQUEST_CONFIG_DISTRIBUTE="_config-distribute-request",e.SET_CONFIG_DISTRIBUTE="_configDistribute",e.LOCAL_TRACK_SET_MUTED="LocalTrack.setMute",e.LOCAL_AUDIO_TRACK_PLAY="LocalAudioTrack.play",e.LOCAL_AUDIO_TRACK_PLAY_IN_ELEMENT="LocalAudioTrack.playInElement",e.LOCAL_AUDIO_TRACK_STOP="LocalAudioTrack.stop",e.LOCAL_AUDIO_TRACK_SET_VOLUME="LocalAudioTrack.setVolume",e.MIC_AUDIO_TRACK_SET_DEVICE="MicrophoneAudioTrack.setDevice",e.BUFFER_AUDIO_TRACK_START="BufferSourceAudioTrack.startProcessAudioBuffer",e.BUFFER_AUDIO_TRACK_STOP="BufferSourceAudioTrack.stopProcessAudioBuffer",e.BUFFER_AUDIO_TRACK_PAUSE="BufferSourceAudioTrack.pauseProcessAudioBuffer",e.BUFFER_AUDIO_TRACK_RESUME="BufferSourceAudioTrack.resumeProcessAudioBuffer",e.BUFFER_AUDIO_TRACK_SEEK="BufferSourceAudioTrack.seekAudioBuffer",e.LOCAL_VIDEO_TRACK_PLAY="LocalVideoTrack.play",e.LOCAL_VIDEO_TRACK_STOP="LocalVideoTrack.stop",e.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE="LocalVideoTrack.getVideoElementVisibleStatus",e.LOCAL_VIDEO_TRACK_BEAUTY="LocalVideoTrack.setBeautyEffect",e.CAM_VIDEO_TRACK_SET_DEVICE="CameraVideoTrack.setDevice",e.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG="CameraVideoTrack.setEncoderConfiguration",e.REMOTE_VIDEO_TRACK_PLAY="RemoteVideoTrack.play",e.REMOTE_VIDEO_TRACK_STOP="RemoteVideoTrack.stop",e.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE="RemoteVideoTrack.getVideoElementVisibleStatus",e.REMOTE_AUDIO_TRACK_PLAY="RemoteAudioTrack.play",e.REMOTE_AUDIO_TRACK_STOP="RemoteAudioTrack.stop",e.REMOTE_AUDIO_SET_VOLUME="RemoteAudioTrack.setVolume",e.REMOTE_AUDIO_SET_OUTPUT_DEVICE="RemoteAudioTrack.setOutputDevice",e.GET_MEDIA_STREAM_TRACK="Track.getMediaStreamTrack",e.STREAM_TYPE_CHANGE="streamTypeChange",e.CONNECTION_STATE_CHANGE="connectionStateChange",e.LOAD_CONFIG_FROM_LOCALSTORAGE="loadConfigFromLocalStorage"}(ek||(ek={})),function(e){e.TRACER="tracer"}(tk||(tk={})),function(e){e.IDLE="IDLE",e.INITING="INITING",e.INITEND="INITEND"}(rk||(rk={})),function(e){e.STATE_CHANGE="state_change",e.RECORDING_DEVICE_CHANGED="recordingDeviceChanged",e.PLAYOUT_DEVICE_CHANGED="playoutDeviceChanged",e.CAMERA_DEVICE_CHANGED="cameraDeviceChanged"}(ik||(ik={})),function(e){e[e.ACCESS_POINT=101]="ACCESS_POINT",e[e.UNILBS=201]="UNILBS",e[e.STRING_UID_ALLOCATOR=901]="STRING_UID_ALLOCATOR"}(nk||(nk={})),function(e){e[e.IIIEGAL_APPID=1]="IIIEGAL_APPID",e[e.IIIEGAL_UID=2]="IIIEGAL_UID",e[e.INTERNAL_ERROR=3]="INTERNAL_ERROR"}(ok||(ok={})),function(e){e[e.INVALID_VENDOR_KEY=5]="INVALID_VENDOR_KEY",e[e.INVALID_CHANNEL_NAME=7]="INVALID_CHANNEL_NAME",e[e.INTERNAL_ERROR=8]="INTERNAL_ERROR",e[e.NO_AUTHORIZED=9]="NO_AUTHORIZED",e[e.DYNAMIC_KEY_TIMEOUT=10]="DYNAMIC_KEY_TIMEOUT",e[e.NO_ACTIVE_STATUS=11]="NO_ACTIVE_STATUS",e[e.DYNAMIC_KEY_EXPIRED=13]="DYNAMIC_KEY_EXPIRED",e[e.STATIC_USE_DYNAMIC_KEY=14]="STATIC_USE_DYNAMIC_KEY",e[e.DYNAMIC_USE_STATIC_KEY=15]="DYNAMIC_USE_STATIC_KEY",e[e.USER_OVERLOAD=16]="USER_OVERLOAD",e[e.FORBIDDEN_REGION=18]="FORBIDDEN_REGION",e[e.CANNOT_MEET_AREA_DEMAND=19]="CANNOT_MEET_AREA_DEMAND"}(sk||(sk={})),function(e){e[e.NO_FLAG_SET=100]="NO_FLAG_SET",e[e.FLAG_SET_BUT_EMPTY=101]="FLAG_SET_BUT_EMPTY",e[e.INVALID_FALG_SET=102]="INVALID_FALG_SET",e[e.FLAG_SET_BUT_NO_RE=103]="FLAG_SET_BUT_NO_RE",e[e.INVALID_SERVICE_ID=104]="INVALID_SERVICE_ID",e[e.NO_SERVICE_AVAILABLE=200]="NO_SERVICE_AVAILABLE",e[e.NO_SERVICE_AVAILABLE_P2P=201]="NO_SERVICE_AVAILABLE_P2P",e[e.NO_SERVICE_AVAILABLE_VOICE=202]="NO_SERVICE_AVAILABLE_VOICE",e[e.NO_SERVICE_AVAILABLE_WEBRTC=203]="NO_SERVICE_AVAILABLE_WEBRTC",e[e.NO_SERVICE_AVAILABLE_CDS=204]="NO_SERVICE_AVAILABLE_CDS",e[e.NO_SERVICE_AVAILABLE_CDN=205]="NO_SERVICE_AVAILABLE_CDN",e[e.NO_SERVICE_AVAILABLE_TDS=206]="NO_SERVICE_AVAILABLE_TDS",e[e.NO_SERVICE_AVAILABLE_REPORT=207]="NO_SERVICE_AVAILABLE_REPORT",e[e.NO_SERVICE_AVAILABLE_APP_CENTER=208]="NO_SERVICE_AVAILABLE_APP_CENTER",e[e.NO_SERVICE_AVAILABLE_ENV0=209]="NO_SERVICE_AVAILABLE_ENV0",e[e.NO_SERVICE_AVAILABLE_VOET=210]="NO_SERVICE_AVAILABLE_VOET",e[e.NO_SERVICE_AVAILABLE_STRING_UID=211]="NO_SERVICE_AVAILABLE_STRING_UID",e[e.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS=212]="NO_SERVICE_AVAILABLE_WEBRTC_UNILBS",e[e.NO_SERVICE_AVAILABLE_UNILBS_FLV=213]="NO_SERVICE_AVAILABLE_UNILBS_FLV"}(ak||(ak={})),function(e){e[e.K_TIMESTAMP_EXPIRED=2]="K_TIMESTAMP_EXPIRED",e[e.K_CHANNEL_PERMISSION_INVALID=3]="K_CHANNEL_PERMISSION_INVALID",e[e.K_CERTIFICATE_INVALID=4]="K_CERTIFICATE_INVALID",e[e.K_CHANNEL_NAME_EMPTY=5]="K_CHANNEL_NAME_EMPTY",e[e.K_CHANNEL_NOT_FOUND=6]="K_CHANNEL_NOT_FOUND",e[e.K_TICKET_INVALID=7]="K_TICKET_INVALID",e[e.K_CHANNEL_CONFLICTED=8]="K_CHANNEL_CONFLICTED",e[e.K_SERVICE_NOT_READY=9]="K_SERVICE_NOT_READY",e[e.K_SERVICE_TOO_HEAVY=10]="K_SERVICE_TOO_HEAVY",e[e.K_UID_BANNED=14]="K_UID_BANNED",e[e.K_IP_BANNED=15]="K_IP_BANNED",e[e.K_CHANNEL_BANNED=16]="K_CHANNEL_BANNED",e[e.WARN_NO_AVAILABLE_CHANNEL=103]="WARN_NO_AVAILABLE_CHANNEL",e[e.WARN_LOOKUP_CHANNEL_TIMEOUT=104]="WARN_LOOKUP_CHANNEL_TIMEOUT",e[e.WARN_LOOKUP_CHANNEL_REJECTED=105]="WARN_LOOKUP_CHANNEL_REJECTED",e[e.WARN_OPEN_CHANNEL_TIMEOUT=106]="WARN_OPEN_CHANNEL_TIMEOUT",e[e.WARN_OPEN_CHANNEL_REJECTED=107]="WARN_OPEN_CHANNEL_REJECTED",e[e.WARN_REQUEST_DEFERRED=108]="WARN_REQUEST_DEFERRED",e[e.ERR_DYNAMIC_KEY_TIMEOUT=109]="ERR_DYNAMIC_KEY_TIMEOUT",e[e.ERR_NO_AUTHORIZED=110]="ERR_NO_AUTHORIZED",e[e.ERR_VOM_SERVICE_UNAVAILABLE=111]="ERR_VOM_SERVICE_UNAVAILABLE",e[e.ERR_NO_CHANNEL_AVAILABLE_CODE=112]="ERR_NO_CHANNEL_AVAILABLE_CODE",e[e.ERR_MASTER_VOCS_UNAVAILABLE=114]="ERR_MASTER_VOCS_UNAVAILABLE",e[e.ERR_INTERNAL_ERROR=115]="ERR_INTERNAL_ERROR",e[e.ERR_NO_ACTIVE_STATUS=116]="ERR_NO_ACTIVE_STATUS",e[e.ERR_INVALID_UID=117]="ERR_INVALID_UID",e[e.ERR_DYNAMIC_KEY_EXPIRED=118]="ERR_DYNAMIC_KEY_EXPIRED",e[e.ERR_STATIC_USE_DYANMIC_KE=119]="ERR_STATIC_USE_DYANMIC_KE",e[e.ERR_DYNAMIC_USE_STATIC_KE=120]="ERR_DYNAMIC_USE_STATIC_KE",e[e.ERR_NO_VOCS_AVAILABLE=2e3]="ERR_NO_VOCS_AVAILABLE",e[e.ERR_NO_VOS_AVAILABLE=2001]="ERR_NO_VOS_AVAILABLE",e[e.ERR_JOIN_CHANNEL_TIMEOUT=2002]="ERR_JOIN_CHANNEL_TIMEOUT",e[e.ERR_REPEAT_JOIN_CHANNEL=2003]="ERR_REPEAT_JOIN_CHANNEL",e[e.ERR_JOIN_BY_MULTI_IP=2004]="ERR_JOIN_BY_MULTI_IP",e[e.ERR_NOT_JOINED=2011]="ERR_NOT_JOINED",e[e.ERR_REPEAT_JOIN_REQUEST=2012]="ERR_REPEAT_JOIN_REQUEST",e[e.ERR_INVALID_VENDOR_KEY=2013]="ERR_INVALID_VENDOR_KEY",e[e.ERR_INVALID_CHANNEL_NAME=2014]="ERR_INVALID_CHANNEL_NAME",e[e.ERR_INVALID_STRINGUID=2015]="ERR_INVALID_STRINGUID",e[e.ERR_TOO_MANY_USERS=2016]="ERR_TOO_MANY_USERS",e[e.ERR_SET_CLIENT_ROLE_TIMEOUT=2017]="ERR_SET_CLIENT_ROLE_TIMEOUT",e[e.ERR_SET_CLIENT_ROLE_NO_PERMISSION=2018]="ERR_SET_CLIENT_ROLE_NO_PERMISSION",e[e.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE=2019]="ERR_SET_CLIENT_ROLE_ALREADY_IN_USE",e[e.ERR_PUBLISH_REQUEST_INVALID=2020]="ERR_PUBLISH_REQUEST_INVALID",e[e.ERR_SUBSCRIBE_REQUEST_INVALID=2021]="ERR_SUBSCRIBE_REQUEST_INVALID",e[e.ERR_NOT_SUPPORTED_MESSAGE=2022]="ERR_NOT_SUPPORTED_MESSAGE",e[e.ERR_ILLEAGAL_PLUGIN=2023]="ERR_ILLEAGAL_PLUGIN",e[e.ERR_REJOIN_TOKEN_INVALID=2024]="ERR_REJOIN_TOKEN_INVALID",e[e.ERR_REJOIN_USER_NOT_JOINED=2025]="ERR_REJOIN_USER_NOT_JOINED",e[e.ERR_INVALID_OPTIONAL_INFO=2027]="ERR_INVALID_OPTIONAL_INFO",e[e.ILLEGAL_AES_PASSWORD=2028]="ILLEGAL_AES_PASSWORD",e[e.ILLEGAL_CLIENT_ROLE_LEVEL=2029]="ILLEGAL_CLIENT_ROLE_LEVEL",e[e.ERR_TOO_MANY_BROADCASTERS=2031]="ERR_TOO_MANY_BROADCASTERS",e[e.ERR_TOO_MANY_SUBSCRIBERS=2032]="ERR_TOO_MANY_SUBSCRIBERS",e[e.ERR_TEST_RECOVER=9e3]="ERR_TEST_RECOVER",e[e.ERR_TEST_TRYNEXT=9001]="ERR_TEST_TRYNEXT",e[e.ERR_TEST_RETRY=9002]="ERR_TEST_RETRY"}(ck||(ck={})),function(e){e[e.AUDIENCE_LEVEL_LOW_LATENCY=1]="AUDIENCE_LEVEL_LOW_LATENCY",e[e.AUDIENCE_LEVEL_ULTRA_LOW_LATENCY=2]="AUDIENCE_LEVEL_ULTRA_LOW_LATENCY",e[e.AUDIENCE_LEVEL_SYNC_LATENCY=3]="AUDIENCE_LEVEL_SYNC_LATENCY"}(dk||(dk={})),function(e){e.LEAVE="LEAVE",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.UID_BANNED="UID_BANNED",e.IP_BANNED="IP_BANNED",e.CHANNEL_BANNED="CHANNEL_BANNED",e.FALLBACK="FALLBACK"}(uk||(uk={})),function(e){e.CONNECTION_STATE_CHANGE="connection-state-change",e.MEDIA_RECONNECT_START="media-reconnect-start",e.MEDIA_RECONNECT_END="media-reconnect-end",e.IS_USING_CLOUD_PROXY="is-using-cloud-proxy",e.USER_JOINED="user-joined",e.USER_LEAVED="user-left",e.USER_PUBLISHED="user-published",e.USER_UNPUBLISHED="user-unpublished",e.USER_INFO_UPDATED="user-info-updated",e.CLIENT_BANNED="client-banned",e.CHANNEL_MEDIA_RELAY_STATE="channel-media-relay-state",e.CHANNEL_MEDIA_RELAY_EVENT="channel-media-relay-event",e.VOLUME_INDICATOR="volume-indicator",e.CRYPT_ERROR="crypt-error",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE="token-privilege-will-expire",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE="token-privilege-did-expire",e.NETWORK_QUALITY="network-quality",e.STREAM_TYPE_CHANGED="stream-type-changed",e.STREAM_FALLBACK="stream-fallback",e.RECEIVE_METADATA="receive-metadata",e.STREAM_MESSAGE="stream-message",e.LIVE_STREAMING_ERROR="live-streaming-error",e.LIVE_STREAMING_WARNING="live-streaming-warning",e.INJECT_STREAM_STATUS="stream-inject-status",e.EXCEPTION="exception",e.ERROR="error",e.P2P_LOST="p2p_lost",e.JOIN_FALLBACK_TO_PROXY="join-fallback-to-proxy",e.MEDIA_CONNECTION_TYPE_CHANGE="media-connection-type-change",e.PUBLISHED_USER_LIST="published-user-list",e.CONTENT_INSPECT_CONNECTION_STATE_CHANGE="content-inspect-connection-state-change",e.CONTENT_INSPECT_ERROR="content-inspect-error",e.CONTENT_INSPECT_RESULT="content-inspect-result"}(Ak||(Ak={})),function(e){e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.MULTI_IP="MULTI_IP",e.TIMEOUT="TIMEOUT",e.OFFLINE="OFFLINE",e.LEAVE="LEAVE",e.P2P_FAILED="P2P_FAILED",e.FALLBACK="FALLBACK"}(hk||(hk={})),function(e){e.CONNECTING="connecting",e.CONNECTED="connected",e.RECONNECTING="reconnecting",e.CLOSED="closed"}(lk||(lk={})),function(e){e.WS_CONNECTED="ws_connected",e.WS_RECONNECTING="ws_reconnecting",e.WS_CLOSED="ws_closed",e.WS_RECONNECT_WAITTING_FINISH="ws_reconnect_waitting_finish",e.WS_RECONNECT_CREATE_CONNECTION="ws_reconnect_create_connection",e.ON_BINARY_DATA="on_binary_data",e.REQUEST_RECOVER="request_recover",e.REQUEST_JOIN_INFO="request_join_info",e.REQUEST_REJOIN_INFO="req_rejoin_info",e.IS_P2P_DISCONNECTED="is_p2p_dis",e.DISCONNECT_P2P="dis_p2p",e.ABORT_P2P_EXECUTION="abort_p2p_execution",e.NEED_RENEW_SESSION="need-sid",e.REPORT_JOIN_GATEWAY="report_join_gateway",e.REQUEST_TIMEOUT="request_timeout",e.REQUEST_SUCCESS="request_success",e.JOIN_RESPONSE="join_response"}(pk||(pk={})),function(e){e.PING="ping",e.PING_BACK="ping_back",e.JOIN="join_v3",e.REJOIN="rejoin_v3",e.LEAVE="leave",e.SET_CLIENT_ROLE="set_client_role",e.PUBLISH="publish",e.UNPUBLISH="unpublish",e.SUBSCRIBE="subscribe",e.SUBSCRIBE_STREAMS="subscribe_streams",e.UNSUBSCRIBE="unsubscribe",e.UNSUBSCRIBE_STREAMS="unsubscribe_streams",e.SUBSCRIBE_CHANGE="subscribe_change",e.TRAFFIC_STATS="traffic_stats",e.RENEW_TOKEN="renew_token",e.SWITCH_VIDEO_STREAM="switch_video_stream",e.DEFAULT_VIDEO_STREAM="default_video_stream",e.SET_FALLBACK_OPTION="set_fallback_option",e.GATEWAY_INFO="gateway_info",e.CONTROL="control",e.SEND_METADATA="send_metadata",e.DATA_STREAM="data_stream",e.PICK_SVC_LAYER="pick_svc_layer",e.RESTART_ICE="restart_ice",e.CONNECT_PC="connect_pc",e.SET_VIDEO_PROFILE="set_video_profile",e.SET_PARAMETER="set_parameter"}(gk||(gk={})),function(e){e.PUBLISH_STATS="publish_stats",e.PUBLISH_RELATED_STATS="publish_related_stats",e.SUBSCRIBE_STATS="subscribe_stats",e.SUBSCRIBE_RELATED_STATS="subscribe_related_stats",e.WS_INFLATE_DATA_LENGTH="ws_inflate_data_length",e.DENOISER_STATS="denoiser_stats",e.TRANSPORT_STATS="transport_stats"}(Ek||(Ek={})),function(e){e.ON_USER_ONLINE="on_user_online",e.ON_USER_OFFLINE="on_user_offline",e.ON_STREAM_FALLBACK_UPDATE="on_stream_fallback_update",e.ON_PUBLISH_STREAM="on_publish_stream",e.ON_UPLINK_STATS="on_uplink_stats",e.ON_P2P_LOST="on_p2p_lost",e.ON_REMOVE_STREAM="on_remove_stream",e.ON_ADD_AUDIO_STREAM="on_add_audio_stream",e.ON_ADD_VIDEO_STREAM="on_add_video_stream",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE="on_token_privilege_will_expire",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE="on_token_privilege_did_expire",e.ON_USER_BANNED="on_user_banned",e.ON_NOTIFICATION="on_notification",e.ON_CRYPT_ERROR="on_crypt_error",e.MUTE_AUDIO="mute_audio",e.MUTE_VIDEO="mute_video",e.UNMUTE_AUDIO="unmute_audio",e.UNMUTE_VIDEO="unmute_video",e.ON_P2P_OK="on_p2p_ok",e.RECEIVE_METADATA="receive_metadata",e.ON_DATA_STREAM="on_data_stream",e.ENABLE_LOCAL_VIDEO="enable_local_video",e.DISABLE_LOCAL_VIDEO="disable_local_video",e.ENABLE_LOCAL_AUDIO="enable_local_audio",e.DISABLE_LOCAL_AUDIO="disable_local_audio",e.ON_PUBLISHED_USER_LIST="on_published_user_list"}(fk||(fk={})),function(e){e.CONNECTION_STATE_CHANGE="CONNECTION_STATE_CHANGE",e.NEED_ANSWER="NEED_ANSWER",e.NEED_RENEGOTIATE="NEED_RENEGOTIATE",e.P2P_LOST="P2P_LOST",e.GATEWAY_P2P_LOST="GATEWAY_P2P_LOST",e.NEED_UNPUB="NEED_UNPUB",e.NEED_UNSUB="NEED_UNSUB",e.NEED_UPLOAD="NEED_UPLOAD",e.NEED_CONTROL="NEED_CONTROL",e.START_RECONNECT="START_RECONNECT",e.END_RECONNECT="END_RECONNECT",e.NEED_SIGNAL_RTT="NEED_SIGNAL_RTT"}(Ik||(Ik={})),function(e){e.AUDIO_SOURCE_STATE_CHANGE="audio_source_state_change",e.RECEIVE_TRACK_BUFFER="receive_track_buffer",e.ON_AUDIO_BUFFER="on_audio_buffer",e.UPDATE_SOURCE="update_source"}(mk||(mk={}));const Rk={sendVolumeLevel:0,sendBitrate:0,sendBytes:0,sendPackets:0,sendPacketsLost:0,currentPacketLossRate:0},yk={sendBytes:0,sendBitrate:0,sendPackets:0,sendPacketsLost:0,sendResolutionHeight:0,sendResolutionWidth:0,captureResolutionHeight:0,captureResolutionWidth:0,targetSendBitrate:0,totalDuration:0,totalFreezeTime:0,currentPacketLossRate:0},wk={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveLevel:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1},bk={uplinkNetworkQuality:0,downlinkNetworkQuality:0},Ok={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receiveResolutionHeight:0,receiveResolutionWidth:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1};let Nk,Dk,Pk;!function(e){e.CONNECTED="websocket:connected",e.RECONNECTING="websocket:reconnecting",e.WILL_RECONNECT="websocket:will_reconnect",e.CLOSED="websocket:closed",e.FAILED="websocket:failed",e.ON_MESSAGE="websocket:on_message",e.REQUEST_NEW_URLS="websocket:request_new_urls",e.RECONNECT_WAITTING_FINISH="websocket:reconnect_waitting_finish",e.RECONNECT_CREATE_CONNECTION="websocket:reconnect_create_connection",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE="websocket:on_token_privilege_did_expire"}(Nk||(Nk={})),function(e){e.TRANSCODE="mix_streaming",e.RAW="raw_streaming",e.INJECT="inject_streaming"}(Dk||(Dk={})),function(e){e[e.INJECT_STREAM_STATUS_START_SUCCESS=0]="INJECT_STREAM_STATUS_START_SUCCESS",e[e.INJECT_STREAM_STATUS_START_ALREADY_EXISTS=1]="INJECT_STREAM_STATUS_START_ALREADY_EXISTS",e[e.INJECT_STREAM_STATUS_START_UNAUTHORIZED=2]="INJECT_STREAM_STATUS_START_UNAUTHORIZED",e[e.INJECT_STREAM_STATUS_START_TIMEOUT=3]="INJECT_STREAM_STATUS_START_TIMEOUT",e[e.INJECT_STREAM_STATUS_START_FAILED=4]="INJECT_STREAM_STATUS_START_FAILED",e[e.INJECT_STREAM_STATUS_STOP_SUCCESS=5]="INJECT_STREAM_STATUS_STOP_SUCCESS",e[e.INJECT_STREAM_STATUS_STOP_NOT_FOUND=6]="INJECT_STREAM_STATUS_STOP_NOT_FOUND",e[e.INJECT_STREAM_STATUS_STOP_UNAUTHORIZED=7]="INJECT_STREAM_STATUS_STOP_UNAUTHORIZED",e[e.INJECT_STREAM_STATUS_STOP_TIMEOUT=8]="INJECT_STREAM_STATUS_STOP_TIMEOUT",e[e.INJECT_STREAM_STATUS_STOP_FAILED=9]="INJECT_STREAM_STATUS_STOP_FAILED",e[e.INJECT_STREAM_STATUS_BROKEN=10]="INJECT_STREAM_STATUS_BROKEN"}(Pk||(Pk={}));const Lk={alpha:1,height:640,width:360,x:0,y:0,zOrder:0,audioChannel:0},kk={x:0,y:0,width:160,height:160,zOrder:255,alpha:1};function Bk(e,t){ML(e.url,"".concat(t,".url"),1,1e3,!1),FL(e.x)||kL(e.x,"".concat(t,".x"),0,1e4),FL(e.y)||kL(e.y,"".concat(t,".y"),0,1e4),FL(e.width)||kL(e.width,"".concat(t,".width"),0,1e4),FL(e.height)||kL(e.height,"".concat(t,".height"),0,1e4),FL(e.zOrder)||kL(e.zOrder,"".concat(t,".zOrder"),0,255),FL(e.alpha)||kL(e.alpha,"".concat(t,".alpha"),0,1,!1)}const Mk={audioBitrate:48,audioChannels:1,audioSampleRate:48e3,backgroundColor:0,height:360,lowLatency:!1,videoBitrate:400,videoCodecProfile:100,videoCodecType:1,videoFrameRate:15,videoGop:30,width:640,images:[],userConfigs:[],userConfigExtraInfo:""},Uk={audioBitrate:48,audioChannels:2,audioVolume:100,audioSampleRate:48e3,height:0,width:0,videoBitrate:400,videoFramerate:15,videoGop:30};let xk,Qk,Fk,Vk,jk,Gk,Kk,Hk,Wk,Yk,Jk,qk,Xk,zk,Zk,$k,eB,tB;function rB(e){if(!e.channelName)throw new UD(MD.INVALID_PARAMS,"invalid channelName in info");if(!e.uid||"number"!=typeof e.uid)throw new UD(MD.INVALID_PARAMS,"invalid uid in info, uid must be a number");return e.token&&ML(e.token,"info.token",1,2047),QL(e.uid),xL(e.channelName),!0}function iB(e){return LL(e,"mediaSource",["screen","window","application"]),!0}!function(e){e.WARNING="@live_uap-warning",e.ERROR="@line_uap-error",e.PUBLISH_STREAM_STATUS="@live_uap-publish-status",e.INJECT_STREAM_STATUS="@live_uap-inject-status",e.WORKER_STATUS="@live_uap-worker-status",e.REQUEST_NEW_ADDRESS="@live_uap-request-address"}(xk||(xk={})),function(e){e.REQUEST_WORKER_MANAGER_LIST="@live_req_worker_manager"}(Qk||(Qk={})),function(e){e[e.LIVE_STREAM_RESPONSE_SUCCEED=200]="LIVE_STREAM_RESPONSE_SUCCEED",e[e.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM=454]="LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM",e[e.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR=450]="LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR",e[e.LIVE_STREAM_RESPONSE_BAD_STREAM=451]="LIVE_STREAM_RESPONSE_BAD_STREAM",e[e.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR=400]="LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR",e[e.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST=404]="LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST",e[e.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED=456]="LIVE_STREAM_RESPONSE_NOT_AUTHORIZED",e[e.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE=457]="LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE",e[e.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN=429]="LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN",e[e.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH=452]="LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH",e[e.LIVE_STREAM_RESPONSE_NOT_SUPPORTED=453]="LIVE_STREAM_RESPONSE_NOT_SUPPORTED",e[e.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM=455]="LIVE_STREAM_RESPONSE_MAX_STREAM_NUM",e[e.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR=500]="LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR",e[e.LIVE_STREAM_RESPONSE_WORKER_LOST=501]="LIVE_STREAM_RESPONSE_WORKER_LOST",e[e.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT=502]="LIVE_STREAM_RESPONSE_RESOURCE_LIMIT",e[e.LIVE_STREAM_RESPONSE_WORKER_QUIT=503]="LIVE_STREAM_RESPONSE_WORKER_QUIT",e[e.ERROR_FAIL_SEND_MESSAGE=504]="ERROR_FAIL_SEND_MESSAGE",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE=30]="PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT=31]="PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH=32]="PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH",e[e.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN=33]="PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN"}(Fk||(Fk={})),function(e){e.CONNECT_FAILED="connect failed",e.CONNECT_TIMEOUT="connect timeout",e.WS_DISCONNECTED="websocket disconnected",e.REQUEST_TIMEOUT="request timeout",e.REQUEST_FAILED="request failed",e.WAIT_STATUS_TIMEOUT="wait status timeout",e.WAIT_STATUS_ERROR="wait status error",e.BAD_STATE="bad state",e.WS_ABORT="ws abort",e.AP_REQUEST_TIMEOUT="AP request timeout",e.AP_JSON_PARSE_ERROR="AP json parse error",e.AP_REQUEST_ERROR="AP request error",e.AP_REQUEST_ABORT="AP request abort"}(Vk||(Vk={})),function(e){e[e.SetSdkProfile=0]="SetSdkProfile",e[e.SetSourceChannel=1]="SetSourceChannel",e[e.SetSourceUserId=2]="SetSourceUserId",e[e.SetDestChannel=3]="SetDestChannel",e[e.StartPacketTransfer=4]="StartPacketTransfer",e[e.StopPacketTransfer=5]="StopPacketTransfer",e[e.UpdateDestChannel=6]="UpdateDestChannel",e[e.Reconnect=7]="Reconnect",e[e.SetVideoProfile=8]="SetVideoProfile"}(jk||(jk={})),function(e){e.NETWORK_DISCONNECTED="NETWORK_DISCONNECTED",e.NETWORK_CONNECTED="NETWORK_CONNECTED",e.PACKET_JOINED_SRC_CHANNEL="PACKET_JOINED_SRC_CHANNEL",e.PACKET_JOINED_DEST_CHANNEL="PACKET_JOINED_DEST_CHANNEL",e.PACKET_SENT_TO_DEST_CHANNEL="PACKET_SENT_TO_DEST_CHANNEL",e.PACKET_RECEIVED_VIDEO_FROM_SRC="PACKET_RECEIVED_VIDEO_FROM_SRC",e.PACKET_RECEIVED_AUDIO_FROM_SRC="PACKET_RECEIVED_AUDIO_FROM_SRC",e.PACKET_UPDATE_DEST_CHANNEL="PACKET_UPDATE_DEST_CHANNEL",e.PACKET_UPDATE_DEST_CHANNEL_REFUSED="PACKET_UPDATE_DEST_CHANNEL_REFUSED",e.PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE="PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE"}(Gk||(Gk={})),function(e){e.RELAY_STATE_IDLE="RELAY_STATE_IDLE",e.RELAY_STATE_CONNECTING="RELAY_STATE_CONNECTING",e.RELAY_STATE_RUNNING="RELAY_STATE_RUNNING",e.RELAY_STATE_FAILURE="RELAY_STATE_FAILURE"}(Kk||(Kk={})),function(e){e.RELAY_OK="RELAY_OK",e.SERVER_CONNECTION_LOST="SERVER_CONNECTION_LOST",e.SRC_TOKEN_EXPIRED="SRC_TOKEN_EXPIRED",e.DEST_TOKEN_EXPIRED="DEST_TOKEN_EXPIRED"}(Hk||(Hk={})),function(e){e.High="high",e.Low="low",e.Audio="audio",e.Screen="screen",e.ScreenLow="screen_low"}(Wk||(Wk={})),function(e){e.DISCONNECT="disconnect",e.CONNECTION_STATE_CHANGE="connection-state-change",e.NETWORK_QUALITY="network-quality",e.STREAM_TYPE_CHANGE="stream-type-change",e.IS_P2P_DISCONNECTED="is-p2p-dis",e.DISCONNECT_P2P="dis-p2p",e.REQUEST_NEW_GATEWAY_LIST="req-gate-url",e.NEED_RENEW_SESSION="need-sid",e.REQUEST_P2P_CONNECTION_PARAMS="request-p2p-connection-params",e.JOIN_RESPONSE="join-response"}(Yk||(Yk={})),function(e){e[e.Nothing=0]="Nothing",e[e.Audio=1]="Audio",e[e.LwoVideo=2]="LwoVideo",e[e.Video=4]="Video",e[e.Data=8]="Data"}(Jk||(Jk={})),function(e){e.NEED_RENEGOTIATE="@need_renegotiate",e.NEED_REPLACE_TRACK="@need_replace_track",e.NEED_CLOSE="@need_close",e.NEED_ENABLE_TRACK="@need_enable_track",e.NEED_DISABLE_TRACK="@need_disable_track",e.NEED_SESSION_ID="@need_sid",e.SET_OPTIMIZATION_MODE="@set_optimization_mode",e.GET_STATS="@get_stats",e.GET_LOW_VIDEO_TRACK="@get_low_video_track",e.NEED_RESET_REMOTE_SDP="@need_reset_remote_sdp",e.NEED_UPDATE_VIDEO_ENCODER="@need_update_video_encoder",e.NEED_MUTE_TRACK="@need_mute_track",e.NEED_UNMUTE_TRACK="@need_unmute_track"}(qk||(qk={})),function(e){e.SCREEN_TRACK="screen_track",e.LOW_STREAM="low_stream"}(Xk||(Xk={})),function(e){e[e.HIGH_STREAM=0]="HIGH_STREAM",e[e.LOW_STREAM=1]="LOW_STREAM"}(zk||(zk={})),function(e){e[e.DISABLE=0]="DISABLE",e[e.LOW_STREAM=1]="LOW_STREAM",e[e.AUDIO_ONLY=2]="AUDIO_ONLY"}(Zk||(Zk={})),function(e){e.SOURCE_STATE_CHANGE="source-state-change",e.TRACK_ENDED="track-ended",e.BEAUTY_EFFECT_OVERLOAD="beauty-effect-overload",e.VIDEO_ELEMENT_VISIBLE_STATUS="video-element-visible-status",e.CLOSED="closed"}($k||($k={})),function(e){e.FIRST_FRAME_DECODED="first-frame-decoded",e.VIDEO_ELEMENT_VISIBLE_STATUS="video-element-visible-status"}(eB||(eB={})),function(e){e.CHINA="CHINA",e.ASIA="ASIA",e.NORTH_AMERICA="NORTH_AMERICA",e.EUROPE="EUROPE",e.JAPAN="JAPAN",e.INDIA="INDIA",e.KOREA="KOREA",e.HKMC="HKMC",e.US="US",e.OCEANIA="OCEANIA",e.SOUTH_AMERICA="SOUTH_AMERICA",e.AFRICA="AFRICA",e.OVERSEA="OVERSEA",e.GLOBAL="GLOBAL"}(tB||(tB={}));const nB=[tB.AFRICA,tB.ASIA,tB.CHINA,tB.EUROPE,tB.GLOBAL,tB.INDIA,tB.JAPAN,tB.NORTH_AMERICA,tB.OCEANIA,tB.OVERSEA,tB.SOUTH_AMERICA];let oB;!function(e){e.CHINA="CN",e.ASIA="AS",e.NORTH_AMERICA="NA",e.EUROPE="EU",e.JAPAN="JP",e.INDIA="IN",e.KOREA="KR",e.HKMC="HK",e.US="US",e.OCEANIA="OC",e.SOUTH_AMERICA="SA",e.AFRICA="AF",e.OVERSEA="OVERSEA",e.GLOBAL="GLOBAL"}(oB||(oB={}));const sB={CHINA:{},ASIA:{CODE:oB.ASIA,WEBCS_DOMAIN:["ap-web-1-asia.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-asia.agora.io"],PROXY_CS:["proxy-ap-web-asia.agora.io"],CDS_AP:["cds-ap-web-asia.agora.io","cds-ap-web-asia2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-asia.agora.io","sua-ap-web-asia2.agora.io"],UAP_AP:["uap-ap-web-asia.agora.io","uap-ap-web-asia2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-asia.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-asia.agora.io"],LOG_UPLOAD_SERVER:["logservice-asia.agora.io"],PROXY_SERVER_TYPE3:["southeast-asia.webrtc-cloud-proxy.sd-rtn.com"]},NORTH_AMERICA:{CODE:oB.NORTH_AMERICA,WEBCS_DOMAIN:["ap-web-1-north-america.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-north-america.agora.io"],PROXY_CS:["proxy-ap-web-america.agora.io"],CDS_AP:["cds-ap-web-america.agora.io","cds-ap-web-america2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-america.agora.io","sua-ap-web-america2.agora.io"],UAP_AP:["uap-ap-web-america.agora.io","uap-ap-web-america2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-north-america.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-north-america.agora.io"],LOG_UPLOAD_SERVER:["logservice-north-america.agora.io"],PROXY_SERVER_TYPE3:["east-usa.webrtc-cloud-proxy.sd-rtn.com"]},EUROPE:{CODE:oB.EUROPE,WEBCS_DOMAIN:["ap-web-1-europe.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-europe.agora.io"],PROXY_CS:["proxy-ap-web-europe.agora.io"],CDS_AP:["cds-ap-web-europe.agora.io","cds-ap-web-europe2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-europe.agora.io","sua-ap-web-europe.agora.io"],UAP_AP:["uap-ap-web-europe.agora.io","uap-ap-web-europe2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-europe.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-europe.agora.io"],LOG_UPLOAD_SERVER:["logservice-europe.agora.io"],PROXY_SERVER_TYPE3:["europe.webrtc-cloud-proxy.sd-rtn.com"]},JAPAN:{CODE:oB.JAPAN,WEBCS_DOMAIN:["ap-web-1-japan.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-japan.agora.io"],PROXY_CS:["proxy-ap-web-japan.agora.io"],CDS_AP:["cds-ap-web-japan.agora.io","cds-ap-web-japan2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-japan.agora.io","sua-ap-web-japan2.agora.io"],UAP_AP:["uap-ap-web-japan.agora.io","\tuap-ap-web-japan2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-japan.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-japan.agora.io"],LOG_UPLOAD_SERVER:["logservice-japan.agora.io"],PROXY_SERVER_TYPE3:["japan.webrtc-cloud-proxy.sd-rtn.com"]},INDIA:{CODE:oB.INDIA,WEBCS_DOMAIN:["ap-web-1-india.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-india.agora.io"],PROXY_CS:["proxy-ap-web-india.agora.io"],CDS_AP:["cds-ap-web-india.agora.io","cds-ap-web-india2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-india.agora.io","sua-ap-web-india2.agora.io"],UAP_AP:["uap-ap-web-india.agora.io","uap-ap-web-india2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-india.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-india.agora.io"],LOG_UPLOAD_SERVER:["logservice-india.agora.io"],PROXY_SERVER_TYPE3:["india.webrtc-cloud-proxy.sd-rtn.com"]},KOREA:{CODE:oB.KOREA,WEBCS_DOMAIN:["ap-web-1-korea.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-korea.agora.io"],PROXY_CS:["proxy-ap-web-korea.agora.io"],CDS_AP:["cds-ap-web-korea.agora.io","cds-ap-web-korea2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-korea.agora.io","sua-ap-web-korea2.agora.io"],UAP_AP:["uap-ap-web-korea.agora.io","uap-ap-web-korea2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-korea.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-korea.agora.io"],LOG_UPLOAD_SERVER:["logservice-korea.agora.io"],PROXY_SERVER_TYPE3:["korea.webrtc-cloud-proxy.sd-rtn.com"]},HKMC:{CODE:oB.HKMC,WEBCS_DOMAIN:["ap-web-1-hkmc.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-hkmc.agora.io"],PROXY_CS:["proxy-ap-web-hkmc.agora.io"],CDS_AP:["cds-ap-web-hkmc.agora.io","cds-ap-web-hkmc2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-hkmc.agora.io","sua-ap-web-hkmc2.agora.io"],UAP_AP:["uap-ap-web-hkmc.agora.io","uap-ap-web-hkmc2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-hkmc.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-hkmc.agora.io"],LOG_UPLOAD_SERVER:["logservice-hkmc.agora.io"],PROXY_SERVER_TYPE3:["hkmc.webrtc-cloud-proxy.sd-rtn.com"]},US:{CODE:oB.US,WEBCS_DOMAIN:["ap-web-1-us.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-us.agora.io"],PROXY_CS:["proxy-ap-web-us.agora.io"],CDS_AP:["cds-ap-web-us.agora.io","cds-ap-web-us2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-us.agora.io","sua-ap-web-us2.agora.io"],UAP_AP:["uap-ap-web-us.agora.io","uap-ap-web-us2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-us.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-us.agora.io"],LOG_UPLOAD_SERVER:["logservice-us.agora.io"],PROXY_SERVER_TYPE3:["us.webrtc-cloud-proxy.sd-rtn.com"]},OVERSEA:{CODE:oB.OVERSEA,WEBCS_DOMAIN:["ap-web-1-oversea.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-oversea.agora.io"],PROXY_CS:["proxy-ap-web-oversea.agora.io"],CDS_AP:["cds-ap-web-oversea.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-oversea.agora.io"],UAP_AP:["uap-ap-web-oversea.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-oversea.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-oversea.agora.io"],LOG_UPLOAD_SERVER:["logservice-oversea.agora.io"],PROXY_SERVER_TYPE3:["webrtc-cloud-proxy.agora.io"]},GLOBAL:{CODE:oB.GLOBAL,WEBCS_DOMAIN:["webrtc2-ap-web-1.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["webrtc2-ap-web-3.agora.io"],PROXY_CS:["ap-proxy-1.agora.io","ap-proxy-2.agora.io"],CDS_AP:["cds-ap-web-1.agora.io","cds-ap-web-3.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-1.agora.io","sua-ap-web-3.agora.io"],UAP_AP:["uap-ap-web-1.agora.io","uap-ap-web-3.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2.agora.io"],LOG_UPLOAD_SERVER:["logservice.agora.io"],PROXY_SERVER_TYPE3:["webrtc-cloud-proxy.sd-rtn.com"]},OCEANIA:{CODE:oB.OCEANIA,WEBCS_DOMAIN:["ap-web-1-oceania.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-oceania.agora.io"],PROXY_CS:["proxy-ap-web-oceania.agora.io"],CDS_AP:["cds-ap-web-oceania.agora.io","cds-ap-web-oceania2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-oceania.agora.io","sua-ap-web-oceania2.agora.io"],UAP_AP:["uap-ap-web-oceania.agora.io","uap-ap-web-oceania2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-oceania.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-oceania.agora.io"],LOG_UPLOAD_SERVER:["logservice-oceania.agora.io"],PROXY_SERVER_TYPE3:["oceania.webrtc-cloud-proxy.sd-rtn.com"]},SOUTH_AMERICA:{CODE:oB.SOUTH_AMERICA,WEBCS_DOMAIN:["ap-web-1-south-america.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-south-america.agora.io"],PROXY_CS:["proxy-ap-web-south-america.agora.io"],CDS_AP:["cds-ap-web-south-america.agora.io","cds-ap-web-south-america2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-south-america.agora.io","sua-ap-web-south-america2.agora.io"],UAP_AP:["uap-ap-web-south-america.agora.io","uap-ap-web-south-america2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-south-america.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-south-america.agora.io"],LOG_UPLOAD_SERVER:["logservice-south-america.agora.io"],PROXY_SERVER_TYPE3:["south-america.webrtc-cloud-proxy.sd-rtn.com"]},AFRICA:{CODE:oB.AFRICA,WEBCS_DOMAIN:["ap-web-1-africa.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-africa.agora.io"],PROXY_CS:["proxy-ap-web-africa.agora.io"],CDS_AP:["cds-ap-web-africa.agora.io","cds-ap-web-africa2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-africa.agora.io","sua-ap-web-africa2.agora.io"],UAP_AP:["uap-ap-web-africa.agora.io","uap-ap-web-africa2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-africa.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-africa.agora.io"],LOG_UPLOAD_SERVER:["logservice-south-africa.agora.io"],PROXY_SERVER_TYPE3:["africa.webrtc-cloud-proxy.sd-rtn.com"]}};let aB,cB,dB,uB,AB,hB,lB,pB;mP&&(sB.CHINA={CODE:oB.CHINA,WEBCS_DOMAIN:["webrtc2-2.ap.sd-rtn.com"],WEBCS_DOMAIN_BACKUP_LIST:["webrtc2-4.ap.sd-rtn.com"],PROXY_CS:["proxy-web.ap.sd-rtn.com"],CDS_AP:["cds-web-2.ap.sd-rtn.com","cds-web-4.ap.sd-rtn.com"],ACCOUNT_REGISTER:["sua-web-2.ap.sd-rtn.com","sua-web-4.ap.sd-rtn.com"],UAP_AP:["uap-web-2.ap.sd-rtn.com","uap-web-4.ap.sd-rtn.com"],EVENT_REPORT_DOMAIN:["web-3.statscollector.sd-rtn.com"],EVENT_REPORT_BACKUP_DOMAIN:["web-4.statscollector.sd-rtn.com"],LOG_UPLOAD_SERVER:["logservice-china.agora.io"],PROXY_SERVER_TYPE3:["east-cn.webrtc-cloud-proxy.sd-rtn.com"]}),function(e){e.UPDATE_BITRATE_LIMIT="update_bitrate_limit"}(aB||(aB={}));class gB extends kD{constructor(e,t){super(),kO(this,"onICEConnectionStateChange",void 0),kO(this,"onConnectionStateChange",void 0),kO(this,"onDTLSTransportStateChange",void 0),kO(this,"onDTLSTransportError",void 0),kO(this,"onICETransportStateChange",void 0),kO(this,"onFirstAudioReceived",void 0),kO(this,"onFirstVideoReceived",void 0),kO(this,"onFirstAudioDecoded",void 0),kO(this,"onFirstVideoDecoded",void 0),kO(this,"onFirstVideoDecodedTimeout",void 0),kO(this,"onSelectedLocalCandidateChanged",void 0),kO(this,"onSelectedRemoteCandidateChanged",void 0)}}!function(e){e.SEND="sendonly",e.RECV="recvonly",e.SENDRECV="sendrecv",e.INACTIVE="inactive"}(cB||(cB={})),function(e){e.VIDEO="video",e.AUDIO="audio"}(dB||(dB={})),function(e){e.LocalVideoTrack="videoTrack",e.LocalAudioTrack="audioTrack",e.LocalVideoLowTrack="videoLowTrack"}(uB||(uB={})),function(e){e.New="new",e.Connected="connected",e.Reconnecting="reconnecting",e.Disconnected="disconnected"}(AB||(AB={})),function(e){e.StateChange="stateChange",e.IceConnectionStateChange="iceConnectionStateChange",e.RequestMuteLocal="requestMuteLocal",e.RequestUnmuteLocal="requestUnmuteLocal",e.RequestRePublish="requestRePublish",e.RequestReSubscribe="requestReSubscribe",e.RequestUploadStats="requestUploadStats",e.MediaReconnectStart="MediaReconnectStart",e.MediaReconnectEnd="MediaReconnectEnd",e.NeedSignalRTT="NeedSignalRTT",e.RequestRestartICE="RequestRestartIce",e.PeerConnectionStateChange="PeerConnectionStateChange",e.RequestReconnect="RequestReconnect",e.RequestReconnectPC="RequestReconnectPC",e.RequestUnpublishForReconnectPC="RequestUnpublishForReconnectPC",e.P2PLost="P2PLost",e.UpdateVideoEncoder="UpdateVideoEncoder",e.ConnectionTypeChange="ConnectionTypeChange",e.RequestLowStreamParameter="RequestLowStreamParameter"}(hB||(hB={})),function(e){e.ONLINE="ONLINE",e.OFFLINE="OFFLINE"}(lB||(lB={})),function(e){e.NETWORK_STATE_CHANGE="NETWORK_STATE_CHANGE",e.ONLINE="ONLINE",e.OFFLINE="OFFLINE"}(pB||(pB={}));const EB={join:["startJoin","startRequestAp","startJoinGateway","finishJoin"],publish:["startPublish"]};let fB,IB,mB,_B,CB;!function(e){e.ON_TRACK="on_track",e.ON_NODE="on_node"}(fB||(fB={})),function(e){e.REQUEST_UPDATE_CONSTRAINTS="request_update_constraints",e.REQUEST_CONSTRAINTS="request_constraints"}(IB||(IB={})),function(e){e.CONNECTING="CONNECTING",e.RECONNECTING="RECONNECTING",e.CONNECTED="CONNECTED",e.CLOSED="CLOSED"}(mB||(mB={})),function(e){e[e.CONNECT_AP=0]="CONNECT_AP",e[e.AP_CONNECTED=1]="AP_CONNECTED",e[e.CONNECT_WORKER_MANAGER=2]="CONNECT_WORKER_MANAGER",e[e.WORKER_MANAGER_CONNECTED=3]="WORKER_MANAGER_CONNECTED",e[e.GET_WORKER_MANAGER_RESPONSE=4]="GET_WORKER_MANAGER_RESPONSE",e[e.CONNECT_WORKER=5]="CONNECT_WORKER",e[e.WORKER_CONNECTED=6]="WORKER_CONNECTED",e[e.CLOSED=7]="CLOSED"}(_B||(_B={})),function(e){e.CONNECTION_STATE_CHANGE="connection-state-change",e.STATE_CHANGE="state-change",e.INSPECT_RESULT="inspect-result",e.CLIENT_LOCAL_VIDEO_TRACK="client-local-video-track",e.REQUEST_NEW_WORKER_URL="request-new-worker-url"}(CB||(CB={}));const SB={getDisplayMedia:!1,getStreamFromExtension:!1,supportUnifiedPlan:!1,supportMinBitrate:!1,supportSetRtpSenderParameters:!1,supportDualStream:!0,webAudioMediaStreamDest:!1,supportReplaceTrack:!1,supportWebGL:!1,webAudioWithAEC:!1,supportRequestFrame:!1,supportShareAudio:!1,supportDualStreamEncoding:!1};function vB(){return SB}var TB="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView,RB=Hr,yB=Zr,wB=r.RangeError,bB=function(e){if(void 0===e)return 0;var t=RB(e),r=yB(t);if(t!==r)throw wB("Wrong length or index");return r},OB=r.Array,NB=Math.abs,DB=Math.pow,PB=Math.floor,LB=Math.log,kB=Math.LN2,BB={pack:function(e,t,r){var i,n,o,s=OB(r),a=8*r-t-1,c=(1<<a)-1,d=c>>1,u=23===t?DB(2,-24)-DB(2,-77):0,A=e<0||0===e&&1/e<0?1:0,h=0;for((e=NB(e))!=e||e===1/0?(n=e!=e?1:0,i=c):(i=PB(LB(e)/kB),e*(o=DB(2,-i))<1&&(i--,o*=2),(e+=i+d>=1?u/o:u*DB(2,1-d))*o>=2&&(i++,o/=2),i+d>=c?(n=0,i=c):i+d>=1?(n=(e*o-1)*DB(2,t),i+=d):(n=e*DB(2,d-1)*DB(2,t),i=0));t>=8;)s[h++]=255&n,n/=256,t-=8;for(i=i<<t|n,a+=t;a>0;)s[h++]=255&i,i/=256,a-=8;return s[--h]|=128*A,s},unpack:function(e,t){var r,i=e.length,n=8*i-t-1,o=(1<<n)-1,s=o>>1,a=n-7,c=i-1,d=e[c--],u=127&d;for(d>>=7;a>0;)u=256*u+e[c--],a-=8;for(r=u&(1<<-a)-1,u>>=-a,a+=t;a>0;)r=256*r+e[c--],a-=8;if(0===u)u=1-s;else{if(u===o)return r?NaN:d?-1/0:1/0;r+=DB(2,t),u-=s}return(d?-1:1)*r*DB(2,u-t)}},MB=Pe,UB=qr,xB=ei,QB=ct,FB=Tt,VB=E,jB=qr,GB=ei,KB=function(e,t,r){var i=QB(t);i in e?FB.f(e,i,VB(0,r)):e[i]=r},HB=r.Array,WB=Math.max,YB=function(e,t,r){for(var i=GB(e),n=jB(t,i),o=jB(void 0===r?i:r,i),s=HB(WB(o-n,0)),a=0;n<o;n++,a++)KB(s,a,e[n]);return s.length=a,s},JB=r,qB=S,XB=o,zB=TB,ZB=Dr,$B=Kt,eM=Wi,tM=n,rM=ln,iM=Hr,nM=Zr,oM=bB,sM=BB,aM=Hl,cM=en,dM=jr.f,uM=Tt.f,AM=function(e){for(var t=MB(this),r=xB(t),i=arguments.length,n=UB(i>1?arguments[1]:void 0,r),o=i>2?arguments[2]:void 0,s=void 0===o?r:UB(o,r);s>n;)t[n++]=e;return t},hM=YB,lM=on,pM=ZB.PROPER,gM=ZB.CONFIGURABLE,EM=Rr.get,fM=Rr.set,IM="ArrayBuffer",mM="DataView",_M="Wrong index",CM=JB.ArrayBuffer,SM=CM,vM=SM&&SM.prototype,TM=JB.DataView,RM=TM&&TM.prototype,yM=Object.prototype,wM=JB.Array,bM=JB.RangeError,OM=qB(AM),NM=qB([].reverse),DM=sM.pack,PM=sM.unpack,LM=function(e){return[255&e]},kM=function(e){return[255&e,e>>8&255]},BM=function(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]},MM=function(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]},UM=function(e){return DM(e,23,4)},xM=function(e){return DM(e,52,8)},QM=function(e,t){uM(e.prototype,t,{get:function(){return EM(this)[t]}})},FM=function(e,t,r,i){var n=oM(r),o=EM(e);if(n+t>o.byteLength)throw bM(_M);var s=EM(o.buffer).bytes,a=n+o.byteOffset,c=hM(s,a,a+t);return i?c:NM(c)},VM=function(e,t,r,i,n,o){var s=oM(r),a=EM(e);if(s+t>a.byteLength)throw bM(_M);for(var c=EM(a.buffer).bytes,d=s+a.byteOffset,u=i(+n),A=0;A<t;A++)c[d+A]=u[o?A:t-A-1]};if(zB){var jM=pM&&CM.name!==IM;if(tM((function(){CM(1)}))&&tM((function(){new CM(-1)}))&&!tM((function(){return new CM,new CM(1.5),new CM(NaN),jM&&!gM})))jM&&gM&&$B(CM,"name",IM);else{(SM=function(e){return rM(this,vM),new CM(oM(e))}).prototype=vM;for(var GM,KM=dM(CM),HM=0;KM.length>HM;)(GM=KM[HM++])in SM||$B(SM,GM,CM[GM]);vM.constructor=SM}cM&&aM(RM)!==yM&&cM(RM,yM);var WM=new TM(new SM(2)),YM=qB(RM.setInt8);WM.setInt8(0,2147483648),WM.setInt8(1,2147483649),!WM.getInt8(0)&&WM.getInt8(1)||eM(RM,{setInt8:function(e,t){YM(this,e,t<<24>>24)},setUint8:function(e,t){YM(this,e,t<<24>>24)}},{unsafe:!0})}else vM=(SM=function(e){rM(this,vM);var t=oM(e);fM(this,{bytes:OM(wM(t),0),byteLength:t}),XB||(this.byteLength=t)}).prototype,RM=(TM=function(e,t,r){rM(this,RM),rM(e,vM);var i=EM(e).byteLength,n=iM(t);if(n<0||n>i)throw bM("Wrong offset");if(n+(r=void 0===r?i-n:nM(r))>i)throw bM("Wrong length");fM(this,{buffer:e,byteLength:r,byteOffset:n}),XB||(this.buffer=e,this.byteLength=r,this.byteOffset=n)}).prototype,XB&&(QM(SM,"byteLength"),QM(TM,"buffer"),QM(TM,"byteLength"),QM(TM,"byteOffset")),eM(RM,{getInt8:function(e){return FM(this,1,e)[0]<<24>>24},getUint8:function(e){return FM(this,1,e)[0]},getInt16:function(e){var t=FM(this,2,e,arguments.length>1?arguments[1]:void 0);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=FM(this,2,e,arguments.length>1?arguments[1]:void 0);return t[1]<<8|t[0]},getInt32:function(e){return MM(FM(this,4,e,arguments.length>1?arguments[1]:void 0))},getUint32:function(e){return MM(FM(this,4,e,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(e){return PM(FM(this,4,e,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(e){return PM(FM(this,8,e,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(e,t){VM(this,1,e,LM,t)},setUint8:function(e,t){VM(this,1,e,LM,t)},setInt16:function(e,t){VM(this,2,e,kM,t,arguments.length>2?arguments[2]:void 0)},setUint16:function(e,t){VM(this,2,e,kM,t,arguments.length>2?arguments[2]:void 0)},setInt32:function(e,t){VM(this,4,e,BM,t,arguments.length>2?arguments[2]:void 0)},setUint32:function(e,t){VM(this,4,e,BM,t,arguments.length>2?arguments[2]:void 0)},setFloat32:function(e,t){VM(this,4,e,UM,t,arguments.length>2?arguments[2]:void 0)},setFloat64:function(e,t){VM(this,8,e,xM,t,arguments.length>2?arguments[2]:void 0)}});lM(SM,IM),lM(TM,mM);var JM={ArrayBuffer:SM,DataView:TM},qM=Gi,XM=S,zM=n,ZM=Nt,$M=qr,eU=Zr,tU=Uo,rU=JM.ArrayBuffer,iU=JM.DataView,nU=iU.prototype,oU=XM(rU.prototype.slice),sU=XM(nU.getUint8),aU=XM(nU.setUint8);qM({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:zM((function(){return!new rU(2).slice(1,void 0).byteLength}))},{slice:function(e,t){if(oU&&void 0===t)return oU(ZM(this),e);for(var r=ZM(this).byteLength,i=$M(e,r),n=$M(void 0===t?r:t,r),o=new(tU(this,rU))(eU(n-i)),s=new iU(this),a=new iU(o),c=0;i<n;)aU(a,c++,sU(s,i++));return o}});var cU,dU,uU,AU={exports:{}},hU=TB,lU=o,pU=r,gU=x,EU=F,fU=Be,IU=Dn,mU=Ae,_U=Kt,CU=Ht.exports,SU=Tt.f,vU=H,TU=Hl,RU=en,yU=ze,wU=Fe,bU=pU.Int8Array,OU=bU&&bU.prototype,NU=pU.Uint8ClampedArray,DU=NU&&NU.prototype,PU=bU&&TU(bU),LU=OU&&TU(OU),kU=Object.prototype,BU=pU.TypeError,MU=yU("toStringTag"),UU=wU("TYPED_ARRAY_TAG"),xU=wU("TYPED_ARRAY_CONSTRUCTOR"),QU=hU&&!!RU&&"Opera"!==IU(pU.opera),FU=!1,VU={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},jU={BigInt64Array:8,BigUint64Array:8},GU=function(e){if(!EU(e))return!1;var t=IU(e);return fU(VU,t)||fU(jU,t)};for(cU in VU)(uU=(dU=pU[cU])&&dU.prototype)?_U(uU,xU,dU):QU=!1;for(cU in jU)(uU=(dU=pU[cU])&&dU.prototype)&&_U(uU,xU,dU);if((!QU||!gU(PU)||PU===Function.prototype)&&(PU=function(){throw BU("Incorrect invocation")},QU))for(cU in VU)pU[cU]&&RU(pU[cU],PU);if((!QU||!LU||LU===kU)&&(LU=PU.prototype,QU))for(cU in VU)pU[cU]&&RU(pU[cU].prototype,LU);if(QU&&TU(DU)!==LU&&RU(DU,LU),lU&&!fU(LU,MU))for(cU in FU=!0,SU(LU,MU,{get:function(){return EU(this)?this[UU]:void 0}}),VU)pU[cU]&&_U(pU[cU],UU,cU);var KU={NATIVE_ARRAY_BUFFER_VIEWS:QU,TYPED_ARRAY_CONSTRUCTOR:xU,TYPED_ARRAY_TAG:FU&&UU,aTypedArray:function(e){if(GU(e))return e;throw BU("Target is not a typed array")},aTypedArrayConstructor:function(e){if(gU(e)&&(!RU||vU(PU,e)))return e;throw BU(mU(e)+" is not a typed array constructor")},exportTypedArrayMethod:function(e,t,r,i){if(lU){if(r)for(var n in VU){var o=pU[n];if(o&&fU(o.prototype,e))try{delete o.prototype[e]}catch(r){try{o.prototype[e]=t}catch(e){}}}LU[e]&&!r||CU(LU,e,r?t:QU&&OU[e]||t,i)}},exportTypedArrayStaticMethod:function(e,t,r){var i,n;if(lU){if(RU){if(r)for(i in VU)if((n=pU[i])&&fU(n,e))try{delete n[e]}catch(e){}if(PU[e]&&!r)return;try{return CU(PU,e,r?t:QU&&PU[e]||t)}catch(e){}}for(i in VU)!(n=pU[i])||n[e]&&!r||CU(n,e,t)}},isView:function(e){if(!EU(e))return!1;var t=IU(e);return"DataView"===t||fU(VU,t)||fU(jU,t)},isTypedArray:GU,TypedArray:PU,TypedArrayPrototype:LU},HU=r,WU=n,YU=Ao,JU=KU.NATIVE_ARRAY_BUFFER_VIEWS,qU=HU.ArrayBuffer,XU=HU.Int8Array,zU=!JU||!WU((function(){XU(1)}))||!WU((function(){new XU(-1)}))||!YU((function(e){new XU,new XU(null),new XU(1.5),new XU(e)}),!0)||WU((function(){return 1!==new XU(new qU(2),1,void 0).length})),ZU=F,$U=Math.floor,ex=Number.isInteger||function(e){return!ZU(e)&&isFinite(e)&&$U(e)===e},tx=Hr,rx=r.RangeError,ix=function(e){var t=tx(e);if(t<0)throw rx("The argument can't be less than 0");return t},nx=r.RangeError,ox=function(e,t){var r=ix(e);if(r%t)throw nx("Wrong offset");return r},sx=fn,ax=d,cx=Lo,dx=Pe,ux=ei,Ax=Gn,hx=Mn,lx=Sn,px=KU.aTypedArrayConstructor,gx=y,Ex=r,fx=Array.isArray||function(e){return"Array"==gx(e)},Ix=Oo,mx=F,_x=ze("species"),Cx=Ex.Array,Sx=function(e){var t;return fx(e)&&(t=e.constructor,(Ix(t)&&(t===Cx||fx(t.prototype))||mx(t)&&null===(t=t[_x]))&&(t=void 0)),void 0===t?Cx:t},vx=fn,Tx=P,Rx=Pe,yx=ei,wx=function(e,t){return new(Sx(e))(0===t?0:t)},bx=S([].push),Ox=function(e){var t=1==e,r=2==e,i=3==e,n=4==e,o=6==e,s=7==e,a=5==e||o;return function(c,d,u,A){for(var h,l,p=Rx(c),g=Tx(p),E=vx(d,u),f=yx(g),I=0,m=A||wx,_=t?m(c,f):r||s?m(c,0):void 0;f>I;I++)if((a||I in g)&&(l=E(h=g[I],I,p),e))if(t)_[I]=l;else if(l)switch(e){case 3:return!0;case 5:return h;case 6:return I;case 2:bx(_,h)}else switch(e){case 4:return!1;case 7:bx(_,h)}return o?-1:i||n?n:_}},Nx={forEach:Ox(0),map:Ox(1),filter:Ox(2),some:Ox(3),every:Ox(4),find:Ox(5),findIndex:Ox(6),filterReject:Ox(7)},Dx=Gi,Px=r,Lx=d,kx=o,Bx=zU,Mx=KU,Ux=JM,xx=ln,Qx=E,Fx=Kt,Vx=ex,jx=Zr,Gx=bB,Kx=ox,Hx=ct,Wx=Be,Yx=Dn,Jx=F,qx=de,Xx=tl,zx=H,Zx=en,$x=jr.f,eQ=function(e){var t,r,i,n,o,s,a=cx(this),c=dx(e),d=arguments.length,u=d>1?arguments[1]:void 0,A=void 0!==u,h=hx(c);if(h&&!lx(h))for(s=(o=Ax(c,h)).next,c=[];!(n=ax(s,o)).done;)c.push(n.value);for(A&&d>2&&(u=sx(u,arguments[2])),r=ux(c),i=new(px(a))(r),t=0;r>t;t++)i[t]=A?u(c[t],t):c[t];return i},tQ=Nx.forEach,rQ=un,iQ=Tt,nQ=i,oQ=eg,sQ=Rr.get,aQ=Rr.set,cQ=iQ.f,dQ=nQ.f,uQ=Math.round,AQ=Px.RangeError,hQ=Ux.ArrayBuffer,lQ=hQ.prototype,pQ=Ux.DataView,gQ=Mx.NATIVE_ARRAY_BUFFER_VIEWS,EQ=Mx.TYPED_ARRAY_CONSTRUCTOR,fQ=Mx.TYPED_ARRAY_TAG,IQ=Mx.TypedArray,mQ=Mx.TypedArrayPrototype,_Q=Mx.aTypedArrayConstructor,CQ=Mx.isTypedArray,SQ="BYTES_PER_ELEMENT",vQ="Wrong length",TQ=function(e,t){_Q(e);for(var r=0,i=t.length,n=new e(i);i>r;)n[r]=t[r++];return n},RQ=function(e,t){cQ(e,t,{get:function(){return sQ(this)[t]}})},yQ=function(e){var t;return zx(lQ,e)||"ArrayBuffer"==(t=Yx(e))||"SharedArrayBuffer"==t},wQ=function(e,t){return CQ(e)&&!qx(t)&&t in e&&Vx(+t)&&t>=0},bQ=function(e,t){return t=Hx(t),wQ(e,t)?Qx(2,e[t]):dQ(e,t)},OQ=function(e,t,r){return t=Hx(t),!(wQ(e,t)&&Jx(r)&&Wx(r,"value"))||Wx(r,"get")||Wx(r,"set")||r.configurable||Wx(r,"writable")&&!r.writable||Wx(r,"enumerable")&&!r.enumerable?cQ(e,t,r):(e[t]=r.value,e)};kx?(gQ||(nQ.f=bQ,iQ.f=OQ,RQ(mQ,"buffer"),RQ(mQ,"byteOffset"),RQ(mQ,"byteLength"),RQ(mQ,"length")),Dx({target:"Object",stat:!0,forced:!gQ},{getOwnPropertyDescriptor:bQ,defineProperty:OQ}),AU.exports=function(e,t,r){var i=e.match(/\d+$/)[0]/8,n=e+(r?"Clamped":"")+"Array",o="get"+e,s="set"+e,a=Px[n],c=a,d=c&&c.prototype,u={},A=function(e,t){cQ(e,t,{get:function(){return function(e,t){var r=sQ(e);return r.view[o](t*i+r.byteOffset,!0)}(this,t)},set:function(e){return function(e,t,n){var o=sQ(e);r&&(n=(n=uQ(n))<0?0:n>255?255:255&n),o.view[s](t*i+o.byteOffset,n,!0)}(this,t,e)},enumerable:!0})};gQ?Bx&&(c=t((function(e,t,r,n){return xx(e,d),oQ(Jx(t)?yQ(t)?void 0!==n?new a(t,Kx(r,i),n):void 0!==r?new a(t,Kx(r,i)):new a(t):CQ(t)?TQ(c,t):Lx(eQ,c,t):new a(Gx(t)),e,c)})),Zx&&Zx(c,IQ),tQ($x(a),(function(e){e in c||Fx(c,e,a[e])})),c.prototype=d):(c=t((function(e,t,r,n){xx(e,d);var o,s,a,u=0,h=0;if(Jx(t)){if(!yQ(t))return CQ(t)?TQ(c,t):Lx(eQ,c,t);o=t,h=Kx(r,i);var l=t.byteLength;if(void 0===n){if(l%i)throw AQ(vQ);if((s=l-h)<0)throw AQ(vQ)}else if((s=jx(n)*i)+h>l)throw AQ(vQ);a=s/i}else a=Gx(t),o=new hQ(s=a*i);for(aQ(e,{buffer:o,byteOffset:h,byteLength:s,length:a,view:new pQ(o)});u<a;)A(e,u++)})),Zx&&Zx(c,IQ),d=c.prototype=Xx(mQ)),d.constructor!==c&&Fx(d,"constructor",c),Fx(d,EQ,c),fQ&&Fx(d,fQ,n),u[n]=c,Dx({global:!0,forced:c!=a,sham:!gQ},u),SQ in c||Fx(c,SQ,i),SQ in d||Fx(d,SQ,i),rQ(n)}):AU.exports=function(){},(0,AU.exports)("Uint8",(function(e){return function(t,r,i){return e(this,t,r,i)}}));var NQ=ei,DQ=Hr,PQ=KU.aTypedArray;(0,KU.exportTypedArrayMethod)("at",(function(e){var t=PQ(this),r=NQ(t),i=DQ(e),n=i>=0?i:r+i;return n<0||n>=r?void 0:t[n]}));var LQ=r,kQ=d,BQ=KU,MQ=ei,UQ=ox,xQ=Pe,QQ=n,FQ=LQ.RangeError,VQ=LQ.Int8Array,jQ=VQ&&VQ.prototype,GQ=jQ&&jQ.set,KQ=BQ.aTypedArray,HQ=BQ.exportTypedArrayMethod,WQ=!QQ((function(){var e=new Uint8ClampedArray(2);return kQ(GQ,e,{length:1,0:3},1),3!==e[1]})),YQ=WQ&&BQ.NATIVE_ARRAY_BUFFER_VIEWS&&QQ((function(){var e=new VQ(2);return e.set(1),e.set("2",1),0!==e[0]||2!==e[1]}));HQ("set",(function(e){KQ(this);var t=UQ(arguments.length>1?arguments[1]:void 0,1),r=xQ(e);if(WQ)return kQ(GQ,this,r,t);var i=this.length,n=MQ(r),o=0;if(n+t>i)throw FQ("Wrong length");for(;o<n;)this[t+o]=r[o++]}),!WQ||YQ);var JQ=YB,qQ=Math.floor,XQ=function(e,t){var r=e.length,i=qQ(r/2);return r<8?zQ(e,t):ZQ(e,XQ(JQ(e,0,i),t),XQ(JQ(e,i),t),t)},zQ=function(e,t){for(var r,i,n=e.length,o=1;o<n;){for(i=o,r=e[o];i&&t(e[i-1],r)>0;)e[i]=e[--i];i!==o++&&(e[i]=r)}return e},ZQ=function(e,t,r,i){for(var n=t.length,o=r.length,s=0,a=0;s<n||a<o;)e[s+a]=s<n&&a<o?i(t[s],r[a])<=0?t[s++]:r[a++]:s<n?t[s++]:r[a++];return e},$Q=XQ,eF=W.match(/firefox\/(\d+)/i),tF=!!eF&&+eF[1],rF=/MSIE|Trident/.test(W),iF=W.match(/AppleWebKit\/(\d+)\./),nF=!!iF&&+iF[1],oF=r,sF=S,aF=n,cF=ge,dF=$Q,uF=KU,AF=tF,hF=rF,lF=$,pF=nF,gF=oF.Array,EF=uF.aTypedArray,fF=uF.exportTypedArrayMethod,IF=oF.Uint16Array,mF=IF&&sF(IF.prototype.sort),_F=!(!mF||aF((function(){mF(new IF(2),null)}))&&aF((function(){mF(new IF(2),{})}))),CF=!!mF&&!aF((function(){if(lF)return lF<74;if(AF)return AF<67;if(hF)return!0;if(pF)return pF<602;var e,t,r=new IF(516),i=gF(516);for(e=0;e<516;e++)t=e%4,r[e]=515-e,i[e]=e-2*t+3;for(mF(r,(function(e,t){return(e/4|0)-(t/4|0)})),e=0;e<516;e++)if(r[e]!==i[e])return!0}));fF("sort",(function(e){return void 0!==e&&cF(e),CF?mF(this,e):dF(EF(this),function(e){return function(t,r){return void 0!==e?+e(t,r)||0:r!=r?-1:t!=t?1:0===t&&0===r?1/t>0&&1/r<0?1:-1:t>r}}(e))}),!CF||_F);var SF=un,vF="ArrayBuffer",TF=JM.ArrayBuffer;let RF;Gi({global:!0,forced:r.ArrayBuffer!==TF},{ArrayBuffer:TF}),SF(vF),function(e){e[e.CHOOSE_SERVER=11]="CHOOSE_SERVER",e[e.CLOUD_PROXY=18]="CLOUD_PROXY",e[e.CLOUD_PROXY_5=20]="CLOUD_PROXY_5",e[e.CLOUD_PROXY_FALLBACK=26]="CLOUD_PROXY_FALLBACK"}(RF||(RF={}));var yF=sd,wF=Array.isArray||function(e){return"Array"==yF(e)},bF=xc,OF=wF,NF=K_,DF=md,PF=Nu("species"),LF=bF.Array,kF=function(e){var t;return OF(e)&&(t=e.constructor,(NF(t)&&(t===LF||OF(t.prototype))||DF(t)&&null===(t=t[PF]))&&(t=void 0)),void 0===t?LF:t},BF=function(e,t){return new(kF(e))(0===t?0:t)},MF=gA,UF=hd,xF=Au,QF=th,FF=BF,VF=Bc([].push),jF=function(e){var t=1==e,r=2==e,i=3==e,n=4==e,o=6==e,s=7==e,a=5==e||o;return function(c,d,u,A){for(var h,l,p=xF(c),g=UF(p),E=MF(d,u),f=QF(g),I=0,m=A||FF,_=t?m(c,f):r||s?m(c,0):void 0;f>I;I++)if((a||I in g)&&(l=E(h=g[I],I,p),e))if(t)_[I]=l;else if(l)switch(e){case 3:return!0;case 5:return h;case 6:return I;case 2:VF(_,h)}else switch(e){case 4:return!1;case 7:VF(_,h)}return o?-1:i||n?n:_}},GF={forEach:jF(0),map:jF(1),filter:jF(2),some:jF(3),every:jF(4),find:jF(5),findIndex:jF(6),filterReject:jF(7)},KF=GF.forEach,HF=uh("forEach")?[].forEach:function(e){return KF(this,e,arguments.length>1?arguments[1]:void 0)};JA({target:"Array",proto:!0,forced:[].forEach!=HF},{forEach:HF});var WF=Eh("Array").forEach,YF=Lf,JF=pu,qF=Mc,XF=WF,zF=Array.prototype,ZF={DOMTokenList:!0,NodeList:!0},$F=function(e){var t=e.forEach;return e===zF||qF(zF,e)&&t===zF.forEach||JF(ZF,YF(e))?XF:t},eV=Au,tV=HE;JA({target:"Object",stat:!0,forced:bc((function(){tV(1)}))},{keys:function(e){return tV(eV(e))}});var rV=_d.Object.keys,iV=Ch,nV=JA,oV=wF,sV=Bc([].reverse),aV=[1,2];nV({target:"Array",proto:!0,forced:String(aV)===String(aV.reverse())},{reverse:function(){return oV(this)&&(this.length=this.length),sV(this)}});var cV=Eh("Array").reverse,dV=Mc,uV=cV,AV=Array.prototype,hV=function(e){var t=e.reverse;return e===AV||dV(AV,e)&&t===AV.reverse?uV:t},lV=bc,pV=Ld,gV=Nu("species"),EV=function(e){return pV>=51||!lV((function(){var t=[];return(t.constructor={})[gV]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},fV=JA,IV=xc,mV=wF,_V=K_,CV=md,SV=gE,vV=th,TV=fd,RV=GP,yV=Nu,wV=Z_,bV=EV("slice"),OV=yV("species"),NV=IV.Array,DV=Math.max;fV({target:"Array",proto:!0,forced:!bV},{slice:function(e,t){var r,i,n,o=TV(this),s=vV(o),a=SV(e,s),c=SV(void 0===t?s:t,s);if(mV(o)&&(r=o.constructor,(_V(r)&&(r===NV||mV(r.prototype))||CV(r)&&null===(r=r[OV]))&&(r=void 0),r===NV||void 0===r))return wV(o,a,c);for(i=new(void 0===r?NV:r)(DV(c-a,0)),n=0;a<c;a++,n++)a in o&&RV(i,n,o[a]);return i.length=n,i}});var PV=Eh("Array").slice,LV=Mc,kV=PV,BV=Array.prototype,MV=function(e){var t=e.slice;return e===BV||LV(BV,e)&&t===BV.slice?kV:t};function UV(e,t,r,i,n){var o,s,a,c={};return $F(o=rV(i)).call(o,(function(e){c[e]=i[e]})),c.enumerable=!!c.enumerable,c.configurable=!!c.configurable,("value"in c||c.initializer)&&(c.writable=!0),c=iV(s=hV(a=MV(r).call(r)).call(a)).call(s,(function(r,i){return i(e,t,r)||r}),c),n&&void 0!==c.initializer&&(c.value=c.initializer?c.initializer.call(n):void 0,c.initializer=void 0),void 0===c.initializer&&(LO(e,t,c),c=null),c}var xV=Eh("Array").keys,QV=Lf,FV=pu,VV=Mc,jV=xV,GV=Array.prototype,KV={DOMTokenList:!0,NodeList:!0},HV=function(e){var t=e.keys;return e===GV||VV(GV,e)&&t===GV.keys||FV(KV,QV(e))?jV:t};function WV(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function YV(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?WV(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):WV(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}let JV=0,qV=0;function XV(e,t,r,i){return new nT((n,o)=>{t.timeout=t.timeout||NP("HTTP_CONNECT_TIMEOUT"),t.responseType=t.responseType||"json",t.data&&!r?(t.data=JSON.stringify(t.data),JV+=pK(t.data)):r&&(t.data.size?JV+=t.data.size:t.data instanceof FormData?JV+=function(e){let t=0;/DingTalk/i.test(navigator.userAgent)&&e.realFormData&&(e=e.realFormData);return e.forEach(e=>{t+="string"==typeof e?pK(e):e.size}),t+138}(t.data):JV+=pK(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers["Content-Type"]=t.headers["Content-Type"]||"application/json",t.method="POST",t.url=e,PD.request(t).then(e=>{"string"==typeof e.data?qV+=pK(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?qV+=e.data.byteLength:qV+=pK(JSON.stringify(e.data)),i&&n({data:e.data,headers:e.headers}),n(e.data)}).catch(e=>{PD.isCancel(e)?o(new UD(MD.OPERATION_ABORTED,"cancel token canceled")):"ECONNABORTED"===e.code?o(new UD(MD.NETWORK_TIMEOUT,e.message)):e.response?o(new UD(MD.NETWORK_RESPONSE_ERROR,e.response.status)):o(new UD(MD.NETWORK_ERROR,e.message))})})}async function zV(e,t){const r=new Blob([t.data],{type:"buffer"});return await XV(e,YV(YV({},t),{},{data:r,headers:{"Content-Type":"application/octet-stream"}}),!0)}const ZV=new class extends kD{set networkState(e){HD.info("[".concat(this._moduleName,"]")+"network state changed, "+this._networkState+" -> "+e),this.emit(pB.NETWORK_STATE_CHANGE,e,this._networkState),e===lB.ONLINE?this.emit(pB.ONLINE):e===lB.OFFLINE&&(this.onlineWaiter=new nT(e=>{this.once(pB.ONLINE,()=>{this.onlineWaiter=void 0,e(lB.ONLINE)})}),this.emit(pB.OFFLINE)),this._networkState=e}get networkState(){return this._networkState}constructor(){super(),kO(this,"_moduleName","network-indicator"),kO(this,"_networkState",lB.ONLINE),kO(this,"onlineWaiter",void 0),window.addEventListener("online",()=>{this.networkState=lB.ONLINE}),window.addEventListener("offline",()=>{this.networkState=lB.OFFLINE})}};let $V=!1;const ej=new class extends kD{constructor(){super(...arguments),kO(this,"onAutoplayFailed",void 0),kO(this,"onAudioAutoplayFailed",void 0)}};function tj(){const e=oO();if(!$V){const t=r=>{r.preventDefault(),$V=!1,"Android"!==e.os||"Chrome"!==e.name&&e.name!==tO.WECHAT?(document.body.removeEventListener("touchstart",t,!0),document.body.removeEventListener("mousedown",t,!0)):document.body.removeEventListener("click",t,!0)};$V=!0,"Android"!==e.os||"Chrome"!==e.name&&e.name!==tO.WECHAT?(document.body.addEventListener("touchstart",t,!0),document.body.addEventListener("mousedown",t,!0)):document.body.addEventListener("click",t,!0),HD.info("detect media autoplay failed, document: https://docs.agora.io/cn/Voice/autoplay_policy_web_ng?platform=Web"),ej.onAutoplayFailed?ej.onAutoplayFailed():ej.onAudioAutoplayFailed?HD.warning("AgoraRTC.onAudioAutoplayFailed has been deprecated in favor of AgoraRTC.onAutoplayFailed.\n\n  Please refer to the Agora document to migrate the newer API, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web ."):HD.warning("We have detected a media autoplay failed event, and found out that you haven't implemented AgoraRTC.onAutoplayFailed callback yet.\n\n  It will cause audio/video element not playing automatically on some browsers without user interaction, possibly hurting user experiences.\n\n  Please refer to the Agora document to properly handle autoplay failed event, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web ."),ej.emit("autoplay-failed")}}function rj(e){return(new TextEncoder).encode(e)}const ij=function(e,t){const r=new Uint8Array(e.byteLength+t.byteLength);return r.set(new Uint8Array(e),0),r.set(new Uint8Array(t),e.byteLength),r};const nj=async e=>function(e,t){let r="";return new Uint8Array(e).forEach(e=>{r+=e.toString(t).padStart(2,"0")}),r}(await crypto.subtle.digest("SHA-256",rj(e)),16);var oj;function sj(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function aj(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?sj(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):sj(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function cj(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{report:uj};return function(t,r,i){const n=t[r];if("function"==typeof n){const o="AgoraRTCClient"===t.constructor.name?"Client":t.constructor.name;i.value=function(){for(var t=arguments.length,i=new Array(t),s=0;s<t;s++)i[s]=arguments[s];const a=e.report.reportApiInvoke(this._sessionId||null,{name:"".concat(o,".").concat(r),options:i,tag:tk.TRACER,reportResult:e.reportResult});try{const t=n.apply(this,i);return a.onSuccess(e.reportResult&&t),t}catch(e){throw a.onError(e),e}}}return i}}function dj(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{report:uj};return function(t,r,i){const n=i.value;if("function"==typeof n){let o;o=e.className?e.className:"AgoraRTCClient"===t.constructor.name?"Client":t.constructor.name,i.value=async function(){let t;for(var i=arguments.length,s=new Array(i),a=0;a<i;a++)s[a]=arguments[a];try{s.length>0&&(JSON.stringify(s),t=s)}catch(e){HD.warning("arguments for method ".concat(o,".").concat(r," not serializable from apiInvoke.")),t=[]}const c=(e.report||uj).reportApiInvoke(this._sessionId||null,{name:"".concat(o,".").concat(r),options:t,tag:tk.TRACER});try{const e=await n.apply(this,s);return c.onSuccess(),e}catch(e){throw c.onError(e),e}}}return i}}const uj=new(gP("AgoraRTCEventReport")(oj=class{constructor(){kO(this,"baseInfoMap",new Map),kO(this,"proxyServer",void 0),kO(this,"clientList",xP),kO(this,"eventUploadTimer",void 0),kO(this,"setSessionIdTimer",void 0),kO(this,"url",void 0),kO(this,"backupUrl",void 0),kO(this,"_appId",void 0),kO(this,"keyEventUploadPendingItems",[]),kO(this,"normalEventUploadPendingItems",[]),kO(this,"apiInvokeUploadPendingItems",[]),kO(this,"apiInvokeCount",0),kO(this,"ltsList",[]),kO(this,"lastSendNormalEventTime",Date.now()),kO(this,"customReportCounterTimer",void 0),kO(this,"customReportCount",0),kO(this,"extApiInvoke",async e=>{for(const t of e){const e=aj(aj({},t),{},{sid:null,invokeId:++this.apiInvokeCount,tag:tk.TRACER});this.sendApiInvoke(e)}}),this.eventUploadTimer=window.setInterval(this.doSend.bind(this),NP("EVENT_REPORT_SEND_INTERVAL")),this.setSessionIdTimer=window.setInterval(this.appendSessionId.bind(this),NP("EVENT_REPORT_SEND_INTERVAL"))}adjustSessionStartTime(e){if(!this.baseInfoMap.has(e)&&!this.baseInfoMap.get(e))return HD.error("adjust session ".concat(e," start time, sid is not exist or info is undefined")),void hP("error",this,"adjustSessionStartTime","adjust session ".concat(e," start time, sid is not exist or info is undefined"));const t=this.baseInfoMap.get(e),r=Date.now(),i=t.startTime;t.startTime=r,HD.debug("rewrite session ".concat(e," startTime: ").concat(r," , ").concat(r-i,"ms")),hP("debug",this,"adjustSessionStartTime",void 0,"rewrite session ".concat(e," startTime: ").concat(r," , ").concat(r-i,"ms")),this.baseInfoMap.set(e,t)}setAppId(e){this._appId=e}reportApiInvoke(e,t,r){t.timeout=t.timeout||6e4,t.reportResult=void 0===t.reportResult||t.reportResult;const i=Date.now();this.apiInvokeCount+=1;const n=this.apiInvokeCount,o=()=>({tag:t.tag,invokeId:n,sid:e,name:t.name,apiInvokeTime:i,options:t.options,states:t.states||null}),s=!!NP("SHOW_REPORT_INVOKER_LOG");s&&HD.info("".concat(t.name," start"),t.options);let a=!1;gK(t.timeout).then(()=>{a||(this.sendApiInvoke(aj(aj({},o()),{},{error:MD.API_INVOKE_TIMEOUT,success:!1})),HD.debug("".concat(t.name," timeout")))});const c=new UD(MD.UNEXPECTED_ERROR,"".concat(t.name,": this api invoke is end"));return{onSuccess:e=>{const i=()=>{if(a)throw c;return a=!0,this.sendApiInvoke(aj(aj({},o()),{},{success:!0},t.reportResult&&{result:e})),s&&HD.info("".concat(t.name," onSuccess")),e};return r?BK(i,t.name+"Success",r,()=>a=!0):i()},onError:e=>{const i=()=>{if(a)throw e;a=!0,this.sendApiInvoke(aj(aj({},o()),{},{success:!1,error:e})),s&&HD.info("".concat(t.name," onFailure"),e.toString())};return r?BK(i,t.name+"Error",r,()=>a=!0):i()}}}sessionInit(e,t){if(this.baseInfoMap.has(e))return;const r=Date.now(),i=this.createBaseInfo(e,r);i.cname=t.cname;const n=Object.assign({},{willUploadConsoleLog:NP("UPLOAD_LOG"),maxTouchPoints:navigator.maxTouchPoints,areaVersion:mP?"global":"oversea",areas:NP("AREAS")&&NP("AREAS").join(",")},t.extend),o=Date.now(),s=aj(aj({},i),{},{eventType:XL.SESSION_INIT,appid:t.appid,browser:navigator.userAgent,build:fP,lts:o,elapse:o-r,extend:JSON.stringify(n),mode:t.mode,process:NP("PROCESS_ID"),appType:NP("APP_TYPE"),success:!0,version:IP});this.send({type:zL.SESSION,data:s},!0)}joinChooseServer(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj({},i),{},{eventType:XL.JOIN_CHOOSE_SERVER,lts:n,eventElapse:n-t.lts,chooseServerAddr:t.csAddr,errorCode:t.ec,elapse:n-r.startTime,success:t.succ,chooseServerAddrList:JSON.stringify(t.serverList),uid:t.uid?parseInt(t.uid):null,cid:t.cid?parseInt(t.cid):null,chooseServerIp:t.csIp||"",opid:t.opid,unilbsServerIds:t.unilbsServerIds,extend:t.extend||void 0,isHttp3:t.isHttp3});this.send({type:zL.JOIN_CHOOSE_SERVER,data:o},!0)}reqUserAccount(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj({},i),{},{eventType:XL.REQ_USER_ACCOUNT,lts:n,success:t.success,serverAddress:t.serverAddr,stringUid:t.stringUid,uid:t.uid,errorCode:t.errorCode,elapse:n-r.startTime,eventElapse:n-t.lts,extend:JSON.stringify(t.extend)});this.send({type:zL.REQ_USER_ACCOUNT,data:o},!0)}joinGateway(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info;t.vid&&(i.vid=t.vid),i.uid=t.uid,i.cid=t.cid;const n=Date.now(),{firstSuccess:o,avoidJoinStartTime:s,isProxy:a,addr:c}=t,d=n-(o&&s?s:r.startTime),u=aj(aj({},i),{},{eventType:XL.JOIN_GATEWAY,lts:n,gatewayAddr:t.addr,success:t.succ,errorCode:t.ec,elapse:d,eventElapse:n-t.lts,firstSuccess:o}),A=u.success?1:0;if(t.succ&&(r.lastJoinSuccessTime=n),o)this.send({type:zL.JOIN_GATEWAY,data:u},!0);else{let e;if(c)if(a){const t=c.match(/h=(\d{1,3}-){3}\d{1,3}/g),r=c.match(/p=[0-9]{1,6}/g);e={isSuccess:A,gatewayIp:t&&t.length?t[0].split("=")[1].replace(/-/g,"."):"",port:r&&r.length?r[0].split("=")[1]:"",isProxy:a?1:0}}else{const t=c.match(/wss:\/\/(\d{1,3}-){3}\d{1,3}/g),r=c.match(/:[0-9]{1,6}/g);e={isSuccess:A,gatewayIp:t&&t.length?t[0].split("//")[1].replace(/-/g,"."):"",port:r&&r.length?r[0].split(":")[1]:"",isProxy:a?1:0}}else e={isSuccess:A,gatewayIp:"",port:"",isProxy:a?1:0};delete u.success,delete u.eventType,delete u.firstSuccess,u.vid=Number(u.vid);const t=Object.assign({},u,e,{eventType:XL.REJOIN_GATEWAY});this.send({type:zL.RE_JOIN_GATEWAY,data:t},!0)}}joinChannelTimeout(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=Date.now(),n=aj(aj({},r.info),{},{lts:i,timeout:t,elapse:i-r.startTime});this.send({type:zL.JOIN_CHANNEL_TIMEOUT,data:n},!0)}publish(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj({},i),{},{eventType:XL.PUBLISH,lts:n,eventElapse:t.eventElapse,elapse:n-r.startTime,success:t.succ,errorCode:t.ec,videoName:t.videoName,audioName:t.audioName,screenName:t.screenName,screenshare:t.screenshare,audio:t.audio,video:t.video,p2pid:t.p2pid,publishRequestid:t.publishRequestid});this.send({type:zL.PUBLISH,data:o},!0)}subscribe(e,t,r){const i=this.baseInfoMap.get(e);if(!i)return;const n=i.info,o=Date.now(),s=aj(aj({},n),{},{eventType:XL.SUBSCRIBE,lts:o,eventElapse:t.eventElapse,elapse:o-i.startTime,success:t.succ,errorCode:t.ec,video:t.video,audio:t.audio,subscribeRequestid:t.subscribeRequestid,p2pid:t.p2pid},r&&{extend:JSON.stringify({isMassSubscribe:!0})});"string"==typeof t.peerid?s.peerSuid=t.peerid:s.peer=t.peerid,this.send({type:zL.SUBSCRIBE,data:s},!0)}wsCompressorInit(e){var t;const r=[...HV(t=this.baseInfoMap).call(t)],i=r.length?r[0]:"UnableToGetSid",n=this.baseInfoMap.get(i);if(!n)return;const o=n.info,s=Date.now(),a=aj(aj({},o),{},{eventType:XL.WS_COMPRESSOR_INIT,lts:s,eventElapse:e.eventElapse,elapse:s-n.startTime,status:e.status?1:2});this.send({type:zL.WS_COMPRESSOR_INIT,data:a},!0)}firstRemoteVideoDecode(e,t,r,i){const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=aj(aj(aj({},o),i),{},{elapse:s-n.startTime,eventType:t,lts:s,firstDecodeFrame:Math.max(s-n.startTime,0),apEnd:Math.max(i.apEnd-n.startTime,0),apStart:Math.max(i.apStart-n.startTime,0),joinGwEnd:Math.max(i.joinGwEnd-n.startTime,0),joinGwStart:Math.max(i.joinGwStart-n.startTime,0),pcEnd:Math.max(i.pcEnd-n.startTime,0),pcStart:Math.max(i.pcStart-n.startTime,0),subscriberEnd:Math.max(i.subscriberEnd-n.startTime,0),subscriberStart:Math.max(i.subscriberStart-n.startTime,0),videoAddNotify:Math.max(i.videoAddNotify-n.startTime,0)});this.send({type:r,data:a},!0)}firstRemoteFrame(e,t,r,i){const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=aj(aj(aj({},o),i),{},{elapse:s-n.startTime,eventType:t,lts:s});this.send({type:r,data:a},!0)}onGatewayStream(e,t,r,i){const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=aj(aj(aj({},o),i),{},{eventType:t,lts:s});this.send({type:r,data:a},!0)}streamSwitch(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj({},i),{},{eventType:XL.STREAM_SWITCH,lts:n,isDual:t.isdual,elapse:n-r.startTime,success:t.succ});this.send({type:zL.STREAM_SWITCH,data:o},!0)}requestProxyAppCenter(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj({},i),{},{eventType:XL.REQUEST_PROXY_APPCENTER,lts:n,eventElapse:n-t.lts,elapse:n-r.startTime,APAddr:t.APAddr,workerManagerList:t.workerManagerList,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:zL.REQUEST_PROXY_APPCENTER,data:o},!0)}requestProxyWorkerManager(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj({},i),{},{eventType:XL.REQUEST_PROXY_WORKER_MANAGER,lts:n,eventElapse:n-t.lts,elapse:n-r.startTime,workerManagerAddr:t.workerManagerAddr,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:zL.REQUEST_PROXY_WORKER_MANAGER,data:o},!0)}setProxyServer(e){this.proxyServer=e,e?HD.debug("reportProxyServerurl: ".concat(e)):HD.debug("disable reportProxyServerurl: ".concat(e)),hP("debug",this,"setProxyServer",e)}peerPublishStatus(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj({},i),{},{subscribeElapse:t.subscribeElapse,peer:t.peer,peerPublishDuration:Math.max(t.audioPublishDuration,t.videoPublishDuration),audiotag:t.audioPublishDuration>0?1:-1,videotag:t.videoPublishDuration>0?1:-1,lts:n,elapse:n-r.startTime,joinChannelSuccessElapse:n-(r.lastJoinSuccessTime||n),peerPublishDurationVideo:t.videoPublishDuration,peerPublishDurationAudio:t.audioPublishDuration});this.send({type:zL.PEER_PUBLISH_STATUS,data:o},!0)}workerEvent(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now();(function(e,t,r){const i=e[t];if(!i||"string"!=typeof i)return[e];e[t]="";const n=pK(JSON.stringify(e));let o=0;const s=[];let a=0;for(let c=0;c<i.length;c++)a+=i.charCodeAt(c)<=127?1:3,a<=r-n||(s[s.length]=lK(lK({},e),{},{[t]:i.substring(o,c)}),o=c,a=i.charCodeAt(c)<=127?1:3);o!==i.length-1&&(s[s.length]=lK(lK({},e),{},{[t]:i.substring(o)}));return s})(aj(aj(aj({},i),t),{},{elapse:n-r.startTime,lts:n,productType:"WebRTC"}),"payload",1300).forEach(e=>this.send({type:zL.WORKER_EVENT,data:e},!0))}apworkerEvent(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj(aj({},i),t),{},{elapse:n-r.startTime,lts:n});this.send({type:zL.AP_WORKER_EVENT,data:o},!0)}joinWebProxyAP(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj(aj({},i),t),{},{elapse:n-r.startTime,lts:n,extend:t.extend||void 0});this.send({type:zL.JOIN_WEB_PROXY_AP,data:o},!0)}WebSocketQuit(e,t){const r=this.baseInfoMap.get(e);if(!r)return;const i=r.info,n=Date.now(),o=aj(aj(aj({},i),t),{},{elapse:n-r.startTime,lts:n});this.send({type:zL.WEBSOCKET_QUIT,data:o},!0)}async sendCustomReportMessage(e,t){if(this.customReportCount+=t.length,this.customReportCount>NP("CUSTOM_REPORT_LIMIT"))throw new UD(MD.CUSTOM_REPORT_FREQUENCY_TOO_HIGH);this.customReportCounterTimer||(this.customReportCounterTimer=window.setInterval(()=>{this.customReportCount=0},5e3));const r=t.map(t=>({type:zL.USER_ANALYTICS,data:aj({sid:e},t)}));try{NP("NEW_REPORT_SERVER")?await this.postDataToStatsCollector2(r):await this.postDataToStatsCollector(r)}catch(e){throw HD.error("send custom report message failed",e.toString()),new UD(MD.CUSTOM_REPORT_SEND_FAILED,e.message)}}autoplayFailed(e,t,r,i){if(!e)return;const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=aj(aj({},o),{},{vid:void 0===o.vid?0:Number(o.vid),lts:s,elapse:s-n.startTime,cbRegistered:ej.onAutoplayFailed||ej.onAudioAutoplayFailed?1:-1,errorMsg:r,mediaType:t,trackId:i,extend:void 0});this.send({type:zL.AUTOPLAY_FAILED,data:a},!0)}sendApiInvoke(e){const t=NP("NOT_REPORT_EVENT");if(e.tag&&t.includes&&t.includes(e.tag))return!1;if(null===e.sid)return this.apiInvokeUploadPendingItems.push(e),!1;const r=this.baseInfoMap.get(e.sid);if(!r)return this.apiInvokeUploadPendingItems.push(e),!1;const{cname:i,uid:n,cid:o}=r.info;e.lts=e.lts||Date.now();let s=void 0;if(e.error)if(e.error instanceof UD){const{code:t,message:r}=e.error;s=t||(r||e.error.toString())}else s=e.error.toString();const a={invokeId:e.invokeId,sid:e.sid,cname:i,cid:o,uid:n,lts:e.lts,success:e.success,elapse:e.lts-r.startTime,execElapse:e.lts-e.apiInvokeTime,apiName:e.name,options:e.options?JSON.stringify(e.options):void 0,execStates:e.states?JSON.stringify(e.states):void 0,execResult:e.result?JSON.stringify(e.result):void 0,errorCode:e.error?s:void 0,errorMsg:e.error?JSON.stringify(e.error):void 0};return this.send({type:zL.API_INVOKE,data:a},!1),!0}appendSessionId(){this.clientList.forEach(e=>{if(e._sessionId){const t=this.apiInvokeUploadPendingItems.length;for(let r=0;r<t;r++){const t=this.apiInvokeUploadPendingItems.shift();t&&(t.sid=e._sessionId,this.sendApiInvoke(Object.assign({},t)))}}})}send(e,t){if(t)return this.keyEventUploadPendingItems.push(e),void this.sendItems(this.keyEventUploadPendingItems,!0);this.normalEventUploadPendingItems.push(e),this.normalEventUploadPendingItems.length>NP("NORMAL_EVENT_QUEUE_CAPACITY")&&this.normalEventUploadPendingItems.splice(0,1),this.normalEventUploadPendingItems.length>=10&&this.sendItems(this.normalEventUploadPendingItems,!1)}doSend(){this.keyEventUploadPendingItems.length>0&&this.sendItems(this.keyEventUploadPendingItems,!0),this.normalEventUploadPendingItems.length>0&&Date.now()-this.lastSendNormalEventTime>=5e3&&this.sendItems(this.normalEventUploadPendingItems,!1)}sendItems(e,t){const r=[],i=[];for(;e.length;){const t=e.shift();r.length<20?r.push(t):i.push(t)}e.push(...i);for(const e of[...r]){var n;if(-1!==this.ltsList.indexOf(e.data.lts))e.data.lts=this.ltsList[this.ltsList.length-1]+1,this.ltsList.push(e.data.lts);else this.ltsList.push(e.data.lts),DL(n=this.ltsList).call(n,(e,t)=>e-t)}t||(this.lastSendNormalEventTime=Date.now());return r.length&&(NP("NEW_REPORT_SERVER")?this.postDataToStatsCollector2(r):this.postDataToStatsCollector(r)).catch((e=>r=>{NP("EVENT_REPORT_RETRY")&&(t?this.keyEventUploadPendingItems=this.keyEventUploadPendingItems.concat(e):(this.normalEventUploadPendingItems=this.normalEventUploadPendingItems.concat(e),this.normalEventUploadPendingItems.length>NP("NORMAL_EVENT_QUEUE_CAPACITY")&&(this.normalEventUploadPendingItems.splice(0,this.normalEventUploadPendingItems.length-NP("NORMAL_EVENT_QUEUE_CAPACITY")),HD.warning("report: drop normal events"))))})(r)),e}async postDataToStatsCollector2(e){ZV.networkState===lB.OFFLINE&&await nT.race([ZV.onlineWaiter,gK(2*xD.maxRetryTimeout)]);const t=e=>{let t=new Uint8Array;return e.forEach(e=>{const r=rj(JSON.stringify(e.data)),i=new ArrayBuffer(5),n=(e=>{let t=0;return Object.entries(zL).forEach(r=>{let[i,n]=r;n===e.type&&(t=$L[i])}),t})(e),o=new DataView(i);o.setUint16(0,r.byteLength,!0),o.setUint8(2,255&n),o.setUint8(3,n>>>8&255),o.setUint8(4,n>>>16&255),t=ij(t,new Uint8Array(i)),t=ij(t,r)}),t},r="event";let i=this.proxyServer?"https://".concat(this.proxyServer,"/rs/?h=").concat(NP("NEW_REPORT_SERVER_DOMAINS")[0],"&p=443&d=").concat(r):"https://".concat(NP("NEW_REPORT_SERVER_DOMAINS")[0],"/").concat(r);for(let n=0;n<2;n+=1){1===n&&(i=this.proxyServer?"https://".concat(this.proxyServer,"/rs/?h=").concat(NP("NEW_REPORT_SERVER_DOMAINS")[1],"&p=443&d=").concat(r):"https://".concat(NP("NEW_REPORT_SERVER_DOMAINS")[1],"/").concat(r));try{await XV(i,{timeout:1e4,data:t(e),headers:aj(aj({token:"32f24ab2ddb74f508aa9286c356cec84",biz:"webrtc",sendts:Math.round(Date.now()/1e3),debug:"false"},this._appId&&{appid:this._appId}),{},{"Content-Type":"application/octet-stream"})},!0)}catch(e){if(1===n)throw e;continue}return}}async postDataToStatsCollector(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r={msgType:"EventMessages",sentTs:Math.round(Date.now()/1e3),payloads:e.map(e=>JSON.stringify(e)),vid:(e=>{const t=e&&e.data.sid&&this.baseInfoMap.get(e.data.sid);return t&&t.info.vid&&+t.info.vid||0})(e[0])};ZV.networkState===lB.OFFLINE&&await nT.race([ZV.onlineWaiter,gK(2*xD.maxRetryTimeout)]);const i=t?"/events/proto-raws":"/events/messages";let n=this.url||(this.proxyServer?"https://".concat(this.proxyServer,"/rs/?h=").concat(NP("EVENT_REPORT_DOMAIN"),"&p=").concat(NP("STATS_COLLECTOR_PORT"),"&d=").concat(i):"https://".concat(NP("EVENT_REPORT_DOMAIN"),":").concat(NP("STATS_COLLECTOR_PORT")).concat(i));for(let e=0;e<2;e+=1){1===e&&(n=this.backupUrl||(this.proxyServer?"https://".concat(this.proxyServer,"/rs/?h=").concat(NP("EVENT_REPORT_BACKUP_DOMAIN"),"&p=").concat(NP("STATS_COLLECTOR_PORT"),"&d=").concat(i):"https://".concat(NP("EVENT_REPORT_BACKUP_DOMAIN"),":").concat(NP("STATS_COLLECTOR_PORT")).concat(i)));try{t?await zV(n,{timeout:1e4,data:r}):await XV(n,{timeout:1e4,data:r})}catch(t){if(1===e)throw t;continue}return}}createBaseInfo(e,t){const r=Object.assign({},qL);return r.sid=e,this.baseInfoMap.set(e,{info:r,startTime:t}),r}reportResourceTiming(e,t){const r=performance.getEntriesByName(e),i=r[r.length-1];i&&this.reportApiInvoke(t,{name:"Client.resourceTiming",options:i,tag:tk.TRACER}).onSuccess()}})||oj);BD.on("REPORT_LOG_UPLOAD",e=>{e.networkState=ZV.networkState,uj.reportApiInvoke(null,{name:"logUploadError",options:e,tag:tk.TRACER})});class Aj extends kD{constructor(e,t){super(),kO(this,"trackMediaType",void 0),kO(this,"_ID",void 0),kO(this,"_hints",[]),kO(this,"_isClosed",!1),kO(this,"_originMediaStreamTrack",void 0),kO(this,"_mediaStreamTrack",void 0),kO(this,"_external",{}),this._ID=t||fK(8,"track-"),this._originMediaStreamTrack=e,this._mediaStreamTrack=e,function(e){QP.includes(e)||QP.push(e)}(this)}toString(){return this._ID}getTrackId(){return this._ID}getMediaStreamTrack(e){if(!e){const e=uj.reportApiInvoke(null,{name:ek.GET_MEDIA_STREAM_TRACK,options:[],tag:tk.TRACER});this._mediaStreamTrack&&"string"==typeof this._mediaStreamTrack.label?e.onSuccess(this._mediaStreamTrack.label):e.onSuccess("")}return this._mediaStreamTrack}getMediaStreamTrackSettings(){return this.getMediaStreamTrack(!0).getSettings()}close(){this._isClosed=!0,function(e){const t=QP.indexOf(e);-1!==t&&QP.splice(t,1)}(this),this.emit($k.CLOSED)}}let hj,lj,pj,gj=1;class Ej{constructor(e){kO(this,"lockingPromise",nT.resolve()),kO(this,"locks",0),kO(this,"name",""),kO(this,"lockId",void 0),this.lockId=gj++,e&&(this.name=e),HD.debug("[lock-".concat(this.name,"-").concat(this.lockId,"] is created."))}get isLocked(){return this.locks>0}lock(e){let t;this.locks+=1,HD.debug("[lock-".concat(this.name,"-").concat(this.lockId,"] is locked, current queue ").concat(this.locks,". ").concat("string"==typeof e?e:""));const r=new nT(r=>{t=()=>{this.locks-=1,HD.debug("[lock-".concat(this.name,"-").concat(this.lockId,"] is not locked, current queue ").concat(this.locks,". ").concat("string"==typeof e?e:"")),r()}}),i=this.lockingPromise.then(()=>t);return this.lockingPromise=this.lockingPromise.then(()=>r),i}}function fj(e,t){return function(r,i,n){const o=n.value;if("function"!=typeof o)throw new Error("Cannot use mutex on object property.");return n.value=async function(){const r=this[t];if(!r)throw new Error("mutex property key ".concat(t," doesn't exist on ").concat(e));const n=await r.lock("From ".concat(e,".").concat(i));try{for(var s=arguments.length,a=new Array(s),c=0;c<s;c++)a[c]=arguments[c];return await o.apply(this,a)}finally{n()}},n}}class Ij extends Aj{get muted(){return this._muted}get enabled(){return this._enabled}constructor(e,t){super(e,t),kO(this,"_enabled",!0),kO(this,"_muted",!1),kO(this,"_isClosed",!1),kO(this,"_trackProcessors",[]),kO(this,"_enabledMutex",void 0),kO(this,"processor",void 0),kO(this,"processorContext",void 0),kO(this,"_handleTrackEnded",()=>{this.onTrackEnded()}),this._enabledMutex=new Ej("".concat(t)),e.addEventListener("ended",this._handleTrackEnded)}getTrackLabel(){return this._originMediaStreamTrack.label}close(){this._isClosed||(this.stop(),this._trackProcessors.forEach(e=>e.destroy()),this._trackProcessors=[],this._originMediaStreamTrack.stop(),this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack.stop(),this._mediaStreamTrack=null),this._originMediaStreamTrack=null,this._enabledMutex=null,HD.debug("[".concat(this.getTrackId(),"] close")),hP("debug",this,"close"),this.emit(qk.NEED_CLOSE),super.close())}async _registerTrackProcessor(e){if(-1!==this._trackProcessors.indexOf(e))return;const t=this._trackProcessors[this._trackProcessors.length-1];this._trackProcessors.push(e),e.onOutputChange=async()=>{const t=e.output||this._originMediaStreamTrack;this._mediaStreamTrack=t,this._updatePlayerSource(),await vK(this,qk.NEED_REPLACE_TRACK,this)},t?(t.onOutputChange=async()=>{t.output&&await e.setInput(t.output)},await e.setInput(t.output||t.input||this._originMediaStreamTrack)):await e.setInput(this._originMediaStreamTrack)}_getOutputFromProcessors(){if(0===this._trackProcessors.length)return this._originMediaStreamTrack;const e=this._trackProcessors[this._trackProcessors.length-1];return e.output||e.input||this._originMediaStreamTrack}async _updateOriginMediaStreamTrack(e,t){if(e!==this._originMediaStreamTrack){if(this._originMediaStreamTrack.removeEventListener("ended",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop(),e.addEventListener("ended",this._handleTrackEnded),this._originMediaStreamTrack=e,this._trackProcessors.length>0){await this._trackProcessors[0].setInput(e);const t=this._getOutputFromProcessors();this._mediaStreamTrack=t}else this._mediaStreamTrack=this._originMediaStreamTrack;this._updatePlayerSource(),await vK(this,qk.NEED_REPLACE_TRACK,this),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext})}}_getDefaultPlayerConfig(){return{}}onTrackEnded(){HD.debug("[".concat(this.getTrackId(),"] track ended")),AP("debug",["MediaStreamTrack",this.getTrackId()],"ended"),this.emit($k.TRACK_ENDED)}stateCheck(e,t){if(HD.debug("check track state, [muted: ".concat(this._muted,", enabled: ").concat(this._enabled,"] to [").concat(e,": ").concat(t,"]")),hP("debug",this,"stateCheck",{stateName:e,state:t,muted:this._muted,enabled:this._enabled}),PL(t,e),this._enabled&&this._muted&&"enabled"===e&&!1===t)throw new UD(MD.TRACK_STATE_UNREACHABLE,"cannot set enabled while the track is muted").print();if(!this._enabled&&!this._muted&&"muted"===e&&!0===t)throw new UD(MD.TRACK_STATE_UNREACHABLE,"cannot set muted while the track is disabled").print()}getProcessorStats(){return this.processorContext.gatherStats()}}!function(e){e.IOS_15_INTERRUPTION_START="ios15-interruption-start",e.IOS_15_INTERRUPTION_END="ios15-interruption-end",e.IOS_INTERRUPTION_START="ios-interruption-start",e.IOS_INTERRUPTION_END="ios-interruption-end",e.STATE_CHANGE="state-change"}(hj||(hj={})),function(e){e.AUDIO_CONTEXT_CREATED="audio_context_created"}(lj||(lj={})),function(e){e.AIDenoiser="AIDenoiser"}(pj||(pj={}));const mj={audioContextInitOptions:{}};const _j=new class extends kD{constructor(){super(),kO(this,"registeredPlugins",[])}setOptions(e,t){mj[e]&&(mj[e]=t)}getOptions(e){return mj[e]}installPlugin(e){e instanceof Object&&e.name&&this.registeredPlugins.push(e.name)}};function Cj(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Sj(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Cj(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Cj(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const vj=window.AudioContext||window.webkitAudioContext;let Tj=null;const Rj=new class extends kD{constructor(){super(...arguments),kO(this,"prevState",void 0),kO(this,"curState",void 0),kO(this,"currentTime",void 0),kO(this,"currentTimeStuckAt",void 0),kO(this,"interruptDetectorTrack",void 0),kO(this,"onLocalAudioTrackMute",()=>{HD.info("ios15-interruption-start"),dP("info",["WebAudio"],"ios15-interruption-start"),this.emit(hj.IOS_15_INTERRUPTION_START)}),kO(this,"onLocalAudioTrackUnmute",async()=>{HD.info("ios15-interruption-end"),dP("info",["WebAudio"],"ios15-interruption-end"),"running"!==this.curState||this.duringInterruption?HD.info("ios15-interruption-end-canceled"):(Tj&&await Tj.suspend(),this.emit(hj.IOS_15_INTERRUPTION_END))})}get duringInterruption(){return"running"===this.prevState&&"interrupted"===this.curState}bindInterruptDetectorTrack(e){HD.debug("webaudio bindInterruptDetectorTrack ".concat(e.getTrackId())),hP("debug",["WebAudio"],"bindInterruptDetectorTrack",e.getTrackId()),this.interruptDetectorTrack||(this.interruptDetectorTrack=e,this.interruptDetectorTrack._mediaStreamTrack.onmute=this.onLocalAudioTrackMute,this.interruptDetectorTrack._mediaStreamTrack.onunmute=this.onLocalAudioTrackUnmute)}unbindInterruptDetectorTrack(e){HD.debug("webaudio unbindInterruptDetectorTrack ".concat(e.getTrackId())),hP("debug",["WebAudio"],"unbindInterruptDetectorTrack",e.getTrackId()),this.interruptDetectorTrack&&this.interruptDetectorTrack===e&&(this.interruptDetectorTrack._mediaStreamTrack&&(this.interruptDetectorTrack._mediaStreamTrack.onmute=null,this.interruptDetectorTrack._mediaStreamTrack.onunmute=null),this.interruptDetectorTrack=void 0)}};function yj(){if(!vj)return HD.error("your browser is not support web audio"),void cP("error",["WebAudio"],"your browser is not support web audio");HD.info("create audio context"),lP("info",["WebAudio"],"WebAudioContext");const e=Sj(Sj({},_j.getOptions("audioContextInitOptions")),NP("WEBAUDIO_INIT_OPTIONS"));HD.debug("audio context init option:",JSON.stringify(e)),Tj=new vj(e),_j.emit(lj.AUDIO_CONTEXT_CREATED,Tj),Rj.curState=Tj.state,Tj.onstatechange=()=>{Rj.prevState=Rj.curState,Rj.curState=Tj?Tj.state:void 0,(EO()||SO())&&"running"===Rj.prevState&&"interrupted"===Rj.curState&&(HD.info("ios-interruption-start"),dP("info",["AudioState"],"ios-interruption-start"),Rj.emit(hj.IOS_INTERRUPTION_START)),(EO()||SO())&&"interrupted"===Rj.prevState&&"running"===Rj.curState&&(HD.info("ios-interruption-end"),dP("info",["AudioState"],"ios-interruption-end"),Rj.emit(hj.IOS_INTERRUPTION_END)),Rj.prevState!==Rj.curState&&(HD.debug("AudioContext State Change","".concat(Rj.prevState,"=>").concat(Rj.curState)),AP("debug",["AudioContext",void 0],"statechange","".concat(Rj.prevState,"=>").concat(Rj.curState)),Rj.emit(hj.STATE_CHANGE))},setInterval(()=>{var e;const t=null===(e=Tj)||void 0===e?void 0:e.currentTime;Rj.currentTime!==t?(Rj.currentTimeStuckAt&&(HD.debug("AudioContext current time resume at ".concat(t)),Rj.currentTimeStuckAt=void 0),Rj.currentTime=t):(t!==Rj.currentTimeStuckAt&&HD.warning("AudioContext current time stuck at ".concat(t)),Rj.currentTimeStuckAt=t)},5e3),async function(e){const t=["click","contextmenu","auxclick","dblclick","mousedown","mouseup","touchend","keydown","keyup"];let r,i=!1,n=!1,o=!1;function s(t){"running"===e.state?a(!1):EO()||SO()?"suspended"===e.state&&(a(!0),t&&e.resume().then(d,d)):"closed"!==e.state&&(a(!0),t&&e.resume().then(d,d))}function a(e){if(i!==e){i=e;for(let r=0,i=t;r<i.length;r+=1){const t=i[r];e?window.addEventListener(t,u,{capture:!0,passive:!0}):window.removeEventListener(t,u,{capture:!0,passive:!0})}}}function c(){s(!0)}function d(){s(!1)}function u(){s(!0)}function A(e){if(!o)if(r.paused)if(e){h(!1),o=!0;let e=void 0;try{e=r.play(),e?e.then(l,l):(r.addEventListener("playing",l),r.addEventListener("abort",l),r.addEventListener("error",l))}catch(e){l()}}else h(!0);else h(!1)}function h(e){if(n!==e){n=e;for(let r=0,i=t;r<i.length;r++){const t=i[r];e?window.addEventListener(t,p,{capture:!0,passive:!0}):window.removeEventListener(t,p,{capture:!0,passive:!0})}}}function l(){r.removeEventListener("playing",l),r.removeEventListener("abort",l),r.removeEventListener("error",l),o=!1,A(!1)}function p(){A(!0)}if(EO()){const t=e.createMediaStreamDestination(),i=document.createElement("div");i.innerHTML="<audio x-webkit-airplay='deny'></audio>",r=i.children.item(0),r.controls=!1,r.disableRemotePlayback=!0,r.preload="auto",r.srcObject=t.stream,A(!0)}Rj.on(hj.STATE_CHANGE,c),s(!1)}(Tj)}function wj(){if(!Tj){if(yj(),!Tj)throw new UD(MD.NOT_SUPPORTED,"can not create audio context");return Tj}return Tj}function bj(e){if(function(){if(null!==Oj)return Oj;const e=wj(),t=e.createBufferSource(),r=e.createGain(),i=e.createGain();t.connect(r),t.connect(i),t.disconnect(r);let n=!1;try{t.disconnect(r)}catch(e){n=!0}return t.disconnect(),Oj=n,n}())return;hP("debug",["WebAudio"],"polyfillAudioNode");const t=e.connect,r=e.disconnect;e.connect=(r,i,n)=>(e._inputNodes||(e._inputNodes=[]),e._inputNodes.includes(r)||(r instanceof AudioNode?(e._inputNodes.push(r),t.call(e,r,i,n)):t.call(e,r,i)),e),e.disconnect=(i,n,o)=>{r.call(e),i?yK(e._inputNodes,i):e._inputNodes=[];for(const r of e._inputNodes)t.call(e,r)}}let Oj=null;function Nj(e,t){const r=1/t,i=wj();let n=i.createGain();n.gain.value=0,n.connect(i.destination);let o=!1;const s=()=>{if(o)return void(n=null);const t=i.createOscillator();t.onended=s,t.connect(n),t.start(0),t.stop(i.currentTime+r),e(i.currentTime)};return s(),()=>{o=!0}}const Dj=HD.prefix("[inject-node]");class Pj{constructor(){kO(this,"nodeLists",[]),kO(this,"prevNode",void 0),kO(this,"nextNode",void 0)}get firstNode(){return this.nodeLists[0]}get lastNode(){return this.nodeLists[this.nodeLists.length-1]}get isActive(){return!!this.nodeLists.length}get isConnected(){return!(!this.prevNode||!this.nextNode)}connect(e,t){Dj.debug("connect audio node, current list:"+this.nodeLists.length),this.nodeLists.length?(this.prevNode&&this.prevNode.disconnect(),e.connect(this.firstNode),this.nextNode&&this.lastNode&&this.lastNode.disconnect(),this.lastNode.connect(t),this.nodeLists.forEach((e,t)=>{const r=this.nodeLists[t+1];r&&e.connect(r)})):e.connect(t),this.nextNode=t,this.prevNode=e}disconnect(){var e;Dj.debug("disconnect audio node, current list:"+this.nodeLists.length),this.nodeLists.forEach(e=>{e.disconnect()}),null===(e=this.prevNode)||void 0===e||e.disconnect(),this.prevNode=void 0,this.nextNode=void 0}addNode(e){Dj.debug("add node in inject node, current list:",this.nodeLists.length),this.prevNode&&this.nextNode?(this.firstNode||(Dj.debug("new node is the first node"),this.prevNode.disconnect(),this.prevNode.connect(e),e.connect(this.nextNode)),this.nextNode&&this.lastNode&&(this.lastNode.disconnect(this.nextNode),this.lastNode.connect(e),e.connect(this.nextNode)),this.nodeLists.push(e)):Dj.debug("add node is called before inject node connected")}removeNode(e){Dj.debug("remove node in inject node, current list:",this.nodeLists.length);const t=this.nodeLists.indexOf(e);if(-1===t)return void Dj.debug("$[inject-node] cannot find the node to be removed");const r=this.nodeLists[t+1],i=this.nodeLists[t-1];0===t&&this.prevNode&&this.nextNode&&(this.prevNode.disconnect(e),r?this.prevNode.connect(r):this.prevNode.connect(this.nextNode)),t===this.nodeLists.length-1&&this.nextNode&&i&&(i.disconnect(e),i.connect(this.nextNode)),0!==t&&t!==this.nodeLists.length-1&&(i.disconnect(e),i.connect(r)),Dj.debug("remove node in inject node success, current list:",this.nodeLists.length)}}class Lj extends kD{get processSourceNode(){return this.sourceNode}set processedNode(e){var t;if(!this.isDestroyed&&this._processedNode!==e){try{var r;null===(r=this.sourceNode)||void 0===r||r.disconnect(this.outputNode)}catch(e){}null===(t=this._processedNode)||void 0===t||t.disconnect(),this._processedNode=e,this.connect()}}get processedNode(){return this._processedNode}constructor(){super(),kO(this,"outputNode",void 0),kO(this,"outputTrack",void 0),kO(this,"isPlayed",!1),kO(this,"sourceNode",void 0),kO(this,"analyserNode",void 0),kO(this,"context",void 0),kO(this,"audioBufferNode",void 0),kO(this,"destNode",void 0),kO(this,"injectNode",void 0),kO(this,"audioOutputLevel",0),kO(this,"_processedNode",void 0),kO(this,"playNode",void 0),kO(this,"isDestroyed",!1),kO(this,"onNoAudioInput",void 0),kO(this,"isNoAudioInput",!1),kO(this,"_noAudioInputCount",0),this.context=wj(),this.playNode=this.context.destination,this.outputNode=this.context.createGain(),bj(this.outputNode),this.analyserNode=this.context.createAnalyser(),this.analyserNode.smoothingTimeConstant=.4,this.analyserNode.fftSize=2048,this.injectNode=new Pj}startGetAudioBuffer(e){this.audioBufferNode||(this.audioBufferNode=this.context.createScriptProcessor(e),this.outputNode.connect(this.audioBufferNode),this.audioBufferNode.connect(this.context.destination),this.audioBufferNode.onaudioprocess=e=>{this.emit(mk.ON_AUDIO_BUFFER,function(e){for(let t=0;t<e.outputBuffer.numberOfChannels;t+=1){const r=e.outputBuffer.getChannelData(t);for(let e=0;e<r.length;e+=1)r[e]=0}return e.inputBuffer}(e))})}stopGetAudioBuffer(){this.audioBufferNode&&(this.audioBufferNode.onaudioprocess=null,this.outputNode.disconnect(this.audioBufferNode),this.audioBufferNode=void 0)}createOutputTrack(){if(!vB().webAudioMediaStreamDest)throw new UD(MD.NOT_SUPPORTED,"your browser is not support audio processor");return this.destNode&&this.outputTrack||(this.destNode=this.context.createMediaStreamDestination(),this.outputNode.connect(this.destNode),this.outputTrack=this.destNode.stream.getAudioTracks()[0]),this.outputTrack}play(e){"running"!==this.context.state&&bK(()=>{Rj.emit("autoplay-failed")}),this.isPlayed=!0,this.playNode=e||this.context.destination,this.outputNode.connect(this.playNode)}stop(){if(this.isPlayed)try{this.outputNode.disconnect(this.playNode)}catch(e){}this.isPlayed=!1}getAccurateVolumeLevel(){if(!this.context||EO()||SO()||"running"!==this.context.state&&this.context.resume(),!this.analyserNode)return 0;const e=new Uint8Array(this.analyserNode.frequencyBinCount);this.analyserNode.getByteFrequencyData(e);let t=0;for(let r=0;r<e.length;r++)t+=r<64?Math.abs(10*e[r]):Math.abs(6*e[r]/15);return t/e.length/255}async checkHasAudioInput(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(e>5)return this.isNoAudioInput=!0,this.onNoAudioInput&&this.onNoAudioInput(),!1;if(EO()||SO()?"suspended"===this.context.state&&this.context.resume():"running"!==this.context.state&&this.context.resume(),!this.analyserNode)return!1;const t=new Uint8Array(this.analyserNode.frequencyBinCount);this.analyserNode.getByteFrequencyData(t);let r=!1;for(let e=0;e<t.length;e++)0!==t[e]&&(r=!0);return r?(this.isNoAudioInput=!1,!0):(await gK(200),await this.checkHasAudioInput(e?e+1:1)&&r)}getAudioVolume(){return this.outputNode.gain.value}setVolume(e){this.outputNode.gain.setValueAtTime(e,this.context.currentTime)}destroy(){this.disconnect(),this.stop(),this.isDestroyed=!0,this.onNoAudioInput=void 0}injectAudioNode(e){this.injectNode.addNode(e)}removeAudioNode(e){this.injectNode.removeNode(e)}disconnect(){var e,t;null===(e=this.processedNode)||void 0===e||e.disconnect(),null===(t=this.sourceNode)||void 0===t||t.disconnect(),this.outputNode&&this.outputNode.disconnect()}connect(){var e;this.processedNode?null===(e=this.processedNode)||void 0===e||e.connect(this.outputNode):this.sourceNode&&this.sourceNode.connect(this.outputNode);this.outputNode.connect(this.analyserNode)}}class kj extends Lj{get isFreeze(){return!1}constructor(e,t){var r;if(super(),kO(this,"sourceNode",void 0),kO(this,"track",void 0),kO(this,"audioElement",void 0),kO(this,"isCurrentTrackCloned",!1),kO(this,"isRemoteTrack",!1),kO(this,"rebuildWebAudio",async()=>{if(HD.debug("ready to rebuild web audio, state:",this.context.state),this.isNoAudioInput&&await this.checkHasAudioInput(),!this.isNoAudioInput||this.isDestroyed)return document.body.removeEventListener("click",this.rebuildWebAudio,!0),void HD.debug("rebuild web audio success, current volume status",this.getAccurateVolumeLevel());this.context.resume().then(()=>HD.info("resume success")),HD.debug("rebuild web audio because of ios 12 bugs"),this.disconnect();const e=this.track;this.track=this.track.clone(),this.isCurrentTrackCloned?e.stop():this.isCurrentTrackCloned=!0;const t=new MediaStream([this.track]);this.sourceNode=this.context.createMediaStreamSource(t),bj(this.sourceNode),this.analyserNode=this.context.createAnalyser();const r=this.outputNode.gain.value;this.outputNode=this.context.createGain(),this.outputNode.gain.setValueAtTime(r,this.context.currentTime),bj(this.outputNode),this.emit(mk.UPDATE_SOURCE),this.connect(),this.audioElement.srcObject=t,this.isPlayed&&this.play(this.playNode),this.checkHasAudioInput()}),"audio"!==e.kind)throw new UD(MD.UNEXPECTED_ERROR);this.track=e;const i=new MediaStream([this.track]);this.isRemoteTrack=!!t,this.sourceNode=this.context.createMediaStreamSource(i),bj(this.sourceNode),this.connect(),this.audioElement=document.createElement("audio"),this.audioElement.srcObject=i;const n=oO();t&&n.os===eO.IOS&&Number(null===(r=n.osVersion)||void 0===r?void 0:r.split(".")[0])<15&&(Rj.on(hj.STATE_CHANGE,()=>{"suspended"===this.context.state?document.body.addEventListener("click",this.rebuildWebAudio,!0):"running"===this.context.state&&this.rebuildWebAudio()}),this.checkHasAudioInput().then(e=>{e||document.body.addEventListener("click",this.rebuildWebAudio,!0)}))}updateTrack(e){this.sourceNode.disconnect(),this.track=e,this.isCurrentTrackCloned=!1;const t=new MediaStream([e]);this.sourceNode=this.context.createMediaStreamSource(t),bj(this.sourceNode),this.processedNode||this.sourceNode.connect(this.outputNode),this.emit(mk.UPDATE_SOURCE),this.audioElement.srcObject=t}destroy(){this.audioElement.srcObject=null,this.audioElement.remove(),Rj.off("state-change",this.rebuildWebAudio),super.destroy()}createMediaStreamSourceNode(e){return this.context.createMediaStreamSource(new MediaStream([e]))}}async function Bj(e,t){const r=(e,t)=>e?"number"!=typeof e?e.max||e.exact||e.ideal||e.min||t:e:t,i={audio:!1,video:{mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:e,maxHeight:r(t.height,1080),maxWidth:r(t.width,1920)}}};return t.frameRate&&"number"!=typeof t.frameRate?(i.video.mandatory.maxFrameRate=t.frameRate.max,i.video.mandatory.minFrameRate=t.frameRate.min):"number"==typeof t.frameRate&&(i.video.mandatory.maxFrameRate=t.frameRate),await navigator.mediaDevices.getUserMedia(i)}async function Mj(e){const t=await Uj(e.mediaSource),r=await function(e){return new nT((t,r)=>{const i=document.createElement("div");i.innerText="share screen",i.setAttribute("style","text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;");const n=document.createElement("div");n.setAttribute("style","width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;");const o=document.createElement("div");o.innerText="Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you'd like to share.",o.setAttribute("style","height: 12%;");const s=document.createElement("div");s.setAttribute("style","width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;");const a=document.createElement("div");a.setAttribute("style","text-align: right; padding: 16px 0;");const c=document.createElement("button");c.innerHTML="cancel",c.setAttribute("style","width: 85px;"),c.onclick=()=>{document.body.removeChild(d);const e=new Error("NotAllowedError");e.name="NotAllowedError",r(e)},a.appendChild(c),n.appendChild(o),n.appendChild(s),n.appendChild(a);const d=document.createElement("div");d.setAttribute("style","position: fixed; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);"),d.appendChild(i),d.appendChild(n),document.body.appendChild(d),e.map(e=>{if(e.id){const r=document.createElement("div");r.setAttribute("style","width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;");let i=e.thumbnail;const{width:n}=i.getSize();n>1920&&(i=i.resize({width:1920})),r.innerHTML='<div style="height: 120px; display: table-cell; vertical-align: middle;"><img style="width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);" src='+i.toDataURL()+' /></div><span style="\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">'+(e.name.replace(/[\u00A0-\u9999<>\&]/g,(function(e){return"&#"+e.charCodeAt(0)+";"}))+"</span>"),r.onclick=()=>{document.body.removeChild(d),t(e.id)},s.appendChild(r)}})})}(t);return await Bj(r,e)}async function Uj(e){let t=["window","screen"];"application"!==e&&"window"!==e||(t=["window"]),"screen"===e&&(t=["screen"]);const r=Qj();if(!r)throw new UD(MD.ELECTRON_IS_NULL);let i=null;try{i=r.desktopCapturer.getSources({types:t})}catch(e){i=null}i&&i.then||(i=new nT((e,i)=>{r.desktopCapturer.getSources({types:t},(t,r)=>{t?i(t):e(r)})}));try{return await i}catch(e){throw new UD(MD.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR,e.toString())}}let xj=null;function Qj(){if(xj)return xj;try{return xj=window.require("electron"),xj}catch(e){return null}}const Fj=new Ej("safari");let Vj=!1,jj=!1;async function Gj(e,t){let r=0,i=null;for(;r<2;)try{i=await Kj(e,t,r>0);break}catch(i){if(i instanceof UD)throw HD.error("[".concat(t,"] ").concat(i.toString())),hP("error",[],"getLocalStream",{config:e,id:t},i.toString()),i;const n=Hj(i.name||i.code||i,i.message);if(n.code===MD.MEDIA_OPTION_INVALID){HD.debug("[".concat(t,"] detect media option invalid, retry")),cP("debug",[],"[".concat(t,"] detect media option invalid, retry")),r+=1,await gK(500);continue}throw HD.error("[".concat(t,"] ").concat(n.toString())),hP("error",[],"getLocalStream",{config:e,id:t},n.toString()),n}if(!i)throw new UD(MD.UNEXPECTED_ERROR,"can not find stream after getUserMedia");return i}async function Kj(e,t,r){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new UD(MD.NOT_SUPPORTED,"can not find getUserMedia");r&&(e.video&&(delete e.video.width,delete e.video.height),e.screen&&(delete e.screen.width,delete e.screen.height));const i=vB(),n=new MediaStream;if(e.audioSource&&n.addTrack(e.audioSource),e.videoSource&&n.addTrack(e.videoSource),!e.audio&&!e.video&&!e.screen)return HD.debug("Using Video Source/ Audio Source"),cP("debug",[],"Using Video Source/ Audio Source"),n;if(e.screen)if(Qj())if(e.screen.sourceId){Wj(n,await Bj(e.screen.sourceId,e.screen))}else{Wj(n,await Mj(e.screen))}else if(lO()&&e.screen.extensionId&&e.screen.mandatory){if(!i.getStreamFromExtension)throw new UD(MD.NOT_SUPPORTED,"This browser does not support screen sharing");HD.debug("[".concat(t,'] Screen access on chrome stable, looking for extension"')),cP("debug",[],"[".concat(t,'] Screen access on chrome stable, looking for extension"'));const r=await(o=e.screen.extensionId,s=t,new nT((e,t)=>{try{chrome.runtime.sendMessage(o,{getStream:!0},r=>{if(!r||!r.streamId)return HD.error("[".concat(s,"] No response from Chrome Plugin. Plugin not installed properly"),r),hP("error",[],"getSourceIdFromExtension",{extensionId:o,streamId:s},"No response from Chrome Plugin. Plugin not installed properly, ".concat(r)),void t(new UD(MD.CHROME_PLUGIN_NO_RESPONSE,"No response from Chrome Plugin. Plugin not installed properly"));e(r.streamId)})}catch(e){HD.error("[".concat(s,"] AgoraRTC screensharing plugin is not accessible(").concat(o,")"),e.toString()),hP("error",[],"getSourceIdFromExtension",{extensionId:o,streamId:s},"AgoraRTC screensharing plugin is not accessible(".concat(o,"), ").concat(e.toString())),t(new UD(MD.CHROME_PLUGIN_NOT_INSTALL))}}));e.screen.mandatory.chromeMediaSourceId=r;Wj(n,await navigator.mediaDevices.getUserMedia({video:{mandatory:e.screen.mandatory}}))}else if(i.getDisplayMedia){e.screen.mediaSource&&iB(e.screen.mediaSource);const r={width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate,displaySurface:"screen"===e.screen.mediaSource?"monitor":e.screen.mediaSource};HD.debug("[".concat(t,"] getDisplayMedia:"),JSON.stringify({video:r,audio:!!e.screenAudio})),lP("debug",["mediaDevices",t],"getDisplayMedia",{video:r,audio:!!e.screenAudio,trackId:t});Wj(n,await navigator.mediaDevices.getDisplayMedia({video:r,audio:!!e.screenAudio}))}else{if(!gO())throw HD.error("[".concat(t,"] This browser does not support screenSharing")),new UD(MD.NOT_SUPPORTED,"This browser does not support screen sharing");{e.screen.mediaSource&&iB(e.screen.mediaSource);const r={video:{mediaSource:e.screen.mediaSource,width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate}};HD.debug("[".concat(t,"] getUserMedia: ").concat(JSON.stringify(r))),lP("debug",["mediaDevices",t],"getUserMedia",r);Wj(n,await navigator.mediaDevices.getUserMedia(r))}}var o,s;if(!e.video&&!e.audio)return n;let a={video:e.video,audio:e.audio},c=NP("MEDIA_DEVICE_CONSTRAINTS");if(c)try{"string"==typeof c&&(c=JSON.parse(c)),a=function e(t,r){if(!UK(t)||!UK(r))return r;if(Array.isArray(t)&&!Array.isArray(r)||!Array.isArray(t)&&Array.isArray(r))return r;if(Array.isArray(r)&&Array.isArray(t)){const i=[...t];for(let n=0;n<r.length;n++)i[n]=e(t[n],r[n]);return i}{const i=lK({},t);for(const n in r)Object.prototype.hasOwnProperty.call(r,n)&&(Object.prototype.hasOwnProperty.call(t,n)?i[n]=e(t[n],r[n]):i[n]=r[n]);return i}}(a,c),cP("debug",["mediaDevices",t],"merge configConstraints ".concat(JSON.stringify(c)))}catch(e){}HD.debug("[".concat(t,"] GetUserMedia"),JSON.stringify(a)),lP("debug",["mediaDevices",t],"getUserMedia",a),oO();let d,u=null;(pO()||EO()||uO())&&(u=await Fj.lock());try{d=await navigator.mediaDevices.getUserMedia(a)}catch(e){throw u&&u(),e}return a.audio&&(Vj=!0),a.video&&(jj=!0),Wj(n,d),u&&u(),n}function Hj(e,t){switch(e){case"Starting video failed":case"OverconstrainedError":case"TrackStartError":return new UD(MD.MEDIA_OPTION_INVALID,"".concat(e,": ").concat(t));case"NotFoundError":case"DevicesNotFoundError":return new UD(MD.DEVICE_NOT_FOUND,"".concat(e,": ").concat(t));case"NotSupportedError":return new UD(MD.NOT_SUPPORTED,"".concat(e,": ").concat(t));case"NotReadableError":return new UD(MD.NOT_READABLE,"".concat(e,": ").concat(t));case"InvalidStateError":case"NotAllowedError":case"PERMISSION_DENIED":case"PermissionDeniedError":return new UD(MD.PERMISSION_DENIED,"".concat(e,": ").concat(t));case"ConstraintNotSatisfiedError":return new UD(MD.CONSTRAINT_NOT_SATISFIED,"".concat(e,": ").concat(t));default:return HD.error("getUserMedia unexpected error",e),hP("error",[],"handleGetUserMediaError",void 0,e),new UD(MD.UNEXPECTED_ERROR,"".concat(e,": ").concat(t))}}function Wj(e,t){const r=e.getVideoTracks()[0],i=e.getAudioTracks()[0],n=t.getVideoTracks()[0],o=t.getAudioTracks()[0];o&&(i&&e.removeTrack(i),e.addTrack(o)),n&&(r&&e.removeTrack(r),e.addTrack(n))}const Yj=new class extends kD{get state(){return this._state}set state(e){e!==this._state&&(this.emit(ik.STATE_CHANGE,e),this._state=e)}constructor(){super(),kO(this,"_state",rk.IDLE),kO(this,"isAccessMicrophonePermission",!1),kO(this,"isAccessCameraPermission",!1),kO(this,"lastAccessMicrophonePermission",!1),kO(this,"lastAccessCameraPermission",!1),kO(this,"checkdeviceMatched",!1),kO(this,"deviceInfoMap",new Map),this.init().then(()=>{navigator.mediaDevices.addEventListener&&navigator.mediaDevices.addEventListener("devicechange",this.updateDevicesInfo.bind(this)),window.setInterval(()=>{(NP("ENUMERATE_DEVICES_INTERVAL")||yO()&&RO())&&this.updateDevicesInfo()},NP("ENUMERATE_DEVICES_INTERVAL_TIME"))}).catch(e=>HD.error(e.toString()))}async enumerateDevices(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices){return new UD(MD.NOT_SUPPORTED,"enumerateDevices() not supported.").throw()}const i=await navigator.mediaDevices.enumerateDevices(),n=this.checkMediaDeviceInfoIsOk(i);let o=!this.isAccessMicrophonePermission&&e,s=!this.isAccessCameraPermission&&t;n.audio&&(o=!1),n.video&&(s=!1);let a=null,c=null,d=null;if(!r&&(o||s)){if(Fj.isLocked){HD.debug("[device manager] wait GUM lock");(await Fj.lock())(),HD.debug("[device manager] GUM unlock")}if(Vj&&(o=!1,this.isAccessMicrophonePermission=!0),jj&&(s=!1,this.isAccessCameraPermission=!0),HD.debug("[device manager] check media device permissions",e,t,o,s),o&&s){try{d=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0})}catch(e){const t=Hj(e.name||e.code||e,e.message);if(t.code===MD.PERMISSION_DENIED)throw t;HD.warning("getUserMedia failed in getDevices",t)}this.isAccessCameraPermission=!0,this.isAccessMicrophonePermission=!0}else if(o){try{a=await navigator.mediaDevices.getUserMedia({audio:e})}catch(e){const t=Hj(e.name||e.code||e,e.message);if(t.code===MD.PERMISSION_DENIED)throw t;HD.warning("getUserMedia failed in getDevices",t)}this.isAccessMicrophonePermission=!0}else if(s){try{c=await navigator.mediaDevices.getUserMedia({video:t})}catch(e){const t=Hj(e.name||e.code||e,e.message);if(t.code===MD.PERMISSION_DENIED)throw t;HD.warning("getUserMedia failed in getDevices",t)}this.isAccessCameraPermission=!0}HD.debug("[device manager] mic permission",e,"cam permission",t)}try{const e=await navigator.mediaDevices.enumerateDevices();return a&&a.getTracks().forEach(e=>e.stop()),c&&c.getTracks().forEach(e=>e.stop()),d&&d.getTracks().forEach(e=>e.stop()),a=null,c=null,d=null,e}catch(e){a&&a.getTracks().forEach(e=>e.stop()),c&&c.getTracks().forEach(e=>e.stop()),d&&d.getTracks().forEach(e=>e.stop()),a=null,c=null,d=null;return new UD(MD.ENUMERATE_DEVICES_FAILED,e.toString()).throw()}}async getRecordingDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter(e=>"audioinput"===e.kind)}async getCamerasDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!1,!0,e)).filter(e=>"videoinput"===e.kind)}async getSpeakers(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter(e=>"audiooutput"===e.kind)}searchDeviceIdByName(e){let t=null;return this.deviceInfoMap.forEach(r=>{r.device.label===e&&(t=r.device.deviceId)}),t}async getDeviceById(e){const t=(await this.enumerateDevices(!0,!0,!0)).find(t=>t.deviceId===e);if(!t)throw new UD(MD.DEVICE_NOT_FOUND,"deviceId: ".concat(e));return t}async init(){this.state=rk.INITING;try{await this.updateDevicesInfo(),this.state=rk.INITEND}catch(e){if(HD.warning("Device Detection functionality cannot start properly.",e.toString()),this.state=rk.IDLE,!function(){if("boolean"==typeof isSecureContext)return isSecureContext;return"https:"===location.protocol||"file:"===location.protocol||"localhost"===location.hostname||"127.0.0.1"===location.hostname||"::1"===location.hostname}()){new UD(MD.WEB_SECURITY_RESTRICT,"Your context is limited by web security, please try using https protocol or localhost.").throw()}throw e}}async updateDevicesInfo(){const e=await this.enumerateDevices(!0,!0,!0),t=Date.now(),r=[];if(e[0]&&e[0].label&&!1===this.checkdeviceMatched){this.checkdeviceMatched=!0;const t=e.find(e=>"audioinput"===e.kind&&"default"===e.deviceId),r=e.find(e=>"audiooutput"===e.kind&&"default"===e.deviceId);t&&r?r.groupId===t.groupId?HD.debug("[device-check] default input ".concat(t.label," and output ").concat(r.label," is the same group")):HD.warning("[device-check] default input ".concat(t.label," and output ").concat(r.label," is not the same group")):HD.debug("[device-check] default input or output not found")}const i=this.checkMediaDeviceInfoIsOk(e);if(e.forEach(e=>{if(!e.deviceId)return;const i=this.deviceInfoMap.get("".concat(e.kind,"_").concat(e.deviceId));if("ACTIVE"!==(i?i.state:"INACTIVE")){const i={initAt:t,updateAt:t,device:e,state:"ACTIVE"};this.deviceInfoMap.set("".concat(e.kind,"_").concat(e.deviceId),i),r.push(i)}i&&(i.updateAt=t)}),this.deviceInfoMap.forEach((e,i)=>{"ACTIVE"===e.state&&e.updateAt!==t&&(e.state="INACTIVE",r.push(e))}),this.state!==rk.INITEND)return i.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),void(i.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0));r.forEach(e=>{switch(e.device.kind){case"audioinput":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(ik.RECORDING_DEVICE_CHANGED,e);break;case"videoinput":this.lastAccessCameraPermission&&this.isAccessCameraPermission&&this.emit(ik.CAMERA_DEVICE_CHANGED,e);break;case"audiooutput":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(ik.PLAYOUT_DEVICE_CHANGED,e)}}),i.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),i.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0)}checkMediaDeviceInfoIsOk(e){const t=e.filter(e=>"audioinput"===e.kind),r=e.filter(e=>"videoinput"===e.kind),i={audio:!1,video:!1};for(const e of t)if(e.label&&e.deviceId){i.audio=!0;break}for(const e of r)if(e.label&&e.deviceId){i.video=!0;break}return i}};var Jj;let qj=gP("AudioElementPlayCenter")(Jj=class{constructor(){kO(this,"onAutoplayFailed",void 0),kO(this,"elementMap",new Map),kO(this,"elementStateMap",new Map),kO(this,"elementsNeedToResume",[]),kO(this,"sinkIdMap",new Map),kO(this,"autoResumeAfterInterruption",()=>{Array.from(this.elementMap.entries()).forEach(e=>{let[t,r]=e;const i=this.elementStateMap.get(t),n=r.srcObject.getAudioTracks()[0];IO()?n&&"live"===n.readyState&&"running"===Rj.curState&&(HD.debug("auto resume after interruption for iOS 15"),cP("debug",["AudioElementPlayCenter",t],"auto resume after interruption for iOS15"),r.pause(),r.play()):i&&"paused"===i&&n&&"live"===n.readyState&&"running"===Rj.curState&&(HD.debug("auto resume after interruption for iOS"),cP("debug",["AudioElementPlayCenter",t],"auto resume after interruption for iOS"),r.play())})}),kO(this,"autoResumeAfterInterruptionOnIOS15",()=>{Array.from(this.elementMap.entries()).forEach(e=>{let[t,r]=e;const i=r.srcObject.getAudioTracks()[0];i&&"live"===i.readyState&&(HD.debug("auto resume after interruption inside autoResumeAfterInterruptionOnIOS15"),hP("debug",["AudioElementPlayCenter",t],"autoResumeAfterInterruptionOnIOS15"),r.pause(),r.play())})}),this.autoResumeAudioElement(),Rj.on(hj.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),Rj.on(hj.IOS_15_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15),Rj.on(hj.STATE_CHANGE,()=>{EO()&&"suspended"===Rj.prevState&&"running"===Rj.curState&&this.autoResumeAfterInterruption()})}async setSinkID(e,t){const r=this.elementMap.get(e);if(this.sinkIdMap.set(e,t),r)try{await r.setSinkId(t)}catch(e){throw new UD(MD.PERMISSION_DENIED,"can not set sink id: "+e.toString())}}play(e,t,r,i){if(this.elementMap.has(t))return;const n=document.createElement("audio");n.autoplay=!0,n.srcObject=new MediaStream([e]),this.bindAudioElementEvents(t,n),this.elementMap.set(t,n),this.elementStateMap.set(t,WL.INIT),this.setVolume(t,r);const o=this.sinkIdMap.get(t);if(o)try{n.setSinkId(o).catch(e=>{HD.warning("[".concat(t,"] set sink id failed"),e.toString()),lP("warning",["HTMLAudioElement",t],"setSinkId",e.toString())})}catch(e){HD.warning("[".concat(t,"] set sink id failed"),e.toString())}const s=n.play();s&&s.then&&s.catch(e=>{i&&uj.autoplayFailed(i,"audio",e.message,t),HD.warning("audio element play warning",e.toString()),lP("warning",["HTMLAudioElement",t],"play",e.toString()),this.elementMap.has(t)&&"NotAllowedError"===e.name&&(HD.warning("detected audio element autoplay failed"),hP("warning",["AudioElementPlayCenter",t],"play",e.toString()),this.elementsNeedToResume.push(n),bK(()=>{this.onAutoplayFailed&&this.onAutoplayFailed(),tj()}))})}updateTrack(e,t){const r=this.elementMap.get(e);r&&(r.srcObject=new MediaStream([t]))}isPlaying(e){return this.elementMap.has(e)}setVolume(e,t){const r=this.elementMap.get(e);r&&(t=Math.max(0,Math.min(100,t)),r.volume=t/100)}stop(e){const t=this.elementMap.get(e);if(this.sinkIdMap.delete(e),!t)return;const r=this.elementsNeedToResume.indexOf(t);this.elementsNeedToResume.splice(r,1),t.srcObject=null,t.remove(),this.elementMap.delete(e),this.elementStateMap.delete(e)}bindAudioElementEvents(e,t){Xj.forEach(r=>{t.addEventListener(r,t=>{const r=this.elementStateMap.get(e),i="pause"===t.type?"paused":t.type;HD.debug("[".concat(e,"] audio-element-status change ").concat(r," => ").concat(i)),AP("debug",["HTMLAudioElement",e],"statusChange","".concat(r," => ").concat(i)),this.elementStateMap.set(e,i)})})}getPlayerState(e){return this.elementStateMap.get(e)||"uninit"}autoResumeAudioElement(){const e=()=>{this.elementsNeedToResume.forEach(e=>{e.play().then(e=>{HD.debug("Auto resume audio element success"),hP("debug",["AudioElementPlayCenter"],"autoResumeAudioElement")}).catch(e=>{HD.warning("Auto resume audio element failed!",e),hP("warning",["AudioElementPlayCenter"],"autoResumeAudioElement",e.toString())})}),this.elementsNeedToResume=[]};new nT(e=>{document.body?e():window.addEventListener("load",()=>e())}).then(()=>{const t=oO();"Android"!==t.os||"Chrome"!==t.name&&t.name!==tO.WECHAT?(document.body.addEventListener("touchstart",e,!0),document.body.addEventListener("mousedown",e,!0)):document.body.addEventListener("click",e,!0)})}})||Jj;const Xj=["play","playing","loadeddata","canplay","pause","stalled","suspend","waiting","abort","emptied","ended"],zj=new qj;function Zj(){return function(e,t,r){const i=r.value;return"function"==typeof i&&(r.value=function(){this._isClosed&&new UD(MD.INVALID_OPERATION,"[".concat(this.getTrackId(),"] cannot operate a closed track")).print("warning");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const n=i.apply(this,t);return n instanceof nT?new nT((e,t)=>{n.then(e).catch(t)}):n}),r}}var $j,eG,tG,rG,iG,nG,oG,sG,aG,cG,dG,uG,AG,hG,lG,pG,gG,EG,fG,IG,mG,_G,CG,SG,vG,TG,RG,yG,wG,bG,OG=Eh("Array").values,NG=Lf,DG=pu,PG=Mc,LG=OG,kG=Array.prototype,BG={DOMTokenList:!0,NodeList:!0},MG=function(e){var t=e.values;return e===kG||PG(kG,e)&&t===kG.values||DG(BG,NG(e))?LG:t};class UG extends kD{constructor(e){super(),kO(this,"name","VideoProcessorDestination"),kO(this,"ID","0"),kO(this,"_source",void 0),kO(this,"videoContext",void 0),kO(this,"inputTrack",void 0),this.videoContext=e}get kind(){return"video"}get enabled(){return!0}pipe(){throw new UD(MD.NOT_SUPPORTED,"VideoProcessor cannot pipe to any other Processor")}unpipe(){throw new UD(MD.NOT_SUPPORTED,"VideoProcessor cannot unpipe to any other Processor")}enable(){}disable(){}updateInput(e){if(e.context!==this.videoContext)throw new Error("ProcessorContext passed to VideoTrack.processorDestination doesn't match it's belonging VideoTrack's context.\nProbably you are making pipeline like this:\nvideoTrack1.pipe(processor).pipe(videoTrack2.processorDestination).");e.track&&e.track!==this.inputTrack&&(this.inputTrack=e.track,this.emit(fB.ON_TRACK,e.track))}reset(){this.inputTrack=void 0,this.emit(fB.ON_TRACK,void 0)}}class xG extends kD{constructor(e){super(),kO(this,"constraintsMap",new Map),kO(this,"statsRegistry",[]),kO(this,"trackId",void 0),this.trackId=e}async getConstraints(){return await SK(this,IB.REQUEST_CONSTRAINTS)}async requestApplyConstraints(e,t){var r;return HD.info("processor ".concat(t.name," requestApplyConstraints for ").concat(this.trackId)),e&&this.constraintsMap.set(t,e),vK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(r=this.constraintsMap).call(r)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return HD.info("processor ".concat(e.name," requestRevertConstraints for ").concat(this.trackId)),this.constraintsMap.delete(e),vK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(t=this.constraintsMap).call(t)))}registerStats(e,t,r){this.statsRegistry.find(r=>r.processorID===e.ID&&r.processorName===e.name&&r.type===t)||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:r})}unregisterStats(e,t){}gatherStats(){return this.statsRegistry.map(e=>{let{processorID:t,processorName:r,type:i,cb:n}=e;return{processorID:t,processorName:r,type:i,stats:n()}})}}class QG extends kD{constructor(e){super(),kO(this,"name","AudioProcessorDestination"),kO(this,"ID","0"),kO(this,"inputTrack",void 0),kO(this,"inputNode",void 0),kO(this,"audioProcessorContext",void 0),kO(this,"_source",void 0),this.audioProcessorContext=e}get kind(){return"audio"}get enabled(){return!0}pipe(){throw new UD(MD.NOT_SUPPORTED,"AudioProcessorDestination cannot pipe to any other Processor")}unpipe(){throw new UD(MD.NOT_SUPPORTED,"VideoProcessor cannot unpipe to any other Processor")}enable(){}disable(){}reset(){this.inputTrack=void 0,this.inputNode=void 0,this.emit(fB.ON_TRACK,void 0),this.emit(fB.ON_NODE,void 0)}updateInput(e){if(e.context!==this.audioProcessorContext)throw new Error("ProcessorContext passed to VideoTrack.processorDestination doesn't match it's belonging VideoTrack's context.\n        Probably you are making pipeline like this: audioTrack1.pipe(processor).pipe(audioTrack2.processorDestination).");e.track&&this.inputTrack!==e.track&&(this.inputTrack=e.track,this.emit(fB.ON_TRACK,this.inputTrack)),e.node&&this.inputNode!==e.node&&(this.inputNode=e.node,this.emit(fB.ON_NODE,this.inputNode))}}class FG extends kD{constructor(e,t){super(),kO(this,"constraintsMap",new Map),kO(this,"statsRegistry",[]),kO(this,"audioContext",void 0),kO(this,"trackId",void 0),this.audioContext=e,this.trackId=t}async getConstraints(){return SK(this,IB.REQUEST_CONSTRAINTS)}getAudioContext(){return this.audioContext}async requestApplyConstraints(e,t){var r;return HD.info("processor ".concat(t.name," requestApplyConstraints for ").concat(this.trackId)),e&&this.constraintsMap.set(t,e),vK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(r=this.constraintsMap).call(r)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return this.constraintsMap.delete(e),vK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(t=this.constraintsMap).call(t)))}registerStats(e,t,r){this.statsRegistry.find(r=>r.processorID===e.ID&&r.processorName===e.name&&r.type===t)||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:r})}unregisterStats(e,t){}gatherStats(){return this.statsRegistry.map(e=>{let{processorID:t,processorName:r,type:i,cb:n}=e;return{processorID:t,processorName:r,type:i,stats:n()}})}}function VG(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function jG(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?VG(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):VG(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}let GG=($j=gP("LocalAudioTrack","getTrackId"),eG=Zj(),tG=fj("LocalAudioTrack","_enabledMutex"),rG=dj({className:"LocalAudioTrack"}),iG=Zj(),nG=fj("LocalAudioTrack","_enabledMutex"),oG=dj({className:"LocalAudioTrack"}),sG=Zj(),aG=Zj(),cG=Zj(),dG=Zj(),uG=Zj(),$j((UV((hG=class extends Ij{get isPlaying(){return this._useAudioElement?zj.isPlaying(this.getTrackId()):this._source.isPlayed}constructor(e,t,r){super(e,r),kO(this,"trackMediaType","audio"),kO(this,"_encoderConfig",void 0),kO(this,"_source",void 0),kO(this,"_enabled",!0),kO(this,"_volume",100),kO(this,"_useAudioElement",!1),kO(this,"_bypassWebAudio",!1),kO(this,"processor",void 0),kO(this,"processorContext",void 0),kO(this,"processorDestination",void 0),this._encoderConfig=t,this._source=new kj(e),NP("LOCAL_AUDIO_TRACK_USES_WEB_AUDIO")||(this._useAudioElement=!0),this.processorContext=new FG(this._source.context,this.getTrackId()),this.processorDestination=new QG(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(mk.UPDATE_SOURCE,()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})})}setVolume(e){kL(e,"volume",0,1e3);const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.LOCAL_AUDIO_TRACK_SET_VOLUME,options:[this.getTrackId(),e]},300);this._volume=e,this._source.setVolume(e/100),this._useAudioElement&&zj.setVolume(this.getTrackId(),e);try{if(this._bypassWebAudio)return HD.debug("[".concat(this.getTrackId(),"] setVolume returned because no pass through WebAudio.")),void t.onSuccess();const e=this._source.createOutputTrack();this._mediaStreamTrack!==e&&(this._mediaStreamTrack=e,vK(this,qk.NEED_REPLACE_TRACK,this).then(()=>{HD.debug("[".concat(this.getTrackId(),"] replace web audio track success")),cP("debug",this,"replace web audio track success")}).catch(e=>{HD.warning("[".concat(this.getTrackId(),"] replace web audio track failed"),e),cP("warning",this,"replace web audio track failed ".concat(e.toString()))}))}catch(e){}t.onSuccess()}getVolumeLevel(){return this._source.getAccurateVolumeLevel()}async setPlaybackDevice(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_AUDIO_SET_OUTPUT_DEVICE,options:[this.getTrackId(),e]});if(!this._useAudioElement)throw new UD(MD.NOT_SUPPORTED,"your browser does not support setting the audio output device");try{await zj.setSinkID(this.getTrackId(),e)}catch(e){throw t.onError(e),e}t.onSuccess()}async setEnabled(e,t,r){return this._setEnabled(e,t,r)}async _setEnabled(e,t,r){if(!r){if(e===this._enabled)return;this.stateCheck("enabled",e)}if(HD.info("[".concat(this.getTrackId(),"] start setEnabled"),e),hP("info",this,"setEnabled",e),e){this._originMediaStreamTrack.enabled=!0;try{r||(this._enabled=!0),await vK(this,qk.NEED_ENABLE_TRACK,this),HD.info("[".concat(this.getTrackId(),"] setEnabled to ").concat(e," success")),hP("info",this,"setEnabled",e,"success")}catch(t){throw r||(this._enabled=!1),HD.error("[".concat(this.getTrackId(),"] setEnabled to true error"),t.toString()),hP("error",this,"setEnabled",e,t.toString()),t}}else{this._originMediaStreamTrack.enabled=!1,r||(this._enabled=!1);try{await vK(this,qk.NEED_DISABLE_TRACK,this)}catch(t){throw r||(this._enabled=!0),HD.error("[".concat(this.getTrackId(),"] setEnabled to false error"),t.toString()),hP("info",this,"setEnabled",e,t.toString()),t}}}async setMuted(e){e!==this._muted&&(this.stateCheck("muted",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,HD.debug("[".concat(this.getTrackId(),"] start set muted: ").concat(e)),hP("debug",this,"setMuted",e),e?await vK(this,qk.NEED_MUTE_TRACK,this):await vK(this,qk.NEED_UNMUTE_TRACK,this))}getStats(){DK(()=>{HD.warning("[deprecated] LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead"),cP("warning",this,"LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead")},"localAudioTrackGetStatsWarning");const e=TK(this,qk.GET_STATS);return e||jG({},Rk)}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(mk.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(mk.ON_AUDIO_BUFFER),this._source.on(mk.ON_AUDIO_BUFFER,t=>e(t))}play(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.LOCAL_AUDIO_TRACK_PLAY,options:[this.getTrackId()]});HD.debug("[".concat(this.getTrackId(),"] start audio playback")),hP("debug",this,"play"),this._useAudioElement?(HD.debug("[".concat(this.getTrackId(),"] start audio playback in element")),cP("debug",this,"start audio playback in element"),zj.play(this._mediaStreamTrack,this.getTrackId(),this._volume)):this._source.play(),e.onSuccess()}stop(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.LOCAL_AUDIO_TRACK_STOP,options:[this.getTrackId()]});HD.debug("[".concat(this.getTrackId(),"] stop audio playback")),hP("debug",this,"stop"),this._useAudioElement?zj.stop(this.getTrackId()):this._source.stop(),e.onSuccess()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe(),this._source.destroy()}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];HD.debug("[".concat(this.getTrackId(),"] update player source track")),hP("debug",this,"_updatePlayerSource"),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&zj.updateTrack(this.getTrackId(),this._mediaStreamTrack)}async _updateOriginMediaStreamTrack(e,t){this._originMediaStreamTrack!==e&&(this._originMediaStreamTrack.removeEventListener("ended",this._handleTrackEnded),e.addEventListener("ended",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop(),this._originMediaStreamTrack=e,this.processor&&this.processor.updateInput({track:e,context:this.processorContext}),this._mediaStreamTrack!==this._source.outputTrack?(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await vK(this,qk.NEED_REPLACE_TRACK,this)):this._source.updateTrack(this._originMediaStreamTrack))}renewMediaStreamTrack(e){return nT.resolve(void 0)}pipe(e){if(this._bypassWebAudio)throw new UD(MD.INVALID_OPERATION,"Can not process AudioTrack when bypassWebAudio set to true.");if(this.processor===e)return e;if(e._source)throw new UD(MD.INVALID_OPERATION,"Processor ".concat(e.name," already piped, please call unpipe beforehand."));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(fB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e),await vK(this,qk.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await vK(this,qk.NEED_REPLACE_TRACK,this))}),this.processorDestination.on(fB.ON_NODE,e=>{this._source.processedNode=e})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(fB.ON_TRACK),this.processorDestination.removeAllListeners(fB.ON_NODE)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(IB.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(IB.REQUEST_CONSTRAINTS)}}).prototype,"setPlaybackDevice",[eG],Object.getOwnPropertyDescriptor(hG.prototype,"setPlaybackDevice"),hG.prototype),UV(hG.prototype,"setEnabled",[tG,rG,iG],Object.getOwnPropertyDescriptor(hG.prototype,"setEnabled"),hG.prototype),UV(hG.prototype,"setMuted",[nG,oG,sG],Object.getOwnPropertyDescriptor(hG.prototype,"setMuted"),hG.prototype),UV(hG.prototype,"getStats",[aG],Object.getOwnPropertyDescriptor(hG.prototype,"getStats"),hG.prototype),UV(hG.prototype,"setAudioFrameCallback",[cG],Object.getOwnPropertyDescriptor(hG.prototype,"setAudioFrameCallback"),hG.prototype),UV(hG.prototype,"play",[dG],Object.getOwnPropertyDescriptor(hG.prototype,"play"),hG.prototype),UV(hG.prototype,"stop",[uG],Object.getOwnPropertyDescriptor(hG.prototype,"stop"),hG.prototype),AG=hG))||AG),KG=(lG=gP("MicrophoneAudioTrack","getTrackId"),pG=Zj(),gG=fj("MicrophoneAudioTrack","_enabledMutex"),EG=dj({className:"MicrophoneAudioTrack"}),fG=Zj(),lG((UV((mG=class extends GG{constructor(e,t,r,i){super(e,t.encoderConfig?bP(t.encoderConfig):{},i),kO(this,"_config",void 0),kO(this,"_deviceName","default"),kO(this,"_constraints",void 0),kO(this,"_originalConstraints",void 0),kO(this,"_enabled",!0),pP("info",this,"constructor",{trackId:i,deviceId:e.label,constraints:r}),this._config=t,this._constraints=r,this._originalConstraints=r,this._deviceName=e.label,"boolean"==typeof t.bypassWebAudio&&(this._bypassWebAudio=t.bypassWebAudio),IO()&&Rj.bindInterruptDetectorTrack(this),this.bindProcessorContextEvents()}async setDevice(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.MIC_AUDIO_TRACK_SET_DEVICE,options:[this.getTrackId(),e]});if(HD.info("[".concat(this.getTrackId(),"] start set device to ").concat(e)),hP("info",this,"setDevice",e),this._enabled)try{const t=await Yj.getDeviceById(e),r={};r.audio=jG({},this._constraints),r.audio.deviceId={exact:e},this._originMediaStreamTrack.stop();let i=null;try{i=await Gj(r,this.getTrackId())}catch(t){throw HD.error("[".concat(this.getTrackId(),"] setDevice failed"),t.toString()),hP("error",this,"setDevice",e,t.toString()),i=await Gj({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(i.getAudioTracks()[0],!1),t}await this._updateOriginMediaStreamTrack(i.getAudioTracks()[0],!1),this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(r){throw t.onError(r),HD.error("[".concat(this.getTrackId(),"] setDevice error"),r.toString()),hP("error",this,"setDevice",e,r.toString()),r}else try{const t=await Yj.getDeviceById(e);this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(r){throw t.onError(r),HD.error("[".concat(this.getTrackId(),"] setDevice error"),r.toString()),hP("error",this,"setDevice",e,r.toString()),r}t.onSuccess(),HD.info("[".concat(this.getTrackId(),"] set device to ").concat(e," success")),hP("info",this,"setDevice",e,"success")}async setEnabled(e,t,r){if(t)return HD.debug("[".concat(this.getTrackId(),"] setEnabled false (do not close microphone)")),cP("debug",this,"setEnabled false (do not close microphone)"),await super._setEnabled(e);if(!r){if(e===this._enabled)return;this.stateCheck("enabled",e)}if(HD.info("[".concat(this.getTrackId(),"] start setEnabled"),e),hP("info",this,"setEnabled",e),!e){this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop(),r||(this._enabled=!1);try{await vK(this,qk.NEED_DISABLE_TRACK,this)}catch(t){throw HD.error("[".concat(this.getTrackId(),"] setEnabled false failed"),t.toString()),hP("error",this,"setEnabled",e,t.toString()),t}return}const i=jG({},this._constraints),n=Yj.searchDeviceIdByName(this._deviceName);n&&!i.deviceId&&(i.deviceId=n);try{r||(this._enabled=!0);const e=await Gj({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!1),await vK(this,qk.NEED_ENABLE_TRACK,this)}catch(t){throw r||(this._enabled=!1),HD.error("[".concat(this.getTrackId(),"] setEnabled true failed"),t.toString()),hP("error",this,"setEnabled",e,t.toString()),t}HD.info("[".concat(this.getTrackId(),"] setEnabled success")),hP("info",this,"setEnabled",e,"success")}close(){super.close(),IO()&&Rj.unbindInterruptDetectorTrack(this)}onTrackEnded(){if((EO()||SO())&&this._enabled&&!this._isClosed&&Rj.duringInterruption){const e=async()=>{Rj.off(hj.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(HD.debug("[".concat(this.getTrackId(),"] try capture microphone media device for interrupted iOS device.")),cP("debug",this,"try capture microphone media device for interrupted iOS device"),await this.setEnabled(!1),await this.setEnabled(!0))};Rj.on(hj.IOS_INTERRUPTION_END,e)}else HD.debug("[".concat(this.getTrackId(),"] track ended")),AP("debug",["MediaStreamTrack",this.getTrackId()],"ended"),this.emit($k.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,r=Yj.searchDeviceIdByName(this._deviceName);r&&!t.deviceId&&(t.deviceId=r),this._constraints=t,this._originMediaStreamTrack.stop();const i=await Gj({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(i.getAudioTracks()[0],!0)}bindProcessorContextEvents(){this.processorContext.on(IB.REQUEST_UPDATE_CONSTRAINTS,async(e,t,r)=>{try{const r=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(r),t()}catch(e){r(e)}}),this.processorContext.on(IB.REQUEST_CONSTRAINTS,async e=>{e(this._originMediaStreamTrack.getSettings())})}}).prototype,"setDevice",[pG],Object.getOwnPropertyDescriptor(mG.prototype,"setDevice"),mG.prototype),UV(mG.prototype,"setEnabled",[gG,EG,fG],Object.getOwnPropertyDescriptor(mG.prototype,"setEnabled"),mG.prototype),IG=mG))||IG),HG=(_G=gP("BufferSourceAudioTrack","getTrackId"),CG=Zj(),SG=Zj(),vG=Zj(),TG=Zj(),RG=Zj(),_G((UV((wG=class extends GG{constructor(e,t,r,i){super(t.createOutputTrack(),r,i),kO(this,"source",void 0),kO(this,"_bufferSource",void 0),pP("info",this,"constructor",{trackId:i}),this.source=e,this._bufferSource=t,this._bufferSource.on(mk.AUDIO_SOURCE_STATE_CHANGE,e=>{this.emit($k.SOURCE_STATE_CHANGE,e)});try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}}get currentState(){return this._bufferSource.currentState}get duration(){return this._bufferSource.duration}getCurrentTime(){return this._bufferSource.currentTime}startProcessAudioBuffer(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.BUFFER_AUDIO_TRACK_START,options:[this.getTrackId(),e,this.duration]});e&&this._bufferSource.updateOptions(e),this._bufferSource.startProcessAudioBuffer(),t.onSuccess()}pauseProcessAudioBuffer(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.BUFFER_AUDIO_TRACK_PAUSE,options:[this.getTrackId()]});this._bufferSource.pauseProcessAudioBuffer(),e.onSuccess()}seekAudioBuffer(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.BUFFER_AUDIO_TRACK_SEEK,options:[this.getTrackId()]});this._bufferSource.seekAudioBuffer(e),t.onSuccess()}resumeProcessAudioBuffer(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.BUFFER_AUDIO_TRACK_RESUME,options:[this.getTrackId()]});this._bufferSource.resumeProcessAudioBuffer(),e.onSuccess()}stopProcessAudioBuffer(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.BUFFER_AUDIO_TRACK_STOP,options:[this.getTrackId()]});this._bufferSource.stopProcessAudioBuffer(),e.onSuccess()}}).prototype,"startProcessAudioBuffer",[CG],Object.getOwnPropertyDescriptor(wG.prototype,"startProcessAudioBuffer"),wG.prototype),UV(wG.prototype,"pauseProcessAudioBuffer",[SG],Object.getOwnPropertyDescriptor(wG.prototype,"pauseProcessAudioBuffer"),wG.prototype),UV(wG.prototype,"seekAudioBuffer",[vG],Object.getOwnPropertyDescriptor(wG.prototype,"seekAudioBuffer"),wG.prototype),UV(wG.prototype,"resumeProcessAudioBuffer",[TG],Object.getOwnPropertyDescriptor(wG.prototype,"resumeProcessAudioBuffer"),wG.prototype),UV(wG.prototype,"stopProcessAudioBuffer",[RG],Object.getOwnPropertyDescriptor(wG.prototype,"stopProcessAudioBuffer"),wG.prototype),yG=wG))||yG),WG=gP("MixingAudioTrack","getTrackId")(bG=class extends GG{get isActive(){for(const e of this.trackList)if(e._enabled&&!e._isClosed&&!e.muted)return!0;return!1}constructor(){const e=wj().createMediaStreamDestination();super(e.stream.getAudioTracks()[0],void 0,fK(8,"track-mix-")),kO(this,"trackList",void 0),kO(this,"destNode",void 0);try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}this.destNode=e,this.trackList=[]}hasAudioTrack(e){return-1!==this.trackList.indexOf(e)}addAudioTrack(e){if(-1!==this.trackList.indexOf(e))return HD.debug("track ".concat(e.getTrackId()," is already added")),void cP("debug",this,"track already added");HD.debug("add ".concat(e.getTrackId()," to mixing track")),hP("debug",this,"addAudioTrack",e.getTrackId()),e._source.outputNode.connect(this.destNode),this.trackList.push(e),this.updateEncoderConfig()}removeAudioTrack(e){if(-1!==this.trackList.indexOf(e)){HD.debug("remove ".concat(e.getTrackId()," from mixing track")),hP("debug",this,"removeAudioTrack",e.getTrackId());try{e._source.outputNode.disconnect(this.destNode)}catch(e){}yK(this.trackList,e),this.updateEncoderConfig()}}updateEncoderConfig(){const e={};this.trackList.forEach(t=>{t._encoderConfig&&((t._encoderConfig.bitrate||0)>(e.bitrate||0)&&(e.bitrate=t._encoderConfig.bitrate),(t._encoderConfig.sampleRate||0)>(e.sampleRate||0)&&(e.sampleRate=t._encoderConfig.sampleRate),(t._encoderConfig.sampleSize||0)>(e.sampleSize||0)&&(e.sampleSize=t._encoderConfig.sampleSize),t._encoderConfig.stereo&&(e.stereo=!0))}),this._encoderConfig=e}})||bG;class YG extends kD{constructor(){super(...arguments),kO(this,"resultStorage",new Map)}setLocalAudioStats(e,t,r){this.record("AUDIO_INPUT_LEVEL_TOO_LOW",e,this.checkAudioInputLevel(r,t)),this.record("SEND_AUDIO_BITRATE_TOO_LOW",e,this.checkSendAudioBitrate(r,t))}setLocalVideoStats(e,t,r){this.record("SEND_VIDEO_BITRATE_TOO_LOW",e,this.checkSendVideoBitrate(r,t)),this.record("FRAMERATE_INPUT_TOO_LOW",e,this.checkFramerateInput(r,t)),this.record("FRAMERATE_SENT_TOO_LOW",e,this.checkFramerateSent(r))}setRemoteAudioStats(e,t){const r=e.getUserId();this.record("AUDIO_OUTPUT_LEVEL_TOO_LOW",r,this.checkAudioOutputLevel(t))}setRemoteVideoStats(e,t){const r=e.getUserId();this.record("RECV_VIDEO_DECODE_FAILED",r,this.checkVideoDecode(t))}record(e,t,r){this.resultStorage.has(e)||this.resultStorage.set(e,{result:[],isPrevNormal:!0});const i=this.resultStorage.get(e);if(i&&(i.result.push(r),i.result.length>=5)){const r=i.result.includes(!0);i.isPrevNormal&&!r&&this.emit("exception",JG[e],e,t),!i.isPrevNormal&&r&&this.emit("exception",JG[e]+2e3,e+"_RECOVER",t),i.isPrevNormal=r,i.result=[]}}checkAudioOutputLevel(e){return!(e.receiveBitrate>0&&0===e.receiveLevel)}checkAudioInputLevel(e,t){return t instanceof WG&&!t.isActive||(!!t.muted||0!==e.sendVolumeLevel)}checkFramerateInput(e,t){let r=null;t._encoderConfig&&t._encoderConfig.frameRate&&(r=nK(t._encoderConfig.frameRate));const i=e.captureFrameRate;return!r||!i||!(r>10&&i<5||r<10&&r>=5&&i<=1)}checkFramerateSent(e){return!(e.captureFrameRate&&e.sendFrameRate&&e.captureFrameRate>5&&e.sendFrameRate<=1)}checkSendVideoBitrate(e,t){return!!t.muted||0!==e.sendBitrate}checkSendAudioBitrate(e,t){return t instanceof WG&&!t.isActive||(!!t.muted||0!==e.sendBitrate)}checkVideoDecode(e){return 0===e.receiveBitrate||0!==e.decodeFrameRate}}const JG={FRAMERATE_INPUT_TOO_LOW:1001,FRAMERATE_SENT_TOO_LOW:1002,SEND_VIDEO_BITRATE_TOO_LOW:1003,RECV_VIDEO_DECODE_FAILED:1005,AUDIO_INPUT_LEVEL_TOO_LOW:2001,AUDIO_OUTPUT_LEVEL_TOO_LOW:2002,SEND_AUDIO_BITRATE_TOO_LOW:2003};const qG=new class{markSubscribeStart(e,t){performance.mark("agora-web-sdk/".concat(e,"/subscribe-").concat(t))}markPublishStart(e,t){performance.mark("agora-web-sdk/".concat(e,"/publish-").concat(t))}measureFromSubscribeStart(e,t){const r=performance.getEntriesByName("agora-web-sdk/".concat(e,"/subscribe-").concat(t));if(r.length>0){const e=r[r.length-1];return Math.round(performance.now()-e.startTime)}return 0}measureFromPublishStart(e,t){const r=performance.getEntriesByName("agora-web-sdk/".concat(e,"/publish-").concat(t));if(r.length>0){const e=r[r.length-1];return Math.round(performance.now()-e.startTime)}return 0}};function XG(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function zG(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?XG(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):XG(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class ZG{constructor(e){kO(this,"store",void 0),kO(this,"onStatsException",void 0),kO(this,"onUploadPublishDuration",void 0),kO(this,"localStats",new Map),kO(this,"remoteStats",new Map),kO(this,"updateStatsInterval",void 0),kO(this,"trafficStats",void 0),kO(this,"trafficStatsPeerList",[]),kO(this,"uplinkStats",void 0),kO(this,"exceptionMonitor",void 0),kO(this,"p2pChannel",void 0),kO(this,"updateStats",()=>{this.p2pChannel&&(this.updateRemoteStats(this.p2pChannel),this.updateLocalStats(this.p2pChannel))}),this.store=e,this.updateStatsInterval=window.setInterval(this.updateStats,1e3),this.exceptionMonitor=new YG,this.exceptionMonitor.on("exception",(e,t,r)=>{this.onStatsException&&this.onStatsException(e,t,r)})}reset(){this.localStats=new Map,this.remoteStats=new Map,this.trafficStats=void 0,this.trafficStatsPeerList=[],this.uplinkStats=void 0}getLocalAudioTrackStats(){return this.localStats.get(uB.LocalAudioTrack)||zG({},Rk)}getLocalVideoTrackStats(){return this.localStats.get(uB.LocalVideoTrack)||zG({},yk)}getRemoteAudioTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const r=this.trafficStats.peer_delay.find(t=>t.peer_uid===e);return r&&(t.publishDuration=r.B_ppad+(Date.now()-this.trafficStats.timestamp)),t},r={};if(e){var i;const n=null===(i=this.remoteStats.get(e))||void 0===i?void 0:i.audioStats;n&&(r[e]=t(e,n))}else Array.from(this.remoteStats.entries()).forEach(e=>{let[i,{audioStats:n}]=e;n&&(r[i]=t(i,n))});return r}getRemoteNetworkQualityStats(e){const t={};if(e){var r;const i=null===(r=this.remoteStats.get(e))||void 0===r?void 0:r.networkStats;i&&(t[e]=i)}else Array.from(this.remoteStats.entries()).forEach(e=>{let[r,{networkStats:i}]=e;i&&(t[r]=i)});return t}getRemoteVideoTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const r=this.trafficStats.peer_delay.find(t=>t.peer_uid===e);return r&&(t.publishDuration=r.B_ppvd+(Date.now()-this.trafficStats.timestamp)),t},r={};if(e){var i;const n=null===(i=this.remoteStats.get(e))||void 0===i?void 0:i.videoStats;n&&(r[e]=t(e,n))}else Array.from(this.remoteStats.entries()).forEach(e=>{let[i,{videoStats:n}]=e;n&&(r[i]=t(i,n))});return r}getRTCStats(){let e=0,t=0,r=0,i=0;const n=this.localStats.get(uB.LocalAudioTrack);n&&(e+=n.sendBytes,t+=n.sendBitrate);const o=this.localStats.get(uB.LocalVideoTrack);o&&(e+=o.sendBytes,t+=o.sendBitrate);const s=this.localStats.get(uB.LocalVideoLowTrack);s&&(e+=s.sendBytes,t+=s.sendBitrate),this.remoteStats.forEach(e=>{let{audioStats:t,videoStats:n}=e;t&&(r+=t.receiveBytes,i+=t.receiveBitrate),n&&(r+=n.receiveBytes,i+=n.receiveBitrate)});let a=1;return this.trafficStats&&(a+=this.trafficStats.peer_delay.length),{Duration:0,UserCount:a,SendBitrate:t,SendBytes:e,RecvBytes:r,RecvBitrate:i,OutgoingAvailableBandwidth:this.uplinkStats?this.uplinkStats.B_uab/1e3:0,RTT:this.trafficStats?2*this.trafficStats.B_acd:0}}addLocalStats(e){this.localStats.set(e,void 0)}removeLocalStats(e){e?this.localStats.delete(e):this.localStats.clear()}addRemoteStats(e){this.remoteStats.set(e,{})}removeRemoteStats(e){e?this.remoteStats.delete(e):this.remoteStats.clear()}addP2PChannel(e){this.p2pChannel=e}updateTrafficStats(e){e.peer_delay=e.peer_delay.filter(e=>void 0!==e.B_ppad||void 0!==e.B_ppvd);e.peer_delay.filter(e=>-1===this.trafficStatsPeerList.indexOf(e.peer_uid)).forEach(e=>{var t;const r=null===(t=this.p2pChannel)||void 0===t?void 0:t.getRemoteMedia(e.peer_uid),i=null!=r&&r.videoSSRC?qG.measureFromSubscribeStart(this.store.clientId,r.videoSSRC):0,n=null!=r&&r.audioSSRC?qG.measureFromSubscribeStart(this.store.clientId,r.audioSSRC):0;void 0!==e.B_ppad&&void 0!==e.B_ppvd&&(this.onUploadPublishDuration&&this.onUploadPublishDuration(e.peer_uid,e.B_ppad,e.B_ppvd,i>n?i:n),this.trafficStatsPeerList.push(e.peer_uid))}),this.trafficStats=e}updateUplinkStats(e){this.uplinkStats&&this.uplinkStats.B_fir!==e.B_fir&&HD.debug("[".concat(this.store.clientId,"]: Period fir changes to ").concat(e.B_fir)),this.uplinkStats=e}static isRemoteVideoFreeze(e,t,r){if(!e)return!1;const i=!!r&&t.framesDecodeFreezeTime>r.framesDecodeFreezeTime,n=!r||t.framesDecodeCount>r.framesDecodeCount;return i||!n}static isRemoteAudioFreeze(e){return!!e&&e._isFreeze()}isLocalVideoFreeze(e){return!(!e.inputFrame||!e.sentFrame)&&(e.inputFrame.frameRate>5&&e.sentFrame.frameRate<3)}updateLocalStats(e){Array.from(this.localStats.entries()).forEach(t=>{let[r,i]=t;switch(r){case uB.LocalVideoTrack:case uB.LocalVideoLowTrack:{const t=i,n=zG({},yk),o=e.getStats(),s=e.getLocalMedia(r);if(o){const r=o.videoSend.find(e=>e.ssrc===(null==s?void 0:s.ssrcs[0].ssrcId));if(r){const i=e.getLocalVideoSize(),o=e.getEncoderConfig(uB.LocalVideoTrack);"H264"!==r.codec&&"VP8"!==r.codec&&"VP9"!==r.codec&&"AV1X"!==r.codec&&"AV1"!==r.codec||(n.codecType=r.codec),n.sendBytes=r.bytes,n.sendBitrate=t?8*Math.max(0,n.sendBytes-t.sendBytes):0,r.inputFrame?(n.captureFrameRate=r.inputFrame.frameRate,n.captureResolutionHeight=r.inputFrame.height,n.captureResolutionWidth=r.inputFrame.width):i&&(n.captureResolutionWidth=i.width,n.captureResolutionHeight=i.height),r.sentFrame?(n.sendFrameRate=r.sentFrame.frameRate,n.sendResolutionHeight=r.sentFrame.height,n.sendResolutionWidth=r.sentFrame.width):i&&(n.sendResolutionWidth=i.width,n.sendResolutionHeight=i.height),r.avgEncodeMs&&(n.encodeDelay=r.avgEncodeMs),o&&o.bitrateMax&&(n.targetSendBitrate=1e3*o.bitrateMax),n.sendPackets=r.packets,n.sendPacketsLost=r.packetsLost,n.totalDuration=t?t.totalDuration+1:1,n.totalFreezeTime=t?t.totalFreezeTime:0,this.isLocalVideoFreeze(r)&&(n.totalFreezeTime+=1)}this.trafficStats&&(n.sendPacketsLost=this.trafficStats.B_pvlr4/100)}this.localStats.set(r,n),n&&s&&this.exceptionMonitor.setLocalVideoStats(this.store.uid,s.track,n);break}case uB.LocalAudioTrack:{const t=i,n=zG({},Rk),o=e.getStats(),s=e.getLocalMedia(r);if(o){const r=o.audioSend.find(e=>e.ssrc===(null==s?void 0:s.ssrcs[0].ssrcId));if(r){if("opus"!==r.codec&&"aac"!==r.codec&&"PCMU"!==r.codec&&"PCMA"!==r.codec&&"G722"!==r.codec||(n.codecType=r.codec),r.inputLevel)n.sendVolumeLevel=Math.round(32767*r.inputLevel);else{const t=e.getLocalAudioVolume();t&&(n.sendVolumeLevel=Math.round(32767*t))}n.sendBytes=r.bytes,n.sendPackets=r.packets,n.sendPacketsLost=r.packetsLost,n.sendBitrate=t?8*Math.max(0,n.sendBytes-t.sendBytes):0}}this.trafficStats&&(n.sendPacketsLost=this.trafficStats.B_pvlr4/100),this.localStats.set(uB.LocalAudioTrack,n),n&&s&&this.exceptionMonitor.setLocalAudioStats(this.store.uid,s.track,n);break}}})}updateRemoteStats(e){Array.from(this.remoteStats.entries()).forEach(t=>{let[r,{videoStats:i,audioStats:n,videoPcStats:o}]=t;const s=n,a=i,c=o,d=zG({},wk),u=zG({},Ok),A=zG({},bk),{audioTrack:h,videoTrack:l,audioSSRC:p,videoSSRC:g}=e.getRemoteMedia(r),E=e.getStats(),f=null==E?void 0:E.audioRecv.find(e=>e.ssrc===p),I=null==E?void 0:E.videoRecv.find(e=>e.ssrc===g),m=this.trafficStats&&this.trafficStats.peer_delay.find(e=>e.peer_uid===r);if(f&&("opus"!==f.codec&&"aac"!==f.codec&&"PCMU"!==f.codec&&"PCMA"!==f.codec&&"G722"!==f.codec||(d.codecType=f.codec),f.outputLevel?d.receiveLevel=Math.round(32767*f.outputLevel):h&&(d.receiveLevel=Math.round(32767*h.getVolumeLevel())),d.receiveBytes=f.bytes,d.receivePackets=f.packets,d.receivePacketsLost=f.packetsLost,d.packetLossRate=d.receivePacketsLost/(d.receivePackets+d.receivePacketsLost),d.receiveBitrate=s?8*Math.max(0,d.receiveBytes-s.receiveBytes):0,d.totalDuration=s?s.totalDuration+1:1,d.totalFreezeTime=s?s.totalFreezeTime:0,d.freezeRate=d.totalFreezeTime/d.totalDuration,d.receiveDelay=f.jitterBufferMs,d.totalDuration>10&&ZG.isRemoteAudioFreeze(h)&&(d.totalFreezeTime+=1)),I){"H264"!==I.codec&&"VP8"!==I.codec&&"VP9"!==I.codec&&"AV1X"!==I.codec&&"AV1"!==I.codec||(u.codecType=I.codec),u.receiveBytes=I.bytes,u.receiveBitrate=a?8*Math.max(0,u.receiveBytes-a.receiveBytes):0,u.decodeFrameRate=I.decodeFrameRate<0?0:I.decodeFrameRate,u.renderFrameRate=I.decodeFrameRate<0?0:I.decodeFrameRate,I.outputFrame&&(u.renderFrameRate=I.outputFrame.frameRate),I.receivedFrame?(u.receiveFrameRate=I.receivedFrame.frameRate,u.receiveResolutionHeight=I.receivedFrame.height,u.receiveResolutionWidth=I.receivedFrame.width):l&&(u.receiveResolutionHeight=l._videoHeight||0,u.receiveResolutionWidth=l._videoWidth||0),void 0!==I.framesRateFirefox&&(u.receiveFrameRate=Math.round(I.framesRateFirefox)),u.receivePackets=I.packets,u.receivePacketsLost=I.packetsLost,u.packetLossRate=u.receivePacketsLost/(u.receivePackets+u.receivePacketsLost),u.totalDuration=a?a.totalDuration+1:1,u.totalFreezeTime=a?a.totalFreezeTime:0,u.receiveDelay=I.jitterBufferMs||0;const t=!!g&&e.getRemoteVideoIsReady(g);l&&t&&ZG.isRemoteVideoFreeze(l,I,c)&&(u.totalFreezeTime+=1),u.freezeRate=u.totalFreezeTime/u.totalDuration}m&&(d.end2EndDelay=m.B_ad,u.end2EndDelay=m.B_vd,d.transportDelay=m.B_ed,u.transportDelay=m.B_ed,d.currentPacketLossRate=m.B_ealr4/100,u.currentPacketLossRate=m.B_evlr4/100,A.uplinkNetworkQuality=m.B_punq?m.B_punq:0,A.downlinkNetworkQuality=m.B_pdnq?m.B_pdnq:0),this.remoteStats.set(r,{audioStats:d,videoStats:u,videoPcStats:I,networkStats:A}),h&&this.exceptionMonitor.setRemoteAudioStats(h,d),l&&this.exceptionMonitor.setRemoteVideoStats(l,u)})}}function $G(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function eK(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?$G(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):$G(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function tK(e){if(!e.address||!e.tcp)throw new UD(MD.UNEXPECTED_RESPONSE,"Invalid address format ".concat(e));return e.address.match(/^[\.\:\d]+$/)?"".concat(e.address.replace(/[^\d]/g,"-"),".edge.agora.io"):(HD.info("Cannot recognized as IP address ".concat(e.address,". Used As Host instead")),"".concat(e.address,":").concat(e.tcp))}function rK(e){return e.match(/^[\.\:\d]+$/)?"".concat(e.replace(/[^\d]/g,"-"),".").concat(NP("TURN_DOMAIN")):(HD.info("Cannot recognized as IP address ".concat(e,". Used As Host instead")),e)}function iK(e,t){const r=NP("GATEWAY_DOMAINS");let i=r[1]&&-1!==t.indexOf(r[1])?1:0;e.addresses=e.addresses||[];return{gatewayAddrs:e.addresses.map(e=>e.domain_prefix?{address:"".concat(e.domain_prefix,".").concat(r[i++%r.length],":").concat(e.port)}:e.ip.match(/^[\.\:\d]+$/)?{ip:e.ip,port:e.port,address:"".concat(e.ip.replace(/[^\d]/g,"-"),".").concat(r[i++%r.length],":").concat(e.port)}:(HD.info("Cannot recognized as IP address ".concat(e.ip,". Used As Host instead")),{ip:e.ip,port:e.port,address:"".concat(e.ip,":").concat(e.port)})),uid:e.uid,cid:e.cid,vid:e.detail&&e.detail[8],uni_lbs_ip:e.detail&&e.detail[1],res:e,csIp:e.detail&&e.detail[502]}}function nK(e){return"number"==typeof e?e:e.exact||e.ideal||e.max||e.min||0}function oK(e){const t=e._encoderConfig;if(!t)return{};const r={resolution:t.width&&t.height?"".concat(nK(t.width),"x").concat(nK(t.height)):void 0,maxVideoBW:t.bitrateMax,minVideoBW:t.bitrateMin};return"number"==typeof t.frameRate?(r.maxFrameRate=t.frameRate,r.minFrameRate=t.frameRate):t.frameRate&&(r.maxFrameRate=t.frameRate.max||t.frameRate.ideal||t.frameRate.exact||t.frameRate.min,r.minFrameRate=t.frameRate.min||t.frameRate.ideal||t.frameRate.exact||t.frameRate.max),r}function sK(e,t,r){var i;const n=t.videoSend.find(t=>t.ssrc===e);if(!n)return null;const o=null==r||null===(i=r.videoSend.find(t=>t.ssrc===e))||void 0===i?void 0:i.inputFrame,s={id:fK(10,""),timestamp:new Date(t.timestamp).toISOString(),mediaType:"video",type:"ssrc",ssrc:n.ssrc.toString()};return n.inputFrame&&(o&&n.inputFrame.height===o.height||(s.A_fhi=n.inputFrame.height?n.inputFrame.height.toString():"0"),o&&n.inputFrame.width===o.width||(s.A_fwi=n.inputFrame.width?n.inputFrame.width.toString():"0"),o&&n.inputFrame.frameRate===o.frameRate||(s.A_fri=n.inputFrame.frameRate?n.inputFrame.frameRate.toString():"0")),s}function aK(e){return e>=0&&e<.17?1:e>=.17&&e<.36?2:e>=.36&&e<.59?3:e>=.59&&e<=1?4:e>1?5:0}function cK(e,t){let r,i,n=void 0;switch(t){case RF.CHOOSE_SERVER:r=4096,i="choose server";break;case RF.CLOUD_PROXY:r=1048576,i="proxy";break;case RF.CLOUD_PROXY_5:r=4194304,i="proxy5";break;case RF.CLOUD_PROXY_FALLBACK:r=4194310,i="proxy fallback";break;default:throw new UD(MD.UNEXPECTED_ERROR,"multi unlibs response transformer get unknown service id",{csIp:e.detail&&e.detail[502],retry:!1})}if(e.response_body.forEach(t=>{t.buffer&&t.buffer.flag===r&&(n={code:t.buffer.code,addresses:(t.buffer.edges_services||[]).map(e=>eK(eK({},e),{},{ticket:t.buffer.cert})),server_ts:e.enter_ts,uid:t.buffer.uid,cid:t.buffer.cid,cname:t.buffer.cname,detail:eK(eK({},t.buffer.detail),e.detail),flag:t.buffer.flag,opid:e.opid})}),!n)throw new UD(MD.MULTI_UNILBS_RESPONSE_ERROR,"cannot parse response ".concat(i," from multi unilbs response"),{csIp:e.detail&&e.detail[502]});return n}async function dK(e,t){return await nT.all(e.addresses.map(async e=>({address:rK(e.ip),tcpport:e.port,udpport:e.port,username:t&&NP("ENCRYPT_PROXY_USERNAME_AND_PSW")&&window.isSecureContext?t.toString():_P.username,password:t&&NP("ENCRYPT_PROXY_USERNAME_AND_PSW")&&window.isSecureContext?await nj(t.toString()):_P.password})))}function uK(e,t){const r=t._videoHeight||t.getMediaStreamTrack(!0).getSettings().height;return r?r/nK(e.height):4}function AK(e){let{candidateType:t,relayProtocol:r,type:i,address:n,port:o,protocol:s}=e;return"local-candidate"===i?{candidateType:t,relayProtocol:r,protocol:s}:{candidateType:t,relayProtocol:r,address:n,port:o,protocol:s}}function hK(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function lK(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?hK(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):hK(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function pK(e){return window.TextEncoder?(new TextEncoder).encode(e).length:e.length}function gK(e){return new nT(t=>{window.setTimeout(t,e)})}function EK(e){const t=new UD(MD.TIMEOUT,"timeout");return new nT((r,i)=>{window.setTimeout(()=>i(t),e)})}function fK(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,t=arguments.length>1?arguments[1]:void 0;const r=Math.random().toString(16).substr(2,e).toLowerCase();return r.length===e?"".concat(t).concat(r):"".concat(t).concat(r)+fK(e-r.length,"")}function IK(){return fK(32,"").toUpperCase()}const mK=()=>{};function _K(e){return new nT((t,r)=>{let i=!1;const n=document.createElement("video");n.setAttribute("autoplay",""),n.setAttribute("muted",""),n.muted=!0,n.autoplay=!0,n.setAttribute("playsinline",""),n.setAttribute("style","position: fixed; top: 0; left: 0; width: 1px; height: 1px"),document.body.appendChild(n);const o=EO()?"canplay":"playing";n.addEventListener(o,()=>{const e=n.videoWidth,r=n.videoHeight;!e&&gO()||(i=!0,n.srcObject=null,n.remove(),t([e,r]))}),n.srcObject=new MediaStream([e]),n.play().catch(mK),setTimeout(()=>{i||(n.srcObject=null,n.remove(),t([n.videoWidth,n.videoHeight]))},4e3)})}function CK(e){return nT.all(e.map(e=>e.then(e=>{throw e},e=>e))).then(e=>{throw e},e=>e)}function SK(e,t){for(var r=arguments.length,i=new Array(r>2?r-2:0),n=2;n<r;n++)i[n-2]=arguments[n];return 0===e.getListeners(t).length?nT.reject(new UD(MD.UNEXPECTED_ERROR,"can not emit promise")):new nT((r,n)=>{e.emit(t,...i,r,n)})}function vK(e,t){if(0===e.getListeners(t).length)return nT.resolve();for(var r=arguments.length,i=new Array(r>2?r-2:0),n=2;n<r;n++)i[n-2]=arguments[n];return SK(e,t,...i)}function TK(e,t){if(0===e.getListeners(t).length)return null;for(var r=arguments.length,i=new Array(r>2?r-2:0),n=2;n<r;n++)i[n-2]=arguments[n];return RK(e,t,...i)}function RK(e,t){let r=null,i=null;for(var n=arguments.length,o=new Array(n>2?n-2:0),s=2;s<n;s++)o[s-2]=arguments[s];if(e.emit(t,...o,e=>{r=e},e=>{i=e}),null!==i)throw i;if(null===r)throw new UD(MD.UNEXPECTED_ERROR,"handler is not sync");return r}function yK(e,t){const r=e.indexOf(t);-1!==r&&e.splice(r,1)}function wK(e){const t=[];return e.forEach(e=>{-1===t.indexOf(e)&&t.push(e)}),t}function bK(e){nT.resolve().then(e)}function OK(e){return JSON.parse(JSON.stringify(e))}const NK={};function DK(e,t){NK[t]||(NK[t]=!0,e())}function PK(e){const t=window.atob(e),r=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)r[e]=t.charCodeAt(e);return r}function LK(e){let t="";for(let r=0;r<e.length;r+=1)t+=String.fromCharCode(e[r]);return window.btoa(t)}const kK=new class{constructor(){kO(this,"fnMap",new Map)}throttleByKey(e,t,r,i){for(var n=arguments.length,o=new Array(n>4?n-4:0),s=4;s<n;s++)o[s-4]=arguments[s];if(this.fnMap.has(t)){const n=this.fnMap.get(t);if(n.threshold!==r){n.fn(...n.args),clearTimeout(n.timer);const s=window.setTimeout(()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)},r);this.fnMap.set(t,{fn:e,threshold:r,timer:s,args:o,skipFn:i})}else n.skipFn&&n.skipFn(...n.args),this.fnMap.set(t,lK(lK({},n),{},{fn:e,args:o,skipFn:i}))}else{const n=window.setTimeout(()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)},r);this.fnMap.set(t,{fn:e,threshold:r,timer:n,args:o,skipFn:i})}}},BK=kK.throttleByKey.bind(kK),MK=async e=>{let{fragementLength:t,referenceList:r,asyncMapHandler:i,allFailedhandler:n,promisesCollector:o}=e,s=0;const a=t;let c,d=0;const u=async()=>{const e=(()=>{const e=s*a,t=e+a;return r.slice(e,t).map(i)})();o&&o.push(...e);try{c=await CK(e)}catch(e){if(d+=a,s++,!(d>=r.length))return void await u();n(e)}e.forEach(e=>e.cancel())};return await u(),c};function UK(e){return"object"==typeof e&&null!==e&&!(e instanceof RegExp)}var xK=bc,QK=Nu("iterator"),FK=!xK((function(){var e=new URL("b?a=1&b=2&c=3","http://a"),t=e.searchParams,r="";return e.pathname="c%20d",t.forEach((function(e,i){t.delete("b"),r+=i+e})),!e.toJSON||!t.sort||"http://a/c%20d?a=1&c=3"!==e.href||"3"!==t.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!t[QK]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==r||"x"!==new URL("http://x",void 0).host})),VK=Wc,jK=Bc,GK=qc,KK=bc,HK=HE,WK=DE,YK=Xc,JK=Au,qK=hd,XK=Object.assign,zK=Object.defineProperty,ZK=jK([].concat),$K=!XK||KK((function(){if(VK&&1!==XK({b:1},XK(zK({},"a",{enumerable:!0,get:function(){zK(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},r=Symbol(),i="abcdefghijklmnopqrst";return e[r]=7,i.split("").forEach((function(e){t[e]=e})),7!=XK({},e)[r]||HK(XK({},t)).join("")!=i}))?function(e,t){for(var r=JK(e),i=arguments.length,n=1,o=WK.f,s=YK.f;i>n;)for(var a,c=qK(arguments[n++]),d=o?ZK(HK(c),o(c)):HK(c),u=d.length,A=0;u>A;)a=d[A++],VK&&!GK(s,c,a)||(r[a]=c[a]);return r}:XK,eH=SA,tH=qf,rH=gA,iH=qc,nH=Au,oH=function(e,t,r,i){try{return i?t(eH(r)[0],r[1]):t(r)}catch(t){tH(e,"throw",t)}},sH=vf,aH=K_,cH=th,dH=GP,uH=Hf,AH=xf,hH=xc.Array,lH=Bc,pH=2147483647,gH=/[^\0-\u007E]/,EH=/[.\u3002\uFF0E\uFF61]/g,fH="Overflow: input needs wider integers to process",IH=xc.RangeError,mH=lH(EH.exec),_H=Math.floor,CH=String.fromCharCode,SH=lH("".charCodeAt),vH=lH([].join),TH=lH([].push),RH=lH("".replace),yH=lH("".split),wH=lH("".toLowerCase),bH=function(e){return e+22+75*(e<26)},OH=function(e,t,r){var i=0;for(e=r?_H(e/700):e>>1,e+=_H(e/t);e>455;)e=_H(e/35),i+=36;return _H(i+36*e/(e+38))},NH=function(e){var t,r,i=[],n=(e=function(e){for(var t=[],r=0,i=e.length;r<i;){var n=SH(e,r++);if(n>=55296&&n<=56319&&r<i){var o=SH(e,r++);56320==(64512&o)?TH(t,((1023&n)<<10)+(1023&o)+65536):(TH(t,n),r--)}else TH(t,n)}return t}(e)).length,o=128,s=0,a=72;for(t=0;t<e.length;t++)(r=e[t])<128&&TH(i,CH(r));var c=i.length,d=c;for(c&&TH(i,"-");d<n;){var u=pH;for(t=0;t<e.length;t++)(r=e[t])>=o&&r<u&&(u=r);var A=d+1;if(u-o>_H((pH-s)/A))throw IH(fH);for(s+=(u-o)*A,o=u,t=0;t<e.length;t++){if((r=e[t])<o&&++s>pH)throw IH(fH);if(r==o){for(var h=s,l=36;;){var p=l<=a?1:l>=a+26?26:l-a;if(h<p)break;var g=h-p,E=36-p;TH(i,CH(bH(p+g%E))),h=_H(g/E),l+=36}TH(i,CH(bH(h))),a=OH(s,A,d==c),s=0,d++}}s++,o++}return vH(i,"")},DH=xc.TypeError,PH=JA,LH=xc,kH=Rd,BH=qc,MH=Bc,UH=FK,xH=mm,QH=g_,FH=Um,VH=Km,jH=Am,GH=S_,KH=Kc,HH=pu,WH=gA,YH=Lf,JH=SA,qH=md,XH=hI,zH=hf,ZH=rd,$H=Hf,eW=xf,tW=function(e,t){if(e<t)throw DH("Not enough arguments");return e},rW=tL,iW=Nu("iterator"),nW="URLSearchParams",oW="URLSearchParamsIterator",sW=jH.set,aW=jH.getterFor(nW),cW=jH.getterFor(oW),dW=kH("fetch"),uW=kH("Request"),AW=kH("Headers"),hW=uW&&uW.prototype,lW=AW&&AW.prototype,pW=LH.RegExp,gW=LH.TypeError,EW=LH.decodeURIComponent,fW=LH.encodeURIComponent,IW=MH("".charAt),mW=MH([].join),_W=MH([].push),CW=MH("".replace),SW=MH([].shift),vW=MH([].splice),TW=MH("".split),RW=MH("".slice),yW=/\+/g,wW=Array(4),bW=function(e){return wW[e-1]||(wW[e-1]=pW("((?:%[\\da-f]{2}){"+e+"})","gi"))},OW=function(e){try{return EW(e)}catch(t){return e}},NW=function(e){var t=CW(e,yW," "),r=4;try{return EW(t)}catch(e){for(;r;)t=CW(t,bW(r--),OW);return t}},DW=/[!'()~]|%20/g,PW={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},LW=function(e){return PW[e]},kW=function(e){return CW(fW(e),DW,LW)},BW=VH((function(e,t){sW(this,{type:oW,iterator:$H(aW(e).entries),kind:t})}),"Iterator",(function(){var e=cW(this),t=e.kind,r=e.iterator.next(),i=r.value;return r.done||(r.value="keys"===t?i.key:"values"===t?i.value:[i.key,i.value]),r}),!0),MW=function(e){this.entries=[],this.url=null,void 0!==e&&(qH(e)?this.parseObject(e):this.parseQuery("string"==typeof e?"?"===IW(e,0)?RW(e,1):e:XH(e)))};MW.prototype={type:nW,bindURL:function(e){this.url=e,this.update()},parseObject:function(e){var t,r,i,n,o,s,a,c=eW(e);if(c)for(r=(t=$H(e,c)).next;!(i=BH(r,t)).done;){if(o=(n=$H(JH(i.value))).next,(s=BH(o,n)).done||(a=BH(o,n)).done||!BH(o,n).done)throw gW("Expected sequence with length 2");_W(this.entries,{key:XH(s.value),value:XH(a.value)})}else for(var d in e)HH(e,d)&&_W(this.entries,{key:d,value:XH(e[d])})},parseQuery:function(e){if(e)for(var t,r,i=TW(e,"&"),n=0;n<i.length;)(t=i[n++]).length&&(r=TW(t,"="),_W(this.entries,{key:NW(SW(r)),value:NW(mW(r,"="))}))},serialize:function(){for(var e,t=this.entries,r=[],i=0;i<t.length;)e=t[i++],_W(r,kW(e.key)+"="+kW(e.value));return mW(r,"&")},update:function(){this.entries.length=0,this.parseQuery(this.url.query)},updateURL:function(){this.url&&this.url.update()}};var UW=function(){GH(this,xW);var e=arguments.length>0?arguments[0]:void 0;sW(this,new MW(e))},xW=UW.prototype;if(QH(xW,{append:function(e,t){tW(arguments.length,2);var r=aW(this);_W(r.entries,{key:XH(e),value:XH(t)}),r.updateURL()},delete:function(e){tW(arguments.length,1);for(var t=aW(this),r=t.entries,i=XH(e),n=0;n<r.length;)r[n].key===i?vW(r,n,1):n++;t.updateURL()},get:function(e){tW(arguments.length,1);for(var t=aW(this).entries,r=XH(e),i=0;i<t.length;i++)if(t[i].key===r)return t[i].value;return null},getAll:function(e){tW(arguments.length,1);for(var t=aW(this).entries,r=XH(e),i=[],n=0;n<t.length;n++)t[n].key===r&&_W(i,t[n].value);return i},has:function(e){tW(arguments.length,1);for(var t=aW(this).entries,r=XH(e),i=0;i<t.length;)if(t[i++].key===r)return!0;return!1},set:function(e,t){tW(arguments.length,1);for(var r,i=aW(this),n=i.entries,o=!1,s=XH(e),a=XH(t),c=0;c<n.length;c++)(r=n[c]).key===s&&(o?vW(n,c--,1):(o=!0,r.value=a));o||_W(n,{key:s,value:a}),i.updateURL()},sort:function(){var e=aW(this);rW(e.entries,(function(e,t){return e.key>t.key?1:-1})),e.updateURL()},forEach:function(e){for(var t,r=aW(this).entries,i=WH(e,arguments.length>1?arguments[1]:void 0),n=0;n<r.length;)i((t=r[n++]).value,t.key,this)},keys:function(){return new BW(this,"keys")},values:function(){return new BW(this,"values")},entries:function(){return new BW(this,"entries")}},{enumerable:!0}),xH(xW,iW,xW.entries,{name:"entries"}),xH(xW,"toString",(function(){return aW(this).serialize()}),{enumerable:!0}),FH(UW,nW),PH({global:!0,forced:!UH},{URLSearchParams:UW}),!UH&&KH(AW)){var QW=MH(lW.has),FW=MH(lW.set),VW=function(e){if(qH(e)){var t,r=e.body;if(YH(r)===nW)return t=e.headers?new AW(e.headers):new AW,QW(t,"content-type")||FW(t,"content-type","application/x-www-form-urlencoded;charset=UTF-8"),zH(e,{body:ZH(0,XH(r)),headers:ZH(0,t)})}return e};if(KH(dW)&&PH({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return dW(e,arguments.length>1?VW(arguments[1]):{})}}),KH(uW)){var jW=function(e){return GH(this,hW),new uW(e,arguments.length>1?VW(arguments[1]):{})};hW.constructor=jW,jW.prototype=hW,PH({global:!0,forced:!0},{Request:jW})}}var GW,KW={URLSearchParams:UW,getState:aW},HW=JA,WW=Wc,YW=FK,JW=xc,qW=gA,XW=Bc,zW=jE.f,ZW=mm,$W=S_,eY=pu,tY=$K,rY=function(e){var t=nH(e),r=aH(this),i=arguments.length,n=i>1?arguments[1]:void 0,o=void 0!==n;o&&(n=rH(n,i>2?arguments[2]:void 0));var s,a,c,d,u,A,h=AH(t),l=0;if(!h||this==hH&&sH(h))for(s=cH(t),a=r?new this(s):hH(s);s>l;l++)A=o?n(t[l],l):t[l],dH(a,l,A);else for(u=(d=uH(t,h)).next,a=r?new this:[];!(c=iH(u,d)).done;l++)A=o?oH(d,n,[c.value,l],!0):c.value,dH(a,l,A);return a.length=l,a},iY=qP,nY=Qv.codeAt,oY=function(e){var t,r,i=[],n=yH(RH(wH(e),EH,"."),".");for(t=0;t<n.length;t++)r=n[t],TH(i,mH(gH,r)?"xn--"+NH(r):r);return vH(i,".")},sY=hI,aY=Um,cY=KW,dY=Am,uY=dY.set,AY=dY.getterFor("URL"),hY=cY.URLSearchParams,lY=cY.getState,pY=JW.URL,gY=JW.TypeError,EY=JW.parseInt,fY=Math.floor,IY=Math.pow,mY=XW("".charAt),_Y=XW(/./.exec),CY=XW([].join),SY=XW(1..toString),vY=XW([].pop),TY=XW([].push),RY=XW("".replace),yY=XW([].shift),wY=XW("".split),bY=XW("".slice),OY=XW("".toLowerCase),NY=XW([].unshift),DY="Invalid scheme",PY="Invalid host",LY="Invalid port",kY=/[a-z]/i,BY=/[\d+-.a-z]/i,MY=/\d/,UY=/^0x/i,xY=/^[0-7]+$/,QY=/^\d+$/,FY=/^[\da-f]+$/i,VY=/[\0\t\n\r #%/:<>?@[\\\]^|]/,jY=/[\0\t\n\r #/:<>?@[\\\]^|]/,GY=/^[\u0000-\u0020]+|[\u0000-\u0020]+$/g,KY=/[\t\n\r]/g,HY=function(e){var t,r,i,n;if("number"==typeof e){for(t=[],r=0;r<4;r++)NY(t,e%256),e=fY(e/256);return CY(t,".")}if("object"==typeof e){for(t="",i=function(e){for(var t=null,r=1,i=null,n=0,o=0;o<8;o++)0!==e[o]?(n>r&&(t=i,r=n),i=null,n=0):(null===i&&(i=o),++n);return n>r&&(t=i,r=n),t}(e),r=0;r<8;r++)n&&0===e[r]||(n&&(n=!1),i===r?(t+=r?":":"::",n=!0):(t+=SY(e[r],16),r<7&&(t+=":")));return"["+t+"]"}return e},WY={},YY=tY({},WY,{" ":1,'"':1,"<":1,">":1,"`":1}),JY=tY({},YY,{"#":1,"?":1,"{":1,"}":1}),qY=tY({},JY,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),XY=function(e,t){var r=nY(e,0);return r>32&&r<127&&!eY(t,e)?e:encodeURIComponent(e)},zY={ftp:21,file:null,http:80,https:443,ws:80,wss:443},ZY=function(e,t){var r;return 2==e.length&&_Y(kY,mY(e,0))&&(":"==(r=mY(e,1))||!t&&"|"==r)},$Y=function(e){var t;return e.length>1&&ZY(bY(e,0,2))&&(2==e.length||"/"===(t=mY(e,2))||"\\"===t||"?"===t||"#"===t)},eJ=function(e){return"."===e||"%2e"===OY(e)},tJ={},rJ={},iJ={},nJ={},oJ={},sJ={},aJ={},cJ={},dJ={},uJ={},AJ={},hJ={},lJ={},pJ={},gJ={},EJ={},fJ={},IJ={},mJ={},_J={},CJ={},SJ=function(e,t,r){var i,n,o,s=sY(e);if(t){if(n=this.parse(s))throw gY(n);this.searchParams=null}else{if(void 0!==r&&(i=new SJ(r,!0)),n=this.parse(s,null,i))throw gY(n);(o=lY(new hY)).bindURL(this),this.searchParams=o}};SJ.prototype={type:"URL",parse:function(e,t,r){var i,n,o,s,a,c=this,d=t||tJ,u=0,A="",h=!1,l=!1,p=!1;for(e=sY(e),t||(c.scheme="",c.username="",c.password="",c.host=null,c.port=null,c.path=[],c.query=null,c.fragment=null,c.cannotBeABaseURL=!1,e=RY(e,GY,"")),e=RY(e,KY,""),i=rY(e);u<=i.length;){switch(n=i[u],d){case tJ:if(!n||!_Y(kY,n)){if(t)return DY;d=iJ;continue}A+=OY(n),d=rJ;break;case rJ:if(n&&(_Y(BY,n)||"+"==n||"-"==n||"."==n))A+=OY(n);else{if(":"!=n){if(t)return DY;A="",d=iJ,u=0;continue}if(t&&(c.isSpecial()!=eY(zY,A)||"file"==A&&(c.includesCredentials()||null!==c.port)||"file"==c.scheme&&!c.host))return;if(c.scheme=A,t)return void(c.isSpecial()&&zY[c.scheme]==c.port&&(c.port=null));A="","file"==c.scheme?d=pJ:c.isSpecial()&&r&&r.scheme==c.scheme?d=nJ:c.isSpecial()?d=cJ:"/"==i[u+1]?(d=oJ,u++):(c.cannotBeABaseURL=!0,TY(c.path,""),d=mJ)}break;case iJ:if(!r||r.cannotBeABaseURL&&"#"!=n)return DY;if(r.cannotBeABaseURL&&"#"==n){c.scheme=r.scheme,c.path=iY(r.path),c.query=r.query,c.fragment="",c.cannotBeABaseURL=!0,d=CJ;break}d="file"==r.scheme?pJ:sJ;continue;case nJ:if("/"!=n||"/"!=i[u+1]){d=sJ;continue}d=dJ,u++;break;case oJ:if("/"==n){d=uJ;break}d=IJ;continue;case sJ:if(c.scheme=r.scheme,n==GW)c.username=r.username,c.password=r.password,c.host=r.host,c.port=r.port,c.path=iY(r.path),c.query=r.query;else if("/"==n||"\\"==n&&c.isSpecial())d=aJ;else if("?"==n)c.username=r.username,c.password=r.password,c.host=r.host,c.port=r.port,c.path=iY(r.path),c.query="",d=_J;else{if("#"!=n){c.username=r.username,c.password=r.password,c.host=r.host,c.port=r.port,c.path=iY(r.path),c.path.length--,d=IJ;continue}c.username=r.username,c.password=r.password,c.host=r.host,c.port=r.port,c.path=iY(r.path),c.query=r.query,c.fragment="",d=CJ}break;case aJ:if(!c.isSpecial()||"/"!=n&&"\\"!=n){if("/"!=n){c.username=r.username,c.password=r.password,c.host=r.host,c.port=r.port,d=IJ;continue}d=uJ}else d=dJ;break;case cJ:if(d=dJ,"/"!=n||"/"!=mY(A,u+1))continue;u++;break;case dJ:if("/"!=n&&"\\"!=n){d=uJ;continue}break;case uJ:if("@"==n){h&&(A="%40"+A),h=!0,o=rY(A);for(var g=0;g<o.length;g++){var E=o[g];if(":"!=E||p){var f=XY(E,qY);p?c.password+=f:c.username+=f}else p=!0}A=""}else if(n==GW||"/"==n||"?"==n||"#"==n||"\\"==n&&c.isSpecial()){if(h&&""==A)return"Invalid authority";u-=rY(A).length+1,A="",d=AJ}else A+=n;break;case AJ:case hJ:if(t&&"file"==c.scheme){d=EJ;continue}if(":"!=n||l){if(n==GW||"/"==n||"?"==n||"#"==n||"\\"==n&&c.isSpecial()){if(c.isSpecial()&&""==A)return PY;if(t&&""==A&&(c.includesCredentials()||null!==c.port))return;if(s=c.parseHost(A))return s;if(A="",d=fJ,t)return;continue}"["==n?l=!0:"]"==n&&(l=!1),A+=n}else{if(""==A)return PY;if(s=c.parseHost(A))return s;if(A="",d=lJ,t==hJ)return}break;case lJ:if(!_Y(MY,n)){if(n==GW||"/"==n||"?"==n||"#"==n||"\\"==n&&c.isSpecial()||t){if(""!=A){var I=EY(A,10);if(I>65535)return LY;c.port=c.isSpecial()&&I===zY[c.scheme]?null:I,A=""}if(t)return;d=fJ;continue}return LY}A+=n;break;case pJ:if(c.scheme="file","/"==n||"\\"==n)d=gJ;else{if(!r||"file"!=r.scheme){d=IJ;continue}if(n==GW)c.host=r.host,c.path=iY(r.path),c.query=r.query;else if("?"==n)c.host=r.host,c.path=iY(r.path),c.query="",d=_J;else{if("#"!=n){$Y(CY(iY(i,u),""))||(c.host=r.host,c.path=iY(r.path),c.shortenPath()),d=IJ;continue}c.host=r.host,c.path=iY(r.path),c.query=r.query,c.fragment="",d=CJ}}break;case gJ:if("/"==n||"\\"==n){d=EJ;break}r&&"file"==r.scheme&&!$Y(CY(iY(i,u),""))&&(ZY(r.path[0],!0)?TY(c.path,r.path[0]):c.host=r.host),d=IJ;continue;case EJ:if(n==GW||"/"==n||"\\"==n||"?"==n||"#"==n){if(!t&&ZY(A))d=IJ;else if(""==A){if(c.host="",t)return;d=fJ}else{if(s=c.parseHost(A))return s;if("localhost"==c.host&&(c.host=""),t)return;A="",d=fJ}continue}A+=n;break;case fJ:if(c.isSpecial()){if(d=IJ,"/"!=n&&"\\"!=n)continue}else if(t||"?"!=n)if(t||"#"!=n){if(n!=GW&&(d=IJ,"/"!=n))continue}else c.fragment="",d=CJ;else c.query="",d=_J;break;case IJ:if(n==GW||"/"==n||"\\"==n&&c.isSpecial()||!t&&("?"==n||"#"==n)){if(".."===(a=OY(a=A))||"%2e."===a||".%2e"===a||"%2e%2e"===a?(c.shortenPath(),"/"==n||"\\"==n&&c.isSpecial()||TY(c.path,"")):eJ(A)?"/"==n||"\\"==n&&c.isSpecial()||TY(c.path,""):("file"==c.scheme&&!c.path.length&&ZY(A)&&(c.host&&(c.host=""),A=mY(A,0)+":"),TY(c.path,A)),A="","file"==c.scheme&&(n==GW||"?"==n||"#"==n))for(;c.path.length>1&&""===c.path[0];)yY(c.path);"?"==n?(c.query="",d=_J):"#"==n&&(c.fragment="",d=CJ)}else A+=XY(n,JY);break;case mJ:"?"==n?(c.query="",d=_J):"#"==n?(c.fragment="",d=CJ):n!=GW&&(c.path[0]+=XY(n,WY));break;case _J:t||"#"!=n?n!=GW&&("'"==n&&c.isSpecial()?c.query+="%27":c.query+="#"==n?"%23":XY(n,WY)):(c.fragment="",d=CJ);break;case CJ:n!=GW&&(c.fragment+=XY(n,YY))}u++}},parseHost:function(e){var t,r,i;if("["==mY(e,0)){if("]"!=mY(e,e.length-1))return PY;if(!(t=function(e){var t,r,i,n,o,s,a,c=[0,0,0,0,0,0,0,0],d=0,u=null,A=0,h=function(){return mY(e,A)};if(":"==h()){if(":"!=mY(e,1))return;A+=2,u=++d}for(;h();){if(8==d)return;if(":"!=h()){for(t=r=0;r<4&&_Y(FY,h());)t=16*t+EY(h(),16),A++,r++;if("."==h()){if(0==r)return;if(A-=r,d>6)return;for(i=0;h();){if(n=null,i>0){if(!("."==h()&&i<4))return;A++}if(!_Y(MY,h()))return;for(;_Y(MY,h());){if(o=EY(h(),10),null===n)n=o;else{if(0==n)return;n=10*n+o}if(n>255)return;A++}c[d]=256*c[d]+n,2!=++i&&4!=i||d++}if(4!=i)return;break}if(":"==h()){if(A++,!h())return}else if(h())return;c[d++]=t}else{if(null!==u)return;A++,u=++d}}if(null!==u)for(s=d-u,d=7;0!=d&&s>0;)a=c[d],c[d--]=c[u+s-1],c[u+--s]=a;else if(8!=d)return;return c}(bY(e,1,-1))))return PY;this.host=t}else if(this.isSpecial()){if(e=oY(e),_Y(VY,e))return PY;if(null===(t=function(e){var t,r,i,n,o,s,a,c=wY(e,".");if(c.length&&""==c[c.length-1]&&c.length--,(t=c.length)>4)return e;for(r=[],i=0;i<t;i++){if(""==(n=c[i]))return e;if(o=10,n.length>1&&"0"==mY(n,0)&&(o=_Y(UY,n)?16:8,n=bY(n,8==o?1:2)),""===n)s=0;else{if(!_Y(10==o?QY:8==o?xY:FY,n))return e;s=EY(n,o)}TY(r,s)}for(i=0;i<t;i++)if(s=r[i],i==t-1){if(s>=IY(256,5-t))return null}else if(s>255)return null;for(a=vY(r),i=0;i<r.length;i++)a+=r[i]*IY(256,3-i);return a}(e)))return PY;this.host=t}else{if(_Y(jY,e))return PY;for(t="",r=rY(e),i=0;i<r.length;i++)t+=XY(r[i],WY);this.host=t}},cannotHaveUsernamePasswordPort:function(){return!this.host||this.cannotBeABaseURL||"file"==this.scheme},includesCredentials:function(){return""!=this.username||""!=this.password},isSpecial:function(){return eY(zY,this.scheme)},shortenPath:function(){var e=this.path,t=e.length;!t||"file"==this.scheme&&1==t&&ZY(e[0],!0)||e.length--},serialize:function(){var e=this,t=e.scheme,r=e.username,i=e.password,n=e.host,o=e.port,s=e.path,a=e.query,c=e.fragment,d=t+":";return null!==n?(d+="//",e.includesCredentials()&&(d+=r+(i?":"+i:"")+"@"),d+=HY(n),null!==o&&(d+=":"+o)):"file"==t&&(d+="//"),d+=e.cannotBeABaseURL?s[0]:s.length?"/"+CY(s,"/"):"",null!==a&&(d+="?"+a),null!==c&&(d+="#"+c),d},setHref:function(e){var t=this.parse(e);if(t)throw gY(t);this.searchParams.update()},getOrigin:function(){var e=this.scheme,t=this.port;if("blob"==e)try{return new vJ(e.path[0]).origin}catch(e){return"null"}return"file"!=e&&this.isSpecial()?e+"://"+HY(this.host)+(null!==t?":"+t:""):"null"},getProtocol:function(){return this.scheme+":"},setProtocol:function(e){this.parse(sY(e)+":",tJ)},getUsername:function(){return this.username},setUsername:function(e){var t=rY(sY(e));if(!this.cannotHaveUsernamePasswordPort()){this.username="";for(var r=0;r<t.length;r++)this.username+=XY(t[r],qY)}},getPassword:function(){return this.password},setPassword:function(e){var t=rY(sY(e));if(!this.cannotHaveUsernamePasswordPort()){this.password="";for(var r=0;r<t.length;r++)this.password+=XY(t[r],qY)}},getHost:function(){var e=this.host,t=this.port;return null===e?"":null===t?HY(e):HY(e)+":"+t},setHost:function(e){this.cannotBeABaseURL||this.parse(e,AJ)},getHostname:function(){var e=this.host;return null===e?"":HY(e)},setHostname:function(e){this.cannotBeABaseURL||this.parse(e,hJ)},getPort:function(){var e=this.port;return null===e?"":sY(e)},setPort:function(e){this.cannotHaveUsernamePasswordPort()||(""==(e=sY(e))?this.port=null:this.parse(e,lJ))},getPathname:function(){var e=this.path;return this.cannotBeABaseURL?e[0]:e.length?"/"+CY(e,"/"):""},setPathname:function(e){this.cannotBeABaseURL||(this.path=[],this.parse(e,fJ))},getSearch:function(){var e=this.query;return e?"?"+e:""},setSearch:function(e){""==(e=sY(e))?this.query=null:("?"==mY(e,0)&&(e=bY(e,1)),this.query="",this.parse(e,_J)),this.searchParams.update()},getSearchParams:function(){return this.searchParams.facade},getHash:function(){var e=this.fragment;return e?"#"+e:""},setHash:function(e){""!=(e=sY(e))?("#"==mY(e,0)&&(e=bY(e,1)),this.fragment="",this.parse(e,CJ)):this.fragment=null},update:function(){this.query=this.searchParams.serialize()||null}};var vJ=function(e){var t=$W(this,TJ),r=arguments.length>1?arguments[1]:void 0,i=uY(t,new SJ(e,!1,r));WW||(t.href=i.serialize(),t.origin=i.getOrigin(),t.protocol=i.getProtocol(),t.username=i.getUsername(),t.password=i.getPassword(),t.host=i.getHost(),t.hostname=i.getHostname(),t.port=i.getPort(),t.pathname=i.getPathname(),t.search=i.getSearch(),t.searchParams=i.getSearchParams(),t.hash=i.getHash())},TJ=vJ.prototype,RJ=function(e,t){return{get:function(){return AY(this)[e]()},set:t&&function(e){return AY(this)[t](e)},configurable:!0,enumerable:!0}};if(WW&&zW(TJ,{href:RJ("serialize","setHref"),origin:RJ("getOrigin"),protocol:RJ("getProtocol","setProtocol"),username:RJ("getUsername","setUsername"),password:RJ("getPassword","setPassword"),host:RJ("getHost","setHost"),hostname:RJ("getHostname","setHostname"),port:RJ("getPort","setPort"),pathname:RJ("getPathname","setPathname"),search:RJ("getSearch","setSearch"),searchParams:RJ("getSearchParams"),hash:RJ("getHash","setHash")}),ZW(TJ,"toJSON",(function(){return AY(this).serialize()}),{enumerable:!0}),ZW(TJ,"toString",(function(){return AY(this).serialize()}),{enumerable:!0}),pY){var yJ=pY.createObjectURL,wJ=pY.revokeObjectURL;yJ&&ZW(vJ,"createObjectURL",qW(yJ,pY)),wJ&&ZW(vJ,"revokeObjectURL",qW(wJ,pY))}aY(vJ,"URL"),HW({global:!0,forced:!YW,sham:!WW},{URL:vJ});var bJ=_d.URL;const OJ={[nk.ACCESS_POINT]:{[ak.NO_FLAG_SET]:{desc:"flag is zero",retry:!1},[ak.FLAG_SET_BUT_EMPTY]:{desc:"flag is empty",retry:!1},[ak.INVALID_FALG_SET]:{desc:"invalid flag",retry:!1},[ak.FLAG_SET_BUT_NO_RE]:{desc:"flag set unilbs but no request",retry:!1},[ak.INVALID_SERVICE_ID]:{desc:"invalid service id",retry:!1},[ak.NO_SERVICE_AVAILABLE]:{desc:"no service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_P2P]:{desc:"no unilbs p2p service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_VOET]:{desc:"no unilbs voice service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_WEBRTC]:{desc:"no unilbs webrtc service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_CDS]:{desc:"no cds service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_CDN]:{desc:"no cdn dispatcher service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_TDS]:{desc:"no tds service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_REPORT]:{desc:"no unilbs report service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_APP_CENTER]:{desc:"no app center service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_ENV0]:{desc:"no unilbs sig env0 service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_VOET]:{desc:"no unilbs voet service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_STRING_UID]:{desc:"no string uid service available",retry:!0},[ak.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS]:{desc:"no webrtc unilbs service available",retry:!0}},[nk.UNILBS]:{[sk.INVALID_VENDOR_KEY]:{desc:"invalid vendor key, can not find appid",retry:!1},[sk.INVALID_CHANNEL_NAME]:{desc:"invalid channel name",retry:!1},[sk.INTERNAL_ERROR]:{desc:"unilbs internal error",retry:!1},[sk.NO_AUTHORIZED]:{desc:"invalid token, authorized failed",retry:!1},[sk.DYNAMIC_KEY_TIMEOUT]:{desc:"dynamic key or token timeout",retry:!1},[sk.NO_ACTIVE_STATUS]:{desc:"no active status",retry:!1},[sk.DYNAMIC_KEY_EXPIRED]:{desc:"dynamic key expired",retry:!1},[sk.STATIC_USE_DYNAMIC_KEY]:{desc:"static use dynamic key",retry:!1},[sk.DYNAMIC_USE_STATIC_KEY]:{desc:"dynamic use static key",retry:!1},[sk.USER_OVERLOAD]:{desc:"amount of users over load",retry:!1},[sk.FORBIDDEN_REGION]:{desc:"the request is forbidden in this area",retry:!1},[sk.CANNOT_MEET_AREA_DEMAND]:{desc:"unable to allocate services in this area",retry:!1}},[nk.STRING_UID_ALLOCATOR]:{[ok.IIIEGAL_APPID]:{desc:"invalid appid",retry:!1},[ok.IIIEGAL_UID]:{desc:"invalid string uid",retry:!1},[ok.INTERNAL_ERROR]:{desc:"string uid allocator internal error",retry:!0}}};function NJ(e){const t=OJ[Math.floor(e/1e4)];if(!t)return{desc:"unkonw error",retry:!1};const r=t[e%1e4];if(!r){if(Math.floor(e/1e4)===nk.ACCESS_POINT){const t=e%1e4;if("1"===t.toString()[0])return{desc:e.toString(),retry:!1};if("2"===t.toString()[0])return{desc:e.toString(),retry:!0}}return{desc:"unkonw error",retry:!1}}return r}const DJ={[ck.K_TIMESTAMP_EXPIRED]:{desc:"K_TIMESTAMP_EXPIRED",action:"failed"},[ck.K_CHANNEL_PERMISSION_INVALID]:{desc:"K_CHANNEL_PERMISSION_INVALID",action:"failed"},[ck.K_CERTIFICATE_INVALID]:{desc:"K_CERTIFICATE_INVALID",action:"failed"},[ck.K_CHANNEL_NAME_EMPTY]:{desc:"K_CHANNEL_NAME_EMPTY",action:"failed"},[ck.K_CHANNEL_NOT_FOUND]:{desc:"K_CHANNEL_NOT_FOUND",action:"failed"},[ck.K_TICKET_INVALID]:{desc:"K_TICKET_INVALID",action:"failed"},[ck.K_CHANNEL_CONFLICTED]:{desc:"K_CHANNEL_CONFLICTED",action:"failed"},[ck.K_SERVICE_NOT_READY]:{desc:"K_SERVICE_NOT_READY",action:"tryNext"},[ck.K_SERVICE_TOO_HEAVY]:{desc:"K_SERVICE_TOO_HEAVY",action:"tryNext"},[ck.K_UID_BANNED]:{desc:"K_UID_BANNED",action:"failed"},[ck.K_IP_BANNED]:{desc:"K_IP_BANNED",action:"failed"},[ck.ERR_INVALID_VENDOR_KEY]:{desc:"ERR_INVALID_VENDOR_KEY",action:"failed"},[ck.ERR_INVALID_CHANNEL_NAME]:{desc:"ERR_INVALID_CHANNEL_NAME",action:"failed"},[ck.WARN_NO_AVAILABLE_CHANNEL]:{desc:"WARN_NO_AVAILABLE_CHANNEL",action:"failed"},[ck.WARN_LOOKUP_CHANNEL_TIMEOUT]:{desc:"WARN_LOOKUP_CHANNEL_TIMEOUT",action:"tryNext"},[ck.WARN_LOOKUP_CHANNEL_REJECTED]:{desc:"WARN_LOOKUP_CHANNEL_REJECTED",action:"failed"},[ck.WARN_OPEN_CHANNEL_TIMEOUT]:{desc:"WARN_OPEN_CHANNEL_TIMEOUT",action:"tryNext"},[ck.WARN_OPEN_CHANNEL_REJECTED]:{desc:"WARN_OPEN_CHANNEL_REJECTED",action:"failed"},[ck.WARN_REQUEST_DEFERRED]:{desc:"WARN_REQUEST_DEFERRED",action:"failed"},[ck.ERR_DYNAMIC_KEY_TIMEOUT]:{desc:"ERR_DYNAMIC_KEY_TIMEOUT",action:"failed"},[ck.ERR_NO_AUTHORIZED]:{desc:"ERR_NO_AUTHORIZED",action:"failed"},[ck.ERR_VOM_SERVICE_UNAVAILABLE]:{desc:"ERR_VOM_SERVICE_UNAVAILABLE",action:"tryNext"},[ck.ERR_NO_CHANNEL_AVAILABLE_CODE]:{desc:"ERR_NO_CHANNEL_AVAILABLE_CODE",action:"failed"},[ck.ERR_MASTER_VOCS_UNAVAILABLE]:{desc:"ERR_MASTER_VOCS_UNAVAILABLE",action:"tryNext"},[ck.ERR_INTERNAL_ERROR]:{desc:"ERR_INTERNAL_ERROR",action:"tryNext"},[ck.ERR_NO_ACTIVE_STATUS]:{desc:"ERR_NO_ACTIVE_STATUS",action:"failed"},[ck.ERR_INVALID_UID]:{desc:"ERR_INVALID_UID",action:"failed"},[ck.ERR_DYNAMIC_KEY_EXPIRED]:{desc:"ERR_DYNAMIC_KEY_EXPIRED",action:"failed"},[ck.ERR_STATIC_USE_DYANMIC_KE]:{desc:"ERR_STATIC_USE_DYANMIC_KE",action:"failed"},[ck.ERR_DYNAMIC_USE_STATIC_KE]:{desc:"ERR_DYNAMIC_USE_STATIC_KE",action:"failed"},[ck.ERR_NO_VOCS_AVAILABLE]:{desc:"ERR_NO_VOCS_AVAILABLE",action:"tryNext"},[ck.ERR_NO_VOS_AVAILABLE]:{desc:"ERR_NO_VOS_AVAILABLE",action:"tryNext"},[ck.ERR_JOIN_CHANNEL_TIMEOUT]:{desc:"ERR_JOIN_CHANNEL_TIMEOUT",action:"tryNext"},[ck.ERR_JOIN_BY_MULTI_IP]:{desc:"ERR_JOIN_BY_MULTI_IP",action:"recover"},[ck.ERR_NOT_JOINED]:{desc:"ERR_NOT_JOINED",action:"failed"},[ck.ERR_REPEAT_JOIN_REQUEST]:{desc:"ERR_REPEAT_JOIN_REQUEST",action:"quit"},[ck.ERR_REPEAT_JOIN_CHANNEL]:{desc:"ERR_REPEAT_JOIN_CHANNEL",action:"quit"},[ck.ERR_INVALID_VENDOR_KEY]:{desc:"ERR_INVALID_VENDOR_KEY",action:"failed"},[ck.ERR_INVALID_CHANNEL_NAME]:{desc:"ERR_INVALID_CHANNEL_NAME",action:"failed"},[ck.ERR_INVALID_STRINGUID]:{desc:"ERR_INVALID_STRINGUID",action:"failed"},[ck.ERR_TOO_MANY_USERS]:{desc:"ERR_TOO_MANY_USERS",action:"tryNext"},[ck.ERR_SET_CLIENT_ROLE_TIMEOUT]:{desc:"ERR_SET_CLIENT_ROLE_TIMEOUT",action:"failed"},[ck.ERR_SET_CLIENT_ROLE_NO_PERMISSION]:{desc:"ERR_SET_CLIENT_ROLE_TIMEOUT",action:"failed"},[ck.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE]:{desc:"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE",action:"success"},[ck.ERR_PUBLISH_REQUEST_INVALID]:{desc:"ERR_PUBLISH_REQUEST_INVALID",action:"failed"},[ck.ERR_SUBSCRIBE_REQUEST_INVALID]:{desc:"ERR_SUBSCRIBE_REQUEST_INVALID",action:"failed"},[ck.ERR_NOT_SUPPORTED_MESSAGE]:{desc:"ERR_NOT_SUPPORTED_MESSAGE",action:"failed"},[ck.ERR_ILLEAGAL_PLUGIN]:{desc:"ERR_ILLEAGAL_PLUGIN",action:"failed"},[ck.ILLEGAL_CLIENT_ROLE_LEVEL]:{desc:"ILLEGAL_CLIENT_ROLE_LEVEL",action:"failed"},[ck.ERR_REJOIN_TOKEN_INVALID]:{desc:"ERR_REJOIN_TOKEN_INVALID",action:"failed"},[ck.ERR_REJOIN_USER_NOT_JOINED]:{desc:"ERR_REJOIN_NOT_JOINED",action:"failed"},[ck.ERR_INVALID_OPTIONAL_INFO]:{desc:"ERR_INVALID_OPTIONAL_INFO",action:"quit"},[ck.ERR_TEST_RECOVER]:{desc:"ERR_TEST_RECOVER",action:"recover"},[ck.ERR_TEST_TRYNEXT]:{desc:"ERR_TEST_TRYNEXT",action:"recover"},[ck.ERR_TEST_RETRY]:{desc:"ERR_TEST_RETRY",action:"recover"},[ck.ILLEGAL_AES_PASSWORD]:{desc:"ERR_TEST_RETRY",action:"failed"},[ck.ERR_TOO_MANY_BROADCASTERS]:{desc:"ERR_TOO_MANY_BROADCASTERS",action:"failed"},[ck.ERR_TOO_MANY_SUBSCRIBERS]:{desc:"ERR_TOO_MANY_SUBSCRIBERS",action:"failed"}};function PJ(e){const t=DJ[e];return t||{desc:"UNKNOW_ERROR_".concat(e),action:"failed"}}var LJ={exports:{}};!function(e,t){e.exports=function(){var e={d:function(t,r){for(var i in r)e.o(r,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:r[i]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{DataViewIndexOutOfBoundsError:function(){return F},DecodeError:function(){return I},Decoder:function(){return G},EXT_TIMESTAMP:function(){return m},Encoder:function(){return O},ExtData:function(){return E},ExtensionCodec:function(){return y},decode:function(){return H},decodeArrayStream:function(){return $},decodeAsync:function(){return Z},decodeMulti:function(){return W},decodeMultiStream:function(){return ee},decodeStream:function(){return te},decodeTimestampExtension:function(){return T},decodeTimestampToTimeSpec:function(){return v},encode:function(){return D},encodeDateToTimeSpec:function(){return C},encodeTimeSpecToTimestamp:function(){return _},encodeTimestampExtension:function(){return S}});var r=4294967295;function i(e,t,r){var i=Math.floor(r/4294967296),n=r;e.setUint32(t,i),e.setUint32(t+4,n)}function n(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var o=function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var i,n,o=r.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(i=o.next()).done;)s.push(i.value)}catch(e){n={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return s},s=function(e,t){for(var r=0,i=t.length,n=e.length;r<i;r++,n++)e[n]=t[r];return e},a="undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function c(e){for(var t=e.length,r=0,i=0;i<t;){var n=e.charCodeAt(i++);if(0!=(4294967168&n))if(0==(4294965248&n))r+=2;else{if(n>=55296&&n<=56319&&i<t){var o=e.charCodeAt(i);56320==(64512&o)&&(++i,n=((1023&n)<<10)+(1023&o)+65536)}r+=0==(4294901760&n)?3:4}else r++}return r}var d=a?new TextEncoder:void 0,u=a?"undefined"!=typeof process?200:0:r,A=(null==d?void 0:d.encodeInto)?function(e,t,r){d.encodeInto(e,t.subarray(r))}:function(e,t,r){t.set(d.encode(e),r)};function h(e,t,r){for(var i=t,n=i+r,a=[],c="";i<n;){var d=e[i++];if(0==(128&d))a.push(d);else if(192==(224&d)){var u=63&e[i++];a.push((31&d)<<6|u)}else if(224==(240&d)){u=63&e[i++];var A=63&e[i++];a.push((31&d)<<12|u<<6|A)}else if(240==(248&d)){var h=(7&d)<<18|(u=63&e[i++])<<12|(A=63&e[i++])<<6|63&e[i++];h>65535&&(h-=65536,a.push(h>>>10&1023|55296),h=56320|1023&h),a.push(h)}else a.push(d);a.length>=4096&&(c+=String.fromCharCode.apply(String,s([],o(a))),a.length=0)}return a.length>0&&(c+=String.fromCharCode.apply(String,s([],o(a)))),c}var l,p=a?new TextDecoder:null,g=a?"undefined"!=typeof process?200:0:r,E=function(e,t){this.type=e,this.data=t},f=(l=function(e,t){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),I=function(e){function t(r){var i=e.call(this,r)||this,n=Object.create(t.prototype);return Object.setPrototypeOf(i,n),Object.defineProperty(i,"name",{configurable:!0,enumerable:!1,value:t.name}),i}return f(t,e),t}(Error),m=-1;function _(e){var t,r=e.sec,n=e.nsec;if(r>=0&&n>=0&&r<=17179869183){if(0===n&&r<=4294967295){var o=new Uint8Array(4);return(t=new DataView(o.buffer)).setUint32(0,r),o}var s=r/4294967296,a=4294967295&r;return o=new Uint8Array(8),(t=new DataView(o.buffer)).setUint32(0,n<<2|3&s),t.setUint32(4,a),o}return o=new Uint8Array(12),(t=new DataView(o.buffer)).setUint32(0,n),i(t,4,r),o}function C(e){var t=e.getTime(),r=Math.floor(t/1e3),i=1e6*(t-1e3*r),n=Math.floor(i/1e9);return{sec:r+n,nsec:i-1e9*n}}function S(e){return e instanceof Date?_(C(e)):null}function v(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var r=t.getUint32(0);return{sec:4294967296*(3&r)+t.getUint32(4),nsec:r>>>2};case 12:return{sec:n(t,4),nsec:t.getUint32(0)};default:throw new I("Unrecognized data size for timestamp (expected 4, 8, or 12): "+e.length)}}function T(e){var t=v(e);return new Date(1e3*t.sec+t.nsec/1e6)}var R={type:m,encode:S,decode:T},y=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(R)}return e.prototype.register=function(e){var t=e.type,r=e.encode,i=e.decode;if(t>=0)this.encoders[t]=r,this.decoders[t]=i;else{var n=1+t;this.builtInEncoders[n]=r,this.builtInDecoders[n]=i}},e.prototype.tryToEncode=function(e,t){for(var r=0;r<this.builtInEncoders.length;r++)if(null!=(i=this.builtInEncoders[r])&&null!=(n=i(e,t)))return new E(-1-r,n);for(r=0;r<this.encoders.length;r++){var i,n;if(null!=(i=this.encoders[r])&&null!=(n=i(e,t)))return new E(r,n)}return e instanceof E?e:null},e.prototype.decode=function(e,t,r){var i=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return i?i(e,t,r):new E(t,e)},e.defaultCodec=new e,e}();function w(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var b=function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],i=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},O=function(){function e(e,t,r,i,n,o,s,a){void 0===e&&(e=y.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=100),void 0===i&&(i=2048),void 0===n&&(n=!1),void 0===o&&(o=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),this.extensionCodec=e,this.context=t,this.maxDepth=r,this.initialBufferSize=i,this.sortKeys=n,this.forceFloat32=o,this.ignoreUndefined=s,this.forceIntegerToFloat=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.getUint8Array()},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),r=new Uint8Array(t),i=new DataView(t);r.set(this.bytes),this.view=i,this.bytes=r},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){if(e.length>u){var t=c(e);this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),A(e,this.bytes,this.pos),this.pos+=t}else t=c(e),this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),function(e,t,r){for(var i=e.length,n=r,o=0;o<i;){var s=e.charCodeAt(o++);if(0!=(4294967168&s)){if(0==(4294965248&s))t[n++]=s>>6&31|192;else{if(s>=55296&&s<=56319&&o<i){var a=e.charCodeAt(o);56320==(64512&a)&&(++o,s=((1023&s)<<10)+(1023&a)+65536)}0==(4294901760&s)?(t[n++]=s>>12&15|224,t[n++]=s>>6&63|128):(t[n++]=s>>18&7|240,t[n++]=s>>12&63|128,t[n++]=s>>6&63|128)}t[n++]=63&s|128}else t[n++]=s}}(e,this.bytes,this.pos),this.pos+=t},e.prototype.encodeObject=function(e,t){var r=this.extensionCodec.tryToEncode(e,this.context);if(null!=r)this.encodeExtension(r);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var r=w(e);this.writeU8a(r)},e.prototype.encodeArray=function(e,t){var r,i,n=e.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error("Too large array: "+n);this.writeU8(221),this.writeU32(n)}try{for(var o=b(e),s=o.next();!s.done;s=o.next()){var a=s.value;this.doEncode(a,t+1)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}},e.prototype.countWithoutUndefined=function(e,t){var r,i,n=0;try{for(var o=b(t),s=o.next();!s.done;s=o.next())void 0!==e[s.value]&&n++}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=o.return)&&i.call(o)}finally{if(r)throw r.error}}return n},e.prototype.encodeMap=function(e,t){var r,i,n=Object.keys(e);this.sortKeys&&n.sort();var o=this.ignoreUndefined?this.countWithoutUndefined(e,n):n.length;if(o<16)this.writeU8(128+o);else if(o<65536)this.writeU8(222),this.writeU16(o);else{if(!(o<4294967296))throw new Error("Too large map object: "+o);this.writeU8(223),this.writeU32(o)}try{for(var s=b(n),a=s.next();!a.done;a=s.next()){var c=a.value,d=e[c];this.ignoreUndefined&&void 0===d||(this.encodeString(c),this.doEncode(d,t+1))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(i=s.return)&&i.call(s)}finally{if(r)throw r.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,r){var i=r/4294967296,n=r;e.setUint32(t,i),e.setUint32(t+4,n)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),i(this.view,this.pos,e),this.pos+=8},e}(),N={};function D(e,t){return void 0===t&&(t=N),new O(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encode(e)}function P(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var L=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var r=0;r<this.maxKeyLength;r++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.find=function(e,t,r){var i,n,o=this.caches[r-1];try{e:for(var s=function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],i=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(o),a=s.next();!a.done;a=s.next()){for(var c=a.value,d=c.bytes,u=0;u<r;u++)if(d[u]!==e[t+u])continue e;return c.str}}catch(e){i={error:e}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(i)throw i.error}}return null},e.prototype.store=function(e,t){var r=this.caches[e.length-1],i={bytes:e,str:t};r.length>=this.maxLengthPerKey?r[Math.random()*r.length|0]=i:r.push(i)},e.prototype.decode=function(e,t,r){var i=this.find(e,t,r);if(null!=i)return this.hit++,i;this.miss++;var n=h(e,t,r),o=Uint8Array.prototype.slice.call(e,t,t+r);return this.store(o,n),n},e}(),k=function(e,t){var r,i,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,i&&(n=2&o[0]?i.return:o[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,o[1])).done)return n;switch(i=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,i=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((n=(n=s.trys).length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],i=0}finally{r=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},B=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(r){t[r]=e[r]&&function(t){return new Promise((function(i,n){!function(e,t,r,i){Promise.resolve(i).then((function(t){e({value:t,done:r})}),t)}(i,n,(t=e[r](t)).done,t.value)}))}}},M=function(e){return this instanceof M?(this.v=e,this):new M(e)},U=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,n=r.apply(e,t||[]),o=[];return i={},s("next"),s("throw"),s("return"),i[Symbol.asyncIterator]=function(){return this},i;function s(e){n[e]&&(i[e]=function(t){return new Promise((function(r,i){o.push([e,t,r,i])>1||a(e,t)}))})}function a(e,t){try{(r=n[e](t)).value instanceof M?Promise.resolve(r.value.v).then(c,d):u(o[0][2],r)}catch(e){u(o[0][3],e)}var r}function c(e){a("next",e)}function d(e){a("throw",e)}function u(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}},x=new DataView(new ArrayBuffer(0)),Q=new Uint8Array(x.buffer),F=function(){try{x.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),V=new F("Insufficient data"),j=new L,G=function(){function e(e,t,i,n,o,s,a,c){void 0===e&&(e=y.defaultCodec),void 0===t&&(t=void 0),void 0===i&&(i=r),void 0===n&&(n=r),void 0===o&&(o=r),void 0===s&&(s=r),void 0===a&&(a=r),void 0===c&&(c=j),this.extensionCodec=e,this.context=t,this.maxStrLength=i,this.maxBinLength=n,this.maxArrayLength=o,this.maxMapLength=s,this.maxExtLength=a,this.keyDecoder=c,this.totalPos=0,this.pos=0,this.view=x,this.bytes=Q,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1,this.stack.length=0},e.prototype.setBuffer=function(e){this.bytes=w(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=w(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining(1)){var t=this.bytes.subarray(this.pos),r=w(e),i=new Uint8Array(t.length+r.length);i.set(t),i.set(r,t.length),this.setBuffer(i)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},e.prototype.createExtraByteError=function(e){var t=this.view,r=this.pos;return new RangeError("Extra "+(t.byteLength-r)+" of "+t.byteLength+" byte(s) found at buffer["+e+"]")},e.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},e.prototype.decodeMulti=function(e){return k(this,(function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}}))},e.prototype.decodeAsync=function(e){var t,r,i,n,o,s,a,c;return o=this,s=void 0,c=function(){var o,s,a,c,d,u,A,h;return k(this,(function(l){switch(l.label){case 0:o=!1,l.label=1;case 1:l.trys.push([1,6,7,12]),t=B(e),l.label=2;case 2:return[4,t.next()];case 3:if((r=l.sent()).done)return[3,5];if(a=r.value,o)throw this.createExtraByteError(this.totalPos);this.appendBuffer(a);try{s=this.doDecodeSync(),o=!0}catch(e){if(!(e instanceof F))throw e}this.totalPos+=this.pos,l.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=l.sent(),i={error:c},[3,12];case 7:return l.trys.push([7,,10,11]),r&&!r.done&&(n=t.return)?[4,n.call(t)]:[3,9];case 8:l.sent(),l.label=9;case 9:return[3,11];case 10:if(i)throw i.error;return[7];case 11:return[7];case 12:if(o){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,s]}throw u=(d=this).headByte,A=d.pos,h=d.totalPos,new RangeError("Insufficient data in parsing "+P(u)+" at "+h+" ("+A+" in the current buffer)")}}))},new((a=void 0)||(a=Promise))((function(e,t){function r(e){try{n(c.next(e))}catch(e){t(e)}}function i(e){try{n(c.throw(e))}catch(e){t(e)}}function n(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(r,i)}n((c=c.apply(o,s||[])).next())}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return U(this,arguments,(function(){var r,i,n,o,s,a,c,d,u;return k(this,(function(A){switch(A.label){case 0:r=t,i=-1,A.label=1;case 1:A.trys.push([1,13,14,19]),n=B(e),A.label=2;case 2:return[4,M(n.next())];case 3:if((o=A.sent()).done)return[3,12];if(s=o.value,t&&0===i)throw this.createExtraByteError(this.totalPos);this.appendBuffer(s),r&&(i=this.readArraySize(),r=!1,this.complete()),A.label=4;case 4:A.trys.push([4,9,,10]),A.label=5;case 5:return[4,M(this.doDecodeSync())];case 6:return[4,A.sent()];case 7:return A.sent(),0==--i?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((a=A.sent())instanceof F))throw a;return[3,10];case 10:this.totalPos+=this.pos,A.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return c=A.sent(),d={error:c},[3,19];case 14:return A.trys.push([14,,17,18]),o&&!o.done&&(u=n.return)?[4,M(u.call(n))]:[3,16];case 15:A.sent(),A.label=16;case 16:return[3,18];case 17:if(d)throw d.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(i=e-128)){this.pushMapState(i),this.complete();continue e}t={}}else if(e<160){if(0!=(i=e-144)){this.pushArrayState(i),this.complete();continue e}t=[]}else{var r=e-160;t=this.decodeUtf8String(r,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)r=this.lookU8(),t=this.decodeUtf8String(r,1);else if(218===e)r=this.lookU16(),t=this.decodeUtf8String(r,2);else if(219===e)r=this.lookU32(),t=this.decodeUtf8String(r,4);else if(220===e){if(0!==(i=this.readU16())){this.pushArrayState(i),this.complete();continue e}t=[]}else if(221===e){if(0!==(i=this.readU32())){this.pushArrayState(i),this.complete();continue e}t=[]}else if(222===e){if(0!==(i=this.readU16())){this.pushMapState(i),this.complete();continue e}t={}}else if(223===e){if(0!==(i=this.readU32())){this.pushMapState(i),this.complete();continue e}t={}}else if(196===e){var i=this.lookU8();t=this.decodeBinary(i,1)}else if(197===e)i=this.lookU16(),t=this.decodeBinary(i,2);else if(198===e)i=this.lookU32(),t=this.decodeBinary(i,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)i=this.lookU8(),t=this.decodeExtension(i,1);else if(200===e)i=this.lookU16(),t=this.decodeExtension(i,2);else{if(201!==e)throw new I("Unrecognized type byte: "+P(e));i=this.lookU32(),t=this.decodeExtension(i,4)}this.complete();for(var n=this.stack;n.length>0;){var o=n[n.length-1];if(0===o.type){if(o.array[o.position]=t,o.position++,o.position!==o.size)continue e;n.pop(),t=o.array}else{if(1===o.type){if("string"!=(s=typeof t)&&"number"!==s)throw new I("The type of key must be string or number but "+typeof t);if("__proto__"===t)throw new I("The key __proto__ is not allowed");o.key=t,o.type=2;continue e}if(o.map[o.key]=t,o.readCount++,o.readCount!==o.size){o.key=null,o.type=1;continue e}n.pop(),t=o.map}}return t}var s},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new I("Unrecognized array type byte: "+P(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new I("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new I("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var r;if(e>this.maxStrLength)throw new I("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw V;var i,n=this.pos+t;return i=this.stateIsMapKey()&&(null===(r=this.keyDecoder)||void 0===r?void 0:r.canBeCached(e))?this.keyDecoder.decode(this.bytes,n,e):e>g?function(e,t,r){var i=e.subarray(t,t+r);return p.decode(i)}(this.bytes,n,e):h(this.bytes,n,e),this.pos+=t+e,i},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new I("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw V;var r=this.pos+t,i=this.bytes.subarray(r,r+e);return this.pos+=t+e,i},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new I("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var r=this.view.getInt8(this.pos+t),i=this.decodeBinary(e,t+1);return this.extensionCodec.decode(i,r,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,r=(e=this.view,t=this.pos,4294967296*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,r},e.prototype.readI64=function(){var e=n(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),K={};function H(e,t){return void 0===t&&(t=K),new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decode(e)}function W(e,t){return void 0===t&&(t=K),new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeMulti(e)}var Y=function(e,t){var r,i,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,i&&(n=2&o[0]?i.return:o[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,o[1])).done)return n;switch(i=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,i=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((n=(n=s.trys).length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],i=0}finally{r=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},J=function(e){return this instanceof J?(this.v=e,this):new J(e)},q=function(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,n=r.apply(e,t||[]),o=[];return i={},s("next"),s("throw"),s("return"),i[Symbol.asyncIterator]=function(){return this},i;function s(e){n[e]&&(i[e]=function(t){return new Promise((function(r,i){o.push([e,t,r,i])>1||a(e,t)}))})}function a(e,t){try{(r=n[e](t)).value instanceof J?Promise.resolve(r.value.v).then(c,d):u(o[0][2],r)}catch(e){u(o[0][3],e)}var r}function c(e){a("next",e)}function d(e){a("throw",e)}function u(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}};function X(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function z(e){return null!=e[Symbol.asyncIterator]?e:function(e){return q(this,arguments,(function(){var t,r,i,n;return Y(this,(function(o){switch(o.label){case 0:t=e.getReader(),o.label=1;case 1:o.trys.push([1,,9,10]),o.label=2;case 2:return[4,J(t.read())];case 3:return r=o.sent(),i=r.done,n=r.value,i?[4,J(void 0)]:[3,5];case 4:return[2,o.sent()];case 5:return X(n),[4,J(n)];case 6:return[4,o.sent()];case 7:return o.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function Z(e,t){return void 0===t&&(t=K),r=this,i=void 0,o=function(){var r;return function(e,t){var r,i,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,i&&(n=2&o[0]?i.return:o[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,o[1])).done)return n;switch(i=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,i=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((n=(n=s.trys).length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],i=0}finally{r=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}(this,(function(i){return r=z(e),[2,new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeAsync(r)]}))},new((n=void 0)||(n=Promise))((function(e,t){function s(e){try{c(o.next(e))}catch(e){t(e)}}function a(e){try{c(o.throw(e))}catch(e){t(e)}}function c(t){var r;t.done?e(t.value):(r=t.value,r instanceof n?r:new n((function(e){e(r)}))).then(s,a)}c((o=o.apply(r,i||[])).next())}));var r,i,n,o}function $(e,t){void 0===t&&(t=K);var r=z(e);return new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(r)}function ee(e,t){void 0===t&&(t=K);var r=z(e);return new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(r)}function te(e,t){return void 0===t&&(t=K),ee(e,t)}return t}()}(LJ),(0,AU.exports)("Int8",(function(e){return function(t,r,i){return e(this,t,r,i)}})),(0,AU.exports)("Int16",(function(e){return function(t,r,i){return e(this,t,r,i)}})),(0,AU.exports)("Int32",(function(e){return function(t,r,i){return e(this,t,r,i)}})),(0,AU.exports)("Uint16",(function(e){return function(t,r,i){return e(this,t,r,i)}})),(0,AU.exports)("Uint32",(function(e){return function(t,r,i){return e(this,t,r,i)}})),(0,AU.exports)("Float32",(function(e){return function(t,r,i){return e(this,t,r,i)}})),(0,AU.exports)("Float64",(function(e){return function(t,r,i){return e(this,t,r,i)}}));const kJ=()=>function(e){const t=window.atob(e).split("").map(e=>e.charCodeAt(0));return new Uint8Array(t,0,t.length/Uint8Array.BYTES_PER_ELEMENT)}("");let BJ,MJ;async function UJ(){if(BJ)return BJ;const e={};let t,r={};for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t]);let i=!1,n=!1;i="object"==typeof window,n="function"==typeof importScripts,"object"==typeof process&&"object"==typeof process.versions&&process.versions.node;let o="";(i||n)&&(n?o=self.location.href:"undefined"!=typeof document&&document.currentScript&&(o=document.currentScript.src),o=0!==o.indexOf("blob:")?o.substr(0,o.lastIndexOf("/")+1):""),e.print||console.log.bind(console);const s=e.printErr||console.warn.bind(console);for(t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t]);let a;r=null,e.arguments,e.thisProgram,e.quit,e.wasmBinary,e.noExitRuntime,"object"!=typeof WebAssembly&&C("no native wasm support detected");let c=!1;function d(t){const r=e["_"+t];var i;return i="Cannot call unknown function "+t+", make sure it is exported",r||C("Assertion failed: "+i),r}function u(e,t,r,i,n){const o={string:function(e){let t=0;if(null!=e&&0!==e){const r=1+(e.length<<2);t=D(r),function(e,t,r){(function(e,t,r,i){if(!(i>0))return 0;const n=r,o=r+i-1;for(let i=0;i<e.length;++i){let n=e.charCodeAt(i);if(n>=55296&&n<=57343){n=65536+((1023&n)<<10)|1023&e.charCodeAt(++i)}if(n<=127){if(r>=o)break;t[r++]=n}else if(n<=2047){if(r+1>=o)break;t[r++]=192|n>>6,t[r++]=128|63&n}else if(n<=65535){if(r+2>=o)break;t[r++]=224|n>>12,t[r++]=128|n>>6&63,t[r++]=128|63&n}else{if(r+3>=o)break;t[r++]=240|n>>18,t[r++]=128|n>>12&63,t[r++]=128|n>>6&63,t[r++]=128|63&n}}t[r]=0})(e,l,t,r)}(e,t,r)}return t},array:function(e){const t=D(e.length);var r,i;return r=e,i=t,h.set(r,i),t}};const s=d(e),a=[];let c=0;if(i)for(let e=0;e<i.length;e++){const t=o[r[e]];t?(0===c&&(c=O()),a[e]=t(i[e])):a[e]=i[e]}let u=s.apply(null,a);return u=function(e){return"string"===t?(r=e)?function(e,t,r){const i=t+r;let n=t,o="";for(;e[n]&&!(n>=i);)++n;if(n-t>16&&e.subarray&&A)return A.decode(e.subarray(t,n));for(;t<n;){let r=e[t++];if(!(128&r)){o+=String.fromCharCode(r);continue}const i=63&e[t++];if(192==(224&r)){o+=String.fromCharCode((31&r)<<6|i);continue}const n=63&e[t++];if(r=224==(240&r)?(15&r)<<12|i<<6|n:(7&r)<<18|i<<12|n<<6|63&e[t++],r<65536)o+=String.fromCharCode(r);else{const e=r-65536;o+=String.fromCharCode(55296|e>>10,56320|1023&e)}}return o}(l,r,i):"":"boolean"===t?Boolean(e):e;var r,i}(u),0!==c&&N(c),u}const A="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;let h,l,p;"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),e.INITIAL_MEMORY;const g=[],E=[],f=[],I=[];E.push({func:function(){y()}});let m=0,_=null;function C(t){e.onAbort&&e.onAbort(t),s(t+=""),c=!0,t="abort("+t+"). Build with -s ASSERTIONS=1 for more info.";throw new WebAssembly.RuntimeError(t)}e.preloadedImages={},e.preloadedAudios={};let S="deflate.wasm";var v;function T(t){for(;t.length>0;){const r=t.shift();if("function"==typeof r){r(e);continue}const i=r.func;"number"==typeof i?void 0===r.arg?p.get(i)():p.get(i)(r.arg):i(void 0===r.arg?null:r.arg)}}v="data:application/octet-stream;base64,",S.startsWith(v)||(S=function(t){return e.locateFile?e.locateFile(t,o):o+t}(S));const R={emscripten_memcpy_big:function(e,t,r){l.copyWithin(e,t,t+r)},emscripten_resize_heap:function(e){C("OOM")}};await async function(){const t={env:R,wasi_snapshot_preview1:R};function r(t,r){const i=t.exports;var n;e.asm=i,a=e.asm.memory,n=a.buffer,e.HEAP8=h=new Int8Array(n),e.HEAP16=new Int16Array(n),e.HEAP32=new Int32Array(n),e.HEAPU8=l=new Uint8Array(n),e.HEAPU16=new Uint16Array(n),e.HEAPU32=new Uint32Array(n),e.HEAPF32=new Float32Array(n),e.HEAPF64=new Float64Array(n),p=e.asm.__indirect_function_table,function(t){if(m--,e.monitorRunDependencies&&e.monitorRunDependencies(m),0==m&&_){const e=_;_=null,e()}}()}function i(e){r(e.instance)}function n(e){return new nT((e,t)=>{e(kJ().buffer)}).then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(e){s("failed to asynchronously prepare wasm: "+e),C(e)}))}if(m++,e.monitorRunDependencies&&e.monitorRunDependencies(m),e.instantiateWasm)try{return e.instantiateWasm(t,r)}catch(e){return s("Module.instantiateWasm callback failed with error: "+e),!1}return await n(i),{}}();let y=e.___wasm_call_ctors=function(){return(y=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)},w=e._malloc=function(){return(w=e._malloc=e.asm.malloc).apply(null,arguments)};e._free=function(){return(e._free=e.asm.free).apply(null,arguments)},e.___errno_location=function(){return(e.___errno_location=e.asm.__errno_location).apply(null,arguments)},e._zlibCompress=function(){return(e._zlibCompress=e.asm.zlibCompress).apply(null,arguments)};let b,O=e.stackSave=function(){return(O=e.stackSave=e.asm.stackSave).apply(null,arguments)},N=e.stackRestore=function(){return(N=e.stackRestore=e.asm.stackRestore).apply(null,arguments)},D=e.stackAlloc=function(){return(D=e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)};function P(t){function r(){b||(b=!0,e.calledRun=!0,c||(T(E),T(f),e.onRuntimeInitialized&&e.onRuntimeInitialized(),function(){if(e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)t=e.postRun.shift(),I.unshift(t);var t;T(I)}()))}m>0||(!function(){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)t=e.preRun.shift(),g.unshift(t);var t;T(g)}(),m>0||(e.setStatus?(e.setStatus("Running..."),setTimeout((function(){setTimeout((function(){e.setStatus("")}),1),r()}),1)):r()))}if(e.ccall=u,e.cwrap=function(e,t,r,i){const n=(r=r||[]).every((function(e){return"number"===e}));return"string"!==t&&n&&!i?d(e):function(){return u(e,t,r,arguments)}},e.allocate=function(e,t){let r;return r=1==t?D(e.length):w(e.length),e.subarray||e.slice?l.set(e,r):l.set(new Uint8Array(e),r),r},_=function e(){b||P(),b||(_=e)},e.run=P,e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return P(),BJ=e,e}const xJ=Uint8Array.BYTES_PER_ELEMENT;const QJ={bytesReceived:"br",frameDropped:"fd",frameReceived:"fr",googJitterReceived:"jr",isAudioMute:"am",isFreeze:"fz",mediaType:"mt",packetsLost:"pl",packetsReceived:"pr",peerId:"pid",id:"id",ssrc:"ssrc",timestamp:"ts",type:"tp",frameRateInput:"fi",frameRateSent:"fs",googRtt:"rt",isVideoMute:"vm"},FJ={stats:"sts",state:"st",stream_id:"stid",session_id:"seid",stream_type:"stt",app_id:"aid",channel_key:"ck",channel_name:"cn",sdk_version:"sv",browser:"b",process_id:"pcid",mode:"m",codec:"c",role:"r",has_changed_gateway:"hcg",ap_response:"ar",extends:"es",details:"d",features:"ft",p2p_id:"ppid",sdp:"sdp",audio:"a",video:"v",attributes:"at",hq:"h",lq:"l",stereo:"str",speech:"spe",extend:"e",pingpongElapse:"ppe"},VJ={_message:"m",_type:"t",_id:"id"},jJ={join_v2:"j2",publish:"pub",publish_related_stats:"prs",ping:"pi",traffic_stats:"ts",ping_back:"pib",publish_stats:"pubs"};let GJ;class KJ{constructor(){kO(this,"zlibCompress",void 0)}async init(){if(!GJ){const e=await(async()=>(MJ||(MJ=await UJ()),{zlibCompress:e=>{const t=new Uint8Array(e),r=xJ*t.byteLength,i=MJ._malloc(r),n=MJ._malloc(3*r);for(let e=0;e<r;e++)MJ.HEAP8[i/xJ+e]=t[e];const o=MJ._zlibCompress(i,r,n),s=new Uint8Array(MJ.HEAP8.slice(n,n+o));return MJ._free(i),MJ._free(n),s}}))();GJ=e.zlibCompress}this.zlibCompress=GJ}msgPackCompress(e){return LJ.exports.encode(e)}compress(e){const t=Date.now(),r=this.compressKeyAndValue(JSON.parse(JSON.stringify(e))),i=this.msgPackCompress(r),n=this.zlibCompress(i),o=new Uint8Array([49,49,49,50,...Array.from(n)]);return{origin:Object.assign({},e),originLength:JSON.stringify(e).length,shortKeyAndValue:r,msgpackSer:i,compressed:o,compressedLength:o.length,time:Date.now()-t}}compressKeyAndValue(e){return this._ObjectKeyCompress(this._typeCompress(e))}_typeCompress(e){const t=e._type;if(!t)return e;const r=jJ[t];return e._type=r||t,e}_ObjectKeyCompress(e){const t=e._message;if(t){const r=t.stats;r&&(t.stats=this._statsCompress(r)),e._message=this._messageCompress(t)}return this._reportCompress(e)}_statsCompress(e){return this._keyCompress(e,QJ)}_messageCompress(e){return this._keyCompress(e,FJ)}_reportCompress(e){return this._keyCompress(e,VJ)}_keyCompress(e,t){const r={},i=Object.keys(e);return Sh(i).call(i,(i,n)=>{const o=e[n];return t[n]?r[t[n]]=o:r[n]=o,r},r),r}}class HJ extends kD{get queue(){return[...this.highPriorityQueue,...this.lowPriorityQueue]}constructor(e){super(),kO(this,"lowPriorityQueue",[]),kO(this,"highPriorityQueue",[]),kO(this,"AgoraWebSocketManager",void 0),this.AgoraWebSocketManager=e}reset(){this.lowPriorityQueue=[],this.highPriorityQueue=[]}pushMessage(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this.highPriorityQueue.push(e):this.lowPriorityQueue.push(e),this.sendMessage()}sendMessage(){const e=this.queue.length;let t=0;t=e<5?15*e:60+3*(e-4),setTimeout(()=>{this._sendMessage()},t)}_sendMessage(){if(!this.queue.length)return;const e=this.AgoraWebSocketManager.getConnection();if(!e||1!==e.readyState)return;const t=this.queue.shift();return this.lowPriorityQueue.includes(t)?this.lowPriorityQueue.shift():this.highPriorityQueue.shift(),e.send(t.compressed),t}}var WJ;function YJ(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}let JJ=gP("AgoraWebSocketManager","connectionID")(WJ=class extends kD{get url(){return this.websocket?this.websocket.url:null}get reconnectMode(){return this._reconnectMode}set reconnectMode(e){["tryNext","recover"].includes(e)&&this.resetReconnectCount(e),this._reconnectMode=e}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,"reconnecting"===this._state?this.emit(Nk.RECONNECTING,this.reconnectReason):"connected"===this._state?this.emit(Nk.CONNECTED):"closed"===this._state?this.emit(Nk.CLOSED):"failed"===this._state&&this.emit(Nk.FAILED))}resetReconnectCount(e){HD.debug("websocket reset reconnect count, reason: "+e),hP("debug",this,"resetReconnectCount",e,"websocket reset reconnect count, reason: "+e),this.reconnectCount=0}constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4?arguments[4]:void 0;super(),kO(this,"connectionID",0),kO(this,"currentURLIndex",0),kO(this,"urls",void 0),kO(this,"_reconnectMode","tryNext"),kO(this,"reconnectReason",void 0),kO(this,"_initMutex",new Ej("websocket")),kO(this,"name",void 0),kO(this,"_state","closed"),kO(this,"reconnectInterrupter",void 0),kO(this,"websocket",void 0),kO(this,"retryConfig",void 0),kO(this,"reconnectCount",0),kO(this,"forceCloseTimeout",5e3),kO(this,"onlineReconnectListener",void 0),kO(this,"compressor",new KJ),kO(this,"compressorInitStatus","initializing"),kO(this,"compress",void 0),kO(this,"messageSender",void 0),kO(this,"useCompress",void 0),kO(this,"tryDoubleDomain",!1),kO(this,"wsInflateLength",0),kO(this,"wsDeflateLength",0),kO(this,"closeEstablishingWs",()=>{}),kO(this,"store",void 0),kO(this,"joinChannelServiceRecordIndex",void 0),this.store=n,this.name=e,this.retryConfig=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?YJ(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):YJ(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},t),this.useCompress=r,this.tryDoubleDomain=i;const{timeout:o,timeoutFactor:s}=t,a=Math.max(300,Math.floor(3*o/5)),c=Math.max(1.2,Math.floor(8*s)/10);lB.ONLINE&&(this.retryConfig.timeout=a,this.retryConfig.timeoutFactor=c),ZV.on(pB.NETWORK_STATE_CHANGE,(e,t)=>{e!==t&&(this.resetReconnectCount("network state change: ".concat(t," -> ").concat(e)),e===lB.ONLINE?(this.retryConfig.timeout=a,this.retryConfig.timeoutFactor=c):(this.retryConfig.timeout=o,this.retryConfig.timeoutFactor=s))});const d=Date.now();this.compressor.init().then(()=>{this.compressorInitStatus="initialized";const e=Date.now()-d;HD.debug("websocket compressor initialized successfully in ".concat(e,"ms")),hP("debug",this.compressor,"init",void 0,"websocket compressor initialized successfully in ".concat(e,"ms")),uj.wsCompressorInit({status:!0,ec:null,eventElapse:e}),this.compress=this.compressor.compress.bind(this.compressor)}).catch(e=>{this.compressorInitStatus="failed";const t=e?e.message||e.toString():"Empty Error";HD.debug("websocket compressor failed to initialize because of ".concat(t)),hP("debug",this.compressor,"init",void 0,"websocket compressor failed to initialize because of ".concat(t)),uj.wsCompressorInit({status:!1,ec:t,eventElapse:1})})}getConnection(){return this.websocket||void 0}init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this.forceCloseTimeout=t;const r=(t,r)=>{this.urls=e;const i=this.urls[this.currentURLIndex];this.state="connecting",this.messageSender=new HJ(this),this.createWebSocketConnection(i).then(t).catch(r),this.once(Nk.CLOSED,()=>r(new UD(MD.WS_DISCONNECT))),this.once(Nk.CONNECTED,()=>t())};return this._initMutex.lock().then(e=>new nT((e,t)=>{r(e,t)}).then(()=>{e()}).catch(()=>{e()}))}close(e,t){if(this.currentURLIndex=0,this.resetReconnectCount("close"),this.reconnectInterrupter&&this.reconnectInterrupter(),this.websocket){this.websocket.onclose=null,this.websocket.onopen=null,this.websocket.onmessage=null;const e=this.websocket;t?setTimeout(()=>e.close(),500):e.close(),this.websocket=void 0}this.state=e?"failed":"closed",this.closeEstablishingWs&&this.closeEstablishingWs()}reconnect(e,t){if(!this.websocket)return HD.warning("[".concat(this.name,"] can not reconnect, no websocket")),void hP("warning",this,"reconnect","can not reconnect, no websocket");var r;(void 0!==e&&(this.reconnectMode=e),HD.debug("[".concat(this.name,"] reconnect is triggered initiative")),hP("debug",this,"reconnect"),"number"==typeof this.joinChannelServiceRecordIndex)&&(null===(r=this.store)||void 0===r||r.recordJoinChannelService({status:"error",errors:[new Error(t)]},this.joinChannelServiceRecordIndex));const i=this.websocket.onclose;this.websocket.onclose=null,this.websocket.close(),i&&i.bind(this.websocket)({code:9999,reason:t})}sendMessageWithJSON(e){const t=JSON.stringify(e);return{compressed:t,compressedLength:t.length,origin:e}}sendMessageWithUint8Array(e){return{compressed:e,compressedLength:e.byteLength,origin:e}}sendMessage(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.websocket||this.websocket.readyState!==WebSocket.OPEN)throw new UD(MD.WS_ABORT,"websocket is not ready");try{let i=null;if(r)i=this.sendMessageWithUint8Array(e);else if("initialized"===this.compressorInitStatus&&this.useCompress&&NP("WEBSOCKET_COMPRESS"))try{i=this.compress(e),this.setWsInflateData(i)}catch(t){i=this.sendMessageWithJSON(e)}else i=this.sendMessageWithJSON(e);t?this.websocket.send(i.compressed):this.messageSender.pushMessage(i)}catch(e){throw new UD(MD.WS_ERR,"send websocket message error"+e.toString())}}setWsInflateData(e){this.wsDeflateLength=this.wsDeflateLength+e.originLength,this.wsInflateLength=this.wsInflateLength+e.compressedLength}getWsInflateData(){const e=this.wsInflateLength,t=this.wsDeflateLength;return this.clearWsInflateData(),{wsInflateLength:e,wsDeflateLength:t}}clearWsInflateData(){this.wsInflateLength=0,this.wsDeflateLength=0}async createWebSocketConnection(e,t){return this.connectionID+=1,this.connectionID,this.joinChannelServiceRecordIndex=void 0,new nT((r,i)=>{var n;const o=()=>{HD.debug("[".concat(this.name,"] websocket opened:"),e),AP("debug",["WebSocket",this.connectionID],"open",e),this.reconnectMode="retry",this.state="connected",this.resetReconnectCount("opened"),r()},s=async e=>{if(HD.debug("[".concat(this.name,"] websocket close ").concat(this.websocket&&this.websocket.url,", code: ").concat(e.code,", reason: ").concat(e.reason,", current mode: ").concat(this.reconnectMode)),AP("debug",["WebSocket",this.connectionID],"close",{code:e.code,reason:e.reason,url:this.websocket&&this.websocket.url,reconnectMode:this.reconnectMode}),this.reconnectCount<this.retryConfig.maxRetryCount){"connected"===this.state&&(this.reconnectReason=e.reason,this.state="reconnecting");const t=TK(this,Nk.WILL_RECONNECT,this.reconnectMode)||this.reconnectMode,n=await this.reconnectWithAction(t);if("closed"===this.state)return HD.debug("[".concat(this.connectionID,"] ws is closed, no need to reconnect")),void cP("debug",this,"ws is closed, no need to reconnect");if(!n)return i(new UD(MD.WS_DISCONNECT,"websocket reconnect failed: ".concat(e.code))),void this.close(!0);r()}else i(new UD(MD.WS_DISCONNECT,"websocket close: ".concat(e.code))),this.close()},a=e=>{this.emit(Nk.ON_MESSAGE,e)};this.websocket&&(this.websocket.onclose=null,this.websocket.close()),NP("GATEWAY_WSS_ADDRESS")&&this.name.startsWith("gateway")&&(e=NP("GATEWAY_WSS_ADDRESS")),HD.debug("[".concat(this.name,"] start connect, url: ").concat(e)),cP("debug",this,"start connect, url: ".concat(e));const c=null===(n=this.store)||void 0===n?void 0:n.recordJoinChannelService({startTs:Date.now(),status:"pending",service:"gateway"});this.chooseBestWebsocketConnection(e,!!t,c).then(e=>{var t;this.websocket=e,o&&o(),e.onclose=s,e.onmessage=a,null===(t=this.store)||void 0===t||t.recordJoinChannelService({endTs:Date.now(),status:"success"},c),this.joinChannelServiceRecordIndex=c}).catch(e=>{var t;if(null===(t=this.store)||void 0===t||t.recordJoinChannelService({endTs:Date.now(),status:e instanceof UD&&e.code===MD.WS_ABORT?"aborted":"error",errors:[e]},c),"closed"!==this.state){if(e instanceof UD&&e.code===MD.WS_ERR){const t=new UD(MD.WS_ERR,"init websocket failed! Error: ".concat(e.toString()));return HD.error("[".concat(this.name,"]").concat(t)),hP("error",this,"chooseBestWebsocketConnection",void 0,e.toString()),void i(t)}s&&s(e)}else i(new UD(MD.WS_DISCONNECT,"websocket is closed: ".concat(e.toString())))})})}async reconnectWithAction(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.reconnectCount>=this.retryConfig.maxRetryCount)return!1;if(!this.urls)return!1;if("closed"===this.state)return!1;this.onlineReconnectListener||ZV.networkState!==lB.OFFLINE||(this.onlineReconnectListener=ZV.onlineWaiter&&ZV.onlineWaiter.then(()=>{this.onlineReconnectListener=void 0}));let r=!0;if(this.reconnectInterrupter=()=>{r=!1},t){const t=QD(this.reconnectCount,this.retryConfig);HD.debug("[".concat(this.name,"] wait ").concat(t,"ms to reconnect websocket, mode: ").concat(e)),hP("debug",this,"reconnectWithAction",{timeout:t,action:e}),await nT.race([gK(t),this.onlineReconnectListener||new nT(()=>{})])}if("closed"===this.state||!r)return!1;this.reconnectCount+=1;const i=async(e,t)=>{this.emit(Nk.RECONNECT_CREATE_CONNECTION,t),await this.createWebSocketConnection(e)};try{if("retry"===e){const t=this.urls[this.currentURLIndex];this.emit(Nk.RECONNECT_WAITTING_FINISH,e),await i(t,e)}else if("tryNext"===e){if(this.currentURLIndex+=1,this.currentURLIndex>=this.urls.length)return await this.reconnectWithAction("recover",!1);HD.debug("[".concat(this.name,"] websocket url length: ").concat(this.urls.length," current index: ").concat(this.currentURLIndex)),cP("debug",this,"websocket url length: ".concat(this.urls.length," current index: ").concat(this.currentURLIndex));const t=this.urls[this.currentURLIndex];this.emit(Nk.RECONNECT_WAITTING_FINISH,e),await i(t,e)}else if("recover"===e){HD.debug("[".concat(this.name,"] request new urls")),cP("debug",this,"request new urls"),this.resetReconnectCount("recover mode"),this.emit(Nk.RECONNECT_WAITTING_FINISH,e),this.urls=await SK(this,Nk.REQUEST_NEW_URLS),this.currentURLIndex=0;const t=this.urls[this.currentURLIndex];await i(t,e)}return!0}catch(r){var n;return HD.error("[".concat(this.name,"] reconnect failed"),r.toString()),hP("error",this,"reconnectWithAction",void 0,r.toString()),null!=r&&null!==(n=r.data)&&void 0!==n&&n.desc&&Array.isArray(r.data.desc)&&r.data.desc.length&&r.data.desc.includes("dynamic key expired")?(this.emit(Nk.ON_TOKEN_PRIVILEGE_DID_EXPIRE),!1):await this.reconnectWithAction(e,t)}}async chooseBestWebsocketConnection(e,t,r){return new nT((i,n)=>{let o=!1;const s=[];this.closeEstablishingWs=()=>{HD.debug("[choose-best-ws] close establishing websockets"),s.forEach(e=>{e.onclose=null,e.onopen=null,e.onmessage=null,e.close()}),n(new UD(MD.WS_ABORT,"choose best websocket aborted"))};const a=NP("GATEWAY_DOMAINS");let c;const d=e.indexOf("?h="),u=a.find(t=>-1!==d?e.includes(t,d):e.includes(t));HD.debug("[choose-best-ws] currentDomain: ",u,", domains: ",a),hP("debug",this,"chooseBestWebsocketConnection",{currentDomain:u,domains:a});let A=!this.tryDoubleDomain||t||!u;if(!A&&u){var h;const t=Date.now();try{a.forEach(t=>{const r=-1===d?e.replace(u,t):e.substr(0,d)+e.substr(d).replace(u,t),i=new WebSocket(r);i.binaryType="arraybuffer",s.push(i),HD.debug("[choose-best-ws] ws is connecting:",i.url),cP("debug",this,"ws is connecting: ".concat(i.url))})}catch(e){for(HD.debug("[choose-best-ws] ws create failed, fallback to single url"),cP("debug",this,"ws create failed, fallback to single url"),s.forEach(e=>e.close());s.length;)s.pop();A=!0}null===(h=this.store)||void 0===h||h.recordJoinChannelService({urls:s.map(e=>e.url),service:"gateway"},r),s.forEach(e=>{e.onopen=()=>{if(o)return;const r=Date.now()-t;HD.debug("[choose-best-ws] ws open cost ".concat(r,"ms")),s.filter(t=>t!==e).forEach(e=>{HD.debug("[choose-best-ws]close backup websocket: ".concat(e.url)),cP("debug",this,"close backup websocket: ".concat(e.url)),e.close()}),o=!0,i(e)},e.onclose=e=>{if(c=e,o)return;s.find(e=>!(e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING))||(HD.debug("[choose-best-ws] all websocket is closed"),cP("debug",this,"all websocket is closed"),o=!0,n(c))},e.onmessage=t=>{HD.debug("[choose-best-ws]".concat(e.url," onmessage: ").concat(t.data)),cP("debug",this,"".concat(e.url," onmessage: ").concat(t.data))}}),gK(this.forceCloseTimeout).then(()=>{s.forEach(e=>{e.readyState!==WebSocket.OPEN&&e.close()})})}if(A){var l;let t;HD.debug("[choose-best-ws] use single url: ",e),cP("debug",this,"use single url: ".concat(e)),null===(l=this.store)||void 0===l||l.recordJoinChannelService({urls:[e],service:"gateway"},r);try{t=new WebSocket(e),s.push(t),t.binaryType="arraybuffer"}catch(e){const t=new UD(MD.WS_ERR,"init websocket failed! Error: ".concat(e.toString()));return HD.error("[".concat(this.name,"]").concat(t)),hP("error",this,"chooseBestWebsocketConnection",void 0,e.toString()),void n(t)}t.onopen=()=>{i(t)},t.onclose=e=>{n(e)},t.onmessage=e=>{HD.debug("[choose-best-ws]".concat(t.url," onmessage: ").concat(e.data)),cP("debug",this,"".concat(t.url," onmessage: ").concat(e.data))},gK(this.forceCloseTimeout).then(()=>{t&&t.readyState!==WebSocket.OPEN&&t.close()})}}).then(e=>(this.closeEstablishingWs=void 0,e)).catch(e=>{throw this.closeEstablishingWs=void 0,e})}})||WJ;class qJ{constructor(e){kO(this,"input",[]),kO(this,"size",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}mean(){var e;return 0===this.input.length?0:Sh(e=this.input).call(e,(e,t)=>e+t)/this.input.length}}var XJ;let zJ=gP("AgoraRTCSignal","websocket.connectionID")(XJ=class extends kD{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===lk.CONNECTED?this.emit(pk.WS_CONNECTED):e===lk.RECONNECTING?this.emit(pk.WS_RECONNECTING,this._websocketReconnectReason):e===lk.CLOSED&&this.emit(pk.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket?this.websocket.url:null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),kO(this,"_disconnectedReason",void 0),kO(this,"_websocketReconnectReason",void 0),kO(this,"_connectionState",lk.CLOSED),kO(this,"reconnectToken",void 0),kO(this,"websocket",void 0),kO(this,"openConnectionTime",void 0),kO(this,"clientId",void 0),kO(this,"lastMsgTime",Date.now()),kO(this,"uploadCache",[]),kO(this,"uploadCacheInterval",void 0),kO(this,"rttRolling",new qJ(5)),kO(this,"pingpongTimer",void 0),kO(this,"wsInflateDataTimer",void 0),kO(this,"pingpongTimeoutCount",0),kO(this,"joinResponse",void 0),kO(this,"multiIpOption",void 0),kO(this,"initError",void 0),kO(this,"spec",void 0),kO(this,"store",void 0),kO(this,"onWebsocketMessage",e=>{if(e.data instanceof ArrayBuffer)return void this.emit(pk.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,"_id")){const e="res-@".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,"_type")&&(this.emit(t._type,t._message),t._type===fk.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===fk.ON_USER_BANNED))switch(t._message.error_code){case 14:this.close(uk.UID_BANNED);break;case 15:this.close(uk.IP_BANNED);break;case 16:this.close(uk.CHANNEL_BANNED)}}),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new JJ("gateway-".concat(this.clientId),this.spec.retryConfig,!0,!0,t),this.handleWebsocketEvents(),window.addEventListener("offline",()=>{this.connectionState===lk.CONNECTED&&this.reconnect("retry",hk.OFFLINE)})}async request(e,t,r,i){const n=fK(6,""),o={_id:n,_type:e,_message:t},s=this.websocket.connectionID,a=()=>new nT((t,r)=>{if(this.connectionState===lk.CONNECTED)return t();const i=()=>{this.off(pk.WS_CLOSED,n),t()},n=()=>{this.off(pk.WS_CONNECTED,i),r(new UD(MD.WS_ABORT))};this.once(pk.WS_CONNECTED,i),this.once(pk.WS_CLOSED,n),e!==gk.PUBLISH&&e!==gk.SUBSCRIBE&&e!==gk.UNSUBSCRIBE&&e!==gk.UNPUBLISH&&e!==gk.CONTROL||this.once(pk.DISCONNECT_P2P,()=>{r(new UD(MD.DISCONNECT_P2P))}),e===gk.PUBLISH&&this.once(pk.ABORT_P2P_EXECUTION,()=>{r(new UD(MD.DISCONNECT_P2P))})});if(this.connectionState!==lk.CONNECTING&&this.connectionState!==lk.RECONNECTING||e===gk.JOIN||e===gk.REJOIN||await a(),this.websocket.sendMessage(o,!0),i)return;const c=new nT((r,i)=>{let o=!1;const a=(i,n)=>{o=!0,r({isSuccess:"success"===i,message:n||{}}),this.off(pk.WS_CLOSED,c),this.off(pk.WS_RECONNECTING,c),this.emit(pk.REQUEST_SUCCESS,e,t)};this.once("res-@".concat(n),a);const c=()=>{i(new UD(MD.WS_ABORT,"type: ".concat(e))),this.off(pk.WS_CLOSED,c),this.off(pk.WS_RECONNECTING,c),this.off("res-@".concat(n),a)};this.once(pk.WS_CLOSED,c),this.once(pk.WS_RECONNECTING,c),gK(NP("SIGNAL_REQUEST_TIMEOUT")).then(()=>{this.websocket.connectionID!==s||o||(HD.warning("ws request timeout, type: ".concat(e)),cP("warning",this,"ws request timeout, type: ".concat(e)),this.emit(pk.REQUEST_TIMEOUT,e,t))})});let d=null;try{d=await c}catch(i){if(this.connectionState===lk.CLOSED||e===gk.LEAVE)throw new UD(MD.WS_ABORT);return!this.spec.forceWaitGatewayResponse||r?i.throw():e===gk.JOIN||e===gk.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const u=Number(d.message.error_code||d.message.code),A=PJ(u),h=new UD(MD.UNEXPECTED_RESPONSE,"".concat(A.desc,": ").concat(d.message.error_str),{code:u,data:d.message});return"success"===A.action?d.message:(HD.warning("[".concat(this.websocket.connectionID,"] unexpected response from type ").concat(e,", error_code: ").concat(u,", message: ").concat(A.desc,", action: ").concat(A.action)),cP("warning",this,"unexpected response from type ".concat(e,", error_code: ").concat(u,", message: ").concat(A.desc,", action: ").concat(A.action)),u===ck.ERR_TOO_MANY_BROADCASTERS?e===gk.JOIN||e===gk.REJOIN?(this.initError=h,this.close(),h.throw()):h.throw():"failed"===A.action?h.throw():"quit"===A.action?(this.initError=h,this.close(),h.throw()):(u===ck.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,HD.warning("[".concat(this.clientId,"] detect multi ip, recover")),cP("warning",this,"detect multi ip, recover"),this.reconnect("recover",hk.MULTI_IP)):this.reconnect(A.action,hk.SERVER_ERROR),e===gk.JOIN||e===gk.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new nT(r=>{const i=n=>{(!t||t(n))&&(this.off(e,i),r(n))};this.on(e,i)})}upload(e,t){const r={_type:e,_message:t};try{this.websocket.sendMessage(r)}catch(e){const t=NP("MAX_UPLOAD_CACHE")||50;this.uploadCache.push(r),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval(()=>{if(this.connectionState!==lk.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)},NP("UPLOAD_CACHE_INTERVAL")||2e3))}}send(e,t){const r={_type:e,_message:t};this.websocket.sendMessage(r)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new nT((r,i)=>{this.once(pk.WS_CONNECTED,()=>r(this.joinResponse)),this.once(pk.WS_CLOSED,()=>i(this.initError||new UD(MD.WS_ABORT))),this.connectionState=lk.CONNECTING,this.websocket.init(e).catch(i),this.wsInflateDataTimer&&window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=window.setInterval(()=>{this.handleWsInflateData()},2e4),setTimeout(()=>{t&&void 0===this.openConnectionTime&&(HD.debug("[".concat(this.clientId,"] init websocket timeout while join with fallback to proxy")),i(new UD(MD.INIT_WEBSOCKET_TIMEOUT)))},NP("JOIN_WITH_FALLBACK_PROXY_PENDING_DURATION"))})}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.wsInflateDataTimer&&(this.handleWsInflateData(),window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||uk.LEAVE,this.connectionState=lk.CLOSED,HD.debug("[".concat(this.clientId,"] ")+"will close websocket in signal"),this.websocket.close(),e===uk.FALLBACK&&(this.websocket.removeAllListeners(),this.websocket=new JJ("gateway-".concat(this.clientId),this.spec.retryConfig,!0,!0,this.store),this.handleWebsocketEvents())}async join(){if(!this.joinResponse){this.emit(pk.ABORT_P2P_EXECUTION);const e=await SK(this,pk.REQUEST_JOIN_INFO),t=await this.request(gk.JOIN,e);if(!t)return this.emit(pk.REPORT_JOIN_GATEWAY,MD.TIMEOUT,this.url||""),!1;this.joinResponse=t,this.emit(pk.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=lk.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}async rejoin(){if(!this.reconnectToken)throw new UD(MD.UNEXPECTED_ERROR,"can not rejoin, no rejoin token");const e=RK(this,pk.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;const t=await this.request(gk.REJOIN,e);return!!t&&(this.connectionState=lk.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),t.peers&&t.peers.forEach(e=>{this.emit(fk.ON_USER_ONLINE,{uid:e.uid}),e.audio&&this.emit(fk.ON_ADD_AUDIO_STREAM,{uid:e.uid,uint_id:e.uint_id,audio:!0,ssrcId:e.audio_ssrc}),e.video&&this.emit(fk.ON_ADD_VIDEO_STREAM,{uid:e.uid,uint_id:e.uint_id,video:!0,ssrcId:e.video_ssrc}),e.audio_mute?this.emit(fk.MUTE_AUDIO,{uid:e.uid}):this.emit(fk.UNMUTE_AUDIO,{uid:e.uid}),e.video_mute?this.emit(fk.MUTE_VIDEO,{uid:e.uid}):this.emit(fk.UNMUTE_VIDEO,{uid:e.uid}),e.audio_enable_local?this.emit(fk.ENABLE_LOCAL_AUDIO,{uid:e.uid}):this.emit(fk.DISABLE_LOCAL_AUDIO,{uid:e.uid}),e.video_enable_local?this.emit(fk.ENABLE_LOCAL_VIDEO,{uid:e.uid}):this.emit(fk.DISABLE_LOCAL_VIDEO,{uid:e.uid}),e.audio||e.video||this.emit(fk.ON_REMOVE_STREAM,{uid:e.uid,uint_id:e.uint_id})}),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleNotification(e){HD.debug("[".concat(this.clientId,"] receive notification: "),e),hP("debug",this,"handleNotification",e);const t=PJ(e.code);if("success"!==t.action)return"failed"===t.action?(HD.error("[".concat(this.clientId,"] ignore error: "),t.desc),void cP("error",this,"ignore error: ".concat(t.desc))):"quit"===t.action?("ERR_REPEAT_JOIN_CHANNEL"===t.desc&&this.close(uk.UID_BANNED),void this.close()):void this.reconnect(t.action,hk.SERVER_ERROR)}handlePingPong(){if(!this.websocket||"connected"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=NP("PING_PONG_TIME_OUT"),t=Date.now();this.pingpongTimeoutCount>=e&&(HD.warning("PINGPONG Timeout. Last Socket Message: ".concat(t-this.lastMsgTime,"ms")),cP("warning",this,"PINGPONG Timeout. Last Socket Message: ".concat(t-this.lastMsgTime,"ms")),t-this.lastMsgTime>NP("WEBSOCKET_TIMEOUT_MIN"))?this.reconnect("retry",hk.TIMEOUT):this.request(gk.PING,void 0,!0).then(()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),NP("REPORT_STATS")&&this.send(gk.PING_BACK,{pingpongElapse:e})}).catch(e=>{})}handleWsInflateData(){const{wsInflateLength:e,wsDeflateLength:t}=this.websocket.getWsInflateData();0!==e&&0!==t&&this.upload(Ek.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(Nk.RECONNECT_WAITTING_FINISH,e=>{this.emit(pk.WS_RECONNECT_WAITTING_FINISH,e)}),this.websocket.on(Nk.RECONNECT_CREATE_CONNECTION,e=>{this.emit(pk.WS_RECONNECT_CREATE_CONNECTION,e)}),this.websocket.on(Nk.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Nk.CLOSED,()=>{this.connectionState=lk.CLOSED}),this.websocket.on(Nk.FAILED,()=>{this._disconnectedReason=uk.NETWORK_ERROR,this.connectionState=lk.CLOSED}),this.websocket.on(Nk.RECONNECTING,e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===lk.CONNECTED?this.connectionState=lk.RECONNECTING:this.connectionState=lk.CONNECTING}),this.websocket.on(Nk.WILL_RECONNECT,(e,t)=>{if(RK(this,pk.IS_P2P_DISCONNECTED)&&"retry"===e)return HD.debug("".concat(this.clientId," reconnect mode is retry, but p2p lost, change to tryNext")),cP("debug",this,"".concat(this.clientId," reconnect mode is retry, but p2p lost, change to tryNext")),this.reconnectToken=void 0,this.emit(pk.NEED_RENEW_SESSION),this.emit(pk.DISCONNECT_P2P),t("tryNext");"retry"!==e&&(HD.debug("".concat(this.clientId," websockt will_connect event, renewSession reconnectMode is ").concat(e)),cP("debug",this,"".concat(this.clientId," websockt will_connect event, renewSession reconnectMode is ").concat(e)),this.reconnectToken=void 0,this.emit(pk.NEED_RENEW_SESSION),this.emit(pk.DISCONNECT_P2P)),t(e)}),this.websocket.on(Nk.CONNECTED,()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch(e=>{HD.warning("[".concat(this.clientId,"] rejoin failed ").concat(e)),hP("warning",this,"rejoin",void 0,e.toString()),this.reconnect("tryNext",hk.SERVER_ERROR)}):this.join().catch(e=>{if(this.emit(pk.REPORT_JOIN_GATEWAY,e.message||e.code,this.url||""),e instanceof UD&&e.code===MD.UNEXPECTED_RESPONSE&&e.data.code===ck.ERR_NO_AUTHORIZED)return HD.warning("[".concat(this.clientId,"] reconnect no authorized, recover")),cP("warning",this,"reconnect no authorized, recover"),void this.reconnect("recover",hk.SERVER_ERROR);HD.error("[".concat(this.clientId,"] join gateway request failed"),e.toString()),hP("error",this,"join",void 0,e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect("tryNext",hk.SERVER_ERROR):(this.initError=e,this.close())})}),this.websocket.on(Nk.REQUEST_NEW_URLS,(e,t)=>{SK(this,pk.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)}),this.websocket.on(Nk.ON_TOKEN_PRIVILEGE_DID_EXPIRE,()=>{this.emit(fk.ON_TOKEN_PRIVILEGE_DID_EXPIRE)})}})||XJ;var ZJ;function $J(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function eq(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?$J(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):$J(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const tq=new Map;let rq=gP("AgoraRTCGateway","store.clientId")(ZJ=class extends kD{get state(){return this._state}set state(e){if(e===this._state)return;const t=this._state;this._state=e,"DISCONNECTED"===e&&this._disconnectedReason?this.emit(Yk.CONNECTION_STATE_CHANGE,e,t,this._disconnectedReason):this.emit(Yk.CONNECTION_STATE_CHANGE,e,t)}get joinGatewayStartTime(){return this._joinGatewayStartTime}set joinGatewayStartTime(e){HD.debug("[".concat(this.store.clientId,"] set joinGatewayStartTime at ").concat(e)),hP("debug",this,"joinGatewayStartTime",e,"[".concat(this.store.clientId,"] set joinGatewayStartTime at ").concat(e)),this._joinGatewayStartTime=e}constructor(e,t){super(),kO(this,"store",void 0),kO(this,"joinInfo",void 0),kO(this,"key",void 0),kO(this,"signal",void 0),kO(this,"role",void 0),kO(this,"inChannelInfo",{joinAt:null,duration:0}),kO(this,"spec",void 0),kO(this,"_state","DISCONNECTED"),kO(this,"_statsCollector",void 0),kO(this,"_disconnectedReason",void 0),kO(this,"isSignalRecover",!1),kO(this,"hasChangeBGPAddress",!1),kO(this,"trafficStatsInterval",void 0),kO(this,"networkQualityInterval",void 0),kO(this,"_joinGatewayStartTime",0),kO(this,"_signalTimeout",!1),kO(this,"_clientRoleOptions",void 0),kO(this,"_isProactiveJoin",!1),this.store=e,this.spec=t,this.signal=new zJ(eq(eq({},t),{},{retryConfig:t.websocketRetryConfig}),e),this._statsCollector=t.statsCollector,this.role=t.role||"audience",this._clientRoleOptions=t.clientRoleOptions,this.handleSignalEvents()}async join(e,t,r){this.store.joinGatewayStart(),"disabled"!==e.cloudProxyServer&&(this.hasChangeBGPAddress=!0);const i=Date.now();let n=tq.get(e.cname);if(n||(n=new Map,tq.set(e.cname,n)),this._isProactiveJoin=!0,n.has(e.uid)){const t=new UD(MD.UID_CONFLICT);throw uj.joinGateway(e.sid,{lts:i,succ:!1,ec:t.message,addr:null,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!e.proxyServer}),this._isProactiveJoin=!1,t}n.set(e.uid,!0),this.joinInfo=e,this.key=t;const o=e.proxyServer,s=o?e.gatewayAddrs.map(e=>{const t=e.address.split(":");return"wss://".concat(o,"/ws/?h=").concat(t[0],"&p=").concat(t[1])}):e.gatewayAddrs.map(e=>"wss://".concat(e.address));let a=0;this.joinGatewayStartTime=i;try{a=(await this.signal.init(s,r)).uid}catch(t){if(t&&t.code===MD.INIT_WEBSOCKET_TIMEOUT)throw HD.warning("[".concat(this.store.clientId,"] User join failed"),t.toString()),t;throw HD.error("[".concat(this.store.clientId,"] User join failed"),t.toString()),hP("error",this,"join",void 0,t.toString()),uj.joinGateway(e.sid,{lts:i,succ:!1,ec:t.message,addr:this.signal.url,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!o}),this._isProactiveJoin=!1,n.delete(e.uid),this.signal.close(),t}return this.state="CONNECTED",this.inChannelInfo.joinAt=Date.now(),HD.debug("[".concat(this.store.clientId,"] Connected to gateway server")),hP("debug",this,"join",void 0,"success"),this.trafficStatsInterval=window.setInterval(()=>{this.updateTrafficStats().catch(e=>{HD.warning("[".concat(this.store.clientId,"] get traffic stats error"),e.toString()),hP("warning",this,"trafficStatsInterval",void 0,e.toString())})},3e3),this.networkQualityInterval=window.setInterval(()=>{navigator&&void 0!==navigator.onLine&&!navigator.onLine?this.emit(Yk.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6}):this._signalTimeout?this.emit(Yk.NETWORK_QUALITY,{downlinkNetworkQuality:5,uplinkNetworkQuality:5}):"CONNECTED"===this.state&&this._statsCollector.trafficStats?this.emit(Yk.NETWORK_QUALITY,{uplinkNetworkQuality:aK(this._statsCollector.trafficStats.B_unq),downlinkNetworkQuality:aK(this._statsCollector.trafficStats.B_dnq)}):this.emit(Yk.NETWORK_QUALITY,{uplinkNetworkQuality:0,downlinkNetworkQuality:0})},2e3),this.store.joinGatewayEnd(),a}async leave(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1?arguments[1]:void 0;if("DISCONNECTED"!==this.state){t!==uk.FALLBACK&&(this.state="DISCONNECTING");try{e||this.signal.connectionState!==lk.CONNECTED||await function(e,t){return t===1/0?e:nT.race([e,EK(t)])}(this.signal.request(gk.LEAVE,void 0,!0),3e3)}catch(e){HD.warning("[".concat(this.store.clientId,"] leave request failed, ignore"),e),cP("warning",this,"leave request failed, ignore, ".concat(e.toString()))}this.signal.close(t),t!==uk.FALLBACK&&(this.state="DISCONNECTED"),this.reset()}}async publish(e,t,r){if("CONNECTED"!==this.state&&"RECONNECTING"!==this.state)throw new UD(MD.INVALID_OPERATION,"can not publish when connection state is ".concat(this.state));const i={state:"offer",p2p_id:this.store.p2pId,ortc:t,mode:this.spec.mode,extend:NP("PUB_EXTEND")};try{return(await this.signal.request(gk.PUBLISH,i,!0))._message}catch(i){if(r&&i.data&&i.data.code===ck.ERR_PUBLISH_REQUEST_INVALID)return HD.warning("[".concat(this.store.clientId,"] receive publish error code, retry"),i.toString()),cP("warning",this,"receive publish error code, retry, ".concat(i.toString())),await this.tryUnpubBeforeRepub(e,t),this.publish(e,t,!1);throw i}}async unpublish(e,t){try{if("CONNECTED"!==this.state&&"RECONNECTING"!==this.state)throw new UD(MD.INVALID_OPERATION,"can not publish when connection state is ".concat(this.state));await this.signal.request(gk.UNPUBLISH,{stream_id:t,ortc:e},!0)}catch(e){HD.warning("unpublish warning: ",e),hP("warning",this,"unpublish",void 0,e.toString())}}async subscribe(e,t,r){if("CONNECTED"!==this.state&&"RECONNECTING"!==this.state)throw new UD(MD.INVALID_OPERATION,"can not subscribe when connection state is ".concat(this.state));const i={stream_id:e,stream_type:t.stream_type,mode:this.spec.mode,codec:this.spec.codec,p2p_id:this.store.p2pId,tcc:!!NP("SUBSCRIBE_TCC"),extend:NP("SUB_EXTEND"),ssrcId:t.ssrcId};try{return(await this.signal.request(gk.SUBSCRIBE,i,!0))._message}catch(i){if(r&&i.data&&i.data.code===ck.ERR_SUBSCRIBE_REQUEST_INVALID)return HD.warning("[".concat(this.store.clientId,"] receiver subscribe error code, retry"),i.toString()),cP("warning",this,"receiver subscribe error code, retry"),await this.tryUnsubBeforeResub(e,t),await this.subscribe(e,t,!1);throw i}}async subscribeAll(e,t){if("CONNECTED"!==this.state&&"RECONNECTING"!==this.state)throw new UD(MD.INVALID_OPERATION,"can not massSubscribe when connection state is ".concat(this.state));const r={p2p_id:this.store.p2pId,users:e,dtx:!1};try{return await this.signal.request(gk.SUBSCRIBE_STREAMS,r,!0)}catch(r){if(t&&r.data&&r.data.code===ck.ERR_SUBSCRIBE_REQUEST_INVALID)return HD.warning("[".concat(this.store.clientId,"] receiver massSubscribe error code, retry"),r.toString()),cP("warning",this,"receiver massSubscribe error code, retry"),await this.tryMassUnsubBeforeResub(e),await this.subscribeAll(e,!1);throw r}}async setVideoProfile(e){const t=function(e){if(!(e.bitrateMax&&e.bitrateMin&&e.frameRate&&e.height&&e.width))return;let t=e.frameRate,r=e.width,i=e.height,n=!0;return"number"!=typeof t&&(t=t.exact||t.ideal||t.max||t.min||0,t||(n=!1)),"number"!=typeof r&&(r=r.exact||r.ideal||r.max||r.min||0,r||(n=!1)),"number"!=typeof i&&(i=i.exact||i.ideal||i.max||i.min||0,t||(n=!1)),n?{stream_type:0,width:r,height:i,fps:t,start_bps:1e3*e.bitrateMax,min_bps:1e3*e.bitrateMin,target_bps:1e3*e.bitrateMax}:void 0}(e);return t?this.signal.request(gk.SET_VIDEO_PROFILE,t):(HD.debug("[".concat(this.store.clientId,"] encoder config is not complete, do not report to gateway")),void cP("debug",this,"encoder config is not complete, do not report to gateway"))}async unsubscribe(e,t){try{await this.signal.request(gk.UNSUBSCRIBE,{p2p_id:this.store.p2pId,ortc:e,stream_id:t},!0)}catch(e){HD.warning("unsubscribe warning: ",e),hP("warning",this,"unsubscribe",void 0,e.toString())}}async massUnsubscribe(e){try{await this.signal.request(gk.UNSUBSCRIBE_STREAMS,e,!0)}catch(e){HD.warning("unsubscribeAll warning: ",e),hP("warning",this,"unsubscribeAll",void 0,e.toString())}}async reconnectPC(e){const{iceParameters:t,dtlsParameters:r,rtpCapabilities:i}=e,n=await this.signal.request(gk.CONNECT_PC,{p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:{iceParameters:t,dtlsParameters:r,rtpCapabilities:i}},!0),o=this.getGatewayIpPort();return{gatewayEstablishParams:n,gatewayIP:null==o?void 0:o.ip,gatewayPort:null==o?void 0:o.port}}getGatewayInfo(){return this.signal.request(gk.GATEWAY_INFO)}renewToken(e){return this.signal.request(gk.RENEW_TOKEN,e)}async setClientRole(e,t){if(t&&(this._clientRoleOptions=Object.assign({},t)),"CONNECTED"!==this.state)return void(this.role=e);let r=void 0;r="audience"===e?this._clientRoleOptions&&this._clientRoleOptions.level?this._clientRoleOptions.level:2:0,await this.signal.request(gk.SET_CLIENT_ROLE,{role:e,level:r,client_ts:Date.now()}),this.role=e}async setRemoteVideoStreamType(e,t){await this.signal.request(gk.SWITCH_VIDEO_STREAM,{stream_id:e,stream_type:t})}async setDefaultRemoteVideoStreamType(e){await this.signal.request(gk.DEFAULT_VIDEO_STREAM,{stream_type:e})}async setStreamFallbackOption(e,t){await this.signal.request(gk.SET_FALLBACK_OPTION,{stream_id:e,fallback_type:t})}async pickSVCLayer(e,t){await this.signal.request(gk.PICK_SVC_LAYER,{stream_id:e,spatial_layer:t.spatialLayer,temporal_layer:t.temporalLayer})}getInChannelInfo(){return this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt),eq({},this.inChannelInfo)}async getGatewayVersion(){return(await this.signal.request(gk.GATEWAY_INFO)).version}reset(){if(this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt,this.inChannelInfo.joinAt=null),this.trafficStatsInterval&&(window.clearInterval(this.trafficStatsInterval),this.trafficStatsInterval=void 0),this.joinInfo){const e=tq.get(this.joinInfo.cname);e&&e.delete(this.joinInfo.uid)}this.joinInfo=void 0,this.key=void 0,this.networkQualityInterval&&(window.clearInterval(this.networkQualityInterval),this.networkQualityInterval=void 0)}updateTurnConfigFromSignal(){if(!this.joinInfo)return;const e=function(e){const t=e.match(/(wss\:\/\/)?([^:]+):(\d+)/);return t?{username:_P.username,password:_P.password,turnServerURL:t[2],tcpport:parseInt(t[3])+30,udpport:parseInt(t[3])+30,forceturn:!1}:null}(("disabled"===this.joinInfo.cloudProxyServer?this.signal.url:this.joinInfo.gatewayAddrs[this.signal.currentURLIndex].address)||"");this.joinInfo.turnServer.serversFromGateway=[],e&&"off"!==this.joinInfo.turnServer.mode&&"disabled"===this.joinInfo.cloudProxyServer&&this.joinInfo.turnServer.serversFromGateway.push(eq(eq({},_P),{},{turnServerURL:e.turnServerURL,tcpport:e.tcpport,udpport:e.udpport,username:this.joinInfo.uid.toString(),password:this.joinInfo.token}))}async updateTrafficStats(){if("CONNECTED"!==this.state)return;const e=await this.signal.request(gk.TRAFFIC_STATS,void 0,!0);e.timestamp=Date.now(),e.peer_delay.forEach(e=>{const t=this._statsCollector.trafficStats&&this._statsCollector.trafficStats.peer_delay.find(t=>t.peer_uid===e.peer_uid);t&&t.B_st!==e.B_st&&bK(()=>{this.emit(Yk.STREAM_TYPE_CHANGE,e.peer_uid,e.B_st)})}),this._statsCollector.updateTrafficStats(e)}getJoinMessage(e){if(!this.joinInfo||!this.key)throw new UD(MD.UNEXPECTED_ERROR,"can not generate join message, no join info");const t=Object.assign({},this.joinInfo.apResponse);let r=NP("REPORT_APP_SCENARIO");if("string"!=typeof r)try{r=JSON.stringify(r)}catch(e){r=void 0}r&&r.length>128&&(r=void 0);const i=eq({license:this.joinInfo.license,p2p_id:this.store.p2pId,session_id:this.joinInfo.sid,app_id:this.joinInfo.appId,channel_key:this.key,channel_name:this.joinInfo.cname,sdk_version:IP,browser:navigator.userAgent,process_id:NP("PROCESS_ID"),mode:this.spec.mode,codec:this.spec.codec,role:this.role,has_changed_gateway:this.hasChangeBGPAddress,ap_response:t,extend:NP("JOIN_EXTEND"),details:{6:this.joinInfo.stringUid,cservice_map:"proxy3"===this.joinInfo.cloudProxyServer?"1":"proxy5"===this.joinInfo.cloudProxyServer?"2":void 0},features:{rejoin:!0},optionalInfo:this.joinInfo.optionalInfo,appScenario:r,attributes:{userAttributes:{enablePublishedUserList:NP("ENABLE_PUBLISHED_USER_LIST"),maxSubscription:NP("MAX_SUBSCRIPTION"),subscribeAudioFilterTopN:"number"==typeof NP("SUBSCRIBE_AUDIO_FILTER_TOPN")?NP("SUBSCRIBE_AUDIO_FILTER_TOPN"):void 0,enablePublishAudioFilter:"boolean"==typeof NP("ENABLE_PUBLISH_AUDIO_FILTER")?NP("ENABLE_PUBLISH_AUDIO_FILTER"):void 0}},join_ts:this.joinGatewayStartTime},e);return this.joinInfo.stringUid&&(i.string_uid=this.joinInfo.stringUid),this.joinInfo.aesmode&&this.joinInfo.aespassword&&(i.aes_mode=this.joinInfo.aesmode,NP("ENCRYPT_AES")?(i.aes_secret=this.joinInfo.aespassword,i.aes_encrypt=!0):i.aes_secret=this.joinInfo.aespassword,this.joinInfo.aessalt&&(i.aes_salt=this.joinInfo.aessalt)),t.addresses[this.signal.websocket.currentURLIndex]&&(i.ap_response.ticket=t.addresses[this.signal.websocket.currentURLIndex].ticket,delete t.addresses),void 0!==this.joinInfo.defaultVideoStream&&(i.default_video_stream=this.joinInfo.defaultVideoStream),i}getRejoinMessage(){if(!this.joinInfo)throw new UD(MD.UNEXPECTED_ERROR,"can not generate rejoin message, no join info");return{session_id:this.joinInfo.sid,channel_name:this.joinInfo.cname,cid:this.joinInfo.cid,uid:this.joinInfo.uid,vid:Number(this.joinInfo.vid)}}handleSignalEvents(){this.signal.on(pk.WS_RECONNECT_WAITTING_FINISH,e=>{["tryNext","recover"].includes(e)&&this.joinInfo&&uj.adjustSessionStartTime(this.joinInfo.sid)}),this.signal.on(pk.WS_RECONNECT_CREATE_CONNECTION,e=>{this.joinGatewayStartTime=Date.now()}),this.signal.on(pk.WS_RECONNECTING,e=>{this.joinInfo&&uj.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:e||hk.NETWORK_ERROR}),this.joinInfo&&(this.state="RECONNECTING",uj.sessionInit(this.joinInfo.sid,{lts:(new Date).getTime(),extend:this.isSignalRecover?{recover:!0}:{rejoin:!0},cname:this.joinInfo.cname,appid:this.joinInfo.appId,mode:this.spec.mode}),this.isSignalRecover=!1,this.joinGatewayStartTime=Date.now())}),this.signal.on(pk.WS_CLOSED,e=>{let t;switch(e){case uk.LEAVE:t=hk.LEAVE;break;case uk.UID_BANNED:case uk.IP_BANNED:case uk.CHANNEL_BANNED:case uk.SERVER_ERROR:t=hk.SERVER_ERROR;break;case uk.FALLBACK:t=hk.FALLBACK;break;default:t=hk.NETWORK_ERROR}HD.debug("[signal] websocket closed, reason: ".concat(t||"undefined -> "+hk.NETWORK_ERROR)),dP("debug",this,"ws_closed","reason: ".concat(e)),this.joinInfo&&uj.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:e===uk.LEAVE?1:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:t}),this._disconnectedReason=e,e!==uk.FALLBACK&&(this.state="DISCONNECTED"),this.reset()}),this.signal.on(pk.WS_CONNECTED,()=>{if(this.updateTurnConfigFromSignal(),this.state="CONNECTED",this.joinInfo&&("audience"===this.role&&this._clientRoleOptions&&this._clientRoleOptions.level&&(HD.debug("[".concat(this.store.clientId,"] patch to send set client role, role: ").concat(this.role,", mode: ").concat(this.spec.mode,", level: ").concat(this._clientRoleOptions&&this._clientRoleOptions.level)),cP("debug",this,"patch to send set client role, role: ".concat(this.role,", mode: ").concat(this.spec.mode,", level: ").concat(this._clientRoleOptions&&this._clientRoleOptions.level)),this.setClientRole(this.role,this._clientRoleOptions)),uj.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!0,ec:null,vid:this.joinInfo.vid,addr:this.signal.url,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer}),this._isProactiveJoin=!1,this.joinInfo.useLocalAccessPoint)){const e=this.signal.url&&this.signal.url.match(/wss\:\/\/([^:]+):(\d+)/);if(!e)return HD.error("[".concat(this.store.clientId,"] set local access point after joined failed: ").concat(e)),void cP("error",this,"set local access point after joined failed: ".concat(e));OP("EVENT_REPORT_DOMAIN",e[1]),OP("EVENT_REPORT_BACKUP_DOMAIN",e[1]),OP("LOG_UPLOAD_SERVER","".concat(e[1],":6444"))}}),this.signal.on(fk.ON_UPLINK_STATS,e=>{this._statsCollector.updateUplinkStats(e)}),this.signal.on(pk.REQUEST_RECOVER,(e,t,r)=>{if(!this.joinInfo)return r(new UD(MD.UNEXPECTED_ERROR,"gateway: can not recover, no join info"));e&&(this.joinInfo.multiIP=e,this.hasChangeBGPAddress=!0),this.isSignalRecover=!0,SK(this,Yk.REQUEST_NEW_GATEWAY_LIST).then(t).catch(r)}),this.signal.on(pk.REQUEST_JOIN_INFO,async e=>{var t;this.updateTurnConfigFromSignal();const{iceParameters:r,dtlsParameters:i,rtpCapabilities:n}=await SK(this,Yk.REQUEST_P2P_CONNECTION_PARAMS,{turnServer:null===(t=this.joinInfo)||void 0===t?void 0:t.turnServer});e(this.getJoinMessage({ortc:{iceParameters:r,dtlsParameters:i,rtpCapabilities:n,version:"2"}}))}),this.signal.on(pk.REQUEST_REJOIN_INFO,e=>{e(this.getRejoinMessage())}),this.signal.on(pk.REPORT_JOIN_GATEWAY,(e,t)=>{this.joinInfo&&(uj.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!1,ec:e,addr:t,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer}),this._isProactiveJoin=!1)}),this.signal.on(pk.IS_P2P_DISCONNECTED,e=>{e(RK(this,Yk.IS_P2P_DISCONNECTED))}),this.signal.on(pk.DISCONNECT_P2P,()=>{this.emit(Yk.DISCONNECT_P2P)}),this.signal.on(pk.NEED_RENEW_SESSION,()=>{this.emit(Yk.NEED_RENEW_SESSION)}),this.signal.on(pk.REQUEST_SUCCESS,()=>{this._signalTimeout=!1}),this.signal.on(pk.REQUEST_TIMEOUT,()=>{this._signalTimeout=!0}),this.signal.on(pk.JOIN_RESPONSE,e=>{const t=this.getGatewayIpPort();t?this.emit(Yk.JOIN_RESPONSE,e,t.ip,t.port):this.emit(Yk.JOIN_RESPONSE,e)})}async tryUnsubBeforeResub(e,t){try{await this.signal.request(gk.UNSUBSCRIBE,{p2p_id:this.store.p2pId,stream_id:e,ortc:[t]},!0)}catch(t){throw HD.warning("unsubscribe warning",t),hP("warning",this,"tryUnsubBeforeResub",e,t.toString()),t}}async tryUnpubBeforeRepub(e,t){try{await this.signal.request(gk.UNPUBLISH,{stream_id:e,ortc:t},!0)}catch(t){throw HD.warning("unpublish warning: ",t),hP("warning",this,"tryUnpubBeforeRepub",e,t.toString()),t}}async tryMassUnsubBeforeResub(e){const t={users:e.map(e=>({stream_id:e.stream_id,stream_type:e.stream_type}))};try{await this.signal.request(gk.UNSUBSCRIBE_STREAMS,t,!0)}catch(t){throw HD.warning("massUnsubscribe warning",t),hP("warning",this,"tryUnsubAllBeforeResub",e.map(e=>e.stream_id),t.toString()),t}}async muteLocal(e,t){const r={action:e.find(e=>e.stream_type===Wk.Audio)?"mute_local_audio":"mute_local_video",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(gk.CONTROL,r,!0,!0)}catch(e){throw HD.warning("gateway unmuteLocal warning: ",e),hP("warning",this,"muteLocal",t,e.toString()),e}}async unmuteLocal(e,t){const r={action:e.find(e=>e.stream_type===Wk.Audio)?"unmute_local_audio":"unmute_local_video",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(gk.CONTROL,r,!0,!0)}catch(e){throw HD.warning("gateway muteLocal warning: ",e),hP("warning",this,"unmuteLocal",t,e.toString()),e}}uploadStats(e,t){this.signal.upload(e,t)}getSignalRTT(){return this.signal.rtt}async restartICE(e){const t={p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:e};try{const e=await this.signal.request(gk.RESTART_ICE,t,!0),r=this.getGatewayIpPort();return{restartICEResponse:e,gatewayIP:null==r?void 0:r.ip,gatewayPort:null==r?void 0:r.port}}catch(e){throw HD.warning("P2PChannel.restartICE warning: ",e),hP("warning",this,"restartICE",void 0,e.toString()),e}}reconnect(){"CONNECTED"===this.state&&this.signal.reconnect(void 0,hk.P2P_FAILED)}getGatewayIpPort(){var e;if(!NP("GATEWAY_WSS_ADDRESS")&&null!==(e=this.joinInfo)&&void 0!==e&&e.gatewayAddrs){const e=this.joinInfo.gatewayAddrs[this.signal.currentURLIndex];return(e.ip||e.ip6)&&e.port?e.ip6?{ip:e.ip6,port:e.port}:{ip:e.ip,port:e.port}:void 0}}async setPublishAudioFilterEnabled(e){await this.signal.request(gk.SET_PARAMETER,{enablePublishAudioFilter:e})}})||ZJ;
/*! formdata-polyfill. MIT License. Jimmy W?rting <https://jimmy.warting.se/opensource> */function iq(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function nq(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?iq(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):iq(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}!function(){var t;function r(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var i="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,r){return e==Array.prototype||e==Object.prototype||(e[t]=r.value),e};var n,o=function(t){t=["object"==typeof globalThis&&globalThis,t,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof e&&e];for(var r=0;r<t.length;++r){var i=t[r];if(i&&i.Math==Math)return i}throw Error("Cannot find global object")}(this);function s(e,t){if(t)e:{var r=o;e=e.split(".");for(var n=0;n<e.length-1;n++){var s=e[n];if(!(s in r))break e;r=r[s]}(t=t(n=r[e=e[e.length-1]]))!=n&&null!=t&&i(r,e,{configurable:!0,writable:!0,value:t})}}function a(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function c(e){var t="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return t?t.call(e):{next:r(e)}}if(s("Symbol",(function(e){function t(e,t){this.A=e,i(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.A};var r="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",n=0;return function e(i){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(r+(i||"")+"_"+n++,i)}})),s("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var t="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),n=0;n<t.length;n++){var s=o[t[n]];"function"==typeof s&&"function"!=typeof s.prototype[e]&&i(s.prototype,e,{configurable:!0,writable:!0,value:function(){return a(r(this))}})}return e})),"function"==typeof Object.setPrototypeOf)n=Object.setPrototypeOf;else{var d;e:{var u={};try{u.__proto__={a:!0},d=u.a;break e}catch(e){}d=!1}n=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var A=n;function h(){this.m=!1,this.j=null,this.v=void 0,this.h=1,this.u=this.C=0,this.l=null}function l(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function p(e,t){return e.h=3,{value:t}}function g(e){this.g=new h,this.G=e}function E(e,t,r,i){try{var n=t.call(e.g.j,r);if(!(n instanceof Object))throw new TypeError("Iterator result "+n+" is not an object");if(!n.done)return e.g.m=!1,n;var o=n.value}catch(t){return e.g.j=null,e.g.s(t),f(e)}return e.g.j=null,i.call(e.g,o),f(e)}function f(e){for(;e.g.h;)try{var t=e.G(e.g);if(t)return e.g.m=!1,{value:t.value,done:!1}}catch(t){e.g.v=void 0,e.g.s(t)}if(e.g.m=!1,e.g.l){if(t=e.g.l,e.g.l=null,t.F)throw t.D;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function I(e){this.next=function(t){return e.o(t)},this.throw=function(t){return e.s(t)},this.return=function(t){return function(e,t){l(e.g);var r=e.g.j;return r?E(e,"return"in r?r.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),f(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function m(e,t){return t=new I(new g(t)),A&&e.prototype&&A(t,e.prototype),t}if(h.prototype.o=function(e){this.v=e},h.prototype.s=function(e){this.l={D:e,F:!0},this.h=this.C||this.u},h.prototype.return=function(e){this.l={return:e},this.h=this.u},g.prototype.o=function(e){return l(this.g),this.g.j?E(this,this.g.j.next,e,this.g.o):(this.g.o(e),f(this))},g.prototype.s=function(e){return l(this.g),this.g.j?E(this,this.g.j.throw,e,this.g.o):(this.g.s(e),f(this))},s("Array.prototype.entries",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var r=0,i=!1,n={next:function(){if(!i&&r<e.length){var n=r++;return{value:t(n,e[n]),done:!1}}return i=!0,{done:!0,value:void 0}}};return n[Symbol.iterator]=function(){return n},n}(this,(function(e,t){return[e,t]}))}})),"undefined"!=typeof Blob&&("undefined"==typeof FormData||!FormData.prototype.keys)){var _=function(e,t){for(var r=0;r<e.length;r++)t(e[r])},C=function(e){return e.replace(/\r?\n|\r/g,"\r\n")},S=function(e,t,r){return t instanceof Blob?(r=void 0!==r?String(r+""):"string"==typeof t.name?t.name:"blob",t.name===r&&"[object Blob]"!==Object.prototype.toString.call(t)||(t=new File([t],r)),[String(e),t]):[String(e),String(t)]},v=function(e,t){if(e.length<t)throw new TypeError(t+" argument required, but only "+e.length+" present.")},T="object"==typeof globalThis?globalThis:"object"==typeof window?window:"object"==typeof self?self:this,R=T.FormData,y=T.XMLHttpRequest&&T.XMLHttpRequest.prototype.send,w=T.Request&&T.fetch,b=T.navigator&&T.navigator.sendBeacon,O=T.Element&&T.Element.prototype,N=T.Symbol&&Symbol.toStringTag;N&&(Blob.prototype[N]||(Blob.prototype[N]="Blob"),"File"in T&&!File.prototype[N]&&(File.prototype[N]="File"));try{new File([],"")}catch(e){T.File=function(e,t,r){return e=new Blob(e,r||{}),Object.defineProperties(e,{name:{value:t},lastModified:{value:+(r&&void 0!==r.lastModified?new Date(r.lastModified):new Date)},toString:{value:function(){return"[object File]"}}}),N&&Object.defineProperty(e,N,{value:"File"}),e}}var D=function(e){return e.replace(/\n/g,"%0A").replace(/\r/g,"%0D").replace(/"/g,"%22")},P=function(e){this.i=[];var t=this;e&&_(e.elements,(function(e){if(e.name&&!e.disabled&&"submit"!==e.type&&"button"!==e.type&&!e.matches("form fieldset[disabled] *"))if("file"===e.type){var r=e.files&&e.files.length?e.files:[new File([],"",{type:"application/octet-stream"})];_(r,(function(r){t.append(e.name,r)}))}else"select-multiple"===e.type||"select-one"===e.type?_(e.options,(function(r){!r.disabled&&r.selected&&t.append(e.name,r.value)})):"checkbox"===e.type||"radio"===e.type?e.checked&&t.append(e.name,e.value):(r="textarea"===e.type?C(e.value):e.value,t.append(e.name,r))}))};if((t=P.prototype).append=function(e,t,r){v(arguments,2),this.i.push(S(e,t,r))},t.delete=function(e){v(arguments,1);var t=[];e=String(e),_(this.i,(function(r){r[0]!==e&&t.push(r)})),this.i=t},t.entries=function e(){var t,r=this;return m(e,(function(e){if(1==e.h&&(t=0),3!=e.h)return t<r.i.length?e=p(e,r.i[t]):(e.h=0,e=void 0),e;t++,e.h=2}))},t.forEach=function(e,t){v(arguments,1);for(var r=c(this),i=r.next();!i.done;i=r.next()){var n=c(i.value);i=n.next().value,n=n.next().value,e.call(t,n,i,this)}},t.get=function(e){v(arguments,1);var t=this.i;e=String(e);for(var r=0;r<t.length;r++)if(t[r][0]===e)return t[r][1];return null},t.getAll=function(e){v(arguments,1);var t=[];return e=String(e),_(this.i,(function(r){r[0]===e&&t.push(r[1])})),t},t.has=function(e){v(arguments,1),e=String(e);for(var t=0;t<this.i.length;t++)if(this.i[t][0]===e)return!0;return!1},t.keys=function e(){var t,r,i,n,o=this;return m(e,(function(e){if(1==e.h&&(t=c(o),r=t.next()),3!=e.h)return r.done?void(e.h=0):(i=r.value,n=c(i),p(e,n.next().value));r=t.next(),e.h=2}))},t.set=function(e,t,r){v(arguments,2),e=String(e);var i=[],n=S(e,t,r),o=!0;_(this.i,(function(t){t[0]===e?o&&(o=!i.push(n)):i.push(t)})),o&&i.push(n),this.i=i},t.values=function e(){var t,r,i,n,o=this;return m(e,(function(e){if(1==e.h&&(t=c(o),r=t.next()),3!=e.h)return r.done?void(e.h=0):(i=r.value,(n=c(i)).next(),p(e,n.next().value));r=t.next(),e.h=2}))},P.prototype._asNative=function(){for(var e=new R,t=c(this),r=t.next();!r.done;r=t.next()){var i=c(r.value);r=i.next().value,i=i.next().value,e.append(r,i)}return e},P.prototype._blob=function(){var e="----formdata-polyfill-"+Math.random(),t=[],r="--"+e+'\r\nContent-Disposition: form-data; name="';return this.forEach((function(e,i){return"string"==typeof e?t.push(r+D(C(i))+'"\r\n\r\n'+C(e)+"\r\n"):t.push(r+D(C(i))+'"; filename="'+D(e.name)+'"\r\nContent-Type: '+(e.type||"application/octet-stream")+"\r\n\r\n",e,"\r\n")})),t.push("--"+e+"--"),new Blob(t,{type:"multipart/form-data; boundary="+e})},P.prototype[Symbol.iterator]=function(){return this.entries()},P.prototype.toString=function(){return"[object FormData]"},O&&!O.matches&&(O.matches=O.matchesSelector||O.mozMatchesSelector||O.msMatchesSelector||O.oMatchesSelector||O.webkitMatchesSelector||function(e){for(var t=(e=(this.document||this.ownerDocument).querySelectorAll(e)).length;0<=--t&&e.item(t)!==this;);return-1<t}),N&&(P.prototype[N]="FormData"),y){var L=T.XMLHttpRequest.prototype.setRequestHeader;T.XMLHttpRequest.prototype.setRequestHeader=function(e,t){L.call(this,e,t),"content-type"===e.toLowerCase()&&(this.B=!0)},T.XMLHttpRequest.prototype.send=function(e){e instanceof P?(e=e._blob(),this.B||this.setRequestHeader("Content-Type",e.type),y.call(this,e)):y.call(this,e)}}w&&(T.fetch=function(e,t){return t&&t.body&&t.body instanceof P&&(t.body=t.body._blob()),w.call(this,e,t)}),b&&(T.navigator.sendBeacon=function(e,t){return t instanceof P&&(t=t._asNative()),b.call(this,e,t)}),T.FormData=P}}();let oq=1;function sq(e,t,r,i,n){oq+=1;const o={sid:r.sid,command:"convergeAllocateEdge",uid:"666",appId:r.appId,ts:Math.floor(Date.now()/1e3),seq:oq,requestId:oq,version:IP,cname:r.cname},s={service_name:t,json_body:JSON.stringify(o)};let a,c,d=e[0];return FD(async()=>{a=Date.now();const e=await XV(d,{data:s,cancelToken:i,headers:{"X-Packet-Service-Type":"0","X-Packet-URI":"61"}});if(c=Date.now()-a,0!==e.code){const t=new UD(MD.UNEXPECTED_RESPONSE,"live streaming ap error, code"+e.code,{retry:!0,responseTime:c});throw HD.error(t.toString()),hP("error",["AjaxAPI"],"requestLiveStreamingWorkerManager",void 0,t.toString()),t}const r=JSON.parse(e.json_body);if(200!==r.code){const e=new UD(MD.UNEXPECTED_RESPONSE,"live streaming app center error, code: ".concat(r.code,", reason: ").concat(r.reason),{code:r.code,responseTime:c});throw HD.error(e.toString()),hP("error",["AjaxAPI"],"requestLiveStreamingWorkerManager",void 0,e.toString()),e}if(!r.servers||0===r.servers.length){const e=new UD(MD.UNEXPECTED_RESPONSE,"live streaming app center empty server",{code:r.code,responseTime:c});throw HD.error(e.toString()),hP("error",["AjaxAPI"],"requestLiveStreamingWorkerManager",void 0,e.toString()),e}const n=function(e,t){return{addressList:e.servers.map(e=>"wss://".concat(e.address.replace(/\./g,"-"),".").concat(NP("WORKER_DOMAIN"),":").concat(e.wss,"?serviceName=").concat(encodeURIComponent(t))),workerToken:e.workerToken,vid:e.vid}}(r,t);return NP("LIVE_STREAMING_ADDRESS")&&(n.addressList=NP("LIVE_STREAMING_ADDRESS")instanceof Array?NP("LIVE_STREAMING_ADDRESS"):[NP("LIVE_STREAMING_ADDRESS")]),nq(nq({},n),{},{responseTime:c})},(i,n)=>(uj.apworkerEvent(r.sid,{success:!0,sc:200,serviceName:t,responseDetail:JSON.stringify(i.addressList),firstSuccess:0===n,responseTime:c,serverIp:e[n%e.length]}),!1),(i,n)=>(uj.apworkerEvent(r.sid,{success:!1,sc:i.data&&i.data.code||200,serviceName:t,responseTime:c,serverIp:e[n%e.length]}),!!(i.code!==MD.OPERATION_ABORTED&&i.code!==MD.UNEXPECTED_RESPONSE||i.data&&i.data.retry)&&(d=e[(n+1)%e.length],!0)),n)}let aq=1;function cq(e,t,r,i){let{url:n,areaCode:o}=e;hP("debug",["AjaxAPI",t.clientId],"requestChooseServer",{url:n,areaCode:o});const s=Date.now();let a;const[c,d]=lq(t,o,[RF.CHOOSE_SERVER]);let u=ZV.networkState;return FD(async()=>{u&&ZV.networkState===lB.OFFLINE&&ZV.onlineWaiter&&await nT.race([ZV.onlineWaiter,gK(i&&i.maxRetryTimeout||xD.maxRetryTimeout)]),u=ZV.networkState;const{data:e,headers:o}=await XV(n,{data:c,cancelToken:r,headers:{"Content-Type":"multipart/form-data;"}},!0,!0);a="1"===o.http3?1:-1,uj.reportResourceTiming(n,t.sid),uq(e,n,t,s,[RF.CHOOSE_SERVER],a);const d=cK(e,RF.CHOOSE_SERVER);return Aq(d),iK(d,n)},e=>(e&&uj.joinChooseServer(t.sid,{lts:s,succ:!0,csAddr:n,opid:d,serverList:e.gatewayAddrs.map(e=>e.address),ec:null,cid:e.cid.toString(),uid:e.uid.toString(),csIp:e.csIp,unilbsServerIds:[RF.CHOOSE_SERVER].toString(),isHttp3:a}),!1),e=>e.code!==MD.OPERATION_ABORTED&&(e.code===MD.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(uj.joinChooseServer(t.sid,{lts:s,succ:!1,csAddr:n,serverList:null,opid:d,ec:e.code,csIp:e.data&&e.data.csIp,unilbsServerIds:[RF.CHOOSE_SERVER].toString(),extend:JSON.stringify({networkState:u}),isHttp3:a}),HD.warning("[".concat(t.clientId,"] Choose server network error, retry"),e),cP("warning",["AjaxAPI",t.clientId],"Choose server network error, retry, ".concat(e)),!0)),i)}function dq(e,t,r,i){let n,{url:o,areaCode:s,serviceIds:a}=e;hP("debug",["AjaxAPI",t.clientId],"requestMultiUnilbs",{url:o,areaCode:s,serviceIds:a});const c=Date.now(),[d,u]=lq(t,s,a);let A=void 0;return FD(async()=>{A&&ZV.networkState===lB.OFFLINE&&ZV.onlineWaiter&&await nT.race([ZV.onlineWaiter,gK(i&&i.maxRetryTimeout||xD.maxRetryTimeout)]),A=ZV.networkState;const{data:e,headers:s}=await XV(o,{data:d,cancelToken:r,headers:{"Content-Type":"multipart/form-data;"}},!0,!0);n="1"===s.http3?1:-1,uj.reportResourceTiming(o,t.sid),uq(e,o,t,c,a,n);const u=cK(e,RF.CHOOSE_SERVER),h=cK(e,"proxy5"===t.cloudProxyServer?RF.CLOUD_PROXY_5:"proxy3"===t.cloudProxyServer||"proxy4"===t.cloudProxyServer?RF.CLOUD_PROXY:RF.CLOUD_PROXY_FALLBACK);return Aq(u),{gatewayInfo:iK(u,o),proxyInfo:h,url:o}},e=>(e.gatewayInfo&&uj.joinChooseServer(t.sid,{lts:c,succ:!0,csAddr:o,serverList:e.gatewayInfo.gatewayAddrs.map(e=>e.address),ec:null,opid:u,cid:e.gatewayInfo.cid.toString(),uid:e.gatewayInfo.uid.toString(),csIp:e.gatewayInfo.csIp,unilbsServerIds:a.toString(),isHttp3:n}),e.proxyInfo&&uj.joinWebProxyAP(t.sid,{lts:c,sucess:1,apServerAddr:o,turnServerAddrList:e.proxyInfo.addresses.map(e=>e.ip).join(","),errorCode:null,eventType:t.cloudProxyServer,unilbsServerIds:a.toString()}),!1),e=>e.code!==MD.OPERATION_ABORTED&&(e.code===MD.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(uj.joinWebProxyAP(t.sid,{lts:c,sucess:0,apServerAddr:o,turnServerAddrList:null,errorCode:e.code,eventType:t.cloudProxyServer,unilbsServerIds:a.toString(),extend:JSON.stringify({networkState:A})}),HD.warning("[".concat(t.clientId,"] multi unilbs network error, retry"),e),cP("warning",["AjaxAPI",t.clientId],"multi unilbs network error, retry, ".concat(e)),!0)),i)}const uq=(e,t,r,i,n,o)=>{const s=[],a=s=>{4096===s.flag?uj.joinChooseServer(r.sid,{lts:i,succ:!1,csAddr:t,opid:e.opid,serverList:null,ec:s.error.message,csIp:s.error.data&&s.error.data.csIp,unilbsServerIds:n.toString(),isHttp3:o}):1048576!==s.flag&&4194304!==s.flag&&4194310!==s.flag||uj.joinWebProxyAP(r.sid,{lts:i,sucess:0,apServerAddr:t,turnServerAddrList:null,errorCode:s.error.code,eventType:r.cloudProxyServer,unilbsServerIds:n.toString()})};if(e.response_body.forEach(t=>{const r=t.buffer.code;if(23===t.uri&&0===r&&!t.buffer.edges_services)if(4194310===t.buffer.flag)HD.warning("no edge services in ap response of proxy fallback, will not set proxy in iceServers"),t.buffer.edges_services=[];else{const r={error:new UD(MD.CAN_NOT_GET_GATEWAY_SERVER,"no edge services in ap response",{retry:!0,csIp:e.detail[502]}),flag:t.buffer.flag};s.push(r),a(r)}if(0!==r){const i=NJ(r),n={error:new UD(MD.CAN_NOT_GET_GATEWAY_SERVER,i.desc,{desc:i.desc,retry:i.retry,csIp:e.detail[502]}),flag:t.buffer.flag};4194310===t.buffer.flag?HD.warning(n.error.toString()):s.push(n),a(n)}}),s.length)throw HD.warning("[".concat(r.clientId,"] multi unilbs ").concat(t," failed, ").concat(s.map(e=>"flag: ".concat(e.flag,", message: ").concat(e.error.message,", retry: ").concat(e.error.data.retry)).join(" | "))),hP("warning",["AjaxAPI",r.clientId],"checkMultiUnilbsResponseValid",{url:t},s.map(e=>({flag:e.flag,message:e.error.message,retry:e.error.data.retry}))),new UD(MD.CAN_NOT_GET_GATEWAY_SERVER,s.map(e=>"flag: ".concat(e.flag,", message: ").concat(e.error.message)).join(" | "),{retry:!!s.find(e=>e.error.data.retry),csIp:e.detail[502],desc:[...new Set(s.map(e=>{var t,r;return null==e||null===(t=e.error)||void 0===t||null===(r=t.data)||void 0===r?void 0:r.desc}).filter(e=>!!e))]})},Aq=e=>{if(e.addresses&&0===e.addresses.length&&0===e.code)throw new UD(MD.CAN_NOT_GET_GATEWAY_SERVER,"void gateway address",{retry:!0,csIp:e.detail&&e.detail[502]});if(NP("GATEWAY_ADDRESS")&&NP("GATEWAY_ADDRESS").length>0){HD.debug("assign gateway address to",NP("GATEWAY_ADDRESS")),cP("debug",["AjaxAPI"],"assign gateway address to ".concat(JSON.stringify(NP("GATEWAY_ADDRESS"))));const t=NP("GATEWAY_ADDRESS").map(t=>({ip:t.ip,port:t.port,ticket:e.addresses[0]&&e.addresses[0].ticket}));e.addresses=t}},hq=(e,t)=>{if(e.response_body&&e.response_body.length){const t=e.response_body[0];if(0!==t.buffer.code){const e=NJ(t.buffer.code);throw new UD(MD.UPDATE_TICKET_FAILED,"[".concat(t.buffer.code,"]: ").concat(e.desc),{retry:e.retry})}return t.buffer.ticket}throw HD.debug("update ticket request received ap response without response body:",t),cP("debug",["AjaxAPI"],"update ticket request received ap response without response body: ".concat(t)),new UD(MD.UPDATE_TICKET_FAILED,"cannot find response body from ap response",{retry:!1})},lq=(e,t,r)=>{const i=Math.floor(Math.random()*10**12),n={appid:e.appId,client_ts:Date.now(),opid:i,sid:e.sid,request_bodies:[{uri:22,buffer:{cname:e.cname,detail:{6:e.stringUid,11:t,12:NP("USE_NEW_TOKEN")?"1":void 0},key:e.token,service_ids:r,uid:e.uid||0}}]};n.request_bodies.forEach(t=>{e.multiIP&&e.multiIP.gateway_ip&&(t.buffer.detail[5]=JSON.stringify({vocs_ip:[e.multiIP.uni_lbs_ip],vos_ip:[e.multiIP.gateway_ip]}))});const o=new FormData;return o.append("request",JSON.stringify(n)),[o,i]},pq=(e,t)=>{const r=Math.floor(Math.random()*10**12),i={appid:e.appId,client_ts:Date.now(),opid:r,sid:e.sid,request_bodies:[{uri:28,buffer:{cname:e.cname,detail:{1:"",6:e.stringUid,12:"1"},token:e.token,service_ids:t,uid:e.uid||0,edges_services:e.apResponse.addresses.map(e=>({ip:e.ip,port:e.port}))}}]},n=new FormData;return n.append("request",JSON.stringify(i)),[n,r]};let gq=0;const Eq=()=>{const e=NP("AREAS");0===e.length&&e.push(tB.GLOBAL);return Sh(e).call(e,(e,t,r)=>{const i=fq(t);return i?0===r?i:"".concat(e,",").concat(i):e},"")},fq=e=>e===tB.OVERSEA?"".concat(oB.ASIA,",").concat(oB.EUROPE,",").concat(oB.AFRICA,",").concat(oB.NORTH_AMERICA,",").concat(oB.SOUTH_AMERICA,",").concat(oB.OCEANIA):oB[e],Iq={GLOBAL:{ASIA:[tB.CHINA,tB.JAPAN,tB.INDIA,tB.KOREA,tB.HKMC],EUROPE:[],NORTH_AMERICA:[tB.US],SOUTH_AMERICA:[],OCEANIA:[],AFRICA:[]}},mq=Object.keys(Iq[tB.GLOBAL]),_q=[tB.CHINA,tB.NORTH_AMERICA,tB.EUROPE,tB.ASIA,tB.JAPAN,tB.INDIA,tB.OCEANIA,tB.SOUTH_AMERICA,tB.AFRICA,tB.KOREA,tB.HKMC,tB.US],Cq=function(e,t){let r=[];if(e.includes(tB.GLOBAL)){const o=[tB.GLOBAL,tB.OVERSEA],s=Object.keys(sB);if(t===tB.GLOBAL)throw new UD(MD.INVALID_PARAMS,"GLOBAL is an invalid excludedArea value");if(t===tB.CHINA)r=[tB.OVERSEA];else if(n=t,mq.includes(n)){const e=(i=t,Iq[tB.GLOBAL][i]||[]),n=[...o,t,...e];r=s.filter(e=>!n.includes(e))}else if(function(e){let t=!1;return mq.forEach(r=>{Iq[tB.GLOBAL][r].includes(e)&&(t=!0)}),t}(t)){const e=function(e){let t;return mq.forEach(r=>{Iq[tB.GLOBAL][r].includes(e)&&(t=r)}),t}(t),i=[...o,e,t];r=s.filter(e=>!i.includes(e))}else r=e;r=function(e){const t=[];return _q.forEach(r=>{e.includes(r)&&t.push(r)}),t.concat(e.filter(e=>!_q.includes(e)))}(r)}else r=e;var i,n;return r};async function Sq(e,t,r,i){const n=async function(e,t,r,i){let n=null;const o=[],s=async()=>{const n=NP("WEBCS_DOMAIN").slice(0,NP("AJAX_REQUEST_CONCURRENT")).map(t=>({url:e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(t+"/api/v2/transpond/webrtc?v=2"):"https://".concat(t,"/api/v2/transpond/webrtc?v=2"),areaCode:Eq()})),s=i.recordJoinChannelService({startTs:Date.now(),status:"pending",service:"chooseServer",urls:n.map(e=>e.url)}),a=await MK({fragementLength:NP("FRAGEMENT_LENGTH"),referenceList:n,asyncMapHandler:i=>(HD.debug("[".concat(e.clientId,"] Connect to choose_server:"),i.url),cq(i,e,t,r)),allFailedhandler:e=>{throw i.recordJoinChannelService({endTs:Date.now(),status:"error",errors:e},s),e[0]},promisesCollector:o});return i.recordJoinChannelService({endTs:Date.now(),status:"success"},s),a},a=async()=>{if(await gK(1e3),null!==n)return n;const s=NP("WEBCS_DOMAIN_BACKUP_LIST").map(t=>({url:e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(t+"/api/v2/transpond/webrtc?v=2"):"https://".concat(t,"/api/v2/transpond/webrtc?v=2"),areaCode:Eq()})),a=i.recordJoinChannelService({endTs:void 0,startTs:Date.now(),status:"pending",service:"chooseServer",urls:s.map(e=>e.url)}),c=await MK({fragementLength:NP("FRAGEMENT_LENGTH"),referenceList:s,asyncMapHandler:i=>(HD.debug("[".concat(e.clientId,"] Connect to backup choose_server:"),i.url),cq(i,e,t,r)),allFailedhandler:e=>{throw i.recordJoinChannelService({endTs:Date.now(),status:"error",errors:e},a),e[0]},promisesCollector:o});return i.recordJoinChannelService({endTs:Date.now(),status:"success"},a),c};try{return n=await CK([s(),a()]),o.length&&o.forEach(e=>e.cancel&&"function"==typeof e.cancel&&e.cancel()),n}catch(e){throw e[0]}}(e,t,r,i);return{gatewayInfo:await n}}async function vq(e,t,r,i,n){const o=e.cloudProxyServer;if("disabled"===o){if(!i)return;if(e.useLocalAccessPoint)return await Sq(e,t,r,n);if(NP("JOIN_WITH_FALLBACK_MEDIA_PROXY")){const{gatewayInfo:i,proxyInfo:o}=await wq(e,t,r,n);return e.turnServer&&"auto"!==e.turnServer.mode?(cP("debug",["Server",e.clientId],"do not set fallback turn because of already having turnserver"),{gatewayInfo:i}):(e.turnServer={mode:"manual",servers:o.map(e=>({turnServerURL:e.address,tcpport:e.tcpport||_P.tcpport,udpport:e.udpport||_P.udpport,username:e.username||_P.username,password:e.password||_P.password,forceturn:NP("JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE"),security:!0}))},{gatewayInfo:i})}return await Sq(e,t,r,n)}let s;if(["443only","normal"].includes(o)){let a;i?"normal"!==o?[a,s]=await nT.all([Rq(e,t,r),Sq(e,t,r,n)]):(a=await Rq(e,t,r),e.proxyServer=a.addresses[0],uj.setProxyServer(e.proxyServer),HD.setProxyServer(e.proxyServer),aP(e.proxyServer),s=await Sq(e,t,r,n)):(s=void 0,"normal"!==o?a=await Rq(e,t,r):(a=await Rq(e,t,r),e.proxyServer=a.addresses[0],uj.setProxyServer(e.proxyServer),HD.setProxyServer(e.proxyServer),aP(e.proxyServer))),e.turnServer={mode:"manual",servers:a.addresses.map(e=>({turnServerURL:e,tcpport:a.serverResponse.tcpport?a.serverResponse.tcpport:_P.tcpport,udpport:a.serverResponse.udpport?a.serverResponse.udpport:_P.udpport,username:a.serverResponse.username||_P.username,password:a.serverResponse.password||_P.password,forceturn:!0,security:!1}))}}else{const{proxyInfo:i,gatewayInfo:a}=await wq(e,t,r,n);s={gatewayInfo:a},e.turnServer={mode:"manual",servers:i.map(e=>({turnServerURL:e.address,tcpport:"proxy3"===o?void 0:e.tcpport?e.tcpport:_P.tcpport,udpport:"proxy4"===o?void 0:e.udpport?e.udpport:_P.udpport,username:e.username||_P.username,password:e.password||_P.password,forceturn:"proxy4"!==o,security:"proxy5"===o}))}}return HD.debug("[".concat(e.clientId,"] set proxy server: ").concat(e.proxyServer,", mode: ").concat(o)),hP("debug",["Server",e.clientId],"setCloudProxyServerAndGetServerInfo",{proxyServer:e.proxyServer,mode:e.cloudProxyServer}),s}async function Tq(e,t,r,i,n){const o=NP("ACCOUNT_REGISTER").slice(0,NP("AJAX_REQUEST_CONCURRENT"));let s=[];s=t.proxyServer?o.map(e=>"https://".concat(t.proxyServer,"/ap/?url=").concat(e+"/api/v1")):o.map(e=>"https://".concat(e,"/api/v1"));const a=null==n?void 0:n.recordJoinChannelService({startTs:Date.now(),status:"pending",service:"stringUID",urls:s});try{const o=await async function(e,t,r,i,n){const o=Date.now(),s={sid:r.sid,opid:10,appid:r.appId,string_uid:t};let a=e[0];const c=await FD(()=>XV(a+"".concat(-1===a.indexOf("?")?"?":"&","action=stringuid"),{data:s,cancelToken:i,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":72}}),(r,i)=>{if(0===r.code){if(r.uid<=0||r.uid>=Math.pow(2,32))throw HD.error("Invalid Uint Uid ".concat(t," => ").concat(r.uid),r),hP("error",["AjaxAPI"],"requestUserAccount","Invalid Uint Uid ".concat(t," => ").concat(r.uid,", ").concat(r)),uj.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:r.uid,errorCode:MD.INVALID_UINT_UID_FROM_STRING_UID,extend:s}),new UD(MD.INVALID_UINT_UID_FROM_STRING_UID);return uj.reqUserAccount(s.sid,{lts:o,success:!0,serverAddr:a,stringUid:s.string_uid,uid:r.uid,errorCode:null,extend:s}),!1}const n=NJ(r.code);return n.retry&&(a=e[(i+1)%e.length]),uj.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:r.uid,errorCode:n.desc,extend:s}),n.retry},(t,r)=>t.code!==MD.OPERATION_ABORTED&&(uj.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:null,errorCode:t.code,extend:s}),a=e[(r+1)%e.length],!0),n);if(0!==c.code){const e=NJ(c.code);throw new UD(MD.UNEXPECTED_RESPONSE,e.desc)}return c}(s,e,t,r,i);return null==n||n.recordJoinChannelService({status:"success",endTs:Date.now()},a),o.uid}catch(e){throw null==n||n.recordJoinChannelService({status:"error",endTs:Date.now(),errors:[e]},a),e}}async function Rq(e,t,r){let i=Date.now();const n=e.cloudProxyServer,o=NP("normal"===n?"PROXY_CS":"WEBCS_DOMAIN").map(t=>e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(t+"/api/v1"):"https://".concat(t,"/api/v1"));if(["proxy3","proxy4","proxy5"].includes(n)){const i=o.map(e=>({url:e,areaCode:Eq()}));let n=null;n=await MK({fragementLength:NP("FRAGEMENT_LENGTH"),referenceList:i,asyncMapHandler:i=>function(e,t,r,i){let{url:n,areaCode:o}=e;const s=Date.now(),a={opid:133,flag:"proxy5"===t.cloudProxyServer?4194304:1048576,ts:+new Date,key:t.token,cname:t.cname,sid:t.sid,detail:{6:t.stringUid,11:o},uid:t.uid||0};return FD(async()=>await XV(n,{data:a,cancelToken:r,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":69}}),e=>{if(0===e.code)return uj.joinWebProxyAP(t.sid,{lts:s,sucess:1,apServerAddr:n,turnServerAddrList:e.addresses.map(e=>e.ip).join(","),errorCode:null,eventType:t.cloudProxyServer}),!1;const r=NJ(e.code);throw new UD(MD.CAN_NOT_GET_GATEWAY_SERVER,r.desc,{retry:r.retry})},e=>e.code!==MD.OPERATION_ABORTED&&(e.code===MD.CAN_NOT_GET_GATEWAY_SERVER?(uj.joinWebProxyAP(a.sid,{lts:s,sucess:0,apServerAddr:n,turnServerAddrList:null,errorCode:e.code,eventType:t.cloudProxyServer}),HD.warning("[".concat(t.clientId,"] proxy ap server ").concat(n," failed, message: ").concat(e.message,", retry: ").concat(e.data.retry)),cP("warning",["AjaxAPI",t.clientId],"proxy ap server ".concat(n," failed, message: ").concat(e.message,", retry: ").concat(e.data.retry)),e.data.retry):(uj.joinWebProxyAP(a.sid,{lts:s,sucess:0,apServerAddr:n,turnServerAddrList:null,errorCode:e.code,eventType:t.cloudProxyServer}),!0)),i)}(i,e,t,r),allFailedhandler:()=>{throw HD.error("[".concat(e.clientId,"] can not get proxy server after trying several times")),new UD(MD.CAN_NOT_GET_PROXY_SERVER)}});const s=n.addresses;if(!s||0===s.length)throw HD.error("[".concat(e.clientId,"] can not get proxy server, empty proxy server list")),new UD(MD.CAN_NOT_GET_PROXY_SERVER,"empty proxy server list");return{addresses:s.map(e=>e.ip).map(rK),serverResponse:{tcpport:s[0].port||443,udpport:s[0].port||_P.udpport,username:_P.username,password:_P.password}}}let s=null;s=await MK({fragementLength:NP("FRAGEMENT_LENGTH"),referenceList:o,asyncMapHandler:i=>function(e,t,r,i){const n=Date.now(),o={command:"convergeAllocateEdge",sid:t.sid,appId:t.appId,token:t.token,uid:t.uid,cname:t.cname,ts:Math.floor(Date.now()/1e3),version:IP,seq:0,requestId:1};return FD(async()=>({res:await XV(e,{data:{service_name:"webrtc_proxy",json_body:JSON.stringify(o)},cancelToken:r,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":61}}),url:e}),e=>{if(!e.res.json_body)throw HD.debug("[".concat(t.clientId,"] Get proxy server failed: no json_body")),hP("error",["AjaxAPI",t.clientId],"requestProxyServerList","Get proxy server failed: no json_body"),new UD(MD.UNEXPECTED_RESPONSE,JSON.stringify(e.res));const r=JSON.parse(e.res.json_body);if(200!==r.code)throw HD.debug("[".concat(t.clientId,"] Get proxy server failed: response code [").concat(r.code,"], reason [").concat(r.reason,"]")),hP("error",["AjaxAPI",t.clientId],"requestProxyServerList","Get proxy server failed: response code [".concat(r.code,"], reason [").concat(r.reason,"]")),new UD(MD.UNEXPECTED_RESPONSE,JSON.stringify(e.res));return HD.debug("[".concat(t.clientId,"] App return server length"),r.servers.length),hP("debug",["AjaxAPI",t.clientId],"requestProxyServerList","",{length:r.servers.length}),!1},t=>t.code!==MD.OPERATION_ABORTED&&(uj.requestProxyAppCenter(o.sid,{lts:n,succ:!1,APAddr:e,workerManagerList:null,ec:t.code,response:t.message}),!0),i)}(i,e,t,r),allFailedhandler:()=>{throw HD.error("[".concat(e.clientId,"] can not get proxy server after trying several times")),new UD(MD.CAN_NOT_GET_PROXY_SERVER)}});const a=JSON.parse(s.res.json_body).servers.map(tK);if("443only"===e.cloudProxyServer)return{addresses:a,serverResponse:{tcpport:443,udpport:_P.udpport,username:_P.username,password:_P.password}};uj.requestProxyAppCenter(e.sid,{lts:i,succ:!0,APAddr:s.url,workerManagerList:JSON.stringify(a),ec:null,response:JSON.stringify(s.res)}),i=Date.now();const c=a.map(i=>function(e,t,r,i){const n=Date.now();let o=e;e.startsWith("http")||(o="https://".concat(e,":4000/v2/machine"));const s={command:"request",gatewayType:"http",appId:t.appId,cname:t.cname,uid:(t.uid||"").toString(),sdkVersion:"2.3.1",sid:t.sid,seq:1,ts:Date.now(),requestId:3,clientRequest:{appId:t.appId,cname:t.cname,uid:(t.uid||"").toString(),sid:t.sid}};return FD(async()=>({res:await XV(o,{data:s,cancelToken:r}),url:e}),e=>{if(!e.res.serverResponse)throw new UD(MD.UNEXPECTED_RESPONSE,"requeet worker manager server failed: serverResponse is undefined");return!1},t=>t.code!==MD.OPERATION_ABORTED&&(uj.requestProxyWorkerManager(s.sid,{lts:n,succ:!1,workerManagerAddr:e,ec:t.code,response:t.message}),!0),i)}(i,e,t,r));let d=null;try{d=await CK(c)}catch(t){throw HD.error("[".concat(e.clientId,"] can not get worker manager after trying several times")),new UD(MD.CAN_NOT_GET_PROXY_SERVER)}return c.forEach(e=>e.cancel()),uj.requestProxyWorkerManager(e.sid,{lts:i,succ:!0,workerManagerAddr:d.url,ec:null,response:JSON.stringify(d.res)}),{addresses:[d.url],serverResponse:d.res.serverResponse}}async function yq(e,t,r){const i=NP("CDS_AP").slice(0,NP("AJAX_REQUEST_CONCURRENT")).map(t=>e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(t+"/api/v1"):"https://".concat(t,"/api/v1?action=config")).map(i=>function(e,t,r,i){const n=oO(),o={flag:64,cipher_method:0,features:{device:n.name,system:n.os,system_general:navigator.userAgent,vendor:t.appId,version:IP,cname:t.cname,sid:t.sid,session_id:t.sid,detail:"",proxyServer:t.proxyServer}};return FD(()=>XV(e,{data:o,timeout:1e3,cancelToken:r,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":54}}),void 0,e=>e.code!==MD.OPERATION_ABORTED,i)}(i,e,t,r));let n=null,o=null,s={};try{n=await CK(i)}catch(e){if(e.code===MD.OPERATION_ABORTED)throw e;o=e}i.forEach(e=>e.cancel());if(uj.reportApiInvoke(e.sid,{name:ek.REQUEST_CONFIG_DISTRIBUTE,options:{error:o,res:n}}).onSuccess(),n&&n.test_tags)try{s=function(e){if(!e.test_tags)return{};const t=e.test_tags,r=Object.keys(t),i={};return r.forEach(e=>{var r;const n=Gb(r=e.slice(4)).call(r),o=JSON.parse(t[e])[1];i[n]=o}),i}(n)}catch(e){}return s}async function wq(e,t,r,i){const n=NP("PROXY_SERVER_TYPE3"),o=(e,t,r)=>{let i=r||n;return Array.isArray(i)&&(i=t%2==0?n[1]:n[0]),"https://".concat(i,"/ap/?url=").concat(e)};let s=null;const a=[],c=async()=>{const n=NP("WEBCS_DOMAIN").slice(0,NP("AJAX_REQUEST_CONCURRENT")).map((t,r)=>{let i;return i="disabled"===e.cloudProxyServer&&e.proxyServer?o("".concat(t,"/api/v2/transpond/webrtc?v=2"),r,e.proxyServer):"disabled"===e.cloudProxyServer||"fallback"===e.cloudProxyServer?"https://".concat(t,"/api/v2/transpond/webrtc?v=2"):o("".concat(t,"/api/v2/transpond/webrtc?v=2"),r),{url:i,areaCode:Eq(),serviceIds:[RF.CHOOSE_SERVER,"proxy5"===e.cloudProxyServer?RF.CLOUD_PROXY_5:"proxy3"===e.cloudProxyServer||"proxy4"===e.cloudProxyServer?RF.CLOUD_PROXY:RF.CLOUD_PROXY_FALLBACK]}}),s=i.recordJoinChannelService({startTs:Date.now(),status:"pending",service:"chooseServer",urls:n.map(e=>e.url)}),c=await MK({fragementLength:NP("FRAGEMENT_LENGTH"),referenceList:n,asyncMapHandler:i=>(HD.debug("[".concat(e.clientId,"] Connect to choose_server:"),i.url),dq(i,e,t,r)),allFailedhandler:e=>{throw i.recordJoinChannelService({endTs:Date.now(),status:"error",errors:e},s),e[0]},promisesCollector:a});return i.recordJoinChannelService({endTs:Date.now(),status:"success"},s),c},d=async()=>{if(await gK(1e3),null!==s)return s;const n=NP("WEBCS_DOMAIN_BACKUP_LIST").map((t,r)=>{let i;return i="disabled"===e.cloudProxyServer&&e.proxyServer?o("".concat(t,"/api/v2/transpond/webrtc?v=2"),r,e.proxyServer):"disabled"===e.cloudProxyServer||"fallback"===e.cloudProxyServer?"https://".concat(t,"/api/v2/transpond/webrtc?v=2"):o("".concat(t,"/api/v2/transpond/webrtc?v=2"),r),{url:i,areaCode:Eq(),serviceIds:[RF.CHOOSE_SERVER,"proxy5"===e.cloudProxyServer?RF.CLOUD_PROXY_5:"proxy3"===e.cloudProxyServer||"proxy4"===e.cloudProxyServer?RF.CLOUD_PROXY:RF.CLOUD_PROXY_FALLBACK]}}),c=i.recordJoinChannelService({startTs:Date.now(),status:"pending",service:"chooseServer",urls:n.map(e=>e.url)}),d=await MK({fragementLength:NP("FRAGEMENT_LENGTH"),referenceList:n,asyncMapHandler:i=>(HD.debug("[".concat(e.clientId,"] Connect to backup choose_server:"),i.url),dq(i,e,t,r)),allFailedhandler:e=>{throw i.recordJoinChannelService({endTs:Date.now(),status:"error",errors:e},c),e[0]},promisesCollector:a});return i.recordJoinChannelService({endTs:Date.now(),status:"success"},c),d};let u,A,h;try{({gatewayInfo:u,proxyInfo:A,url:h}=await CK([c(),d()]))}catch(e){throw e[0]}if(a.length&&a.forEach(e=>e.cancel&&"function"==typeof e.cancel&&e.cancel()),!u||!A)throw new UD(MD.UNEXPECTED_ERROR,"missing gateway or proxy response").print();if(e.apUrl=h,"disabled"!==e.cloudProxyServer&&Array.isArray(n)&&h){const t=new bJ(h).host;n.includes(t)&&(e.proxyServer=t,HD.setProxyServer(t),uj.setProxyServer(t),aP(t))}return s={gatewayInfo:u,proxyInfo:await dK(A,u.uid)},s}async function bq(e,t,r,i){const n=NP("UAP_AP").slice(0,NP("AJAX_REQUEST_CONCURRENT")).map(e=>t.proxyServer?"https://".concat(t.proxyServer,"/ap/?url=").concat(e+"/api/v1?action=uap"):"https://".concat(e,"/api/v1?action=uap"));return await sq(n,e,t,r,i)}async function Oq(e,t,r){const i=NP("UAP_AP").slice(0,NP("AJAX_REQUEST_CONCURRENT")).map(t=>e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(t+"/api/v1?action=uap"):"https://".concat(t,"/api/v1?action=uap")).map(i=>function(e,t,r,i){const n={command:"convergeAllocateEdge",sid:t.sid,appId:t.appId,token:t.token,ts:Date.now(),version:IP,cname:t.cname,uid:t.uid.toString(),requestId:aq,seq:aq};aq+=1;const o={service_name:"tele_channel",json_body:JSON.stringify(n)};return FD(async()=>{const t=await XV(e,{data:o,cancelToken:r,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":61}});if(0!==t.code){const e=new UD(MD.UNEXPECTED_RESPONSE,"cross channel ap error, code"+t.code,{retry:!0});throw HD.error(e.toString()),hP("error",["AjaxAPI"],"requestChannelMediaRelayWorkerManager",void 0,e.toString()),e}const i=JSON.parse(t.json_body);if(200!==i.code){const e=new UD(MD.UNEXPECTED_RESPONSE,"cross channel app center error, code: ".concat(i.code,", reason: ").concat(i.reason));throw HD.error(e.toString()),hP("error",["AjaxAPI"],"requestChannelMediaRelayWorkerManager",void 0,e.toString()),e}if(!i.servers||0===i.servers.length){const e=new UD(MD.UNEXPECTED_RESPONSE,"cross channel app center empty server");throw HD.error(e.toString()),hP("error",["AjaxAPI"],"requestChannelMediaRelayWorkerManager",void 0,e.toString()),e}return{vid:i.vid,workerToken:i.workerToken,addressList:i.servers.map(e=>"wss://".concat(e.address.replace(/\./g,"-"),".").concat(NP("WORKER_DOMAIN"),":").concat(e.wss))}},void 0,e=>!!(e.code!==MD.OPERATION_ABORTED&&e.code!==MD.UNEXPECTED_RESPONSE||e.data&&e.data.retry),i)}(i,e,t,r));try{const e=await CK(i);return i.forEach(e=>e.cancel()),e}catch(e){throw e[0]}}async function Nq(e,t,r){let i=null;const n=[],o=async o=>{const s=NP(o?"WEBCS_DOMAIN_BACKUP_LIST":"WEBCS_DOMAIN").map(t=>e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(t+"/api/v2/transpond/webrtc?v=2"):"https://".concat(t,"/api/v2/transpond/webrtc?v=2"));return o&&(await gK(1e3),null!==i)?i:await MK({fragementLength:NP("FRAGEMENT_LENGTH"),referenceList:s,asyncMapHandler:i=>(HD.debug("[".concat(e.clientId,"] update ticket, Connect to ").concat(o?"backup":""," choose_server:"),i),function(e,t,r,i){const[n]=pq(t,[RF.CHOOSE_SERVER]);let o=ZV.networkState;return FD(async()=>{o&&ZV.networkState===lB.OFFLINE&&ZV.onlineWaiter&&await nT.race([ZV.onlineWaiter,gK(i&&i.maxRetryTimeout||xD.maxRetryTimeout)]),o=ZV.networkState;const t=await XV(e,{data:n,cancelToken:r,headers:{"Content-Type":"multipart/form-data;"}},!0);return hq(t,e)},()=>!1,e=>e.code!==MD.OPERATION_ABORTED&&(e.code===MD.UPDATE_TICKET_FAILED?e.data.retry:(HD.warning("[".concat(t.clientId,"] update ticket network error, retry"),e),cP("warning",["AjaxAPI",t.clientId],"update ticket network error, retry, ".concat(e)),!0)),i)}(i,e,t,r)),allFailedhandler:e=>{throw e[0]},promisesCollector:n})};try{return i=await CK([o(!1),o(!0)]),n.length&&n.forEach(e=>e.cancel&&"function"==typeof e.cancel&&e.cancel()),i}catch(e){throw e[0]}}var Dq;function Pq(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Lq(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Pq(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Pq(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}let kq=gP("ConfigDistributeManager")(Dq=class extends kD{constructor(){super(),kO(this,"configs",void 0),kO(this,"joinInfo",void 0),kO(this,"cancelToken",void 0),kO(this,"retryConfig",{timeout:3e3,timeoutFactor:1.5,maxRetryCount:1,maxRetryTimeout:1e4}),kO(this,"interval",void 0),kO(this,"mutex",new Ej("config-distribute")),kO(this,"mutableParamsRead",!1)}startGetConfigDistribute(e,t){this.joinInfo=e,this.cancelToken=t,this.interval&&this.stopGetConfigDistribute(),this.updateConfigDistribute(),this.interval=window.setInterval(()=>{this.updateConfigDistribute()},NP("CONFIG_DISTRIBUTE_INTERVAL"))}stopGetConfigDistribute(){this.interval&&clearInterval(this.interval),this.interval=void 0,this.joinInfo=void 0,this.cancelToken=void 0}async awaitConfigDistributeComplete(){if(!this.mutex.isLocked)return;(await this.mutex.lock())()}async updateConfigDistribute(){if(!this.mutableParamsRead){this.mutableParamsRead=!0;uj.reportApiInvoke(null,{options:void 0,name:ek.LOAD_CONFIG_FROM_LOCALSTORAGE,tag:tk.TRACER}).onSuccess(JSON.stringify(PP))}if(!this.joinInfo||!this.cancelToken||!this.retryConfig)return HD.debug("[config-distribute] get config distribute interrupted have no joininfo"),void hP("debug",this,"updateConfigDistribute",void 0,"get config distribute interrupted have no joininfo");let e;const t=await this.mutex.lock();try{e=await yq(this.joinInfo,this.cancelToken,this.retryConfig),HD.debug("[config-distribute] get config distribute",JSON.stringify(e)),hP("debug",this,"updateConfigDistribute",e),e.limit_bitrate&&this.handleBitrateLimit(e.limit_bitrate),this.cacheGlobalParameterConfig(e),this.configs=e}catch(e){const t=new UD(MD.NETWORK_RESPONSE_ERROR,e);HD.warning("[config-distribute] ".concat(t.toString())),hP("warning",this,"updateConfigDistribute",void 0,e.toString())}finally{t()}}getBitrateLimit(){return this.configs?this.configs.limit_bitrate:void 0}handleBitrateLimit(e){var t;(t=e)&&t.uplink&&t.id&&void 0!==t.uplink.max_bitrate&&void 0!==t.uplink.min_bitrate&&(this.configs&&this.configs.limit_bitrate?this.configs&&this.configs.limit_bitrate&&this.configs.limit_bitrate.id!==e.id&&this.emit(aB.UPDATE_BITRATE_LIMIT,e):this.emit(aB.UPDATE_BITRATE_LIMIT,e))}getLowStreamConfigDistribute(){return this.configs&&this.configs.limit_bitrate&&Lq({},this.configs.limit_bitrate.low_stream_uplink)}cacheGlobalParameterConfig(e){var t;const r=DL(t=Object.keys(e).filter(e=>/^webrtc_ng_global_parameter/.test(e))).call(t);for(let t=0;t<r.length;t++)for(let i=r.length-1;i>t;i--){const t=r[i];if("number"==typeof e[t].__priority){const n=e[t].__priority,o=r[i-1];if("number"==typeof e[o].__priority){if(!(n>e[o].__priority))continue;{const e=t;r[i]=r[i-1],r[i-1]=e}}else{const e=t;r[i]=r[i-1],r[i-1]=e}}}const i={};r.forEach(t=>{const r=e[t],n=r.__expires;Object.keys(r).forEach(e=>{"__priority"===e||"__expires"===e||Object.prototype.hasOwnProperty.call(i,e)||(i[e]=Lq({value:r[e]},n&&{expires:n}))})});try{const e=JSON.stringify(i),t=window.btoa(e);window.localStorage.setItem("websdk_ng_global_parameter",t),HD.debug("Caching global parameters ".concat(e)),hP("debug",this,"cacheGlobalParameterConfig",e)}catch(e){HD.error("Error caching global parameters:",e.message),hP("error",this,"cacheGlobalParameterConfig",void 0,e.message)}}})||Dq;function Bq(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Mq(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Bq(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Bq(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class Uq extends kD{constructor(e,t,r,i){super(),kO(this,"spec",void 0),kO(this,"token",void 0),kO(this,"websocket",void 0),kO(this,"pingpongTimer",void 0),kO(this,"reconnectMode","retry"),kO(this,"serviceMode",void 0),kO(this,"reqId",0),kO(this,"commandReqId",0),kO(this,"handleWebSocketOpen",()=>{this.reconnectMode="retry",this.startPingPong()}),kO(this,"handleWebSocketMessage",e=>{if(!e.data)return;const t=JSON.parse(e.data);t.requestId?this.emit("@".concat(t.requestId,"-").concat(t.sid),t):this.serviceMode===Dk.INJECT?this.emit(xk.INJECT_STREAM_STATUS,t):(uj.workerEvent(this.spec.sid,{actionType:"status",serverCode:t.code,workerType:this.serviceMode===Dk.TRANSCODE?1:2}),this.emit(xk.PUBLISH_STREAM_STATUS,t))}),this.spec=t,this.token=e,this.serviceMode=i,this.websocket=new JJ("live-streaming",r),this.websocket.on(Nk.CONNECTED,this.handleWebSocketOpen),this.websocket.on(Nk.ON_MESSAGE,this.handleWebSocketMessage),this.websocket.on(Nk.REQUEST_NEW_URLS,(e,t)=>{SK(this,xk.REQUEST_NEW_ADDRESS).then(e).catch(t)}),this.websocket.on(Nk.RECONNECTING,()=>{this.websocket.reconnectMode=this.reconnectMode})}init(e){return this.websocket.init(e)}async request(e,t,r,i){this.reqId+=1,"request"===e&&(this.commandReqId+=1);const n=this.commandReqId,o=this.reqId;if(!o||!this.websocket)throw new UD(MD.UNEXPECTED_ERROR);const s=Mq({command:e,sdkVersion:"4.13.0"===IP?"0.0.1":IP,seq:o,requestId:o,allocate:r,cname:this.spec.cname,appId:this.spec.appId,sid:this.spec.sid,uid:this.spec.uid.toString(),ts:Math.floor(Date.now()/1e3)},t);if("closed"===this.websocket.state)throw new UD(MD.WS_DISCONNECT);const a=()=>new nT((e,t)=>{this.websocket.once(Nk.CLOSED,()=>t(new UD(MD.WS_ABORT))),this.websocket.once(Nk.CONNECTED,e)});"connected"!==this.websocket.state&&await a(),s.clientRequest&&(s.clientRequest.workerToken=this.token);const c=new nT((e,t)=>{const r=()=>{t(new UD(MD.WS_ABORT))};this.websocket.once(Nk.RECONNECTING,r),this.websocket.once(Nk.CLOSED,r),this.once("@".concat(o,"-").concat(this.spec.sid),t=>{e(t)})});i&&uj.workerEvent(this.spec.sid,Mq(Mq({},i),{},{requestId:n,actionType:"request",payload:JSON.stringify(t.clientRequest),serverCode:0,code:0}));const d=Date.now();this.websocket.sendMessage(s);let u=null;try{u=await c}catch(i){if("closed"===this.websocket.state)throw i;return await a(),await this.request(e,t,r)}return i&&uj.workerEvent(this.spec.sid,Mq(Mq({},i),{},{requestId:n,actionType:"response",payload:JSON.stringify(u.serverResponse),serverCode:u.code,success:200===u.code,responseTime:Date.now()-d})),200!==u.code&&this.handleResponseError(u),u}tryNextAddress(){this.reconnectMode="tryNext",this.websocket.reconnect("tryNext")}close(){const e="4.13.0"===IP?"0.0.1":IP;this.reqId+=1,"connected"===this.websocket.state?(this.websocket.sendMessage({command:"request",appId:this.spec.appId,cname:this.spec.cname,uid:this.spec.uid.toString(),sdkVersion:e,sid:this.spec.sid,seq:this.reqId,ts:Math.floor(Date.now()/1e3),requestId:this.reqId,clientRequest:{command:"DestroyWorker"}}),this.websocket.close(!1,!0)):this.websocket.close(!1),this.pingpongTimer&&(window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0)}handleResponseError(e){switch(e.code){case Fk.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM:return void HD.warning("live stream response already exists stream");case Fk.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR:case Fk.LIVE_STREAM_RESPONSE_BAD_STREAM:case Fk.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR:return new UD(MD.LIVE_STREAMING_INVALID_ARGUMENT,"",{code:e.code}).throw();case Fk.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST:if("UnpublishStream"===e.serverResponse.command||"UninjectStream"===e.serverResponse.command)return;throw new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"live stream response wm worker not exist",{retry:!0});case Fk.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED:return new UD(MD.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED,"",{code:e.code}).throw();case Fk.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const t=new UD(MD.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE);return this.emit(xk.WARNING,t,e.serverResponse.url)}case Fk.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN:{const t=new UD(MD.LIVE_STREAMING_WARN_FREQUENT_REQUEST);return this.emit(xk.WARNING,t,e.serverResponse.url)}case Fk.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH:throw new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"live stream response wm worker not exist",{retry:!0});case Fk.LIVE_STREAM_RESPONSE_NOT_SUPPORTED:return new UD(MD.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED,"",{code:e.code}).throw();case Fk.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM:{const t=new UD(MD.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT);return this.emit(xk.WARNING,t,e.serverResponse.url)}case Fk.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR:return new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"",{code:e.code}).throw();case Fk.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT:throw new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"live stream resource limit",{retry:!0,changeAddress:!0});case Fk.LIVE_STREAM_RESPONSE_WORKER_LOST:case Fk.LIVE_STREAM_RESPONSE_WORKER_QUIT:if("UnpublishStream"===e.serverResponse.command||"UninjectStream"===e.serverResponse.command)return;throw new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"error fail send message",{retry:!0,changeAddress:!0});case Fk.ERROR_FAIL_SEND_MESSAGE:if("UnpublishStream"===e.serverResponse.command||"UninjectStream"===e.serverResponse.command)return;if("UpdateTranscoding"===e.serverResponse.command||"ControlStream"===e.serverResponse.command)return new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"error fail send message",{code:e.code}).throw();throw new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"error fail send message",{retry:!0,changeAddress:!0});case Fk.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Fk.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Fk.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Fk.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:return new UD(MD.LIVE_STREAMING_CDN_ERROR,"",{code:e.code}).throw()}}startPingPong(){this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(()=>{"connected"===this.websocket.state&&this.request("ping",{}).catch(mK)},6e3)}}function xq(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function Qq(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?xq(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):xq(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class Fq extends kD{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:xD,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:xD;super(),kO(this,"onLiveStreamWarning",void 0),kO(this,"onLiveStreamError",void 0),kO(this,"onInjectStatusChange",void 0),kO(this,"spec",void 0),kO(this,"retryTimeout",1e4),kO(this,"connection",void 0),kO(this,"httpRetryConfig",void 0),kO(this,"wsRetryConfig",void 0),kO(this,"streamingTasks",new Map),kO(this,"isStartingStreamingTask",!1),kO(this,"taskMutex",new Ej("live-streaming")),kO(this,"cancelToken",PD.CancelToken.source()),kO(this,"transcodingConfig",void 0),kO(this,"injectConfig",Qq({},Uk)),kO(this,"injectLoopTimes",0),kO(this,"uapResponse",void 0),kO(this,"lastTaskId",1),kO(this,"statusError",new Map),this.spec=e,this.httpRetryConfig=r,this.wsRetryConfig=t}async setTranscodingConfig(e){const t=Qq(Qq({},Mk),e);66!==t.videoCodecProfile&&77!==t.videoCodecProfile&&100!==t.videoCodecProfile&&(HD.debug("[".concat(this.spec.clientId,"] set transcoding config, fix video codec profile: ").concat(t.videoCodecProfile," -> 100")),t.videoCodecProfile=100),t.transcodingUsers||(t.transcodingUsers=t.userConfigs),t.transcodingUsers&&(t.transcodingUsers=t.transcodingUsers.map(e=>Qq(Qq(Qq({},Lk),e),{},{zOrder:e.zOrder?e.zOrder+1:1}))),function(e){FL(e.width)||kL(e.width,"config.width",0,1e4),FL(e.height)||kL(e.height,"config.height",0,1e4),FL(e.videoBitrate)||kL(e.videoBitrate,"config.videoBitrate",1,1e6),FL(e.videoFrameRate)||kL(e.videoFrameRate,"config.videoFrameRate"),FL(e.lowLatency)||PL(e.lowLatency,"config.lowLatency"),FL(e.audioSampleRate)||LL(e.audioSampleRate,"config.audioSampleRate",[32e3,44100,48e3]),FL(e.audioBitrate)||kL(e.audioBitrate,"config.audioBitrate",1,128),FL(e.audioChannels)||LL(e.audioChannels,"config.audioChannels",[1,2,3,4,5]),FL(e.videoGop)||kL(e.videoGop,"config.videoGop"),FL(e.videoCodecProfile)||LL(e.videoCodecProfile,"config.videoCodecProfile",[66,77,100]),FL(e.userCount)||kL(e.userCount,"config.userCount",0,17),FL(e.backgroundColor)||kL(e.backgroundColor,"config.backgroundColor",0,16777215),FL(e.userConfigExtraInfo)||ML(e.userConfigExtraInfo,"config.userConfigExtraInfo",0,4096,!1),e.transcodingUsers&&!FL(e.transcodingUsers)&&(UL(e.transcodingUsers,"config.transcodingUsers"),e.transcodingUsers.forEach((e,t)=>{QL(e.uid),FL(e.x)||kL(e.x,"transcodingUser[".concat(t,"].x"),0,1e4),FL(e.y)||kL(e.y,"transcodingUser[".concat(t,"].y"),0,1e4),FL(e.width)||kL(e.width,"transcodingUser[".concat(t,"].width"),0,1e4),FL(e.height)||kL(e.height,"transcodingUser[".concat(t,"].height"),0,1e4),FL(e.zOrder)||kL(e.zOrder-1,"transcodingUser[".concat(t,"].zOrder"),0,100),FL(e.alpha)||kL(e.alpha,"transcodingUser[".concat(t,"].alpha"),0,1,!1)})),FL(e.watermark)||Bk(e.watermark,"watermark"),FL(e.backgroundImage)||Bk(e.backgroundImage,"backgroundImage"),e.images&&!FL(e.images)&&(UL(e.images,"config.images"),e.images.forEach((e,t)=>{Bk(e,"images[".concat(t,"]"))}))}(t);const r=[];t.images&&r.push(...t.images.map(e=>Qq(Qq(Qq({},kk),e),{},{zOrder:255}))),t.backgroundImage&&(r.push(Qq(Qq(Qq({},kk),t.backgroundImage),{},{zOrder:0})),delete t.backgroundImage),t.watermark&&(r.push(Qq(Qq(Qq({},kk),t.watermark),{},{zOrder:255})),delete t.watermark),t.images=r,t.transcodingUsers&&(t.userConfigs=t.transcodingUsers.map(e=>Qq({},e)),t.userCount=t.transcodingUsers.length,delete t.transcodingUsers);const i=(t.userConfigs||[]).map(e=>"number"==typeof e.uid?nT.resolve(e.uid):Tq(e.uid,this.spec,this.cancelToken.token,this.httpRetryConfig));if((await nT.all(i)).forEach((e,r)=>{t.userConfigs&&t.userConfigs[r]&&(t.userConfigs[r].uid=e)}),this.transcodingConfig=t,this.connection)try{var n;const e=await this.connection.request("request",{clientRequest:{command:"UpdateTranscoding",transcodingConfig:this.transcodingConfig}},!1,{command:"UpdateTranscoding",workerType:1,requestByUser:!0,tid:Array.from(MG(n=this.streamingTasks).call(n)).map(e=>e.taskId).join("#")});HD.debug("[".concat(this.spec.clientId,"] update live transcoding config success, code: ").concat(e.code,", config:"),JSON.stringify(this.transcodingConfig))}catch(e){if(!e.data||!e.data.retry)throw e;e.data.changeAddress&&this.connection.tryNextAddress(),this.streamingTasks.forEach(t=>{HD.warning("[".concat(this.spec.clientId,"] live streaming receive error"),e.toString(),"try to republish",t.url),this.startLiveStreamingTask(t.url,t.mode,e).then(()=>{HD.debug("[".concat(this.spec.clientId,"] live streaming republish ").concat(t.url," success"))}).catch(e=>{HD.error("[".concat(this.spec.clientId,"] live streaming republish failed"),t.url,e.toString()),this.onLiveStreamError&&this.onLiveStreamError(t.url,e)})})}}setInjectStreamConfig(e,t){this.injectConfig=Object.assign({},this.injectConfig,e),this.injectLoopTimes=t}async startLiveStreamingTask(e,t,r){var i;if(Array.from(MG(i=this.streamingTasks).call(i)).find(e=>e.mode===Dk.INJECT)&&t===Dk.INJECT)return new UD(MD.LIVE_STREAMING_TASK_CONFLICT,"inject stream over limit").throw();if(!this.transcodingConfig&&t===Dk.TRANSCODE)throw new UD(MD.INVALID_OPERATION,"[LiveStreaming] no transcoding config found, can not start transcoding streaming task");let n={command:"PublishStream",ts:Date.now(),url:e,uid:this.spec.uid.toString(),autoDestroyTime:100,acceptImageTimeout:!0};HD.debug("[".concat(this.spec.clientId,"] start live streaming ").concat(e,", mode: ").concat(t));const o=await this.taskMutex.lock();if(!this.connection&&r)return void o();if(this.streamingTasks.get(e)&&!r)return o(),new UD(MD.LIVE_STREAMING_TASK_CONFLICT).throw();try{this.connection||(this.connection=await this.connect(t))}catch(e){throw o(),e}switch(t){case Dk.TRANSCODE:n.transcodingConfig=Qq({},this.transcodingConfig);break;case Dk.RAW:break;case Dk.INJECT:n={cname:this.spec.cname,command:"InjectStream",sid:this.spec.sid,transcodingConfig:this.injectConfig,ts:Date.now(),url:e,loopTimes:this.injectLoopTimes}}this.uapResponse&&this.uapResponse.vid&&(n.vid=this.uapResponse.vid),this.isStartingStreamingTask=!0;const s=this.lastTaskId++;try{const i=new nT((t,i)=>{gK(this.retryTimeout).then(()=>{if(r)return i(r);const t=this.statusError.get(e);return t?(this.statusError.delete(e),i(t)):void 0})}),a=await nT.race([this.connection.request("request",{clientRequest:n},!0,{url:e,command:"PublishStream",workerType:t===Dk.TRANSCODE?1:2,requestByUser:!r,tid:s.toString()}),i]);this.isStartingStreamingTask=!1,HD.debug("[".concat(this.spec.clientId,"] live streaming started, code: ").concat(a.code)),this.streamingTasks.set(e,{clientRequest:n,mode:t,url:e,taskId:s}),o()}catch(i){if(o(),this.isStartingStreamingTask=!1,!i.data||!i.data.retry||r)throw i;return i.data.changeAddress?(this.connection.tryNextAddress(),await this.startLiveStreamingTask(e,t,i)):await this.startLiveStreamingTask(e,t,i)}}stopLiveStreamingTask(e){return new nT((t,r)=>{const i=this.streamingTasks.get(e);if(!i||!this.connection)return new UD(MD.UNEXPECTED_ERROR,"can not find streaming task to stop").throw();const n=i.mode;i.abortTask=()=>{HD.debug("[".concat(this.spec.clientId,"] stop live streaming success(worker exception)")),this.streamingTasks.delete(e),t()},this.connection.request("request",{clientRequest:{command:n===Dk.INJECT?"UninjectStream":"UnpublishStream",url:i.url}},!1,{url:e,command:"UnPublishStream",workerType:n===Dk.TRANSCODE?1:2,requestByUser:!0,tid:(this.lastTaskId++).toString()}).then(r=>{HD.debug("[".concat(this.spec.clientId,"] stop live streaming success, code: ").concat(r.code)),this.streamingTasks.delete(e),0===this.streamingTasks.size&&n!==Dk.INJECT&&(this.connection&&this.connection.close(),this.connection=void 0),t(),n===Dk.INJECT&&this.onInjectStatusChange&&this.onInjectStatusChange(Pk.INJECT_STREAM_STATUS_STOP_SUCCESS,this.spec.uid,e)}).catch(r)})}async controlInjectStream(e,t,r,i){const n=this.streamingTasks.get(e);if(!n||!this.connection||n.mode!==Dk.INJECT)throw new UD(MD.INVALID_OPERATION,"can not find inject stream task to control");return(await this.connection.request("request",{clientRequest:{command:"ControlStream",url:e,control:t,audioVolume:r,position:i}})).serverResponse}resetAllTask(){var e;const t=Array.from(MG(e=this.streamingTasks).call(e));this.terminate();for(const e of t)this.startLiveStreamingTask(e.url,e.mode).catch(t=>{this.onLiveStreamError&&this.onLiveStreamError(e.url,t)})}terminate(){this.cancelToken&&this.cancelToken.cancel(),this.streamingTasks=new Map,this.isStartingStreamingTask=!1,this.statusError=new Map,this.cancelToken=PD.CancelToken.source(),this.uapResponse=void 0,this.connection&&this.connection.close(),this.connection=void 0}async connect(e){if(this.connection)throw new UD(MD.UNEXPECTED_ERROR,"live streaming connection has already connected");const t=await SK(this,Qk.REQUEST_WORKER_MANAGER_LIST,e);return this.uapResponse=t,this.connection=new Uq(t.workerToken,this.spec,this.wsRetryConfig,e),this.connection.on(xk.WARNING,(e,t)=>this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e)),this.connection.on(xk.PUBLISH_STREAM_STATUS,e=>this.handlePublishStreamServer(e)),this.connection.on(xk.INJECT_STREAM_STATUS,e=>this.handleInjectStreamServerStatus(e)),this.connection.on(xk.REQUEST_NEW_ADDRESS,(t,r)=>{if(!this.connection)return r(new UD(MD.UNEXPECTED_ERROR,"can not get new live streaming address list"));SK(this,Qk.REQUEST_WORKER_MANAGER_LIST,e).then(e=>{this.uapResponse=e,t(e.addressList)}).catch(r)}),await this.connection.init(t.addressList),this.connection}handlePublishStreamServer(e){const t=e.serverStatus&&e.serverStatus.url||"empty_url",r=this.streamingTasks.get(t),i=e.reason;switch(e.code){case Fk.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Fk.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Fk.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Fk.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:{const i=new UD(MD.LIVE_STREAMING_CDN_ERROR,"",{code:e.code});if(r)return HD.error(i.toString()),this.onLiveStreamError&&this.onLiveStreamError(t,i);if(!this.isStartingStreamingTask)return;this.statusError.set(t,i)}case Fk.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const e=new UD(MD.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE,i);return this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e)}case Fk.LIVE_STREAM_RESPONSE_WORKER_LOST:case Fk.LIVE_STREAM_RESPONSE_WORKER_QUIT:{var n;if(!this.connection)return;this.connection.tryNextAddress();const t=Array.from(MG(n=this.streamingTasks).call(n));for(const r of t)r.abortTask?r.abortTask():(HD.warning("[".concat(this.spec.clientId,"] publish stream status code"),e.code,"try to republish",r.url),this.startLiveStreamingTask(r.url,r.mode,new UD(MD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"",{code:e.code})).then(()=>{HD.debug("[".concat(this.spec.clientId,"] republish live stream success"),r.url)}).catch(e=>{HD.error(e.toString()),this.onLiveStreamError&&this.onLiveStreamError(r.url,e)}));return}}}handleInjectStreamServerStatus(e){const t=Number(e.uid),r=e.serverStatus&&e.serverStatus.url;switch(e.code){case 200:return void(this.onInjectStatusChange&&this.onInjectStatusChange(Pk.INJECT_STREAM_STATUS_START_SUCCESS,t,r));case 451:return this.onInjectStatusChange&&this.onInjectStatusChange(Pk.INJECT_STREAM_STATUS_START_ALREADY_EXISTS,t,r),void this.streamingTasks.delete(r);case 453:return this.onInjectStatusChange&&this.onInjectStatusChange(Pk.INJECT_STREAM_STATUS_START_UNAUTHORIZED,t,r),void this.streamingTasks.delete(r);case 470:return this.onInjectStatusChange&&this.onInjectStatusChange(Pk.INJECT_STREAM_STATUS_BROKEN,t,r),void this.streamingTasks.delete(r);case 499:return this.onInjectStatusChange&&this.onInjectStatusChange(Pk.INJECT_STREAM_STATUS_START_TIMEOUT,t,r),void this.streamingTasks.delete(r);default:return void HD.debug("inject stream server status",e)}}hasUrl(e){return this.streamingTasks.has(e)}}class Vq{constructor(){kO(this,"destChannelMediaInfos",new Map),kO(this,"srcChannelMediaInfo",void 0)}setSrcChannelInfo(e){rB(e),this.srcChannelMediaInfo=e}addDestChannelInfo(e){rB(e),this.destChannelMediaInfos.set(e.channelName,e)}removeDestChannelInfo(e){xL(e),this.destChannelMediaInfos.delete(e)}getSrcChannelMediaInfo(){return this.srcChannelMediaInfo}getDestChannelMediaInfo(){return this.destChannelMediaInfos}}function jq(e){if(!(e instanceof Vq)){return new UD(MD.INVALID_PARAMS,"Config should be instance of [ChannelMediaRelayConfiguration]").throw()}const t=e.getSrcChannelMediaInfo(),r=e.getDestChannelMediaInfo();if(!t){return new UD(MD.INVALID_PARAMS,"srcChannelMediaInfo should not be empty").throw()}if(0===r.size){return new UD(MD.INVALID_PARAMS,"destChannelMediaInfo should not be empty").throw()}}class Gq extends kD{constructor(e,t,r){super(),kO(this,"ws",void 0),kO(this,"requestId",1),kO(this,"heartBeatTimer",void 0),kO(this,"joinInfo",void 0),kO(this,"clientId",void 0),kO(this,"onOpen",()=>{this.emit("open"),this.startHeartBeatCheck()}),kO(this,"onClose",e=>{this.emit("close"),this.dispose()}),kO(this,"onMessage",e=>{const t=JSON.parse(e.data);if(!t||"serverResponse"!==t.command||!t.requestId)return t&&"serverStatus"===t.command&&t.serverStatus&&t.serverStatus.command?(this.emit("status",t.serverStatus),void this.emit(t.serverStatus.command,t.serverStatus)):void 0;this.emit("req_".concat(t.requestId),t)}),this.joinInfo=e,this.clientId=t,this.ws=new JJ("cross-channel-".concat(this.clientId),r),this.ws.on(Nk.RECONNECTING,()=>{this.ws.reconnectMode="retry",this.emit("reconnecting")}),this.ws.on(Nk.CONNECTED,this.onOpen),this.ws.on(Nk.ON_MESSAGE,this.onMessage),this.ws.on(Nk.CLOSED,this.onClose)}isConnect(){return"connected"===this.ws.state}sendMessage(e){const t=this.requestId++;return e.requestId=t,e.seq=t,this.ws.sendMessage(e),t}waitStatus(e){return new nT((t,r)=>{const i=window.setTimeout(()=>{r(new UD(MD.TIMEOUT,"wait status timeout, status: ".concat(e)))},5e3);this.once(e,n=>{window.clearTimeout(i),n.state&&0!==n.state?r(new UD(MD.CROSS_CHANNEL_WAIT_STATUS_ERROR,"wait status error, status: ".concat(e))):t(void 0)}),this.once("dispose",()=>{window.clearTimeout(i),r(new UD(MD.WS_ABORT))})})}async request(e){if("closed"===this.ws.state)throw new UD(MD.WS_DISCONNECT);const t=()=>new nT((e,t)=>{this.ws.once(Nk.CLOSED,()=>t(new UD(MD.WS_ABORT))),this.ws.once(Nk.CONNECTED,e)});"connected"!==this.ws.state&&await t();const r=this.sendMessage(e),i=new nT((e,t)=>{const i=()=>{t(new UD(MD.WS_ABORT))};this.ws.once(Nk.RECONNECTING,i),this.ws.once(Nk.CLOSED,i),this.once("req_".concat(r),e),gK(3e3).then(()=>{this.removeAllListeners("req_".concat(r)),this.ws.off(Nk.RECONNECTING,i),this.ws.off(Nk.CLOSED,i),t(new UD(MD.TIMEOUT,"cross channel ws request timeout"))})}),n=await i;if(!n||200!==n.code)throw new UD(MD.CROSS_CHANNEL_SERVER_ERROR_RESPONSE,"response: ".concat(JSON.stringify(n)));return n}async connect(e){this.ws.removeAllListeners(Nk.REQUEST_NEW_URLS),this.ws.on(Nk.REQUEST_NEW_URLS,t=>{t(e)}),await this.ws.init(e)}dispose(){this.clearHeartBeatCheck(),this.emit("dispose"),this.removeAllListeners(),this.ws.close()}sendPing(e){const t=this.requestId++;return e.requestId=t,this.ws.sendMessage(e),t}startHeartBeatCheck(){this.heartBeatTimer=window.setInterval(()=>{this.sendPing({command:"ping",appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sid:this.joinInfo.sid,ts:+new Date,requestId:0})},3e3)}clearHeartBeatCheck(){window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=void 0}}class Kq extends kD{set state(e){e!==this._state&&(e!==Kk.RELAY_STATE_FAILURE&&(this.errorCode=Hk.RELAY_OK),this.emit("state",e,this.errorCode),this._state=e)}get state(){return this._state}constructor(e,t,r,i){super(),kO(this,"joinInfo",void 0),kO(this,"clientId",void 0),kO(this,"cancelToken",PD.CancelToken.source()),kO(this,"workerToken",void 0),kO(this,"requestId",0),kO(this,"signal",void 0),kO(this,"prevChannelMediaConfig",void 0),kO(this,"httpRetryConfig",void 0),kO(this,"_state",Kk.RELAY_STATE_IDLE),kO(this,"errorCode",Hk.RELAY_OK),kO(this,"onStatus",e=>{HD.debug("[".concat(this.clientId,"] ChannelMediaStatus: ").concat(JSON.stringify(e))),e&&e.command&&("onAudioPacketReceived"===e.command&&this.emit("event",Gk.PACKET_RECEIVED_AUDIO_FROM_SRC),"onVideoPacketReceived"===e.command&&this.emit("event",Gk.PACKET_RECEIVED_VIDEO_FROM_SRC),"onSrcTokenPrivilegeDidExpire"===e.command&&(this.errorCode=Hk.SRC_TOKEN_EXPIRED,this.state=Kk.RELAY_STATE_FAILURE),"onDestTokenPrivilegeDidExpire"===e.command&&(this.errorCode=Hk.DEST_TOKEN_EXPIRED,this.state=Kk.RELAY_STATE_FAILURE))}),kO(this,"onReconnect",async()=>{HD.debug("[".concat(this.clientId,"] ChannelMediaSocket disconnect, reconnecting")),this.emit("event",Gk.NETWORK_DISCONNECTED),this.state=Kk.RELAY_STATE_IDLE,this.prevChannelMediaConfig&&this.sendStartRelayMessage(this.prevChannelMediaConfig).catch(e=>{this.state!==Kk.RELAY_STATE_IDLE&&(HD.error("auto restart channel media relay failed",e.toString()),this.errorCode=Hk.SERVER_CONNECTION_LOST,this.state=Kk.RELAY_STATE_FAILURE)})}),this.joinInfo=e,this.clientId=t,this.signal=new Gq(this.joinInfo,this.clientId,r),this.httpRetryConfig=i}async startChannelMediaRelay(e){if(this.state!==Kk.RELAY_STATE_IDLE)throw new UD(MD.INVALID_OPERATION);this.state=Kk.RELAY_STATE_CONNECTING,await this.connect(),HD.debug("[".concat(this.clientId,"] startChannelMediaRelay: connect success"));try{await this.sendStartRelayMessage(e)}catch(e){if(e.data&&e.data.serverResponse&&"SetSourceChannel"===e.data.serverResponse.command)throw new UD(MD.CROSS_CHANNEL_FAILED_JOIN_SRC);if(e.data&&e.data.serverResponse&&"SetDestChannelStatus"===e.serverResponse.command)throw new UD(MD.CROSS_CHANNEL_FAILED_JOIN_DEST);if(e.data&&e.data.serverResponse&&"StartPacketTransfer"===e.serverResponse.command)throw new UD(MD.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST);throw e}this.prevChannelMediaConfig=e}async updateChannelMediaRelay(e){if(this.state!==Kk.RELAY_STATE_RUNNING)throw new UD(MD.INVALID_OPERATION);await this.sendUpdateMessage(e),this.prevChannelMediaConfig=e}async stopChannelMediaRelay(){await this.sendStopRelayMessage(),HD.debug("[".concat(this.clientId,"] stopChannelMediaRelay: send stop message success")),this.state=Kk.RELAY_STATE_IDLE,this.dispose()}dispose(){HD.debug("[".concat(this.clientId,"] disposeChannelMediaRelay")),this.cancelToken.cancel(),this.cancelToken=PD.CancelToken.source(),this.state=Kk.RELAY_STATE_IDLE,this.emit("dispose"),this.signal.dispose(),this.prevChannelMediaConfig=void 0}async connect(){const e=await Oq(this.joinInfo,this.cancelToken.token,this.httpRetryConfig);this.workerToken=e.workerToken,await this.signal.connect(e.addressList),this.emit("event",Gk.NETWORK_CONNECTED),this.signal.on("status",this.onStatus),this.signal.on("reconnecting",this.onReconnect)}async sendStartRelayMessage(e){const t=this.genMessage(jk.StopPacketTransfer);await this.signal.request(t),await this.signal.waitStatus("Normal Quit"),HD.debug("[".concat(this.clientId,"] startChannelMediaRelay: StopPacketTransfer success"));const r=this.genMessage(jk.SetSdkProfile,e);await this.signal.request(r),HD.debug("[".concat(this.clientId,"] startChannelMediaRelay: SetSdkProfile success"));const i=this.genMessage(jk.SetSourceChannel,e);await this.signal.request(i),await this.signal.waitStatus("SetSourceChannelStatus"),this.emit("event",Gk.PACKET_JOINED_SRC_CHANNEL),HD.debug("[".concat(this.clientId,"] startChannelMediaRelay: SetSourceChannel success"));const n=this.genMessage(jk.SetSourceUserId,e);await this.signal.request(n),HD.debug("[".concat(this.clientId,"] startChannelMediaRelay: SetSourceUserId success"));const o=this.genMessage(jk.SetDestChannel,e);await this.signal.request(o),await this.signal.waitStatus("SetDestChannelStatus"),this.emit("event",Gk.PACKET_JOINED_DEST_CHANNEL),HD.debug("[".concat(this.clientId,"] startChannelMediaRelay: SetDestChannel success"));const s=this.genMessage(jk.StartPacketTransfer,e);await this.signal.request(s),this.emit("event",Gk.PACKET_SENT_TO_DEST_CHANNEL),this.state=Kk.RELAY_STATE_RUNNING,HD.debug("[".concat(this.clientId,"] startChannelMediaRelay: StartPacketTransfer success"))}async sendUpdateMessage(e){const t=this.genMessage(jk.UpdateDestChannel,e);await this.signal.request(t),this.emit("event",Gk.PACKET_UPDATE_DEST_CHANNEL),HD.debug("[".concat(this.clientId,"] sendUpdateMessage: UpdateDestChannel success"))}async sendStopRelayMessage(){const e=this.genMessage(jk.StopPacketTransfer);await this.signal.request(e),HD.debug("[".concat(this.clientId,"] sendStopRelayMessage: StopPacketTransfer success"))}genMessage(e,t){const r=[],i=[],n=[];this.requestId+=1;const o={appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sdkVersion:IP,sid:this.joinInfo.sid,ts:Date.now(),requestId:this.requestId,seq:this.requestId,allocate:!0,clientRequest:{}};"4.13.0"===o.sdkVersion&&(o.sdkVersion="0.0.1");let s=null,a=null;switch(e){case jk.SetSdkProfile:return o.clientRequest={command:"SetSdkProfile",type:"multi_channel"},o;case jk.SetSourceChannel:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new UD(MD.UNEXPECTED_ERROR,"can not find source config");return o.clientRequest={command:"SetSourceChannel",uid:"0",channelName:a.channelName,token:a.token||this.joinInfo.appId},o;case jk.SetSourceUserId:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new UD(MD.UNEXPECTED_ERROR,"can not find source config");return o.clientRequest={command:"SetSourceUserId",uid:a.uid+""},o;case jk.SetDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new UD(MD.UNEXPECTED_ERROR,"can not find dest config");return s.forEach(e=>{r.push(e.channelName),i.push(e.uid+""),n.push(e.token||this.joinInfo.appId)}),o.clientRequest={command:"SetDestChannel",channelName:r,uid:i,token:n},o;case jk.StartPacketTransfer:return o.clientRequest={command:"StartPacketTransfer"},o;case jk.Reconnect:return o.clientRequest={command:"Reconnect"},o;case jk.StopPacketTransfer:return o.clientRequest={command:"StopPacketTransfer"},o;case jk.UpdateDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new UD(MD.UNEXPECTED_ERROR,"can not find dest config");return s.forEach(e=>{r.push(e.channelName),i.push(e.uid+""),n.push(e.token||this.joinInfo.appId)}),o.clientRequest={command:"UpdateDestChannel",channelName:r,uid:i,token:n},o}return o}}const Hq=e=>{const t=document.createElement("canvas");return t.width=2,t.height=2,new nT((r,i)=>{t.toBlob(async e=>{if(t.remove(),e){const i=await Wq(e);r({buffer:i,width:t.width,height:t.height})}else i(new UD(MD.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))},e,1)})},Wq=async e=>{const t=await e.arrayBuffer();return new Uint8Array(t)};var Yq;let Jq=gP("AgoraRTCPlayer","trackId")(Yq=class{get videoElementStatus(){return this._videoElementStatus}set videoElementStatus(e){e!==this._videoElementStatus&&(HD.debug("[".concat(this.trackId,"] video-element-status change ").concat(this._videoElementStatus," => ").concat(e)),AP("debug",["HTMLVideoElement",this.trackId],"statusChange","".concat(this._videoElementStatus," => ").concat(e)),this._videoElementStatus=e)}constructor(e){kO(this,"trackId",void 0),kO(this,"config",void 0),kO(this,"onFirstVideoFrameDecoded",void 0),kO(this,"freezeTimeCounterList",[]),kO(this,"timeUpdatedCount",0),kO(this,"freezeTime",0),kO(this,"playbackTime",0),kO(this,"lastTimeUpdatedTime",0),kO(this,"videoTrack",void 0),kO(this,"container",void 0),kO(this,"videoElement",void 0),kO(this,"videoElementCheckInterval",void 0),kO(this,"_videoElementStatus",WL.NONE),kO(this,"slot",void 0),kO(this,"isGettingVideoDimensions",!1),kO(this,"handleVideoEvents",e=>{switch(e.type){case"play":case"playing":this.startGetVideoDimensions(),this.videoElementStatus=WL.PLAYING;break;case"loadeddata":this.onFirstVideoFrameDecoded&&this.onFirstVideoFrameDecoded();break;case"canplay":this.videoElementStatus=WL.CANPLAY;break;case"stalled":this.videoElementStatus=WL.STALLED;break;case"suspend":this.videoElementStatus=WL.SUSPEND;break;case"pause":this.videoElementStatus=WL.PAUSED,!EO()&&!SO()&&this.videoElement&&this.videoTrack&&"live"===this.videoTrack.readyState&&(HD.debug("[track-".concat(this.trackId,"] video element paused, auto resume")),cP("debug",this,"video element paused, auto resume"),this.videoElement.play());break;case"waiting":this.videoElementStatus=WL.WAITING;break;case"abort":this.videoElementStatus=WL.ABORT;break;case"ended":this.videoElementStatus=WL.ENDED;break;case"emptied":this.videoElementStatus=WL.EMPTIED;break;case"timeupdate":{const e=Date.now();if(this.timeUpdatedCount+=1,this.timeUpdatedCount<10)return void(this.lastTimeUpdatedTime=e);const t=e-this.lastTimeUpdatedTime;for(this.lastTimeUpdatedTime=e,t>500&&(this.freezeTime+=t),this.playbackTime+=t;this.playbackTime>=6e3;)this.playbackTime-=6e3,this.freezeTimeCounterList.push(Math.min(6e3,this.freezeTime)),this.freezeTime=Math.max(0,this.freezeTime-6e3);break}}}),kO(this,"startGetVideoDimensions",()=>{const e=()=>{if(this.isGettingVideoDimensions=!0,this.videoElement&&this.videoElement.videoWidth*this.videoElement.videoHeight>4)return HD.debug("[".concat(this.trackId,"] current video dimensions:"),this.videoElement.videoWidth,this.videoElement.videoHeight),hP("debug",this,"startGetVideoDimensions",{videoWidth:this.videoElement.videoWidth,videoHeight:this.videoElement.videoHeight}),void(this.isGettingVideoDimensions=!1);setTimeout(e,500)};!this.isGettingVideoDimensions&&e()}),kO(this,"autoResumeAfterInterruption",()=>{this.videoElement&&this.videoTrack&&"live"===this.videoTrack.readyState&&"running"===Rj.curState&&(CO()?(HD.debug("[track-".concat(this.trackId,"] video element paused, auto resume for iOS 15.2")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):_O()?(HD.debug("[track-".concat(this.trackId,"] video element paused, auto resume for iOS 15.1")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):mO()&&(HD.debug("[track-".concat(this.trackId,"] video element paused, auto resume for iOS 15.0")),this.videoElement.pause(),this.videoElement.play()))}),kO(this,"autoResumeAfterInterruptionOnIOS15",()=>{this.videoElement&&this.videoTrack&&"live"===this.videoTrack.readyState&&(CO()?(HD.debug("[track-".concat(this.trackId,"] video element paused, auto resume for iOS 15.2")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):_O()?(HD.debug("[track-".concat(this.trackId,"] video element paused, auto resume for iOS 15.1")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):mO()&&(HD.debug("[track-".concat(this.trackId,"] video element paused, auto resume for iOS 15.0")),this.videoElement.pause(),this.videoElement.play()))}),this.slot=e.element,this.trackId=e.trackId,this.updateConfig(e),Rj.on(hj.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),Rj.on(hj.IOS_15_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15)}updateConfig(e){this.config=e,this.trackId=e.trackId;const t=e.element;t!==this.slot&&(this.destroy(),this.slot=t),this.createElements()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.createElements())}play(e){if(this.videoElement){const t=this.videoElement.play();t&&t.catch&&t.catch(t=>{e&&uj.autoplayFailed(e,"video",t.message,this.trackId),hP("warning",this,"play",t.toString(),"error"),"NotAllowedError"===t.name?(HD.warning("detected video element autoplay failed",t),this.handleAutoPlayFailed()):HD.warning("[".concat(this.trackId,"] play warning: "),t)});const r=oO();if(("Safari"===r.name&&15===Number(r.version)||IO())&&t&&t.then&&t.catch){const e=()=>{this.config.mirror&&this.videoElement&&(this.videoElement.style.transform="rotateY(180deg)")};t.then(e).catch(e)}}}getCurrentFrame(){if(!this.videoElement)return new ImageData(2,2);const e=document.createElement("canvas");e.width=this.videoElement.videoWidth,e.height=this.videoElement.videoHeight;const t=e.getContext("2d");if(!t)return HD.error("create canvas context failed!"),hP("error",this,"getCurrentFrame","create canvas context failed!","error"),new ImageData(2,2);t.drawImage(this.videoElement,0,0,e.width,e.height);const r=t.getImageData(0,0,e.width,e.height);return e.remove(),r}async getCurrentFrameToUint8Array(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(!this.videoElement)return await Hq(e);const r=document.createElement("canvas");r.width=this.videoElement.videoWidth,r.height=this.videoElement.videoHeight;const i=r.getContext("2d");return i?(i.drawImage(this.videoElement,0,0,r.width,r.height),new nT((i,n)=>{r.toBlob(async e=>{if(r.remove(),e){const t=await Wq(e);i({buffer:t,width:r.width,height:r.height})}else n(new UD(MD.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))},e,t<0?.1:t>1?1:t)})):await Hq(e)}destroy(){if(Rj.off(hj.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),Rj.off(hj.IOS_15_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15),this.videoElement&&(this.videoElement.srcObject=null,this.videoElement.remove(),this.videoElement=void 0),this.container){try{this.container.remove(),this.slot.removeChild(this.container)}catch(e){}this.container=void 0}this.freezeTimeCounterList=[]}createElements(){this.container||(this.container=document.createElement("div")),this.container.id="agora-video-player-".concat(this.trackId),this.container.style.width="100%",this.container.style.height="100%",this.container.style.position="relative",this.container.style.overflow="hidden",this.videoTrack?(this.container.style.backgroundColor="black",this.createVideoElement(),this.container.appendChild(this.videoElement)):this.removeVideoElement(),this.slot.appendChild(this.container)}createVideoElement(){this.videoElement||(this.videoElementStatus=WL.INIT,this.videoElement=document.createElement("video"),this.videoElement.onerror=()=>this.videoElementStatus=WL.ERROR,this.container&&this.container.appendChild(this.videoElement),qq.forEach(e=>{this.videoElement&&this.videoElement.addEventListener(e,this.handleVideoEvents)}),this.videoElementCheckInterval=window.setInterval(()=>{!document.getElementById("video_".concat(this.trackId))&&this.videoElement&&(this.videoElementStatus=WL.DESTROYED)},1e3)),this.videoElement.id="video_".concat(this.trackId),this.videoElement.className="agora_video_player",this.videoElement.style.width="100%",this.videoElement.style.height="100%",this.videoElement.style.position="absolute",this.videoElement.controls=!1,this.videoElement.setAttribute("playsinline",""),this.videoElement.style.left="0",this.videoElement.style.top="0";const e=oO();if("Safari"===e.name&&15===Number(e.version)||IO()||!this.config.mirror||(this.videoElement.style.transform="rotateY(180deg)"),this.config.fit?this.videoElement.style.objectFit=this.config.fit:this.videoElement.style.objectFit="cover",this.videoElement.setAttribute("muted",""),this.videoElement.muted=!0,this.videoElement.srcObject&&this.videoElement.srcObject instanceof MediaStream){this.videoElement.srcObject.getVideoTracks()[0]!==this.videoTrack&&(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,gO()&&this.videoElement.load())}else this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,gO()&&this.videoElement.load();const t=this.videoElement.play();void 0!==t&&t.catch(e=>{HD.debug("[".concat(this.trackId,"] playback interrupted"),e.toString()),cP("debug",this,"play back interrupted: ".concat(e.toString()))})}removeVideoElement(){if(this.videoElement){qq.forEach(e=>{this.videoElement&&this.videoElement.removeEventListener(e,this.handleVideoEvents)}),this.videoElementCheckInterval&&(window.clearInterval(this.videoElementCheckInterval),this.videoElementCheckInterval=void 0);try{this.container&&this.container.removeChild(this.videoElement)}catch(e){}this.videoElement=void 0,this.videoElementStatus=WL.NONE}}handleAutoPlayFailed(){const e=oO();if(this.videoElement){const t=r=>{r.preventDefault(),this.videoElement&&(this.videoElement.play().then(()=>{HD.debug("[".concat(this.trackId,"] Video element for trackId:").concat(this.trackId," autoplay resumed.")),cP("debug",this,"video element autoplay resumed")}).catch(e=>{HD.error(e)}),"Android"!==e.os||"Chrome"!==e.name&&e.name!==tO.WECHAT?(document.body.removeEventListener("touchstart",t,!0),document.body.removeEventListener("mousedown",t,!0)):document.body.removeEventListener("click",t,!0))};"Android"!==e.os||"Chrome"!==e.name&&e.name!==tO.WECHAT?(document.body.addEventListener("touchstart",t,!0),document.body.addEventListener("mousedown",t,!0)):document.body.addEventListener("click",t,!0),tj()}}getVideoElement(){return this.videoElement}getContainerElement(){return this.container}})||Yq;const qq=["play","playing","loadeddata","canplay","pause","stalled","suspend","waiting","abort","emptied","ended","timeupdate"];var Xq={exports:{}};function zq(e,t,r){const i=e.createShader(r);if(!i){return new UD(MD.WEBGL_INTERNAL_ERROR,"can not create shader").throw()}e.shaderSource(i,t),e.compileShader(i);if(!e.getShaderParameter(i,e.COMPILE_STATUS)){const t=e.getShaderInfoLog(i);e.deleteShader(i);return new UD(MD.WEBGL_INTERNAL_ERROR,"error compiling shader:"+t).throw()}return i}function Zq(e,t,r,i){const n=[];for(let r=0;r<t.length;++r){const i=0===r?e.VERTEX_SHADER:e.FRAGMENT_SHADER;n.push(zq(e,t[r],i))}return function(e,t,r,i){const n=e.createProgram();if(!n)throw new UD(MD.WEBGL_INTERNAL_ERROR,"can not create webgl program");if(t.forEach(t=>{e.attachShader(n,t)}),r&&r.forEach((t,r)=>{e.bindAttribLocation(n,i?i[r]:r,t)}),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS)){const t=e.getProgramInfoLog(n);throw e.deleteProgram(n),new UD(MD.WEBGL_INTERNAL_ERROR,"error in program linking:"+t)}return n}(e,n,r,i)}!function(e,t){self,e.exports=(()=>{var e={3476:(e,t,r)=>{e.exports=r(7460)},4341:(e,t,r)=>{e.exports=r(3685)},3536:(e,t,r)=>{var i=r(1910);e.exports=i},8171:(e,t,r)=>{r(6450);var i=r(4058).Object,n=e.exports=function(e,t,r){return i.defineProperty(e,t,r)};i.defineProperty.sham&&(n.sham=!0)},2956:(e,t,r)=>{r(7627),r(6274),r(5967),r(8881),r(4560),r(7206),r(4349),r(7971);var i=r(4058);e.exports=i.Promise},3685:(e,t,r)=>{var i=r(3536);e.exports=i},4883:(e,t,r)=>{var i=r(1899),n=r(7475),o=r(9826),s=i.TypeError;e.exports=function(e){if(n(e))return e;throw s(o(e)+" is not a function")}},174:(e,t,r)=>{var i=r(1899),n=r(4284),o=r(9826),s=i.TypeError;e.exports=function(e){if(n(e))return e;throw s(o(e)+" is not a constructor")}},1851:(e,t,r)=>{var i=r(1899),n=r(7475),o=i.String,s=i.TypeError;e.exports=function(e){if("object"==typeof e||n(e))return e;throw s("Can't set "+o(e)+" as a prototype")}},8479:e=>{e.exports=function(){}},5743:(e,t,r)=>{var i=r(1899),n=r(7046),o=i.TypeError;e.exports=function(e,t){if(n(t,e))return e;throw o("Incorrect invocation")}},6059:(e,t,r)=>{var i=r(1899),n=r(941),o=i.String,s=i.TypeError;e.exports=function(e){if(n(e))return e;throw s(o(e)+" is not an object")}},1692:(e,t,r)=>{var i=r(4529),n=r(9413),o=r(623),s=function(e){return function(t,r,s){var a,c=i(t),d=o(c),u=n(s,d);if(e&&r!=r){for(;d>u;)if((a=c[u++])!=a)return!0}else for(;d>u;u++)if((e||u in c)&&c[u]===r)return e||u||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},3765:(e,t,r)=>{var i=r(5329);e.exports=i([].slice)},1385:(e,t,r)=>{var i=r(9813)("iterator"),n=!1;try{var o=0,s={next:function(){return{done:!!o++}},return:function(){n=!0}};s[i]=function(){return this},Array.from(s,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!n)return!1;var r=!1;try{var o={};o[i]=function(){return{next:function(){return{done:r=!0}}}},e(o)}catch(e){}return r}},2532:(e,t,r)=>{var i=r(5329),n=i({}.toString),o=i("".slice);e.exports=function(e){return o(n(e),8,-1)}},9697:(e,t,r)=>{var i=r(1899),n=r(2885),o=r(7475),s=r(2532),a=r(9813)("toStringTag"),c=i.Object,d="Arguments"==s(function(){return arguments}());e.exports=n?s:function(e){var t,r,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=c(e),a))?r:d?s(t):"Object"==(i=s(t))&&o(t.callee)?"Arguments":i}},8694:(e,t,r)=>{var i=r(5329)("".replace),n=String(Error("zxcasd").stack),o=/\n\s*at [^:]*:[^\n]*/,s=o.test(n);e.exports=function(e,t){if(s&&"string"==typeof e)for(;t--;)e=i(e,o,"");return e}},3489:(e,t,r)=>{var i=r(953),n=r(1136),o=r(9677),s=r(5988);e.exports=function(e,t,r){for(var a=n(t),c=s.f,d=o.f,u=0;u<a.length;u++){var A=a[u];i(e,A)||r&&i(r,A)||c(e,A,d(t,A))}}},4160:(e,t,r)=>{var i=r(5981);e.exports=!i((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},1046:(e,t,r)=>{var i=r(5143).IteratorPrototype,n=r(9290),o=r(1887),s=r(904),a=r(2077),c=function(){return this};e.exports=function(e,t,r,d){var u=t+" Iterator";return e.prototype=n(i,{next:o(+!d,r)}),s(e,u,!1,!0),a[u]=c,e}},2029:(e,t,r)=>{var i=r(5746),n=r(5988),o=r(1887);e.exports=i?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},1887:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},7771:(e,t,r)=>{var i=r(6887),n=r(8834),o=r(2529),s=r(9417),a=r(7475),c=r(1046),d=r(249),u=r(8929),A=r(904),h=r(2029),l=r(9754),p=r(9813),g=r(2077),E=r(5143),f=s.PROPER,I=s.CONFIGURABLE,m=E.IteratorPrototype,_=E.BUGGY_SAFARI_ITERATORS,C=p("iterator"),S="keys",v="values",T="entries",R=function(){return this};e.exports=function(e,t,r,s,p,E,y){c(r,t,s);var w,b,O,N=function(e){if(e===p&&B)return B;if(!_&&e in L)return L[e];switch(e){case S:case v:case T:return function(){return new r(this,e)}}return function(){return new r(this)}},D=t+" Iterator",P=!1,L=e.prototype,k=L[C]||L["@@iterator"]||p&&L[p],B=!_&&k||N(p),M="Array"==t&&L.entries||k;if(M&&(w=d(M.call(new e)))!==Object.prototype&&w.next&&(o||d(w)===m||(u?u(w,m):a(w[C])||l(w,C,R)),A(w,D,!0,!0),o&&(g[D]=R)),f&&p==v&&k&&k.name!==v&&(!o&&I?h(L,"name",v):(P=!0,B=function(){return n(k,this)})),p)if(b={values:N(v),keys:E?B:N(S),entries:N(T)},y)for(O in b)(_||P||!(O in L))&&l(L,O,b[O]);else i({target:t,proto:!0,forced:_||P},b);return o&&!y||L[C]===B||l(L,C,B,{name:p}),g[t]=B,b}},5746:(e,t,r)=>{var i=r(5981);e.exports=!i((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},1333:(e,t,r)=>{var i=r(1899),n=r(941),o=i.document,s=n(o)&&n(o.createElement);e.exports=function(e){return s?o.createElement(e):{}}},3281:e=>{e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},3321:e=>{e.exports="object"==typeof window},4470:(e,t,r)=>{var i=r(2861),n=r(1899);e.exports=/ipad|iphone|ipod/i.test(i)&&void 0!==n.Pebble},2749:(e,t,r)=>{var i=r(2861);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(i)},6049:(e,t,r)=>{var i=r(2532),n=r(1899);e.exports="process"==i(n.process)},8045:(e,t,r)=>{var i=r(2861);e.exports=/web0s(?!.*chrome)/i.test(i)},2861:(e,t,r)=>{var i=r(626);e.exports=i("navigator","userAgent")||""},3385:(e,t,r)=>{var i,n,o=r(1899),s=r(2861),a=o.process,c=o.Deno,d=a&&a.versions||c&&c.version,u=d&&d.v8;u&&(n=(i=u.split("."))[0]>0&&i[0]<4?1:+(i[0]+i[1])),!n&&s&&(!(i=s.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=s.match(/Chrome\/(\d+)/))&&(n=+i[1]),e.exports=n},6759:e=>{e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},8780:(e,t,r)=>{var i=r(5981),n=r(1887);e.exports=!i((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",n(1,7)),7!==e.stack)}))},6887:(e,t,r)=>{var i=r(1899),n=r(9730),o=r(5329),s=r(7475),a=r(9677).f,c=r(7252),d=r(4058),u=r(6843),A=r(2029),h=r(953),l=function(e){var t=function(r,i,o){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(r);case 2:return new e(r,i)}return new e(r,i,o)}return n(e,this,arguments)};return t.prototype=e.prototype,t};e.exports=function(e,t){var r,n,p,g,E,f,I,m,_=e.target,C=e.global,S=e.stat,v=e.proto,T=C?i:S?i[_]:(i[_]||{}).prototype,R=C?d:d[_]||A(d,_,{})[_],y=R.prototype;for(p in t)r=!c(C?p:_+(S?".":"#")+p,e.forced)&&T&&h(T,p),E=R[p],r&&(f=e.noTargetGet?(m=a(T,p))&&m.value:T[p]),g=r&&f?f:t[p],r&&typeof E==typeof g||(I=e.bind&&r?u(g,i):e.wrap&&r?l(g):v&&s(g)?o(g):g,(e.sham||g&&g.sham||E&&E.sham)&&A(I,"sham",!0),A(R,p,I),v&&(h(d,n=_+"Prototype")||A(d,n,{}),A(d[n],p,g),e.real&&y&&!y[p]&&A(y,p,g)))}},5981:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},9730:(e,t,r)=>{var i=r(8285),n=Function.prototype,o=n.apply,s=n.call;e.exports="object"==typeof Reflect&&Reflect.apply||(i?s.bind(o):function(){return s.apply(o,arguments)})},6843:(e,t,r)=>{var i=r(5329),n=r(4883),o=r(8285),s=i(i.bind);e.exports=function(e,t){return n(e),void 0===t?e:o?s(e,t):function(){return e.apply(t,arguments)}}},8285:(e,t,r)=>{var i=r(5981);e.exports=!i((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},8834:(e,t,r)=>{var i=r(8285),n=Function.prototype.call;e.exports=i?n.bind(n):function(){return n.apply(n,arguments)}},9417:(e,t,r)=>{var i=r(5746),n=r(953),o=Function.prototype,s=i&&Object.getOwnPropertyDescriptor,a=n(o,"name"),c=a&&"something"===function(){}.name,d=a&&(!i||i&&s(o,"name").configurable);e.exports={EXISTS:a,PROPER:c,CONFIGURABLE:d}},5329:(e,t,r)=>{var i=r(8285),n=Function.prototype,o=n.bind,s=n.call,a=i&&o.bind(s,s);e.exports=i?function(e){return e&&a(e)}:function(e){return e&&function(){return s.apply(e,arguments)}}},626:(e,t,r)=>{var i=r(4058),n=r(1899),o=r(7475),s=function(e){return o(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?s(i[e])||s(n[e]):i[e]&&i[e][t]||n[e]&&n[e][t]}},2902:(e,t,r)=>{var i=r(9697),n=r(4229),o=r(2077),s=r(9813)("iterator");e.exports=function(e){if(null!=e)return n(e,s)||n(e,"@@iterator")||o[i(e)]}},429:(e,t,r)=>{var i=r(1899),n=r(8834),o=r(4883),s=r(6059),a=r(9826),c=r(2902),d=i.TypeError;e.exports=function(e,t){var r=arguments.length<2?c(e):t;if(o(r))return s(n(r,e));throw d(a(e)+" is not iterable")}},4229:(e,t,r)=>{var i=r(4883);e.exports=function(e,t){var r=e[t];return null==r?void 0:i(r)}},1899:(e,t,r)=>{var i=function(e){return e&&e.Math==Math&&e};e.exports=i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof r.g&&r.g)||function(){return this}()||Function("return this")()},953:(e,t,r)=>{var i=r(5329),n=r(9678),o=i({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return o(n(e),t)}},7748:e=>{e.exports={}},4845:(e,t,r)=>{var i=r(1899);e.exports=function(e,t){var r=i.console;r&&r.error&&(1==arguments.length?r.error(e):r.error(e,t))}},5463:(e,t,r)=>{var i=r(626);e.exports=i("document","documentElement")},2840:(e,t,r)=>{var i=r(5746),n=r(5981),o=r(1333);e.exports=!i&&!n((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},7026:(e,t,r)=>{var i=r(1899),n=r(5329),o=r(5981),s=r(2532),a=i.Object,c=n("".split);e.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"==s(e)?c(e,""):a(e)}:a},1302:(e,t,r)=>{var i=r(5329),n=r(7475),o=r(3030),s=i(Function.toString);n(o.inspectSource)||(o.inspectSource=function(e){return s(e)}),e.exports=o.inspectSource},3794:(e,t,r)=>{var i=r(941),n=r(2029);e.exports=function(e,t){i(t)&&"cause"in t&&n(e,"cause",t.cause)}},5402:(e,t,r)=>{var i,n,o,s=r(8019),a=r(1899),c=r(5329),d=r(941),u=r(2029),A=r(953),h=r(3030),l=r(4262),p=r(7748),g="Object already initialized",E=a.TypeError,f=a.WeakMap;if(s||h.state){var I=h.state||(h.state=new f),m=c(I.get),_=c(I.has),C=c(I.set);i=function(e,t){if(_(I,e))throw new E(g);return t.facade=e,C(I,e,t),t},n=function(e){return m(I,e)||{}},o=function(e){return _(I,e)}}else{var S=l("state");p[S]=!0,i=function(e,t){if(A(e,S))throw new E(g);return t.facade=e,u(e,S,t),t},n=function(e){return A(e,S)?e[S]:{}},o=function(e){return A(e,S)}}e.exports={set:i,get:n,has:o,enforce:function(e){return o(e)?n(e):i(e,{})},getterFor:function(e){return function(t){var r;if(!d(t)||(r=n(t)).type!==e)throw E("Incompatible receiver, "+e+" required");return r}}}},6782:(e,t,r)=>{var i=r(9813),n=r(2077),o=i("iterator"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||s[o]===e)}},7475:e=>{e.exports=function(e){return"function"==typeof e}},4284:(e,t,r)=>{var i=r(5329),n=r(5981),o=r(7475),s=r(9697),a=r(626),c=r(1302),d=function(){},u=[],A=a("Reflect","construct"),h=/^\s*(?:class|function)\b/,l=i(h.exec),p=!h.exec(d),g=function(e){if(!o(e))return!1;try{return A(d,u,e),!0}catch(e){return!1}},E=function(e){if(!o(e))return!1;switch(s(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return p||!!l(h,c(e))}catch(e){return!0}};E.sham=!0,e.exports=!A||n((function(){var e;return g(g.call)||!g(Object)||!g((function(){e=!0}))||e}))?E:g},7252:(e,t,r)=>{var i=r(5981),n=r(7475),o=/#|\.prototype\./,s=function(e,t){var r=c[a(e)];return r==u||r!=d&&(n(t)?i(t):!!t)},a=s.normalize=function(e){return String(e).replace(o,".").toLowerCase()},c=s.data={},d=s.NATIVE="N",u=s.POLYFILL="P";e.exports=s},941:(e,t,r)=>{var i=r(7475);e.exports=function(e){return"object"==typeof e?null!==e:i(e)}},2529:e=>{e.exports=!0},6664:(e,t,r)=>{var i=r(1899),n=r(626),o=r(7475),s=r(7046),a=r(2302),c=i.Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=n("Symbol");return o(t)&&s(t.prototype,c(e))}},3091:(e,t,r)=>{var i=r(1899),n=r(6843),o=r(8834),s=r(6059),a=r(9826),c=r(6782),d=r(623),u=r(7046),A=r(429),h=r(2902),l=r(7609),p=i.TypeError,g=function(e,t){this.stopped=e,this.result=t},E=g.prototype;e.exports=function(e,t,r){var i,f,I,m,_,C,S,v=r&&r.that,T=!(!r||!r.AS_ENTRIES),R=!(!r||!r.IS_ITERATOR),y=!(!r||!r.INTERRUPTED),w=n(t,v),b=function(e){return i&&l(i,"normal",e),new g(!0,e)},O=function(e){return T?(s(e),y?w(e[0],e[1],b):w(e[0],e[1])):y?w(e,b):w(e)};if(R)i=e;else{if(!(f=h(e)))throw p(a(e)+" is not iterable");if(c(f)){for(I=0,m=d(e);m>I;I++)if((_=O(e[I]))&&u(E,_))return _;return new g(!1)}i=A(e,f)}for(C=i.next;!(S=o(C,i)).done;){try{_=O(S.value)}catch(e){l(i,"throw",e)}if("object"==typeof _&&_&&u(E,_))return _}return new g(!1)}},7609:(e,t,r)=>{var i=r(8834),n=r(6059),o=r(4229);e.exports=function(e,t,r){var s,a;n(e);try{if(!(s=o(e,"return"))){if("throw"===t)throw r;return r}s=i(s,e)}catch(e){a=!0,s=e}if("throw"===t)throw r;if(a)throw s;return n(s),r}},5143:(e,t,r)=>{var i,n,o,s=r(5981),a=r(7475),c=r(9290),d=r(249),u=r(9754),A=r(9813),h=r(2529),l=A("iterator"),p=!1;[].keys&&("next"in(o=[].keys())?(n=d(d(o)))!==Object.prototype&&(i=n):p=!0),null==i||s((function(){var e={};return i[l].call(e)!==e}))?i={}:h&&(i=c(i)),a(i[l])||u(i,l,(function(){return this})),e.exports={IteratorPrototype:i,BUGGY_SAFARI_ITERATORS:p}},2077:e=>{e.exports={}},623:(e,t,r)=>{var i=r(3057);e.exports=function(e){return i(e.length)}},6132:(e,t,r)=>{var i,n,o,s,a,c,d,u,A=r(1899),h=r(6843),l=r(9677).f,p=r(2941).set,g=r(2749),E=r(4470),f=r(8045),I=r(6049),m=A.MutationObserver||A.WebKitMutationObserver,_=A.document,C=A.process,S=A.Promise,v=l(A,"queueMicrotask"),T=v&&v.value;T||(i=function(){var e,t;for(I&&(e=C.domain)&&e.exit();n;){t=n.fn,n=n.next;try{t()}catch(e){throw n?s():o=void 0,e}}o=void 0,e&&e.enter()},g||I||f||!m||!_?!E&&S&&S.resolve?((d=S.resolve(void 0)).constructor=S,u=h(d.then,d),s=function(){u(i)}):I?s=function(){C.nextTick(i)}:(p=h(p,A),s=function(){p(i)}):(a=!0,c=_.createTextNode(""),new m(i).observe(c,{characterData:!0}),s=function(){c.data=a=!a})),e.exports=T||function(e){var t={fn:e,next:void 0};o&&(o.next=t),n||(n=t,s()),o=t}},9297:(e,t,r)=>{var i=r(1899);e.exports=i.Promise},2497:(e,t,r)=>{var i=r(3385),n=r(5981);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&i&&i<41}))},8019:(e,t,r)=>{var i=r(1899),n=r(7475),o=r(1302),s=i.WeakMap;e.exports=n(s)&&/native code/.test(o(s))},9520:(e,t,r)=>{var i=r(4883),n=function(e){var t,r;this.promise=new e((function(e,i){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=i})),this.resolve=i(t),this.reject=i(r)};e.exports.f=function(e){return new n(e)}},4649:(e,t,r)=>{var i=r(5803);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:i(e)}},9290:(e,t,r)=>{var i,n=r(6059),o=r(9938),s=r(6759),a=r(7748),c=r(5463),d=r(1333),u=r(4262)("IE_PROTO"),A=function(){},h=function(e){return"<script>"+e+"<\/script>"},l=function(e){e.write(h("")),e.close();var t=e.parentWindow.Object;return e=null,t},p=function(){try{i=new ActiveXObject("htmlfile")}catch(e){}var e,t;p="undefined"!=typeof document?document.domain&&i?l(i):((t=d("iframe")).style.display="none",c.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(h("document.F=Object")),e.close(),e.F):l(i);for(var r=s.length;r--;)delete p.prototype[s[r]];return p()};a[u]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(A.prototype=n(e),r=new A,A.prototype=null,r[u]=e):r=p(),void 0===t?r:o.f(r,t)}},9938:(e,t,r)=>{var i=r(5746),n=r(3937),o=r(5988),s=r(6059),a=r(4529),c=r(4771);t.f=i&&!n?Object.defineProperties:function(e,t){s(e);for(var r,i=a(t),n=c(t),d=n.length,u=0;d>u;)o.f(e,r=n[u++],i[r]);return e}},5988:(e,t,r)=>{var i=r(1899),n=r(5746),o=r(2840),s=r(3937),a=r(6059),c=r(3894),d=i.TypeError,u=Object.defineProperty,A=Object.getOwnPropertyDescriptor;t.f=n?s?function(e,t,r){if(a(e),t=c(t),a(r),"function"==typeof e&&"prototype"===t&&"value"in r&&"writable"in r&&!r.writable){var i=A(e,t);i&&i.writable&&(e[t]=r.value,r={configurable:"configurable"in r?r.configurable:i.configurable,enumerable:"enumerable"in r?r.enumerable:i.enumerable,writable:!1})}return u(e,t,r)}:u:function(e,t,r){if(a(e),t=c(t),a(r),o)try{return u(e,t,r)}catch(e){}if("get"in r||"set"in r)throw d("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},9677:(e,t,r)=>{var i=r(5746),n=r(8834),o=r(6760),s=r(1887),a=r(4529),c=r(3894),d=r(953),u=r(2840),A=Object.getOwnPropertyDescriptor;t.f=i?A:function(e,t){if(e=a(e),t=c(t),u)try{return A(e,t)}catch(e){}if(d(e,t))return s(!n(o.f,e,t),e[t])}},946:(e,t,r)=>{var i=r(5629),n=r(6759).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return i(e,n)}},7857:(e,t)=>{t.f=Object.getOwnPropertySymbols},249:(e,t,r)=>{var i=r(1899),n=r(953),o=r(7475),s=r(9678),a=r(4262),c=r(4160),d=a("IE_PROTO"),u=i.Object,A=u.prototype;e.exports=c?u.getPrototypeOf:function(e){var t=s(e);if(n(t,d))return t[d];var r=t.constructor;return o(r)&&t instanceof r?r.prototype:t instanceof u?A:null}},7046:(e,t,r)=>{var i=r(5329);e.exports=i({}.isPrototypeOf)},5629:(e,t,r)=>{var i=r(5329),n=r(953),o=r(4529),s=r(1692).indexOf,a=r(7748),c=i([].push);e.exports=function(e,t){var r,i=o(e),d=0,u=[];for(r in i)!n(a,r)&&n(i,r)&&c(u,r);for(;t.length>d;)n(i,r=t[d++])&&(~s(u,r)||c(u,r));return u}},4771:(e,t,r)=>{var i=r(5629),n=r(6759);e.exports=Object.keys||function(e){return i(e,n)}},6760:(e,t)=>{var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,n=i&&!r.call({1:2},1);t.f=n?function(e){var t=i(this,e);return!!t&&t.enumerable}:r},8929:(e,t,r)=>{var i=r(5329),n=r(6059),o=r(1851);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=i(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),t=r instanceof Array}catch(e){}return function(r,i){return n(r),o(i),t?e(r,i):r.__proto__=i,r}}():void 0)},5623:(e,t,r)=>{var i=r(2885),n=r(9697);e.exports=i?{}.toString:function(){return"[object "+n(this)+"]"}},9811:(e,t,r)=>{var i=r(1899),n=r(8834),o=r(7475),s=r(941),a=i.TypeError;e.exports=function(e,t){var r,i;if("string"===t&&o(r=e.toString)&&!s(i=n(r,e)))return i;if(o(r=e.valueOf)&&!s(i=n(r,e)))return i;if("string"!==t&&o(r=e.toString)&&!s(i=n(r,e)))return i;throw a("Can't convert object to primitive value")}},1136:(e,t,r)=>{var i=r(626),n=r(5329),o=r(946),s=r(7857),a=r(6059),c=n([].concat);e.exports=i("Reflect","ownKeys")||function(e){var t=o.f(a(e)),r=s.f;return r?c(t,r(e)):t}},4058:e=>{e.exports={}},2:e=>{e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},6584:(e,t,r)=>{var i=r(6059),n=r(941),o=r(9520);e.exports=function(e,t){if(i(e),n(t)&&t.constructor===e)return t;var r=o.f(e);return(0,r.resolve)(t),r.promise}},8397:e=>{var t=function(){this.head=null,this.tail=null};t.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}},e.exports=t},7524:(e,t,r)=>{var i=r(9754);e.exports=function(e,t,r){for(var n in t)r&&r.unsafe&&e[n]?e[n]=t[n]:i(e,n,t[n],r);return e}},9754:(e,t,r)=>{var i=r(2029);e.exports=function(e,t,r,n){n&&n.enumerable?e[t]=r:i(e,t,r)}},8219:(e,t,r)=>{var i=r(1899).TypeError;e.exports=function(e){if(null==e)throw i("Can't call method on "+e);return e}},4911:(e,t,r)=>{var i=r(1899),n=Object.defineProperty;e.exports=function(e,t){try{n(i,e,{value:t,configurable:!0,writable:!0})}catch(r){i[e]=t}return t}},4431:(e,t,r)=>{var i=r(626),n=r(5988),o=r(9813),s=r(5746),a=o("species");e.exports=function(e){var t=i(e),r=n.f;s&&t&&!t[a]&&r(t,a,{configurable:!0,get:function(){return this}})}},904:(e,t,r)=>{var i=r(2885),n=r(5988).f,o=r(2029),s=r(953),a=r(5623),c=r(9813)("toStringTag");e.exports=function(e,t,r,d){if(e){var u=r?e:e.prototype;s(u,c)||n(u,c,{configurable:!0,value:t}),d&&!i&&o(u,"toString",a)}}},4262:(e,t,r)=>{var i=r(8726),n=r(9418),o=i("keys");e.exports=function(e){return o[e]||(o[e]=n(e))}},3030:(e,t,r)=>{var i=r(1899),n=r(4911),o="__core-js_shared__",s=i[o]||n(o,{});e.exports=s},8726:(e,t,r)=>{var i=r(2529),n=r(3030);(e.exports=function(e,t){return n[e]||(n[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.20.3",mode:i?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.20.3/LICENSE",source:"https://github.com/zloirock/core-js"})},487:(e,t,r)=>{var i=r(6059),n=r(174),o=r(9813)("species");e.exports=function(e,t){var r,s=i(e).constructor;return void 0===s||null==(r=i(s)[o])?t:n(r)}},4620:(e,t,r)=>{var i=r(5329),n=r(2435),o=r(5803),s=r(8219),a=i("".charAt),c=i("".charCodeAt),d=i("".slice),u=function(e){return function(t,r){var i,u,A=o(s(t)),h=n(r),l=A.length;return h<0||h>=l?e?"":void 0:(i=c(A,h))<55296||i>56319||h+1===l||(u=c(A,h+1))<56320||u>57343?e?a(A,h):i:e?d(A,h,h+2):u-56320+(i-55296<<10)+65536}};e.exports={codeAt:u(!1),charAt:u(!0)}},2941:(e,t,r)=>{var i,n,o,s,a=r(1899),c=r(9730),d=r(6843),u=r(7475),A=r(953),h=r(5981),l=r(5463),p=r(3765),g=r(1333),E=r(2749),f=r(6049),I=a.setImmediate,m=a.clearImmediate,_=a.process,C=a.Dispatch,S=a.Function,v=a.MessageChannel,T=a.String,R=0,y={};try{i=a.location}catch(e){}var w=function(e){if(A(y,e)){var t=y[e];delete y[e],t()}},b=function(e){return function(){w(e)}},O=function(e){w(e.data)},N=function(e){a.postMessage(T(e),i.protocol+"//"+i.host)};I&&m||(I=function(e){var t=p(arguments,1);return y[++R]=function(){c(u(e)?e:S(e),void 0,t)},n(R),R},m=function(e){delete y[e]},f?n=function(e){_.nextTick(b(e))}:C&&C.now?n=function(e){C.now(b(e))}:v&&!E?(s=(o=new v).port2,o.port1.onmessage=O,n=d(s.postMessage,s)):a.addEventListener&&u(a.postMessage)&&!a.importScripts&&i&&"file:"!==i.protocol&&!h(N)?(n=N,a.addEventListener("message",O,!1)):n="onreadystatechange"in g("script")?function(e){l.appendChild(g("script")).onreadystatechange=function(){l.removeChild(this),w(e)}}:function(e){setTimeout(b(e),0)}),e.exports={set:I,clear:m}},9413:(e,t,r)=>{var i=r(2435),n=Math.max,o=Math.min;e.exports=function(e,t){var r=i(e);return r<0?n(r+t,0):o(r,t)}},4529:(e,t,r)=>{var i=r(7026),n=r(8219);e.exports=function(e){return i(n(e))}},2435:e=>{var t=Math.ceil,r=Math.floor;e.exports=function(e){var i=+e;return i!=i||0===i?0:(i>0?r:t)(i)}},3057:(e,t,r)=>{var i=r(2435),n=Math.min;e.exports=function(e){return e>0?n(i(e),9007199254740991):0}},9678:(e,t,r)=>{var i=r(1899),n=r(8219),o=i.Object;e.exports=function(e){return o(n(e))}},6935:(e,t,r)=>{var i=r(1899),n=r(8834),o=r(941),s=r(6664),a=r(4229),c=r(9811),d=r(9813),u=i.TypeError,A=d("toPrimitive");e.exports=function(e,t){if(!o(e)||s(e))return e;var r,i=a(e,A);if(i){if(void 0===t&&(t="default"),r=n(i,e,t),!o(r)||s(r))return r;throw u("Can't convert object to primitive value")}return void 0===t&&(t="number"),c(e,t)}},3894:(e,t,r)=>{var i=r(6935),n=r(6664);e.exports=function(e){var t=i(e,"string");return n(t)?t:t+""}},2885:(e,t,r)=>{var i={};i[r(9813)("toStringTag")]="z",e.exports="[object z]"===String(i)},5803:(e,t,r)=>{var i=r(1899),n=r(9697),o=i.String;e.exports=function(e){if("Symbol"===n(e))throw TypeError("Cannot convert a Symbol value to a string");return o(e)}},9826:(e,t,r)=>{var i=r(1899).String;e.exports=function(e){try{return i(e)}catch(e){return"Object"}}},9418:(e,t,r)=>{var i=r(5329),n=0,o=Math.random(),s=i(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+s(++n+o,36)}},2302:(e,t,r)=>{var i=r(2497);e.exports=i&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3937:(e,t,r)=>{var i=r(5746),n=r(5981);e.exports=i&&n((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},9813:(e,t,r)=>{var i=r(1899),n=r(8726),o=r(953),s=r(9418),a=r(2497),c=r(2302),d=n("wks"),u=i.Symbol,A=u&&u.for,h=c?u:u&&u.withoutSetter||s;e.exports=function(e){if(!o(d,e)||!a&&"string"!=typeof d[e]){var t="Symbol."+e;a&&o(u,e)?d[e]=u[e]:d[e]=c&&A?A(t):h(t)}return d[e]}},7627:(e,t,r)=>{var i=r(6887),n=r(1899),o=r(7046),s=r(249),a=r(8929),c=r(3489),d=r(9290),u=r(2029),A=r(1887),h=r(8694),l=r(3794),p=r(3091),g=r(4649),E=r(9813),f=r(8780),I=E("toStringTag"),m=n.Error,_=[].push,C=function(e,t){var r,i=arguments.length>2?arguments[2]:void 0,n=o(S,this);a?r=a(new m,n?s(this):S):(r=n?this:d(S),u(r,I,"Error")),void 0!==t&&u(r,"message",g(t)),f&&u(r,"stack",h(r.stack,1)),l(r,i);var c=[];return p(e,_,{that:c}),u(r,"errors",c),r};a?a(C,m):c(C,m,{name:!0});var S=C.prototype=d(m.prototype,{constructor:A(1,C),message:A(1,""),name:A(1,"AggregateError")});i({global:!0},{AggregateError:C})},6274:(e,t,r)=>{var i=r(4529),n=r(8479),o=r(2077),s=r(5402),a=r(5988).f,c=r(7771),d=r(2529),u=r(5746),A="Array Iterator",h=s.set,l=s.getterFor(A);e.exports=c(Array,"Array",(function(e,t){h(this,{type:A,target:i(e),index:0,kind:t})}),(function(){var e=l(this),t=e.target,r=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:i,done:!1}:"values"==r?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values");var p=o.Arguments=o.Array;if(n("keys"),n("values"),n("entries"),!d&&u&&"values"!==p.name)try{a(p,"name",{value:"values"})}catch(e){}},6450:(e,t,r)=>{var i=r(6887),n=r(5746),o=r(5988).f;i({target:"Object",stat:!0,forced:Object.defineProperty!==o,sham:!n},{defineProperty:o})},5967:()=>{},4560:(e,t,r)=>{var i=r(6887),n=r(8834),o=r(4883),s=r(9520),a=r(2),c=r(3091);i({target:"Promise",stat:!0},{allSettled:function(e){var t=this,r=s.f(t),i=r.resolve,d=r.reject,u=a((function(){var r=o(t.resolve),s=[],a=0,d=1;c(e,(function(e){var o=a++,c=!1;d++,n(r,t,e).then((function(e){c||(c=!0,s[o]={status:"fulfilled",value:e},--d||i(s))}),(function(e){c||(c=!0,s[o]={status:"rejected",reason:e},--d||i(s))}))})),--d||i(s)}));return u.error&&d(u.value),r.promise}})},7206:(e,t,r)=>{var i=r(6887),n=r(4883),o=r(626),s=r(8834),a=r(9520),c=r(2),d=r(3091),u="No one promise resolved";i({target:"Promise",stat:!0},{any:function(e){var t=this,r=o("AggregateError"),i=a.f(t),A=i.resolve,h=i.reject,l=c((function(){var i=n(t.resolve),o=[],a=0,c=1,l=!1;d(e,(function(e){var n=a++,d=!1;c++,s(i,t,e).then((function(e){d||l||(l=!0,A(e))}),(function(e){d||l||(d=!0,o[n]=e,--c||h(new r(o,u)))}))})),--c||h(new r(o,u))}));return l.error&&h(l.value),i.promise}})},4349:(e,t,r)=>{var i=r(6887),n=r(2529),o=r(9297),s=r(5981),a=r(626),c=r(7475),d=r(487),u=r(6584),A=r(9754);if(i({target:"Promise",proto:!0,real:!0,forced:!!o&&s((function(){o.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=d(this,a("Promise")),r=c(e);return this.then(r?function(r){return u(t,e()).then((function(){return r}))}:e,r?function(r){return u(t,e()).then((function(){throw r}))}:e)}}),!n&&c(o)){var h=a("Promise").prototype.finally;o.prototype.finally!==h&&A(o.prototype,"finally",h,{unsafe:!0})}},8881:(e,t,r)=>{var i,n,o,s,a=r(6887),c=r(2529),d=r(1899),u=r(626),A=r(8834),h=r(9297),l=r(9754),p=r(7524),g=r(8929),E=r(904),f=r(4431),I=r(4883),m=r(7475),_=r(941),C=r(5743),S=r(1302),v=r(3091),T=r(1385),R=r(487),y=r(2941).set,w=r(6132),b=r(6584),O=r(4845),N=r(9520),D=r(2),P=r(8397),L=r(5402),k=r(7252),B=r(9813),M=r(3321),U=r(6049),x=r(3385),Q=B("species"),F="Promise",V=L.getterFor(F),j=L.set,G=L.getterFor(F),K=h&&h.prototype,H=h,W=K,Y=d.TypeError,J=d.document,q=d.process,X=N.f,z=X,Z=!!(J&&J.createEvent&&d.dispatchEvent),$=m(d.PromiseRejectionEvent),ee="unhandledrejection",te=!1,re=k(F,(function(){var e=S(H),t=e!==String(H);if(!t&&66===x)return!0;if(c&&!W.finally)return!0;if(x>=51&&/native code/.test(e))return!1;var r=new H((function(e){e(1)})),i=function(e){e((function(){}),(function(){}))};return(r.constructor={})[Q]=i,!(te=r.then((function(){}))instanceof i)||!t&&M&&!$})),ie=re||!T((function(e){H.all(e).catch((function(){}))})),ne=function(e){var t;return!(!_(e)||!m(t=e.then))&&t},oe=function(e,t){var r,i,n,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,u=e.domain;try{a?(s||(2===t.rejection&&ue(t),t.rejection=1),!0===a?r=o:(u&&u.enter(),r=a(o),u&&(u.exit(),n=!0)),r===e.promise?d(Y("Promise-chain cycle")):(i=ne(r))?A(i,r,c,d):c(r)):d(o)}catch(e){u&&!n&&u.exit(),d(e)}},se=function(e,t){e.notified||(e.notified=!0,w((function(){for(var r,i=e.reactions;r=i.get();)oe(r,e);e.notified=!1,t&&!e.rejection&&ce(e)})))},ae=function(e,t,r){var i,n;Z?((i=J.createEvent("Event")).promise=t,i.reason=r,i.initEvent(e,!1,!0),d.dispatchEvent(i)):i={promise:t,reason:r},!$&&(n=d["on"+e])?n(i):e===ee&&O("Unhandled promise rejection",r)},ce=function(e){A(y,d,(function(){var t,r=e.facade,i=e.value;if(de(e)&&(t=D((function(){U?q.emit("unhandledRejection",i,r):ae(ee,r,i)})),e.rejection=U||de(e)?2:1,t.error))throw t.value}))},de=function(e){return 1!==e.rejection&&!e.parent},ue=function(e){A(y,d,(function(){var t=e.facade;U?q.emit("rejectionHandled",t):ae("rejectionhandled",t,e.value)}))},Ae=function(e,t,r){return function(i){e(t,i,r)}},he=function(e,t,r){e.done||(e.done=!0,r&&(e=r),e.value=t,e.state=2,se(e,!0))},le=function(e,t,r){if(!e.done){e.done=!0,r&&(e=r);try{if(e.facade===t)throw Y("Promise can't be resolved itself");var i=ne(t);i?w((function(){var r={done:!1};try{A(i,t,Ae(le,r,e),Ae(he,r,e))}catch(t){he(r,t,e)}})):(e.value=t,e.state=1,se(e,!1))}catch(t){he({done:!1},t,e)}}};if(re&&(W=(H=function(e){C(this,W),I(e),A(i,this);var t=V(this);try{e(Ae(le,t),Ae(he,t))}catch(e){he(t,e)}}).prototype,(i=function(e){j(this,{type:F,done:!1,notified:!1,parent:!1,reactions:new P,rejection:!1,state:0,value:void 0})}).prototype=p(W,{then:function(e,t){var r=G(this),i=X(R(this,H));return r.parent=!0,i.ok=!m(e)||e,i.fail=m(t)&&t,i.domain=U?q.domain:void 0,0==r.state?r.reactions.add(i):w((function(){oe(i,r)})),i.promise},catch:function(e){return this.then(void 0,e)}}),n=function(){var e=new i,t=V(e);this.promise=e,this.resolve=Ae(le,t),this.reject=Ae(he,t)},N.f=X=function(e){return e===H||e===o?new n(e):z(e)},!c&&m(h)&&K!==Object.prototype)){s=K.then,te||(l(K,"then",(function(e,t){var r=this;return new H((function(e,t){A(s,r,e,t)})).then(e,t)}),{unsafe:!0}),l(K,"catch",W.catch,{unsafe:!0}));try{delete K.constructor}catch(e){}g&&g(K,W)}a({global:!0,wrap:!0,forced:re},{Promise:H}),E(H,F,!1,!0),f(F),o=u(F),a({target:F,stat:!0,forced:re},{reject:function(e){var t=X(this);return A(t.reject,void 0,e),t.promise}}),a({target:F,stat:!0,forced:c||re},{resolve:function(e){return b(c&&this===o?H:this,e)}}),a({target:F,stat:!0,forced:ie},{all:function(e){var t=this,r=X(t),i=r.resolve,n=r.reject,o=D((function(){var r=I(t.resolve),o=[],s=0,a=1;v(e,(function(e){var c=s++,d=!1;a++,A(r,t,e).then((function(e){d||(d=!0,o[c]=e,--a||i(o))}),n)})),--a||i(o)}));return o.error&&n(o.value),r.promise},race:function(e){var t=this,r=X(t),i=r.reject,n=D((function(){var n=I(t.resolve);v(e,(function(e){A(n,t,e).then(r.resolve,i)}))}));return n.error&&i(n.value),r.promise}})},7971:(e,t,r)=>{var i=r(4620).charAt,n=r(5803),o=r(5402),s=r(7771),a="String Iterator",c=o.set,d=o.getterFor(a);s(String,"String",(function(e){c(this,{type:a,string:n(e),index:0})}),(function(){var e,t=d(this),r=t.string,n=t.index;return n>=r.length?{value:void 0,done:!0}:(e=i(r,n),t.index+=e.length,{value:e,done:!1})}))},7634:(e,t,r)=>{r(6274);var i=r(3281),n=r(1899),o=r(9697),s=r(2029),a=r(2077),c=r(9813)("toStringTag");for(var d in i){var u=n[d],A=u&&u.prototype;A&&o(A)!==c&&s(A,c,d),a[d]=a.Array}},1910:(e,t,r)=>{var i=r(8171);e.exports=i},7460:(e,t,r)=>{var i=r(2956);r(7634),e.exports=i},9662:(e,t,r)=>{var i=r(7854),n=r(614),o=r(6330),s=i.TypeError;e.exports=function(e){if(n(e))return e;throw s(o(e)+" is not a function")}},6077:(e,t,r)=>{var i=r(7854),n=r(614),o=i.String,s=i.TypeError;e.exports=function(e){if("object"==typeof e||n(e))return e;throw s("Can't set "+o(e)+" as a prototype")}},1223:(e,t,r)=>{var i=r(5112),n=r(30),o=r(3070),s=i("unscopables"),a=Array.prototype;null==a[s]&&o.f(a,s,{configurable:!0,value:n(null)}),e.exports=function(e){a[s][e]=!0}},9670:(e,t,r)=>{var i=r(7854),n=r(111),o=i.String,s=i.TypeError;e.exports=function(e){if(n(e))return e;throw s(o(e)+" is not an object")}},1318:(e,t,r)=>{var i=r(5656),n=r(1400),o=r(6244),s=function(e){return function(t,r,s){var a,c=i(t),d=o(c),u=n(s,d);if(e&&r!=r){for(;d>u;)if((a=c[u++])!=a)return!0}else for(;d>u;u++)if((e||u in c)&&c[u]===r)return e||u||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},4326:(e,t,r)=>{var i=r(1702),n=i({}.toString),o=i("".slice);e.exports=function(e){return o(n(e),8,-1)}},648:(e,t,r)=>{var i=r(7854),n=r(1694),o=r(614),s=r(4326),a=r(5112)("toStringTag"),c=i.Object,d="Arguments"==s(function(){return arguments}());e.exports=n?s:function(e){var t,r,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=c(e),a))?r:d?s(t):"Object"==(i=s(t))&&o(t.callee)?"Arguments":i}},7741:(e,t,r)=>{var i=r(1702)("".replace),n=String(Error("zxcasd").stack),o=/\n\s*at [^:]*:[^\n]*/,s=o.test(n);e.exports=function(e,t){if(s&&"string"==typeof e)for(;t--;)e=i(e,o,"");return e}},9920:(e,t,r)=>{var i=r(2597),n=r(3887),o=r(1236),s=r(3070);e.exports=function(e,t,r){for(var a=n(t),c=s.f,d=o.f,u=0;u<a.length;u++){var A=a[u];i(e,A)||r&&i(r,A)||c(e,A,d(t,A))}}},8544:(e,t,r)=>{var i=r(7293);e.exports=!i((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},4994:(e,t,r)=>{var i=r(3383).IteratorPrototype,n=r(30),o=r(9114),s=r(8003),a=r(7497),c=function(){return this};e.exports=function(e,t,r,d){var u=t+" Iterator";return e.prototype=n(i,{next:o(+!d,r)}),s(e,u,!1,!0),a[u]=c,e}},8880:(e,t,r)=>{var i=r(9781),n=r(3070),o=r(9114);e.exports=i?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},9114:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},654:(e,t,r)=>{var i=r(2109),n=r(6916),o=r(1913),s=r(6530),a=r(614),c=r(4994),d=r(9518),u=r(7674),A=r(8003),h=r(8880),l=r(1320),p=r(5112),g=r(7497),E=r(3383),f=s.PROPER,I=s.CONFIGURABLE,m=E.IteratorPrototype,_=E.BUGGY_SAFARI_ITERATORS,C=p("iterator"),S="keys",v="values",T="entries",R=function(){return this};e.exports=function(e,t,r,s,p,E,y){c(r,t,s);var w,b,O,N=function(e){if(e===p&&B)return B;if(!_&&e in L)return L[e];switch(e){case S:case v:case T:return function(){return new r(this,e)}}return function(){return new r(this)}},D=t+" Iterator",P=!1,L=e.prototype,k=L[C]||L["@@iterator"]||p&&L[p],B=!_&&k||N(p),M="Array"==t&&L.entries||k;if(M&&(w=d(M.call(new e)))!==Object.prototype&&w.next&&(o||d(w)===m||(u?u(w,m):a(w[C])||l(w,C,R)),A(w,D,!0,!0),o&&(g[D]=R)),f&&p==v&&k&&k.name!==v&&(!o&&I?h(L,"name",v):(P=!0,B=function(){return n(k,this)})),p)if(b={values:N(v),keys:E?B:N(S),entries:N(T)},y)for(O in b)(_||P||!(O in L))&&l(L,O,b[O]);else i({target:t,proto:!0,forced:_||P},b);return o&&!y||L[C]===B||l(L,C,B,{name:p}),g[t]=B,b}},9781:(e,t,r)=>{var i=r(7293);e.exports=!i((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},317:(e,t,r)=>{var i=r(7854),n=r(111),o=i.document,s=n(o)&&n(o.createElement);e.exports=function(e){return s?o.createElement(e):{}}},8324:e=>{e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},8509:(e,t,r)=>{var i=r(317)("span").classList,n=i&&i.constructor&&i.constructor.prototype;e.exports=n===Object.prototype?void 0:n},8113:(e,t,r)=>{var i=r(5005);e.exports=i("navigator","userAgent")||""},7392:(e,t,r)=>{var i,n,o=r(7854),s=r(8113),a=o.process,c=o.Deno,d=a&&a.versions||c&&c.version,u=d&&d.v8;u&&(n=(i=u.split("."))[0]>0&&i[0]<4?1:+(i[0]+i[1])),!n&&s&&(!(i=s.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=s.match(/Chrome\/(\d+)/))&&(n=+i[1]),e.exports=n},748:e=>{e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},2914:(e,t,r)=>{var i=r(7293),n=r(9114);e.exports=!i((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",n(1,7)),7!==e.stack)}))},2109:(e,t,r)=>{var i=r(7854),n=r(1236).f,o=r(8880),s=r(1320),a=r(3505),c=r(9920),d=r(4705);e.exports=function(e,t){var r,u,A,h,l,p=e.target,g=e.global,E=e.stat;if(r=g?i:E?i[p]||a(p,{}):(i[p]||{}).prototype)for(u in t){if(h=t[u],A=e.noTargetGet?(l=n(r,u))&&l.value:r[u],!d(g?u:p+(E?".":"#")+u,e.forced)&&void 0!==A){if(typeof h==typeof A)continue;c(h,A)}(e.sham||A&&A.sham)&&o(h,"sham",!0),s(r,u,h,e)}}},7293:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},2104:(e,t,r)=>{var i=r(4374),n=Function.prototype,o=n.apply,s=n.call;e.exports="object"==typeof Reflect&&Reflect.apply||(i?s.bind(o):function(){return s.apply(o,arguments)})},4374:(e,t,r)=>{var i=r(7293);e.exports=!i((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},6916:(e,t,r)=>{var i=r(4374),n=Function.prototype.call;e.exports=i?n.bind(n):function(){return n.apply(n,arguments)}},6530:(e,t,r)=>{var i=r(9781),n=r(2597),o=Function.prototype,s=i&&Object.getOwnPropertyDescriptor,a=n(o,"name"),c=a&&"something"===function(){}.name,d=a&&(!i||i&&s(o,"name").configurable);e.exports={EXISTS:a,PROPER:c,CONFIGURABLE:d}},1702:(e,t,r)=>{var i=r(4374),n=Function.prototype,o=n.bind,s=n.call,a=i&&o.bind(s,s);e.exports=i?function(e){return e&&a(e)}:function(e){return e&&function(){return s.apply(e,arguments)}}},5005:(e,t,r)=>{var i=r(7854),n=r(614),o=function(e){return n(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?o(i[e]):i[e]&&i[e][t]}},8173:(e,t,r)=>{var i=r(9662);e.exports=function(e,t){var r=e[t];return null==r?void 0:i(r)}},7854:(e,t,r)=>{var i=function(e){return e&&e.Math==Math&&e};e.exports=i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof r.g&&r.g)||function(){return this}()||Function("return this")()},2597:(e,t,r)=>{var i=r(1702),n=r(7908),o=i({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return o(n(e),t)}},3501:e=>{e.exports={}},490:(e,t,r)=>{var i=r(5005);e.exports=i("document","documentElement")},4664:(e,t,r)=>{var i=r(9781),n=r(7293),o=r(317);e.exports=!i&&!n((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},8361:(e,t,r)=>{var i=r(7854),n=r(1702),o=r(7293),s=r(4326),a=i.Object,c=n("".split);e.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"==s(e)?c(e,""):a(e)}:a},9587:(e,t,r)=>{var i=r(614),n=r(111),o=r(7674);e.exports=function(e,t,r){var s,a;return o&&i(s=t.constructor)&&s!==r&&n(a=s.prototype)&&a!==r.prototype&&o(e,a),e}},2788:(e,t,r)=>{var i=r(1702),n=r(614),o=r(5465),s=i(Function.toString);n(o.inspectSource)||(o.inspectSource=function(e){return s(e)}),e.exports=o.inspectSource},8340:(e,t,r)=>{var i=r(111),n=r(8880);e.exports=function(e,t){i(t)&&"cause"in t&&n(e,"cause",t.cause)}},9909:(e,t,r)=>{var i,n,o,s=r(8536),a=r(7854),c=r(1702),d=r(111),u=r(8880),A=r(2597),h=r(5465),l=r(6200),p=r(3501),g="Object already initialized",E=a.TypeError,f=a.WeakMap;if(s||h.state){var I=h.state||(h.state=new f),m=c(I.get),_=c(I.has),C=c(I.set);i=function(e,t){if(_(I,e))throw new E(g);return t.facade=e,C(I,e,t),t},n=function(e){return m(I,e)||{}},o=function(e){return _(I,e)}}else{var S=l("state");p[S]=!0,i=function(e,t){if(A(e,S))throw new E(g);return t.facade=e,u(e,S,t),t},n=function(e){return A(e,S)?e[S]:{}},o=function(e){return A(e,S)}}e.exports={set:i,get:n,has:o,enforce:function(e){return o(e)?n(e):i(e,{})},getterFor:function(e){return function(t){var r;if(!d(t)||(r=n(t)).type!==e)throw E("Incompatible receiver, "+e+" required");return r}}}},614:e=>{e.exports=function(e){return"function"==typeof e}},4705:(e,t,r)=>{var i=r(7293),n=r(614),o=/#|\.prototype\./,s=function(e,t){var r=c[a(e)];return r==u||r!=d&&(n(t)?i(t):!!t)},a=s.normalize=function(e){return String(e).replace(o,".").toLowerCase()},c=s.data={},d=s.NATIVE="N",u=s.POLYFILL="P";e.exports=s},111:(e,t,r)=>{var i=r(614);e.exports=function(e){return"object"==typeof e?null!==e:i(e)}},1913:e=>{e.exports=!1},2190:(e,t,r)=>{var i=r(7854),n=r(5005),o=r(614),s=r(7976),a=r(3307),c=i.Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=n("Symbol");return o(t)&&s(t.prototype,c(e))}},3383:(e,t,r)=>{var i,n,o,s=r(7293),a=r(614),c=r(30),d=r(9518),u=r(1320),A=r(5112),h=r(1913),l=A("iterator"),p=!1;[].keys&&("next"in(o=[].keys())?(n=d(d(o)))!==Object.prototype&&(i=n):p=!0),null==i||s((function(){var e={};return i[l].call(e)!==e}))?i={}:h&&(i=c(i)),a(i[l])||u(i,l,(function(){return this})),e.exports={IteratorPrototype:i,BUGGY_SAFARI_ITERATORS:p}},7497:e=>{e.exports={}},6244:(e,t,r)=>{var i=r(7466);e.exports=function(e){return i(e.length)}},133:(e,t,r)=>{var i=r(7392),n=r(7293);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&i&&i<41}))},8536:(e,t,r)=>{var i=r(7854),n=r(614),o=r(2788),s=i.WeakMap;e.exports=n(s)&&/native code/.test(o(s))},6277:(e,t,r)=>{var i=r(1340);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:i(e)}},30:(e,t,r)=>{var i,n=r(9670),o=r(6048),s=r(748),a=r(3501),c=r(490),d=r(317),u=r(6200)("IE_PROTO"),A=function(){},h=function(e){return"<script>"+e+"<\/script>"},l=function(e){e.write(h("")),e.close();var t=e.parentWindow.Object;return e=null,t},p=function(){try{i=new ActiveXObject("htmlfile")}catch(e){}var e,t;p="undefined"!=typeof document?document.domain&&i?l(i):((t=d("iframe")).style.display="none",c.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(h("document.F=Object")),e.close(),e.F):l(i);for(var r=s.length;r--;)delete p.prototype[s[r]];return p()};a[u]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(A.prototype=n(e),r=new A,A.prototype=null,r[u]=e):r=p(),void 0===t?r:o.f(r,t)}},6048:(e,t,r)=>{var i=r(9781),n=r(3353),o=r(3070),s=r(9670),a=r(5656),c=r(1956);t.f=i&&!n?Object.defineProperties:function(e,t){s(e);for(var r,i=a(t),n=c(t),d=n.length,u=0;d>u;)o.f(e,r=n[u++],i[r]);return e}},3070:(e,t,r)=>{var i=r(7854),n=r(9781),o=r(4664),s=r(3353),a=r(9670),c=r(4948),d=i.TypeError,u=Object.defineProperty,A=Object.getOwnPropertyDescriptor;t.f=n?s?function(e,t,r){if(a(e),t=c(t),a(r),"function"==typeof e&&"prototype"===t&&"value"in r&&"writable"in r&&!r.writable){var i=A(e,t);i&&i.writable&&(e[t]=r.value,r={configurable:"configurable"in r?r.configurable:i.configurable,enumerable:"enumerable"in r?r.enumerable:i.enumerable,writable:!1})}return u(e,t,r)}:u:function(e,t,r){if(a(e),t=c(t),a(r),o)try{return u(e,t,r)}catch(e){}if("get"in r||"set"in r)throw d("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},1236:(e,t,r)=>{var i=r(9781),n=r(6916),o=r(5296),s=r(9114),a=r(5656),c=r(4948),d=r(2597),u=r(4664),A=Object.getOwnPropertyDescriptor;t.f=i?A:function(e,t){if(e=a(e),t=c(t),u)try{return A(e,t)}catch(e){}if(d(e,t))return s(!n(o.f,e,t),e[t])}},8006:(e,t,r)=>{var i=r(6324),n=r(748).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return i(e,n)}},5181:(e,t)=>{t.f=Object.getOwnPropertySymbols},9518:(e,t,r)=>{var i=r(7854),n=r(2597),o=r(614),s=r(7908),a=r(6200),c=r(8544),d=a("IE_PROTO"),u=i.Object,A=u.prototype;e.exports=c?u.getPrototypeOf:function(e){var t=s(e);if(n(t,d))return t[d];var r=t.constructor;return o(r)&&t instanceof r?r.prototype:t instanceof u?A:null}},7976:(e,t,r)=>{var i=r(1702);e.exports=i({}.isPrototypeOf)},6324:(e,t,r)=>{var i=r(1702),n=r(2597),o=r(5656),s=r(1318).indexOf,a=r(3501),c=i([].push);e.exports=function(e,t){var r,i=o(e),d=0,u=[];for(r in i)!n(a,r)&&n(i,r)&&c(u,r);for(;t.length>d;)n(i,r=t[d++])&&(~s(u,r)||c(u,r));return u}},1956:(e,t,r)=>{var i=r(6324),n=r(748);e.exports=Object.keys||function(e){return i(e,n)}},5296:(e,t)=>{var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,n=i&&!r.call({1:2},1);t.f=n?function(e){var t=i(this,e);return!!t&&t.enumerable}:r},7674:(e,t,r)=>{var i=r(1702),n=r(9670),o=r(6077);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=i(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),t=r instanceof Array}catch(e){}return function(r,i){return n(r),o(i),t?e(r,i):r.__proto__=i,r}}():void 0)},2140:(e,t,r)=>{var i=r(7854),n=r(6916),o=r(614),s=r(111),a=i.TypeError;e.exports=function(e,t){var r,i;if("string"===t&&o(r=e.toString)&&!s(i=n(r,e)))return i;if(o(r=e.valueOf)&&!s(i=n(r,e)))return i;if("string"!==t&&o(r=e.toString)&&!s(i=n(r,e)))return i;throw a("Can't convert object to primitive value")}},3887:(e,t,r)=>{var i=r(5005),n=r(1702),o=r(8006),s=r(5181),a=r(9670),c=n([].concat);e.exports=i("Reflect","ownKeys")||function(e){var t=o.f(a(e)),r=s.f;return r?c(t,r(e)):t}},1320:(e,t,r)=>{var i=r(7854),n=r(614),o=r(2597),s=r(8880),a=r(3505),c=r(2788),d=r(9909),u=r(6530).CONFIGURABLE,A=d.get,h=d.enforce,l=String(String).split("String");(e.exports=function(e,t,r,c){var d,A=!!c&&!!c.unsafe,p=!!c&&!!c.enumerable,g=!!c&&!!c.noTargetGet,E=c&&void 0!==c.name?c.name:t;n(r)&&("Symbol("===String(E).slice(0,7)&&(E="["+String(E).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!o(r,"name")||u&&r.name!==E)&&s(r,"name",E),(d=h(r)).source||(d.source=l.join("string"==typeof E?E:""))),e!==i?(A?!g&&e[t]&&(p=!0):delete e[t],p?e[t]=r:s(e,t,r)):p?e[t]=r:a(t,r)})(Function.prototype,"toString",(function(){return n(this)&&A(this).source||c(this)}))},2261:(e,t,r)=>{var i,n,o=r(6916),s=r(1702),a=r(1340),c=r(7066),d=r(2999),u=r(2309),A=r(30),h=r(9909).get,l=r(9441),p=r(7168),g=u("native-string-replace",String.prototype.replace),E=RegExp.prototype.exec,f=E,I=s("".charAt),m=s("".indexOf),_=s("".replace),C=s("".slice),S=(n=/b*/g,o(E,i=/a/,"a"),o(E,n,"a"),0!==i.lastIndex||0!==n.lastIndex),v=d.BROKEN_CARET,T=void 0!==/()??/.exec("")[1];(S||T||v||l||p)&&(f=function(e){var t,r,i,n,s,d,u,l=this,p=h(l),R=a(e),y=p.raw;if(y)return y.lastIndex=l.lastIndex,t=o(f,y,R),l.lastIndex=y.lastIndex,t;var w=p.groups,b=v&&l.sticky,O=o(c,l),N=l.source,D=0,P=R;if(b&&(O=_(O,"y",""),-1===m(O,"g")&&(O+="g"),P=C(R,l.lastIndex),l.lastIndex>0&&(!l.multiline||l.multiline&&"\n"!==I(R,l.lastIndex-1))&&(N="(?: "+N+")",P=" "+P,D++),r=new RegExp("^(?:"+N+")",O)),T&&(r=new RegExp("^"+N+"$(?!\\s)",O)),S&&(i=l.lastIndex),n=o(E,b?r:l,P),b?n?(n.input=C(n.input,D),n[0]=C(n[0],D),n.index=l.lastIndex,l.lastIndex+=n[0].length):l.lastIndex=0:S&&n&&(l.lastIndex=l.global?n.index+n[0].length:i),T&&n&&n.length>1&&o(g,n[0],r,(function(){for(s=1;s<arguments.length-2;s++)void 0===arguments[s]&&(n[s]=void 0)})),n&&w)for(n.groups=d=A(null),s=0;s<w.length;s++)d[(u=w[s])[0]]=n[u[1]];return n}),e.exports=f},7066:(e,t,r)=>{var i=r(9670);e.exports=function(){var e=i(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},2999:(e,t,r)=>{var i=r(7293),n=r(7854).RegExp,o=i((function(){var e=n("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),s=o||i((function(){return!n("a","y").sticky})),a=o||i((function(){var e=n("^r","gy");return e.lastIndex=2,null!=e.exec("str")}));e.exports={BROKEN_CARET:a,MISSED_STICKY:s,UNSUPPORTED_Y:o}},9441:(e,t,r)=>{var i=r(7293),n=r(7854).RegExp;e.exports=i((function(){var e=n(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)}))},7168:(e,t,r)=>{var i=r(7293),n=r(7854).RegExp;e.exports=i((function(){var e=n("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")}))},4488:(e,t,r)=>{var i=r(7854).TypeError;e.exports=function(e){if(null==e)throw i("Can't call method on "+e);return e}},3505:(e,t,r)=>{var i=r(7854),n=Object.defineProperty;e.exports=function(e,t){try{n(i,e,{value:t,configurable:!0,writable:!0})}catch(r){i[e]=t}return t}},8003:(e,t,r)=>{var i=r(3070).f,n=r(2597),o=r(5112)("toStringTag");e.exports=function(e,t,r){e&&!r&&(e=e.prototype),e&&!n(e,o)&&i(e,o,{configurable:!0,value:t})}},6200:(e,t,r)=>{var i=r(2309),n=r(9711),o=i("keys");e.exports=function(e){return o[e]||(o[e]=n(e))}},5465:(e,t,r)=>{var i=r(7854),n=r(3505),o="__core-js_shared__",s=i[o]||n(o,{});e.exports=s},2309:(e,t,r)=>{var i=r(1913),n=r(5465);(e.exports=function(e,t){return n[e]||(n[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.20.3",mode:i?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.20.3/LICENSE",source:"https://github.com/zloirock/core-js"})},1400:(e,t,r)=>{var i=r(9303),n=Math.max,o=Math.min;e.exports=function(e,t){var r=i(e);return r<0?n(r+t,0):o(r,t)}},5656:(e,t,r)=>{var i=r(8361),n=r(4488);e.exports=function(e){return i(n(e))}},9303:e=>{var t=Math.ceil,r=Math.floor;e.exports=function(e){var i=+e;return i!=i||0===i?0:(i>0?r:t)(i)}},7466:(e,t,r)=>{var i=r(9303),n=Math.min;e.exports=function(e){return e>0?n(i(e),9007199254740991):0}},7908:(e,t,r)=>{var i=r(7854),n=r(4488),o=i.Object;e.exports=function(e){return o(n(e))}},7593:(e,t,r)=>{var i=r(7854),n=r(6916),o=r(111),s=r(2190),a=r(8173),c=r(2140),d=r(5112),u=i.TypeError,A=d("toPrimitive");e.exports=function(e,t){if(!o(e)||s(e))return e;var r,i=a(e,A);if(i){if(void 0===t&&(t="default"),r=n(i,e,t),!o(r)||s(r))return r;throw u("Can't convert object to primitive value")}return void 0===t&&(t="number"),c(e,t)}},4948:(e,t,r)=>{var i=r(7593),n=r(2190);e.exports=function(e){var t=i(e,"string");return n(t)?t:t+""}},1694:(e,t,r)=>{var i={};i[r(5112)("toStringTag")]="z",e.exports="[object z]"===String(i)},1340:(e,t,r)=>{var i=r(7854),n=r(648),o=i.String;e.exports=function(e){if("Symbol"===n(e))throw TypeError("Cannot convert a Symbol value to a string");return o(e)}},6330:(e,t,r)=>{var i=r(7854).String;e.exports=function(e){try{return i(e)}catch(e){return"Object"}}},9711:(e,t,r)=>{var i=r(1702),n=0,o=Math.random(),s=i(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+s(++n+o,36)}},3307:(e,t,r)=>{var i=r(133);e.exports=i&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:(e,t,r)=>{var i=r(9781),n=r(7293);e.exports=i&&n((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},5112:(e,t,r)=>{var i=r(7854),n=r(2309),o=r(2597),s=r(9711),a=r(133),c=r(3307),d=n("wks"),u=i.Symbol,A=u&&u.for,h=c?u:u&&u.withoutSetter||s;e.exports=function(e){if(!o(d,e)||!a&&"string"!=typeof d[e]){var t="Symbol."+e;a&&o(u,e)?d[e]=u[e]:d[e]=c&&A?A(t):h(t)}return d[e]}},9191:(e,t,r)=>{var i=r(5005),n=r(2597),o=r(8880),s=r(7976),a=r(7674),c=r(9920),d=r(9587),u=r(6277),A=r(8340),h=r(7741),l=r(2914),p=r(1913);e.exports=function(e,t,r,g){var E=g?2:1,f=e.split("."),I=f[f.length-1],m=i.apply(null,f);if(m){var _=m.prototype;if(!p&&n(_,"cause")&&delete _.cause,!r)return m;var C=i("Error"),S=t((function(e,t){var r=u(g?t:e,void 0),i=g?new m(e):new m;return void 0!==r&&o(i,"message",r),l&&o(i,"stack",h(i.stack,2)),this&&s(_,this)&&d(i,this,S),arguments.length>E&&A(i,arguments[E]),i}));if(S.prototype=_,"Error"!==I&&(a?a(S,C):c(S,C,{name:!0})),c(S,m),!p)try{_.name!==I&&o(_,"name",I),_.constructor=S}catch(e){}return S}}},6992:(e,t,r)=>{var i=r(5656),n=r(1223),o=r(7497),s=r(9909),a=r(3070).f,c=r(654),d=r(1913),u=r(9781),A="Array Iterator",h=s.set,l=s.getterFor(A);e.exports=c(Array,"Array",(function(e,t){h(this,{type:A,target:i(e),index:0,kind:t})}),(function(){var e=l(this),t=e.target,r=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:i,done:!1}:"values"==r?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values");var p=o.Arguments=o.Array;if(n("keys"),n("values"),n("entries"),!d&&u&&"values"!==p.name)try{a(p,"name",{value:"values"})}catch(e){}},1703:(e,t,r)=>{var i=r(2109),n=r(7854),o=r(2104),s=r(9191),a=n.WebAssembly,c=7!==Error("e",{cause:7}).cause,d=function(e,t){var r={};r[e]=s(e,t,c),i({global:!0,forced:c},r)},u=function(e,t){if(a&&a[e]){var r={};r[e]=s("WebAssembly."+e,t,c),i({target:"WebAssembly",stat:!0,forced:c},r)}};d("Error",(function(e){return function(t){return o(e,this,arguments)}})),d("EvalError",(function(e){return function(t){return o(e,this,arguments)}})),d("RangeError",(function(e){return function(t){return o(e,this,arguments)}})),d("ReferenceError",(function(e){return function(t){return o(e,this,arguments)}})),d("SyntaxError",(function(e){return function(t){return o(e,this,arguments)}})),d("TypeError",(function(e){return function(t){return o(e,this,arguments)}})),d("URIError",(function(e){return function(t){return o(e,this,arguments)}})),u("CompileError",(function(e){return function(t){return o(e,this,arguments)}})),u("LinkError",(function(e){return function(t){return o(e,this,arguments)}})),u("RuntimeError",(function(e){return function(t){return o(e,this,arguments)}}))},4916:(e,t,r)=>{var i=r(2109),n=r(2261);i({target:"RegExp",proto:!0,forced:/./.exec!==n},{exec:n})},3948:(e,t,r)=>{var i=r(7854),n=r(8324),o=r(8509),s=r(6992),a=r(8880),c=r(5112),d=c("iterator"),u=c("toStringTag"),A=s.values,h=function(e,t){if(e){if(e[d]!==A)try{a(e,d,A)}catch(t){e[d]=A}if(e[u]||a(e,u,t),n[t])for(var r in s)if(e[r]!==s[r])try{a(e,r,s[r])}catch(t){e[r]=s[r]}}};for(var l in n)h(i[l]&&i[l].prototype,l);h(o,"DOMTokenList")}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var o=t[i]={exports:{}};return e[i](o,o.exports,r),o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};return(()=>{r.r(i),r.d(i,{AudioExtension:()=>C,AudioProcessor:()=>m,Extension:()=>_,Ticker:()=>v,VideoProcessor:()=>I,logger:()=>A,reporter:()=>p});var e=r(4341);function t(t,r,i){return r in t?e(t,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[r]=i,t}r(1703),r(6992),r(3948);var n=r(3476),o=r.n(n);function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,t=arguments.length>1?arguments[1]:void 0;const r=Math.random().toString(16).substr(2,e).toLowerCase();return r.length===e?"".concat(t).concat(r):"".concat(t).concat(r)+s(e-r.length,"")}r(4916);const a=Date.now(),c={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4};function d(){const e=new Date;return e.toTimeString().split(" ")[0]+":"+e.getMilliseconds()}const u=e=>{for(const t in c)if(Object.prototype.hasOwnProperty.call(c,t)&&c[t]===e)return t;return"DEFAULT"},A=new class{constructor(){t(this,"logLevel",c.DEBUG),t(this,"hookLog",void 0)}debug(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[c.DEBUG].concat(t);this.log.apply(this,i)}info(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[c.INFO].concat(t);this.log.apply(this,i)}warning(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[c.WARNING].concat(t);this.log.apply(this,i)}error(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const i=[c.ERROR].concat(t);this.log.apply(this,i)}log(){for(var e,t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];if(Date.now()-a<100)return void setTimeout(()=>{this.log(...r)},Date.now()-a);const n=Math.max(0,Math.min(4,r[0]));if(r[0]=d()+" Agora-Extension [".concat(u(n),"]:"),n<this.logLevel)return;const o=d()+" %cAgora-Extension [".concat(u(n),"]:");let s=[];switch(n){case c.DEBUG:s=[o,"color: #64B5F6;"].concat(r.slice(1)),console.log.apply(console,s);break;case c.INFO:s=[o,"color: #1E88E5; font-weight: bold;"].concat(r.slice(1)),console.log.apply(console,s);break;case c.WARNING:s=[o,"color: #FB8C00; font-weight: bold;"].concat(r.slice(1)),console.warn.apply(console,s);break;case c.ERROR:s=[o,"color: #B00020; font-weight: bold;"].concat(r.slice(1)),console.error.apply(console,s)}null===(e=this.hookLog)||void 0===e||e.call(this,n,s)}};function h(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function l(e){for(var r=1;r<arguments.length;r++){var i=null!=arguments[r]?arguments[r]:{};r%2?h(Object(i),!0).forEach((function(r){t(e,r,i[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):h(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const p=new class{constructor(){t(this,"apiInvokeMsgQueue",[]),t(this,"hookApiInvoke",void 0)}reportApiInvoke(e){e.timeout=e.timeout||6e4,e.reportResult=void 0===e.reportResult||e.reportResult;const t=Date.now(),r=()=>({name:e.name,apiInvokeTime:t,options:e.options});let i=!1;var n;(n=e.timeout,new(o())(e=>{window.setTimeout(e,n)})).then(()=>{i||(this.sendApiInvoke(l(l({},r()),{},{error:"API_INVOKE_TIMEOUT",success:!1})),A.debug("".concat(e.name," timeout")))});const s=new Error("".concat(e.name,": this api invoke is end"));return{onSuccess:t=>{if(i)throw s;i=!0,this.sendApiInvoke(l(l({},r()),{},{success:!0},e.reportResult&&{result:t}))},onError:e=>{if(i)throw e;i=!0,this.sendApiInvoke(l(l({},r()),{},{success:!1,error:e.toString()}))}}}sendApiInvoke(e){this.hookApiInvoke?(this.hookApiInvoke([...this.apiInvokeMsgQueue,e]),this.apiInvokeMsgQueue=[]):this.apiInvokeMsgQueue.push(e)}};function g(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function E(e){for(var r=1;r<arguments.length;r++){var i=null!=arguments[r]?arguments[r]:{};r%2?g(Object(i),!0).forEach((function(r){t(e,r,i[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):g(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class f extends class{constructor(){t(this,"_events",{}),t(this,"addListener",this.on)}getListeners(e){return this._events[e]?this._events[e].map(e=>e.listener):[]}on(e,t){this._events[e]||(this._events[e]=[]);const r=this._events[e];-1===this._indexOfListener(r,t)&&r.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const r=this._events[e];-1===this._indexOfListener(r,t)&&r.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const r=this._events[e],i=this._indexOfListener(r,t);-1!==i&&r.splice(i,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map(e=>e);for(var r=arguments.length,i=new Array(r>1?r-1:0),n=1;n<r;n++)i[n-1]=arguments[n];for(let r=0;r<t.length;r+=1){const n=t[r];n.once&&this.off(e,n.listener),n.listener.apply(this,i||[])}}_indexOfListener(e,t){let r=e.length;for(;r--;)if(e[r].listener===t)return r;return-1}emitAsPromise(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];return 0===this.getListeners(e).length?o().reject(new Error("No promise event handler.")):new(o())((t,i)=>{this.emit(e,...r,t,i)})}emitAsPromiseNoResponse(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];return 0===this.getListeners(e).length?o().resolve():new(o())((t,i)=>{this.emit(e,...r,t,i)})}}{get enabled(){return this._enabled}output(e,t){if(this.outputTrack===e)return;const r=p.reportApiInvoke({name:"".concat(this.name,".output"),options:{track:null==e?void 0:e.toString()}});this.outputTrack=e,this.destination&&this.destination.updateInput({track:e,context:t}),r.onSuccess()}constructor(){super(),t(this,"inputTrack",void 0),t(this,"outputTrack",void 0),t(this,"_enabled",!0),t(this,"_source",void 0),t(this,"ID",s(6,"")),t(this,"destination",void 0),t(this,"context",void 0),t(this,"name",void 0)}enable(){if(this._enabled)return;const e=p.reportApiInvoke({name:"".concat(this.name,".setEnabled"),options:!0});A.info("".concat(this.name,"-").concat(this.ID," enabled")),this._enabled=!0;try{var t;const r=null===(t=this.onEnableChange)||void 0===t?void 0:t.call(this,this._enabled);if(r instanceof o())return r.then(()=>{e.onSuccess()}).catch(t=>{throw e.onError(t),t});e.onSuccess()}catch(t){throw e.onError(t),t}}disable(){if(!this._enabled)return;const e=p.reportApiInvoke({name:"".concat(this.name,".setEnabled"),options:!1});A.info("".concat(this.name,"-").concat(this.ID," disabled")),this._enabled=!1;try{var t;const r=null===(t=this.onEnableChange)||void 0===t?void 0:t.call(this,this._enabled);if(r instanceof o())return r.then(()=>{e.onSuccess()}).catch(t=>{throw e.onError(t),t});e.onSuccess()}catch(t){throw e.onError(t),t}}}class I extends f{get kind(){return"video"}pipe(e){const t=p.reportApiInvoke({name:"".concat(this.name,".pipe"),options:{processor:e.name}});if(this.destination===e)return t.onSuccess(),e;if(e._source){const r=new Error("Processor ".concat(e.name," already piped, please call unpipe beforehand."));throw t.onError(r),r}return this.destination&&this.unpipe(),this.destination=e,e._source=this,this.context&&this.destination.updateInput({track:this.outputTrack,context:this.context}),t.onSuccess(),e}unpipe(){if(!this.destination)return;const e=p.reportApiInvoke({name:"".concat(this.name,".unpipe"),options:{processor:this.destination.name}});A.info("unpiping processor ".concat(this.destination.name,"-").concat(this.destination.ID));try{const t=this.destination;this.destination._source=void 0,this.destination=void 0,t.reset()}finally{e.onSuccess()}}updateInput(e){var t,r;e.context!==this.context&&(this.context=e.context,null===(t=this.onPiped)||void 0===t||t.call(this,this.context),this.destination&&this.destination.updateInput({track:this.outputTrack,context:e.context})),e.track&&this.inputTrack!==e.track&&(this.inputTrack=e.track,null===(r=this.onTrack)||void 0===r||r.call(this,e.track,this.context))}reset(){var e;this.context&&this.context.requestRevertConstraints(this),this.inputTrack=void 0,this.context=void 0,null===(e=this.onUnpiped)||void 0===e||e.call(this),this.destination&&this.destination.reset()}}class m extends f{constructor(){super(...arguments),t(this,"inputNode",void 0),t(this,"outputNode",void 0),t(this,"destination",void 0),t(this,"context",void 0)}get kind(){return"audio"}pipe(e){const t=p.reportApiInvoke({name:"".concat(this.name,".pipe"),options:{processor:e.name}});if(this.destination===e)return t.onSuccess(),e;if(e._source){const r=new Error("Processor ".concat(e.name," already piped, please call unpipe beforehand."));throw t.onError(r),r}return this.destination&&this.unpipe(),this.destination=e,e._source=this,this.context&&this.destination.updateInput({track:this.outputTrack,node:this.outputNode,context:this.context}),t.onSuccess(),e}unpipe(){if(!this.destination)return;A.info("unpiping processor ".concat(this.destination.name,"-").concat(this.destination.ID));const e=p.reportApiInvoke({name:"".concat(this.name,".unpipe"),options:{processor:this.destination.name}});try{var t;let r=this.destination;null===(t=this.outputNode)||void 0===t||t.disconnect(),this.destination._source=void 0,this.destination=void 0,r.reset()}finally{e.onSuccess()}}output(e,t){if(e instanceof MediaStreamTrack)super.output(e,t);else if(e instanceof AudioNode){if(this.outputNode===e)return;const r=p.reportApiInvoke({name:"".concat(this.name,".output"),options:E(E({},e instanceof MediaStreamTrack&&{track:e.toString()}),e instanceof AudioNode&&{audioNode:e.toString()})});this.outputNode=e,this.destination&&this.destination.updateInput({node:e,context:t}),r.onSuccess()}}updateInput(e){var t,r,i;e.context!==this.context&&(this.context=e.context,null===(t=this.onPiped)||void 0===t||t.call(this,this.context),this.destination&&this.destination.updateInput({track:this.outputTrack,node:this.outputNode,context:e.context})),e.track&&this.inputTrack!==e.track&&(this.inputTrack=e.track,null===(r=this.onTrack)||void 0===r||r.call(this,e.track,this.context)),e.node&&this.inputNode!==e.node&&(this.inputNode=e.node,null===(i=this.onNode)||void 0===i||i.call(this,e.node,this.context))}reset(){var e;this.context&&this.context.requestRevertConstraints(this),this.inputTrack=void 0,this.inputNode=void 0,this.context=void 0,null===(e=this.onUnpiped)||void 0===e||e.call(this),this.destination&&this.destination.reset()}}class _{constructor(){t(this,"__registered__",!1),t(this,"logger",A),t(this,"reporter",p),t(this,"parameters",{})}createProcessor(){if(!this.__registered__)throw new Error("Extension not registered yet!");return this._createProcessor()}}class C extends _{}let S;class v{get running(){return this._running}constructor(e,r){if(t(this,"type",void 0),t(this,"interval",void 0),t(this,"fn",void 0),t(this,"_running",!1),t(this,"_osc",void 0),!e)throw new Error;if(r<=0)throw new Error;this.type=e,this.interval=r}add(e){this.fn=e}remove(){this.fn=void 0}start(){if(!this._running)switch(this._running=!0,this.type){case"Timer":{const e=()=>{setTimeout(()=>{this.fn&&this.fn(),this._running&&e()},this.interval)};e();break}case"RAF":{const e=t=>{requestAnimationFrame(r=>{r-t<this.interval?this._running&&e(t):(this.fn&&this.fn(),this._running&&e(r))})};e(performance.now());break}case"Oscillator":{S||(S=new AudioContext);const e=S.createGain();let t;e.gain.value=0,e.connect(S.destination);const r=()=>{this.fn&&this.fn(),t&&t.disconnect(),t=S.createOscillator(),this._osc=t,t.connect(e),this._running&&(t.onended=r,t.start(0),t.stop(S.currentTime+this.interval/1e3))};r();break}}}stop(){this._running=!1,this._osc&&(this._osc.onended=null,this._osc=void 0)}}})(),i})()}(Xq);var $q;!
/*@cc_on!@*/
!!document.documentMode&&!!window.StyleMedia&&(HTMLCanvasElement.prototype.getContext=($q=HTMLCanvasElement.prototype.getContext,function(){let e=arguments;const t=e[0];return"webgl"===t&&(e=[].slice.call(arguments),e[0]="experimental-webgl"),$q.apply(null,e)}));const eX=[31,222,239,159,192,236,164,81,54,227,176,149,2,247,75,141,183,54,213,216,158,92,111,49,228,111,150,6,135,79,35,212,4,155,200,168,37,107,243,110,144,179,51,81,55,78,223,242,191,211,74,119,203,151,142,62,31,41,132,22,35,155,87,123,119,117,216,57,201,53,228,67,201,40,106,24,80,176,187,253,60,63,136,100,20,12,177,99,64,38,101,143,111,176,251,211,145,136,34,23,79,136,202,95,105,199,125,67,180,44,210,179,228,4,85,160,188,64,26,46,6,61,201,103,248,18,97,254,140,36,115,106,48,124,102,216,155,120,36,227,165,217,7,227,191,128,212,157,80,37,117,175,24,214,47,221,183,211,51,174,251,223,159,167,152,53,36,107,199,223,91,62,46,194,11,80,121,188,219,2,99,99,232,229,173,234,21,30,236,177,243,142,97,48,108,56,62,172,56,216,3,42,79,138,23,88,182,39,5,118,68,135,178,56,9,94,189,44,104,9,238,231,174,122,85,247,231,86,74,8,189,147,218,180,58,76,227,17,46,90,194,100,51,178,72,163,151,243,166,130,85,1,223,130,152,242,85,255,28,173,97,252,119,215,177,119,86,104,136,82,40,72,53,11,18,26,240,188,76,110,39,31,189];function tX(e){const t=new Uint8Array([99,114,121,112,116,105,105]),r=t.length,i=e,n=i.length,o=new Uint8Array(n),s=new Uint8Array(256);for(let e=0;e<256;e++)s[e]=e;let a=0;for(let e=0;e<256;e++)a=(a+s[e]+t[e%r])%256,[s[e],s[a]]=[s[a],s[e]];let c,d=0;a=0;for(let e=0;e<0+n;e++)d=(d+1)%256,a=(a+s[d])%256,[s[d],s[a]]=[s[a],s[d]],c=s[(s[d]+s[a])%256],e>=0&&(o[e-0]=i[e-0]^c);const u=String.fromCharCode.apply(null,Array.from(o));return Function("var winSize = 5; return `"+u+"`")()}const rX=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,152,221,191,124,116,248,106,130,251,59,105,43,91,135,199,181,223,10,51,134,194,240,46,9,3,141,22,35,146,76,23,109,117,208,41,201,45,218,76,203,105,51,58,97,154,145,236,49,18,183,127,27,12,210,122,73,42,37,143,36,207,251,211,145,191,56,10,88,222,181,125,22,238,123,71,177,107,218,254,173,28,34,253,249,67,83,97,73,111,219,43,181,82,38,230,136,109,22,67];class iX{constructor(e,t){kO(this,"program",void 0),kO(this,"gl",void 0),kO(this,"kernel",void 0),this.gl=e,this.kernel=t||rX,this.program=function(e,t){const r=tX(t),i=Zq(e,[tX(eX),r]);{const t=e.getAttribLocation(i,"a_position"),r=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),e.STATIC_DRAW),e.enableVertexAttribArray(t);const n=2,o=e.FLOAT,s=!1,a=0,c=0;e.vertexAttribPointer(t,n,o,s,a,c)}{const t=e.getAttribLocation(i,"a_texCoord"),r=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),e.STATIC_DRAW),e.enableVertexAttribArray(t);const n=2,o=e.FLOAT,s=!1,a=0,c=0;e.vertexAttribPointer(t,n,o,s,a,c)}return i}(this.gl,this.kernel)}setUniforms(){const e=this.gl.getUniformLocation(this.program,"u_flipY");this.gl.uniform1f(e,1)}}class nX extends iX{constructor(e,t,r,i){super(e,t),kO(this,"xOffset",void 0),kO(this,"yOffset",void 0),kO(this,"denoiseLevel",5),this.xOffset=1/r,this.yOffset=1/i}setUniforms(){const e=this.gl.getUniformLocation(this.program,"u_flipY"),t=this.gl.getUniformLocation(this.program,"u_singleStepOffset"),r=this.gl.getUniformLocation(this.program,"u_denoiseLevel");this.gl.uniform2f(t,this.xOffset,this.yOffset),this.gl.uniform1f(r,this.denoiseLevel),this.gl.uniform1f(e,1)}setParameters(e){void 0!==e.denoiseLevel&&(this.denoiseLevel=e.denoiseLevel)}setSize(e,t){this.xOffset=1/e,this.yOffset=1/t}}const oX=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,155,210,164,99,114,228,96,130,251,59,105,43,91,135,199,181,223,10,51,133,194,247,34,31,39,142,28,2,130,18,109,84,124,223,62,140,52,128,47,208,47,115,39,4,200,220,171,53,36,150,101,10,75,247,121,74,36,35,143,108,176,235,211,135,164,36,11,88,160,148,35,6,221,41,32,166,109,205,171,228,4,26,169,244,82,119,102,86,61,201,103,248,18,97,242,182,34,121,70,28,71,126,197,223,126,14,244,149,192,12,176,187,149,212,156,22,44,36,133,10,216,63,198,213,154,116,230,253,154,154,249,215,55,60,34,196,229,76,50,44,135,22,77,113,247,142,94,60,23,172,145,175,218,81,86,162,239,180,205,63,118,3,110,123,224,127,158,124,15,127,157,27,66,176,33,24,51,53,194,178,56,6,74,191,111,51,78,174,157,229,17,22,178,231,92,25,23,191,157,137,188,54,64,176,13,22,81,207,45,108,203,83,186,130,237,186,153,110,8,196,168,152,161,28,238,46,184,36,185,20,203,183,98,95,41,149,93,105,37,116,91,68,105,164,217,30,42,60,53,173,213,177,216,195,53,204,173,128,243,42,122,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,220,161,39,214,146,183,193,225,23,177,201,243,128,160,33,75,86,126,139,254,232,14,13,85,2,112,17,150,36,180,86,226,225,126,197,17,228,225,142,245,37,170,39,96,187,190,2,35,85,237,11,189,1,79,237,2,1,114,246,109,190,66,54,153,43,218,204,70,6,204,162,247,18,130,123,30,60,165,130,142,210,133,91,127,117,71,38,145,172,7,5,16,220,222,111,98,141,239,208,125,26,238,28,0,216,89,13,7,119,134,194,75,41,67,174,1,217,80,101,40,26,59,28,59,46,108,138,38,157,167,28,234,73,177,42,42,102,108,26,181,27,178,42,43,52,28,110,117,198,173,176,178,101,225,150,36,139,108,105,10,237,222,3,143,126,18,144,115,74,56,114,134,231,159,212,62,126,80,173,216,167,4,81,18,52,17,144,218,32,139,207,104,128,229,99,84,120,31,87,227,154,91,196,63,123,111,125,36,52,57,168,113,150,189,204,24,104,196,237,86,163,68,197,202,170,212,191,81,193,111,255,162,181,202,156,146,196,96,16,118,117,55,71,156,31,163,242,204,239,11,150,27,126,115,154,107,247,134,158,125,255,146,35,183,209,36,116,87,215,172,5,251,133,114,254,141,195,6,145,4,111,182,167,74,154,152,68,18,146,88,106,200,154,15,176,94,86,66,178,101,219,35,188,129,66,28,41,110,174,53,88,174,64,191,206,127,48,126,214,216,93,119,2,166,99,181,222,29,218,28,195,219,125,44,50,16,99,174,225,51,133,120,184,159,168,75,242,162,124,255,81,25,153,109,69,220,176,4,237,196,233,19,8,240,160,39,122,81,29,188,144,249,170,174,137,30,10,93,133,151,199,248,175,38,41,144,229,245,149,25,240,138,179,114,182,84,50,103,95,31,199,31,87,208,203,199,135,49,211,43,52,36,74,59,37,22,136,171,244,126,18,251,39,159,241,66,206,127,149,159,182,143,232,199,136,46,150,32,51,221,74,22,102,93,22,44,132,140,199,43,69,249,77,75,140,70,4,252,98,235,77,190,125,18,56,21,10,244,42,2,246,62,127,241,123,137,22,247,219,177,160,84,18,10,84,97,251,127,102,16,209,181,100,94,56,238,209,207,76,189,95,15,165,139,143,189,96,225,55,112,178,27,218,198,223,251,52,123,94,130,220,142,216,116,237,18,254,49,59,128,41,29,15,179,164,85,76,167,166,151,39,221,2,190,68,167,26,177,114,141,4,67,25,69,182,38,166,160,27,151,148,108,48,227,60,112,48,22,159,76,127,251,63,254,177,113,217,197,95,179,109,128,138,99,27,249,10,174,155,129,80,39,165,252,85,60,131,183,98,107,68,207,19,233,231,55,225,126,77,49,53,145,203,113,29,208,64,237,182,229,165,7,11,169,106,253,116,141,200,62,16,38,121,55,148,91,83,160,140,126,121,12,79,189,72,172,31,243,240,209,229,32,220,91,229,81,94,247,121,153,151,232,182,171,198,50,31,152,245,172,151,130,55,62,125,38,155,229,78,207,148,201,2,78,63,119,107,168,78,139,141,163,177,191,239,141,39,182,174,40,76,226,62,125,209,6,6,34,37,147,85,204,103,51,191,36,248,17,175,20,1,53,16,35,143,237,177,125,86,29,219,235,20,121,205,59,5,250,107,109,32,224,30,152,143,113,151,95,85,19,254,164,135,124,68,136,199,29,31,244,91,10,84,127,101,210,70,226,195,140,70,166,54,217,165,84,42,165,175,100,234,124,121,105,53,101,118,174,101,220,147,68,161,37,0,182,220,142,221,155,230,115,164,10,214,208,120,91,152,66,27,81,184,48,84,70,7,128,153,217,218,249,226,70,130,200,156,61,227,21,164,137,193,221,119,10,134,204,23,20,17,90,94,105,204,39,99,1,64,153,45,213,19,247,97,194,49,35,125,255,195,139,63,209,175,208,147,189,244,204,24,211,99,142,18,92,130,254,182,231,235,93,10,127,175,87,35,62,110,137,184,39,114,200,150,11,190,40,162,168,223,203,110,242,192,234,26,11,54,155,38,48,79,109,101,119,165,187,223,5,20,168,171,241,20,243,108,199,3,155,69,244,149,0,187,110,12,233,42,151,189,139,133,104,3,30,16,200,69,4,123,103,144,12,106,182,1,127,91,125,158,12,144,238,232,209,101,159,56,163,240,179,50,169,120,219,176,87,77,45,247,153,190,82,132,50,137,209,97,19,35,247,161,62,77,16,71,152,72,61,50,99,157,154,56,58,175,27,73,121,229,195,228,132,69,233,169,100,21,123,17,3,164,6,146,106,196,29,3,250,217,164,23,171,203,14,242,239,249,169,116,138,209,98,113,181,122,35,162,216,46,230,4,155,142,118,216,232,229,28,12,158,153,126,149,171,172,231,99,211,57,114,136,183,114,74,35,233,115,127,253,157,38,49,136,141,25,161,255,232,110,101,208,166,186,226,12,185,19,155,53,93,155,39,161,7,124,213,52,223,125,211,242,253,22,13,131,115,167,198,188,90,209,63,224,92,112,118,220,165,31,164,43,58,197,77,17,247,77,164,74,77,218,18,187,41,76,189,127,98,18,226,231,71,115,236,68,183,111,50,168,88,247,9,123,65,180,88,74,44,101,101,173,11];class sX extends nX{constructor(e,t,r){super(e,oX,t,r)}}const aX=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,165,108,122,254,125,130,229,55,109,113,11,210,238,163,213,86,116,156,248,215,63,20,48,173,31,55,133,18,105,32,16,204,35,128,38,212,87,200,97,114,40,12,210,193,171,59,33,158,108,14,75,228,74,65,32,57,192,112,156,234,250,140,189,40,20,6,230,135,52,17,200,123,68,183,44,215,187,234,2,13,169,234,94,115,60,6,107,224,118,254,88,2,235,134,36,120,5,85,94,126,222,223,101,105,227,147,199,64,185,246,143,183,210,30,37,127,226,79,156,118,147,208,131,51,248,232,217,206,181,218,58,61,112,244,227,68,45,41,206,69,12,45,163,205,75,6,23,167,145,250,237,92,84,164,240,253,216,54,85,7,108,62,255,42,217,3,27,0,196,94,28,241,120,80,92,89,135,228,125,2,3,242,39,116,64,248,216,177,122,66,178,180,9,7,33,186,208,213,188,59,78,243,95,123,28,142,45,99,130,7,167,194,156,238,199,10,71,141,251,221,158,16,255,38,181,36,184,20,136,240,55,27,51,191,82,105,55,97,78,74,121,191,161,91,126,105,103,174,139,223,145,150,120,156,240,252,182,105,104,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,201,211,39,203,146,225,246,252,21,161,250,188,137,190,42,4,90,126,211,171,240,113,67,28,92,57,77,200,125,224,19,178,142,112,202,5,233,229,128,235,105,239,102,52,179,224,87,45,68,211,10,187,9,38,190,86,25,43,175,56,231,11,108,220,36,129,131,19,93,163,239,169,118,205,50,77,121,139,139,141,197,170,20,44,39,19,97,205,228,8,106,67,210,135,111,127,141,185,175,123,26,226,42,29,217,16,99,9,46,157,232,22,3,105,174,73,144,23,110,55,84,46,4,116,39,113,205,58,158,242,7,208,75,162,55,115,35,52,124,235,114,178,55,43,98,17,100,33,134,237,190,230,60,184,192,104,146,52,58,79,174,180,81,155,114,0,153,113,90,51,86,150,254,136,205,104,39,11,190,187,233,80,81,81,56,18,222,148,116,155,156,33,132,226,127,84,34,83,28,249,153,18,197,10,116,102,125,45,47,36,235,46,212,166,209,3,125,132,237,124,163,68,197,202,232,152,234,75,235,103,248,160,241,213,151,144,130,37,23,51,48,55,12,227,31,163,242,251,245,22,129,77,20,35,150,20,181,203,138,69,233,215,109,178,209,52,85,96,221,179,56,249,138,111,250,141,134,95,152,92,109,183,174,104,151,156,31,66,211,10,57,141,167,18,177,27,126,74,252,29,143,121,173,203,8,27,44,123,148,57,88,163,68,228,158,62,98,121,192,228,94,92,72,241,33,230,173,0,197,1,194,144,111,91,60,0,106,181,203,51,133,120,250,158,184,93,216,184,126,253,21,22,155,99,80,205,227,69,231,141,165,71,70,252,223,105,51,93,22,165,135,233,177,164,139,53,5,85,151,134,214,165,249,100,24,186,207,245,149,68,218,204,252,32,190,90,48,76,57,31,201,15,52,130,135,152,206,63,198,100,126,36,2,104,116,0,160,163,186,2,91,165,57,149,163,12,239,121,152,209,224,136,248,135,136,46,150,32,51,154,6,105,0,71,30,44,175,147,139,34,91,184,78,31,145,18,3,250,122,166,47,252,109,19,40,10,123,163,99,76,133,119,37,180,38,207,79,171,185,188];class cX extends nX{constructor(e,t,r){super(e,aX,t,r)}}const dX=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,160,96,121,255,120,207,227,114,120,38,72,149,145,165,227,75,122,158,250,232,46,34,52,135,9,30,144,17,110,126,110,130,71,156,46,210,67,202,51,119,97,3,211,214,227,45,109,151,97,21,10,229,53,80,26,51,202,119,128,230,197,140,135,40,14,88,128,202,95,21,208,96,83,185,98,216,242,224,15,25,224,233,86,96,46,80,120,220,48,187,86,30,240,140,46,95,81,48,90,117,140,177,51,107,235,158,137,5,241,191,154,149,219,30,126,85,175,10,216,63,139,216,151,122,251,224,202,220,227,221,53,122,34,213,224,94,45,14,200,68,31,61,175,208,17,120,82,244,138,208,165,21,19,236,232,180,217,50,74,70,126,114,227,62,192,124,9,85,148,33,77,255,117,75,102,87,151,255,87,74,74,181,111,108,9,249,220,174,59,80,254,168,29,30,94,171,133,133,195,105,64,254,68,65,18,158,54,73,203,65,175,151,170,236,138,17,119,128,237,214,189,28,250,38,149,97,242,81,212,254,57,18,120,155,64,96,108,75,78,74,121,191,243,30,42,60,103,165,196,160,195,216,99,182,173,214,182,105,53,231,3,45,212,144,101,217,65,141,44,230,125,151,154,123,57,134,223,98,133,156,238,137,181,80,175,230,167,131,180,13,69,77,44,156,165,252,14,27,85,71,1,82,196,64,243,26,167,146,98,201,6,195,247,200,224,44,177,104,109,187,231,83,118,28,159,92,179,28,14,162,81,84,21,168,34,156,21,127,215,88,218,208,11,92,161,239,239,82,221,59,86,83,201,199,216,151,139,23,54,39,52,103,204,247,24,102,94,157,138,42,49,131,183,208,50,95,236,54,6,211,26,68,72,56,212,134,24,91,114,132,1,217,80,38,47,29,47,0,107,102,99,129,33,140,243,74,251,89,247,103,12,114,58,113,240,72,188,39,48,72,89,45,102,206,245,247,231,56,167,129,122,222,47,40,78,227,159,64,206,34,127,203,127,87,40,108,152,238,147,231,46,104,89,182,180,232,86,89,91,57,10,222,202,59,199,135,60,199,189,40,84,125,28,84,162,210,91,143,34,106,117,118,3,125,126,237,60,131,173,153,69,49,212,204,117,163,31,239,202,232,152,234,3,162,32,176,184,184,196,154,131,144,115,6,53,122,55,69,166,19,230,183,175,244,1,156,11,37,121,134,121,152,142,158,125,229,150,44,183,216,109,7,65,222,169,56,222,140,110,233,157,138,66,208,6,111,166,188,76,208,222,4,104,211,10,57,141,243,65,228,86,85,88,169,91,237,56,249,133,77,21,32,37,230,55,0,184,110,228,158,62,98,45,147,177,19,119,89,164,103,132,239,84,139,68,204,157,49,41,50,89,113,159,203,51,133,120,184,210,237,15,249,187,100,253,50,16,154,112,64,193,254,10,235,200,253,84,31,169,171,39,122,70,46,186,139,212,162,173,158,41,23,86,148,172,196,237,242,58,102,180,150,238,191,25,240,204,252,125,148,29,124,51,95,10,196,55,49,159,138,144,255,126,205,43,49,42,17,59,60,77,139,177,239,64,36,224,98,205,234,70,199,103,139,218,206,207,178,217,255,32,134,59,25,221,74,22,102,82,19,20,170,142,134,42,106,249,64,80,222,28,21,169,50,235,4,237,56,81,87,76,32,251,42,6,173,105,54,191,8,136,5,245,206,239,176,9,116,24];class uX extends nX{constructor(e,t,r){super(e,dX,t,r)}}const AX=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,190,100,112,230,97,199,225,96,74,99,94,248,222,162,213,95,122,158,212,233,42,22,37,217,115,36,152,30,123,116,104,212,109,129,41,220,77,213,97,124,45,4,219,197,171,40,18,149,104,20,4,248,102,64,9,50,217,124,131,180,188,159,170,63,1,84,130,150,117,14,212,118,67,165,97,207,242,251,15,30,187,188,77,79,122,67,101,252,109,244,82,37,191,227,35,114,87,57,71,99,218,155,54,101,239,138,197,13,226,228,176,157,158,87,98,55,251,79,150,64,138,200,135,40,132,135,207,146,252,222,57,58,111,151,225,78,59,36,210,70,29,121,160,210,31,109,67,167,194,177,236,91,108,164,229,130,211,59,66,93,18,107,226,54,210,51,8,77,217,19,73,187,33,30,59,9,135,162,49,5,11,225,111,119,11,247,218,129,115,83,205,170,21,4,69,210,133,134,245,109,15,177,9,81,81,203,105,42,158,12,255,151,165,230,205,5,92,196,251,211,187,27,214,43,186,91,233,85,192,229,15,71,38,220,20,38,101,44,78,7,60,251,186,75,103,108,53,166,220,186,208,194,120,207,230,159,248,22,32,142,124,96,157,222,60,191,65,145,6,239,125,151,147,50,58,130,207,110,131,223,231,137,238,28,182,216,167,198,191,37,67,76,1,144,232,218,79,72,28,65,101,43,216,64,253,16,173,179,123,140,27,233,245,199,230,36,181,102,114,247,162,18,34,20,212,25,171,24,28,143,80,94,40,167,34,209,61,117,130,1,198,196,7,21,252,180,255,92,128,119,9,48,156,138,136,151,143,23,44,52,3,40,197,228,31,123,67,163,140,32,54,204,187,149,80,19,255,82,120,195,12,110,65,56,212,143,22,78,44,234,72,140,29,118,103,18,36,7,122,50,37,139,47,142,243,25,208,88,237,126,50,103,127,19,183,29,169,29,1,55,23,100,32,129,239,243,160,61,178,197,117,199,45,57,26,165,135,92,218,59,0,197,54,13,96,40,141,212,221,131,103,46,22,228,191,167,73,20,86,62,11,147,217,116,205,203,110,134,249,51,6,123,23,86,231,157,8,144,83,126,115,118,35,96,36,229,36,220,228,143,71,45,223,129,48,236,5,145,202,188,208,184,70,241,104,255,188,181,146,210,206,144,53,77,101,120,38,8,245,80,230,165,160,183,83,202,79,127,57,214,126,242,150,208,40,239,148,35,163,201,97,74,70,214,181,63,240,147,33,253,149,140,77,197,82,126,189,231,7,196,212,80,14,151,24,57,144,243,81,234,66,24,19,236,2,137,121,246,129,65,7,99,110,174,54,74,182,81,234,142,37,72,110,220,255,64,119,10,188,111,191,228,1,205,9,204,143,56,62,125,84,106,225,131,97,192,43,240,157,161,75,168,247,44,175,65,81,192,48,21,157,167,80,191,130,161,75,85,186,174,42,117,1,68,252,204,138,254,203,152,21,13,64,144,195,207,238,229,54,103,247,159,245,211,85,191,141,168,32,234,85,46,118,12,5,199,4,19,217,203,202,156,33,143,114,116,60,66,40,58,77,208,237,171,26,72,175,114,205,248,87,137,62,210,143,151,197,167,210,241,122,150,104,122,154,2,70,102,83,19,36,141,136,199,42,79,229,71,86,194,109,31,236,80,166,17,230,109,1,40,28,46,224,56,20,230,47,100,254,116,208,76,169,157,241,175,3,70,85,31,38,245,58,33,80,145,237,8,22,71,224,158,156,31,249,81,87,247,230,199,237,96,167,123,63,243,79,156,206,203,160,54,124,68,253,215,132,235,57,185,92,238,55,59,210,104,71,26,183,180,71,12,255,224,192,65,154,72,244,8,164,10,248,46,207,30,92,1,80,244,31,189,138,88,216,218,63,100,227,116,57,119,94,135,5,126,255,32,191,163,61,209,194,88,248,112,139,173,43,69,134,3,160,151,137,25,98,239,166,19,123,208,180,31,120,30,191,75,183,179,126,180,125,92,107,105,206,138,28,67,139,3,188,230,184,255,121,13,181,45,160,114,202,194,123,87,55,124,97,164,82,95,232,216,117,62,5,90,176,82,167,52,160,153,174,168,105,146,91,248,81,79,249,97,138,133,170,245,229,132,61,5,149,224,246,194,213,61,12,109,44,136,235,95,219,133,220,27,93,36,93,124,180,81,141,152,220,170,163,229,197,124,171,232,48,70,251,106,119,150,20,16,49,119,247,42,132,36,76,254,124,177,66,175,9,1,39,92,127,195,171,198,34,2,64,144,179,72,40,151,110,89,229,42,125,33,238,16,220,228,51,203,8,1,68,145,253,133,118,93,163,129,22,13,248,65,12,4,63,101,210,70,170,138,203,14,246,54,194,195,27,107,241,175,35,171,49,52,106,121,45,36,152,85,215,132,78,167,34,18,167,245,152,133,134,170,120,182,10,146,191,37,2,205,47,125,20,203,44,88,81,32,150,223,220,218,238,254,30,212,167,221,115,156,82,226,137,220,221,97,3,139,202,33,9,27,26,126,40,215,25,126,9,82,208,49,217,14,161,81,196,61,60,87,254,213,194,81,216,161,151,209,166,222,230,24,128,117,140,92,4,203,254,170,253,249,88,90,112,226,18,44,122,39,158,158,56,69,204,159,5,179,51,197,233,139,216,102,226,206,248,15,78,112,214,126,67,28,40,38,98,190,178,206,67,94,245,254,160,101,176,32,157,26,132,83,252,228,87,242,32,127,160,112,210,224,133,149,115,41,30,16,200,69,89,81,77,144,12,106,182,73,54,28,53,195,28,216,179,179,136,35,141,102,234,177,240,34,186,106,145,245,3,84,48,251,157,245,11,217,111,227,138,42,67,114,211,177,37,103,16,71,152,72,117,123,36,213,202,56,124,227,84,8,45,229,149,165,214,69,244,169,55,68,62,94,104,228,74,205,123,222,17,7,172,158,227,74,206,149,67,175,171,251,185,121,151,223,63,35,229,32,49,190,209,120,137,69,213,214,19,150,187,177,28,12,158,153,126,149,171,167,234,120,129,109,32,157,180,75,66,56,233,115,127,230,157,32,34,143,156,31,230,168,174,125,118,195,249,243,165,81,246,10,144,15,103,139,55,173,7,59,136,69,172,54,132,165,140,78,77,230,33,169,129,188,71,209,109,161,8,57,57,199,143,31,164,43,58,130,1,110,145,31,229,13,46,149,94,244,106,76,238,105,107,1,183,177,10,61,225,94,185,116,58,183,95,225,22,119,19,248,28,13,123,125,108,158,64,184,77,245,153,162,217,227,208,41,185,211,235,41,153,181,54,166,165,11,154,55,21,184,209,192,249,44,164,160,29,229,159,82,156,198,241,183,114,83,137,186,151,148,31,21,197,216,145,32,13,50,22,241,137,39,71,28,142,160,215,107,221,45,202,104,227,110,186,12,150,145,240,51,49,44,196,115,224,238,149,189,134,99,67,241,62,157,240,114,247,195,26,200,141,97,147,249,23,150,174,10,13,219,81,73,58,242,96,250,243,15,49,218,58,230,104,252,175,150,123,86,185,84,90,198,6,36,0,99,72,28,166,238,115,231,171,249,179,71,174,68,156,227,17,198,79,73,142,99,144,20,80,62,80,191,142,46,71,9,243,6,8,214,116,72,190,106,161,19,185,100,9,187,64,94,86,203,174,156,245,222,95,54,30,148,19,11,50,112,96,61,237,159,173,7,154,127,175,79,48,97,89,78,126,66,171,204,158,195,27,226,205,222,157,89,251,90,125,37,212,27,97,3,141,247,175,50,121,7,187,68,196,181,202,167,189,57,84,81,222,23,27,84,130,176,98,66,240,207,18,23,28,163,163,194,45,37,129,202,170,97,189,0,81,238,0,39,199,163,35,211,206,247,65,29,116,242,67,102,235,13,136,232,230,114,146,187,7,254,142,26,121,16,237,5,160,201,114,94,178,199,95,212,241,45,112,180,188,72,86,114,189,155,149,149,163,210,112,101,12,69,225,75,202,223,28,242,90,215,156,169,224,245,135,128,92,148,217,131,208,255,25,135,117,136,5,104,185,249,161,228,214,16,105,204,9,182,135,153,220,101,244,160,207,58,182,118,185,240,57,245,123,13,112,182,106,229,220,90,29,86,215,96,147,232,2,55,131,225,137,68,245,89,141,252,97,3,129,155,216,223,98,116,45,78,85,141,161,74,215,7,150,171,225,59,78,221,152,236,14,117,100,208,158,86,13,185,124,87,157,111,40,187,182,124,173,71,173,23,199,52,155,190,134,11,23,64,25,215,39,115,231,173,77,72,114,54,252,116,178,59,221,106,241,119,254,30,226,241,204,233,113,197,96,146,0,41,67,3,231,126,12,218,202,22,171,114,249,176,134,160,19,216,31,229,118,226,62,242,126,126,42,127,130,68,218,218,81,202,106,217,191,25,177,82,97,81,36,232,137,58,90,216,190,117,235,20,194,144,76,178,27,213,13,208,18,29,118,126,49,98,203,179,128,237,100,32,242,189,212,6,210,210,188,161,205,13,124,119,13,215,112,41,183,176,215,168,210,182,111,1,115,2,239,141,8,177,124,112,48,197,2,239,11,99,4,36,77,69,47,244,19,153,61,19,2,96,176,7,112,122,131,169,25,189,116,171,49,12,121,162,79,154,74,251,50,233,182,63,180,224,118,49,253,21,20,16,31,144,184,93,174,231,244,183,13,49,225,189,211,73,185,49,110,142,25,226,45,176,233,204,74,33,16,205,88,131,92,157,170,175,68,170,61,53,116,165,16,27,182,160,181,87,241,15,151,85,107,76,167,129,25,172,127,184,138,153,222,228,125,64,44,45,32,12,227,148,106,152,83,240,166,54,235,32,190,12,242,164,123,189,53,194,141,104,43,202,110,4,168,119,245,232,179,178,198,1,224,87,86,160,31,19,140,233,102,191,204,4,98,138,163,191,106,24,213,47,208,82,137,132,131,16,253,84,25,144,90,159,148,16,196,84,166,61,160,101,229,227,93,118,59,87,66,16,128,59,96,131,250,20,184,150,205,91,227,201,62,35,79,180,172,173,85,197,106,153,238,229,60,204,65,193,230,94,101,177,134,6,165,53,171,142,208,155,2,11,4,202,127,54,17,142,117,227,121,128,204,192,147,147,92,189,5,224,148,72,18,83,101,126,124,228,153,242,123,229,247,92,221,6,73,227,250,87,167,194,129,187,73,38,185,109,217,240,193,88,50,178,180,151,54,197,187,137,190,166,233,1,103,204,88,31,127,185,29,65,1,29,254,223,14,83,167,215,114,248,30,173,89,173,187,69,5,105,117,15,106,94,173,63,227,25,230,190,136,168,177,175,107,91,126,254,34,188,25,118,48,12,226,130,153,162,57,47,181,212,79,160,97,64,157,246,90,53,43,149,76,102,15,195,107,58,242,84,172,29,81,198,113,81,251,138,182,154,111,30,171,129,56,17,45,214,153,112,117,203,174,40,38,234,236,32,4,112,225,26,187,195,246,252,9,218,69,160,223,178,54,148,81,8,134,151,75,248,63,224,240,48,75,250,221,85,46,100,50,3,70,64,102,111,160,155,233,59,147,184,57,61,6,126,79,176,16,185,94,166,33,135,78,42,75,140,208,140,44,153,187,64,103,119,160,236,16,239,74,218,219,212,207,110,53,30,76,248,40,111,98,44,20,113,204,233,109,135,96,107,39,163,203,125,45,157,152,71,239,175,174,159,147,80,111,93,38,253,228,154,225,181,101,12,241,127,65,49,189,5,85,151,237,213,143,14,104,138,54,52,27,4,132,67,35,156,86,157,73,16,229,222,245,110,79,165,179,56,179,53,218,229,100,58,87,149,48,231,64,63,115,67,3,172,6,186,115,154,60,53,214,152,149,89,234,37,143,82,255,64,28,183,93,112,39,70,185,57,0,199,9,61,175,219,41,76,37,176,82,125,65,53,160,214,105,62,153,244,222,96,205,6,178,85,41,240,113,0,96,149,38,3,195,18,152,41,246,3,103,29,110,134,30,101,75,46,103,199,184,20,230,8,55,120,4,229,168,35,43,7,28,161,143,87,27,87,79,255,186,44,195,158,155,181,119,81,172,217,107,95,98,55,243,186,66,105,48,224,123,232,84,156,20,10,156,208,204,52,34,228,136,97,242,200,246,211,67,202,40,241,91,92,253,9,54,72,131,221,106,178,32,44,182,4,225,193,37,20,249,249,231,10,206,18,71,254,221,187,172,88,204,6,127,138,102,7,208,75,147,219,199,177,79,36,170,101,207,177,109,95,143,217,41,199,80,183,201,2,254,12,55,23,198,14,255,69,245,138,155,129,227,167,168,130,156,135,14,96,93,48,99,143,107,126,92,117,143,112,108,193,228,84,13,41,186,27,172,92,201,149,116,19,112,197,116,209,128,102,1,55,152,177,28,37,34,50,83,41,199,74,178,59,111,67,118,35,252,36,33,87,28,170,17,215,47,90,154,124,137,15,14,211,59,75,59,30,77,0,49,37,225,191,87,101,127,214,227,160,99,174,234,82,148,235,16,241,219,147,170,127,221,250,116,39,218,156,72,227,172,55,0,79,188,76,51,222,232,24,36,62,94,154,3,61,230,146,114,253,0,128,58,253,90,72,211,242,38,39,133,153,161,119,105,195,152,225,208,105,140,80,217,186,196,157,21,116,230,116,139,25,159,143,118,128,77,201,238,247,228,15,168,4,133,148,21,148,12,44,241,7,115,17,129,176,202,46,130,122,129,235,141,223,85,21,199,65,181,169,52,174,161,153,62,25,164,115,213,89,138,199,103,79,200,165,135,249,244,27,209,178,240,129,211,61,9,111,157,147,119,36,119,255,110,130,84,49,210,225,247,100,26,121,127,163,160,26,79,99,24,77,65,32,178,109,36,27,253,173,110,183,11,14,211,57,130,254,124,104,165,219,31,70,97,14,194,39,61,26,141,125,228,126,194,184,101,160,204,106,128,144,106,103,171,18,246,129,220,85,172,151,123,5,73,155,192,175,91,157,239,61,237,116,170,65,233,56,19,49,114,168,190,3,214,53,250,90,213,244,88,101,30,229,248,124,15,71,141,27,172,235,21,129,211,72,61,172,112,170,128,135,96,196,221,255,27,176,105,188,183,121,33,37,149,53,131,226,233,29,167,234,218,109,53,185,152,36,248,53,61,235,78,21,201,214,210,163,12,251,187,45,188,137,126,127,237,92,234,91,240,225,38,194,57,213,251,237,171,30,99,52,14,49,84,101,252,237,7,166,122,114,32,107,32,207,239,136,168,178,12,11,241,233,230,146,132,18,83,233,41,172,17,6,161,42,113,87,40,255,185,1,146,128,5,240,126,131,71,42,54,124,205,2,122,71,30,222,229,40,134,142,102,97,239,151,177,1,230,231,49,123,219,28,129,91,152,112,13,154,81,197,226,255,112,158,178,177,55,181,108,138,185,245,29,186,21,73,188,209,154,200,89,116,235,198,144,36,87,248,22,7,200,122,7,148,44,42,87,140,238,204,95,231,252,0,136,0,22,39,70,123,125,165,113,227,172,146,163,128,158,36,52,91,19,36,245,27,150,138,141,11,67,239,224,65,24,116,101,7,39,46,142,172,164,243,148,0,33,226,59,47,203,137,156,241,66,250,157,30,204,101,143,134,98,238,155,226,25,184,136,219,89,100,193,11,143,71,139,243,230,151,0,249,1,78,26,32,93,104,157,67,97,164,248,86,124,146,93,74,222,228,167,55,53,100,135,216,109,13,64,37,106,177,200,200,182,92,251,69,31,243,89,80,198,14,132,203,72,103,28,104,217,24,97,223,113,11,29,178,191,210,46,162,255,68,99,8,237,213,162,152,193,183,121,203,19,108,182,29,86,26,192,103,220,103,205,154,179,197,9,22,73,127,175,146,38,119,210,0,24,180,21,245,215,204,91,186,119,138,183,239,15,155,231,248,133,39,24,101,144,236,10,230,54,174,227,73,21,110,10,160,241,232,131,14,212,127,232,59,122,65,146,54,163,9,189,190,121,88,170,62,194,14,204,152,245,38,131,37,91,81,72,114,29,115,239,182,56,44,156,159,177,180,82,160,93,97,86,183,236,50,95,85,39,71,181,225,152,143,63,123,117,34,44,109,160,166,229,240,91,138,102,54,180,173,44,50,80,42,124,7,50,124,211,239,21,94,197,185,239,213,107,142,64,95,124,125,17,180,97,189,101,52,48,19,112,12,70,9,212,177,54,118,66,84,147,236,248,26,124,95,103,135,254,124,49,112,186,99,120,90,8,194,191,88,57,242,65,61,10,104,246,197,252,19,159,58,194,75,173,242,103,8,115,84,69,238,149,26,15,159,182,141,132,119,70,29,53,20,143,46,163,204,6,236,59,45,185,172,89,119,83,38,144,36,222,96,151,26,99,195,163,170,133,92,159,214,53,150,116,90,176,69,145,130,15,172,140,217,215,101,163,115,161,65,101,8,7,183,113,213,134,58,175,130,251,143,173,248,168,135,60,159,30,194,68,208,119,120,2,40,178,227,247,161,77,47,136,46,244,163,72,65,158,25,225,195,61,132,182,204,177,186,200,81,2,65,105,212,72,94,203,232,217,182,123,251,228,160,1,161,204,123,20,37,1,77,208,179,45,149,181,122,102,190,123,213,164,231,41,216,130,234,248,208,251,252,220,84,209,67,47,61,220,5,142,162,26,236,121,142,248,132,255,65,122,203,196,102,191,187,2,195,127,255,193,92,49,91,186,154,39,156,29,211,172,49,104,245,114,153,223,211,199,249,35,130,160,128,0,152,176,183,20,236,113,193,108,26,255,11,237,102,133,245,94,115,114,10,89,229,214,221,99,149,30,99,37,246,10,26,26,39,92,123,170,73,211,127,227,54,30,86,133,159,112,225,91,148,100,174,149,75,143,14,140,20,44,64,212,5,243,8,116,63,30,97,42,123,20,73,212,85,207,83,122,27,251,233,84,10,17,236,232,83,200,127,119,143,163,204,220,167,59,231,20,106,186,222,191,8,40,234,21,25,180,13,116,250,152,224,174,75,3,205,38,173,215,236,151,185,121,254,244,154,239,17,53,106,164,61,49,116,216,118,94,150,35,181,26,238,66,49,211,221,132,146,166,115,39,136,36,205,230,179,31,197,51,148,165,109,38,70,37,148,52,44,209,250,98,58,246,225,103,198,101,26,25,196,207,8,166,21,88,252,175,253,10,88,107,157,19,225,61,12,246,221,37,239,186,167,137,142,135,222,128,174,62,95,216,38,141,157,45,232,97,217,173,203,234,116,129,69,206,189,94,221,12,54,139,186,247,184,16,200,121,244,104,8,7,35,111,47,188,10,140,92,73,143,206,203,72,122,184,20,102,197,130,64,150,63,96,239,8,132,111,217,84,91,198,32,43,100,138,241,15,160,42,190,253,193,184,164,124,29,210,96,67,224,221,182,29,218,129,149,29,128,174,98,88,88,125,56,40,255,120,5,0,87,174,42,150,90,112,201,183,169,19,57,195,191,12,58,244,235,132,25,145,72,146,214,8,125,100,135,12,5,102,97,248,174,24,159,90,33,43,187,6,61,212,241,225,190,219,252,197,123,129,164,108,123,55,230,4,153,166,105,234,15,85,216,23,56,32,3,41,110,68,146,172,133,202,98,41,7,47,152,35,255,168,106,241,226,222,77,244,52,185,65,252,227,32,66,38,11,172,60,28,28,103,84,1,1,205,182,190,28,189,102,253,43,1,191,148,116,10,227,18,81,93,80,239,157,232,215,180,163,165,161,109,177,71,150,244,144,208,160,110,22,174,60,206,43,103,121,55,103,114,115,173,238,13,10,227,251,41,176,216,158,229,216,55,234,128,128,20,167,106,181,86,163,130,215,110,149,191,10,227,215,8,214,154,178,181,15,19,0,247,250,97,74,43,157,55,94,174,41,41,9,199,97,20,91,32,18,10,43,98,240,247,203,20,250,117,160,44,229,202,187,64,54,124,15,184,169,129,27,160,240,26,61,255,60,166,60,144,209,84,55,187,186,168,13,124,125,29,17,100,249,227,62,205,78,179,163,168,139,168,21,38,83,239,151,74,43,66,2,92,72,71,94,216,134,238,20,45,158,213,164,73,57,80,47,198,184,130,223,227,71,132,133,235,177,85,174,142,124,172,200,54,229,40,126,60,76,92,216,153,56,241,174,66,141,90,226,3,30,68,234,71,187,163,112,146,255,22,143,170,204,3,127,179,81,139,160,37,77,246,128,220,196,158,153,73,177,65,199,119,29,197,144,130,248,206,155,253,108,213,124,7,223,221,162,146,134,242,65,99,162,107,120,247,214,207,96,150,169,131,208,218,221,28,24,112,208,23,1,130,142,232,56,104,45,33,158,95,255,123,31,74,76,120,178,155,213,6,195,164,8,8,69,241,197,127,83,169,21,167,19,94,143,252,33,159,248,241,170,153,147,1,149,199,201,131,170,79,236,212,209,143,107,98,24,123,56,33,193,85,247,64,225,135,210,78,145,57,16,145,71,170,20,133,87,235,4,166,239,100,82,235,81,50,223,9,193,52,49,86,129,190,196,82,165,107,63,115,161,98,33,20,193,29,42,151,205,252,124,72,245,48,181,67,7,13,21,127,59,226,188,144,129,112,244,192,121,213,80,42,196,1,13,107,108,78,0,40,121,225,148,237,234,209,216,238,9,147,226,254,96,89,212,72,193,106,75,135,74,227,67,255,92,191,81,188,124,226,149,152,142,15,159,195,238,114,55,255,166,157,230,59,148,170,166,151,65,213,104,253,253,112,150,82,147,137,27,214,100,247,65,81,92,47,86,217,7,45,120,81,130,31,236,243,76,78,3,45,105,172,220,71,48,220,94,196,249,163,193,133,50,236,205,20,55,2,63,14,127,69,113,212,204,12,58,79,89,86,29,61,199,201,64,149,6,144,182,150,129,31,18,167,120,248,82,107,25,143,128,27,161,28,25,153,183,217,238,78,186,106,92,27,202,219,165,96,0,216,234,169,73,101,39,182,113,217,240,170,116,172,221,250,233,48,49,242,83,227,92,181,184,72,230,180,21,15,108,135,25,38,153,25,124,227,26,149,73,236,39,211,244,149,58,183,132,26,223,219,174,144,117,233,219,165,205,157,159,222,184,52,47,241,201,123,65,24,44,55,215,177,168,250,179,115,190,227,123,158,163,179,224,69,196,66,207,254,243,101,221,193,140,250,4,28,222,52,96,138,160,33,218,64,118,214,234,201,152,148,91,178,111,107,144,142,6,182,102,72,188,34,213,181,26,223,58,255,103,81,17,47,169,11,245,224,123,148,215,237,186,107,75,152,90,202,166,22,149,197,5,246,238,78,76,229,106,199,94,127,195,0,45,82,6,159,103,96,138,231,71,46,107,59,216,39,43,12,221,27,214,56,155,145,66,187,169,250,235,78,211,179,239,183,198,163,93,5,196,24,174,143,225,106,139,89,98,13,127,207,184,194,30,1,165,198,169,8,197,118,86,163,221,138,23,209,61,116,79,99,233,43,130,60,244,85,229,243,172,123,148,200,120,192,127,211,52,11,159,41,95,212,230,188,169,156,137,29,212,12,148,168,148,133,243,44,241,139,127,24,246,220,227,125,209,97,60,52,162,192,146,49,161,92,138,112,189,128,59,126,125,46,207,60,79,231,174,152,209,68,223,205,2,38,14,91,116,159,255,28,27,178,248,164,104,158,79,69,214,234,157,12,75,163,83,253,245,202,61,213,176,6,197,230,29,208,166,253,194,254,235,29,141,241,70,249,15,62,0,148,163,135,52,122,40,96,87,31,179,152,51,216,133,184,122,198,203,60,115,218,191,193,16,178,25,148,252,112,104,103,252,36,92,221,28,179,43,199,198,151,128,100,252,217,161,249,34,201,172,118,52,180,252,104,7,223,44,116,102,212,21,40,224,184,55,163,210,21,207,161,239,51,54,155,41,133,18,67,48,3,165,130,251,4,79,214,57,72,130,157,212,144],hX=[0,1,3,4,6,7,9,10,12,13,15,16,18,19,21,22,24,26,29,31,34,36,39,41,44,46,49,51,54,56,59,61,64,65,66,67,68,69,70,72,73,74,75,76,77,79,80,81,82,83,84,85,87,88,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,107,109,110,111,112,113,114,116,117,118,119,120,121,123,124,125,126,127,128,129,131,132,133,134,135,136,138,139,140,141,142,143,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,162,163,164,165,166,168,169,170,171,172,173,175,176,177,178,179,180,182,183,184,185,186,187,188,190,191,192,193,194,195,197,198,199,200,201,202,204,205,206,207,208,209,210,212,213,214,215,216,217,219,220,221,222,223,224,226,226,226,227,227,227,228,228,228,229,229,229,230,230,231,231,231,232,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],lX=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,39,40,42,43,44,46,47,49,50,51,53,54,56,57,58,59,61,62,63,64,66,67,68,69,71,72,73,74,76,77,78,79,81,82,83,84,86,87,88,90,91,92,93,95,96,97,98,100,101,102,103,105,106,107,108,110,111,112,113,115,116,117,118,120,121,122,124,125,126,127,129,130,131,132,134,135,136,137,139,140,141,142,144,145,146,147,149,150,151,152,154,155,156,158,159,160,161,163,164,165,166,168,169,170,171,173,174,175,176,178,179,180,181,183,184,185,186,188,189,190,192,193,194,195,197,198,199,200,202,203,204,205,207,208,209,210,212,213,214,215,217,218,219,220,222,223,224,226,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],pX=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,74,76,77,78,80,81,83,84,85,87,88,89,91,92,94,95,96,98,99,100,102,103,105,106,107,109,110,111,113,114,116,117,118,120,121,122,124,125,127,128,129,131,132,133,135,136,138,139,140,142,143,144,146,147,149,150,151,153,154,155,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,192,193,193,194,195,195,196,197,197,198,199,199,200,201,201,202,203,203,204,205,205,206,207,207,208,209,209,210,211,211,212,213,213,214,215,215,216,217,217,218,219,219,220,221,221,222,223,223,224,225,225,226,227,227,228,229,229,230,231,231,232,233,233,234,235,235,236,237,237,238,239,239,240,241,241,242,243,243,244,245,245,246,247,247,248,249,249,250,251,251,252,253,253,254,255];class gX extends nX{constructor(e,t,r,i){super(e,AX,r,i),kO(this,"inputTexture",void 0),kO(this,"lightLevel",.1),kO(this,"rednessLevel",.5),kO(this,"mskin_he_max",175/180*3.141593),kO(this,"mskin_he_min",115/180*3.141593),kO(this,"mskin_hc_max",173/180*3.141593),kO(this,"mskin_hc_min",116/180*3.141593),kO(this,"mskin_hc_axis",2.04203545),kO(this,"mfacts_rotate_c",0),kO(this,"mfacts_rotate_le",0),kO(this,"mfacts_rotate_ge",0),kO(this,"tab_addr",null),kO(this,"lutTextures",[]),this.inputTexture=t,this.init()}setUniforms(){const e=this.gl.getUniformLocation(this.program,"u_flipY"),t=this.gl.getUniformLocation(this.program,"u_denoiseLevel");this.gl.uniform1f(t,this.denoiseLevel),this.gl.uniform1f(e,1);const r=this.gl.getUniformLocation(this.program,"light");this.gl.uniform1f(r,this.lightLevel);const i=this.gl.getUniformLocation(this.program,"redness");this.gl.uniform1f(i,this.rednessLevel);const n=this.gl.getUniformLocation(this.program,"skin_he_max"),o=this.gl.getUniformLocation(this.program,"skin_he_min"),s=this.gl.getUniformLocation(this.program,"skin_hc_max"),a=this.gl.getUniformLocation(this.program,"skin_hc_min"),c=this.gl.getUniformLocation(this.program,"skin_hc_axis"),d=this.gl.getUniformLocation(this.program,"facts_rotate_c"),u=this.gl.getUniformLocation(this.program,"facts_rotate_le"),A=this.gl.getUniformLocation(this.program,"facts_rotate_ge");this.gl.uniform1f(n,this.mskin_he_max),this.gl.uniform1f(o,this.mskin_he_min),this.gl.uniform1f(s,this.mskin_hc_max),this.gl.uniform1f(a,this.mskin_hc_min),this.gl.uniform1f(c,this.mskin_hc_axis),this.gl.uniform1f(d,this.mfacts_rotate_c),this.gl.uniform1f(u,this.mfacts_rotate_le),this.gl.uniform1f(A,this.mfacts_rotate_ge);const h=this.gl.getUniformLocation(this.program,"u_originImage");this.gl.activeTexture(this.gl.TEXTURE2),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture),this.gl.uniform1i(h,2);const l=["lighten_lut"],p=[this.gl.TEXTURE3];for(let e=0;e<l.length;e++){const t=this.gl.getUniformLocation(this.program,l[e]);this.gl.activeTexture(p[e]),this.gl.bindTexture(this.gl.TEXTURE_2D,this.lutTextures[e]),this.gl.uniform1i(t,e+3)}}setParameters(e){void 0!==e.denoiseLevel&&(this.denoiseLevel=e.denoiseLevel),void 0!==e.lightLevel&&(this.lightLevel=e.lightLevel),void 0!==e.rednessLevel&&(this.rednessLevel=e.rednessLevel,this.updateRedness(this.rednessLevel)),e.lighteningContrastLevel&&this.updateLut(e.lighteningContrastLevel)}init(){this.tab_addr=new Uint8Array(lX);const e=[this.tab_addr],t=[256],r=[1];for(let i=0;i<e.length;i++){const n=this.gl.createTexture();if(!n)throw new UD(MD.WEBGL_INTERNAL_ERROR,"create lut texture failed");this.gl.bindTexture(this.gl.TEXTURE_2D,n),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.LUMINANCE,t[i],r[i],0,this.gl.LUMINANCE,this.gl.UNSIGNED_BYTE,e[i]),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.lutTextures.push(n)}}updateRedness(e){const t=3.141593;let r,i,n=e,o=n;n>1&&(n=1),n<0&&(n=0),o>1&&(o=1),o<0&&(o=0),this.mfacts_rotate_c=.8*n,o<.8&&(o=0),this.mskin_he_max=175/180*t,this.mskin_hc_max=173/180*t,this.mskin_he_min=(115-4*o)/180*t,this.mskin_hc_min=(116-4*o)/180*t,this.mskin_hc_axis=(117-4*o)/180*t,this.mskin_hc_axis<this.mskin_hc_min&&(this.mskin_hc_axis=this.mskin_hc_min),this.mskin_hc_min<t/2&&(this.mskin_hc_min=t/2),this.mskin_hc_axis<t/2&&(this.mskin_hc_axis=t/2),this.mskin_he_min<t/2&&(this.mskin_he_min=t/2),this.mskin_hc_max>t&&(this.mskin_hc_max=t),this.mskin_hc_axis>t&&(this.mskin_hc_axis=t),this.mskin_he_max>t&&(this.mskin_he_max=t),r=this.mskin_he_max-this.mskin_hc_max,i=this.mskin_hc_max-this.mskin_hc_axis,this.mfacts_rotate_ge=r>.01?this.mfacts_rotate_c*i/r:this.mfacts_rotate_c,r=this.mskin_hc_min-this.mskin_he_min,i=this.mskin_hc_axis-this.mskin_hc_min,this.mfacts_rotate_le=r>.01?this.mfacts_rotate_c*i/r:this.mfacts_rotate_c}updateLut(e){let t=null;if(0===e&&(t=lX),1===e&&(t=pX),2===e&&(t=hX),!t)throw new UD(MD.WEBGL_INTERNAL_ERROR,"invalid ylut_table value:"+e);this.tab_addr=new Uint8Array(t);const r=[this.tab_addr],i=[256],n=[1];for(let e=0;e<r.length;e++)this.gl.bindTexture(this.gl.TEXTURE_2D,this.lutTextures[e]),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.LUMINANCE,i[e],n[e],0,this.gl.LUMINANCE,this.gl.UNSIGNED_BYTE,r[e])}}class EX{constructor(){kO(this,"gl",null),kO(this,"canvas",null),kO(this,"programs",[]),kO(this,"commonProgram",null),kO(this,"inputTexture",null),kO(this,"outputTextures",[]),kO(this,"fbos",[]),kO(this,"originalFrameWidth",0),kO(this,"originalFrameHeight",0),kO(this,"enableBeauty",!1),kO(this,"denoiseLevel",5),kO(this,"lightLevel",.35),kO(this,"rednessLevel",.5),kO(this,"lighteningContrastLevel",1)}setEnableBeauty(e){this.enableBeauty=!!e}init(e,t,r){if(!vB().supportWebGL)throw new UD(MD.NOT_SUPPORTED,"your browser is not support webGL");if(this.gl=r.getContext("webgl"),!this.gl)throw new UD(MD.WEBGL_INTERNAL_ERROR,"can not get webgl context");if(this.initGL(e,t),!this.inputTexture)throw new UD(MD.WEBGL_INTERNAL_ERROR,"can not find input texture");this.canvas=r,this.programs.push(new iX(this.gl)),this.programs.push(new sX(this.gl,e,t)),this.programs.push(new cX(this.gl,e,t)),this.programs.push(new uX(this.gl,e,t)),this.programs.push(new gX(this.gl,this.inputTexture,e,t)),this.commonProgram=this.programs[0].program,this.setDenoiseLevel(this.denoiseLevel),this.setLightLevel(this.lightLevel),this.setRednessLevel(this.rednessLevel),this.setContrastLevel(this.lighteningContrastLevel)}render(e){if(!this.gl||!this.commonProgram||!this.canvas)return void HD.warning("video effect manager is not init!");let t=0;if(this.originalFrameHeight===e.videoWidth&&this.originalFrameWidth===e.videoHeight)t=2;else if(this.originalFrameHeight!==e.videoHeight||this.originalFrameWidth!==e.videoWidth){if(HD.debug("beauty effect: resolution changed ".concat(this.originalFrameWidth,"x").concat(this.originalFrameHeight," -> ").concat(e.videoWidth,"x").concat(e.videoHeight)),0===e.videoHeight||0===e.videoWidth)return void HD.debug("beauty effect: skip 0 resolution frame");this.canvas.width=e.videoWidth,this.canvas.height=e.videoHeight,e.setAttribute("width",e.videoWidth.toString()),e.setAttribute("height",e.videoHeight.toString()),this.release(),this.init(e.videoWidth,e.videoHeight,this.canvas)}this.gl.viewport(0,0,e.videoWidth,e.videoHeight),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,e);const r=this.enableBeauty?this.programs.length-1:0;for(let e=0;e<=r;e++){const r=this.programs[e].program;this.gl.useProgram(r);const i=this.gl.getUniformLocation(r,"u_image");this.programs[e].setUniforms(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.fbos[t+e%2]),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.drawArrays(this.gl.TRIANGLES,0,6),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.outputTextures[t+e%2]),this.gl.uniform1i(i,0)}this.gl.useProgram(this.commonProgram);const i=this.gl.getUniformLocation(this.commonProgram,"u_flipY");this.gl.uniform1f(i,-1),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.drawArrays(this.gl.TRIANGLES,0,6)}setDenoiseLevel(e){this.programs.forEach(t=>{t instanceof nX&&t.setParameters({denoiseLevel:e})}),this.denoiseLevel=e}setLightLevel(e){this.programs.forEach(t=>{t instanceof nX&&t.setParameters({lightLevel:e})}),this.lightLevel=e}setRednessLevel(e){this.programs.forEach(t=>{t instanceof nX&&t.setParameters({rednessLevel:e})}),this.rednessLevel=e}setContrastLevel(e){this.programs.forEach(t=>{t instanceof nX&&t.setParameters({lighteningContrastLevel:e})}),this.lighteningContrastLevel=e}setSize(e,t){this.programs.forEach(r=>{r instanceof nX&&r.setSize(e,t)})}release(){this.gl=null,this.commonProgram=null,this.inputTexture=null,this.programs=[],this.outputTextures=[],this.fbos=[]}initGL(e,t){if(!this.gl)throw new UD(MD.WEBGL_INTERNAL_ERROR,"can not find webgl context");this.inputTexture=this.gl.createTexture(),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);for(let r=0;r<4;r++){const i=this.gl.createTexture();if(!i)throw new UD(MD.WEBGL_INTERNAL_ERROR,"create texture failed");this.gl.bindTexture(this.gl.TEXTURE_2D,i),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),r<2?this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,e,t,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null):this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);const n=this.gl.createFramebuffer();if(!n)throw new UD(MD.WEBGL_INTERNAL_ERROR,"create frame buffer failed");this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,n),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,i,0),this.outputTextures.push(i),this.fbos.push(n)}this.gl.viewport(0,0,e,t),this.originalFrameWidth=e,this.originalFrameHeight=t}}class fX{constructor(){kO(this,"targetFrameRate",0),kO(this,"recordedFrameCount",0),kO(this,"recordingTime",2),kO(this,"recordID",void 0)}async startRecordBeautyEffectOutput(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;if(this.recordID)throw new UD(MD.UNEXPECTED_ERROR,"another beauty effect recording is in progress");const r=fK(6,"");return this.recordID=r,this.targetFrameRate=e,this.recordedFrameCount=0,this.recordingTime=t,await gK(1e3*this.recordingTime),this.recordID!==r?(this.recordID=void 0,!0):(this.recordID=void 0,this.recordedFrameCount<this.targetFrameRate*this.recordingTime/2?(HD.warning("detect beauty effect overload, current framerate",this.recordedFrameCount/2),!1):(HD.debug("beauty effect current framerate",this.recordedFrameCount/2),!0))}stopRecordBeautyEffectOutput(){this.targetFrameRate=0,this.recordedFrameCount=0,this.recordID=void 0}addFrame(){this.recordID&&(this.recordedFrameCount+=1)}}class IX extends Xq.exports.VideoProcessor{constructor(){super(),kO(this,"name","BeautyProcessor"),kO(this,"fps",15),kO(this,"canvas",void 0),kO(this,"video",void 0),kO(this,"manager",void 0),kO(this,"overloadDetector",new fX),kO(this,"stopChromeBackgroundLoop",null),kO(this,"onOverload",void 0),kO(this,"stopLoop",void 0),kO(this,"lastRenderTime",0),this.fps=30,this.manager=new EX,this._enabled=!1}async onEnableChange(e){this.manager.setEnableBeauty(e),this.context&&this.inputTrack&&(e?await this.startEffect(this.inputTrack,this.context):await this.stopEffect(this.inputTrack,this.context))}async setBeautyEffectOptions(e){if(function(e){void 0!==e.smoothnessLevel&&kL(e.smoothnessLevel,"options.smoothnessLevel",0,1,!1),void 0!==e.lighteningLevel&&kL(e.lighteningLevel,"options.lighteningLevel",0,1,!1),void 0!==e.rednessLevel&&kL(e.rednessLevel,"options.rednessLevel",0,1,!1),void 0!==e.lighteningContrastLevel&&LL(e.lighteningContrastLevel,"options.lighteningContrastLevel",[0,1,2])}(e),void 0!==e.smoothnessLevel){const t=Math.max(.1,10*e.smoothnessLevel);this.manager.setDenoiseLevel(t)}if(void 0!==e.lighteningLevel){const t=Math.max(.1,e.lighteningLevel/2);this.manager.setLightLevel(t)}if(void 0!==e.rednessLevel){const t=Math.max(.01,e.rednessLevel);this.manager.setRednessLevel(t)}if(void 0!==e.lighteningContrastLevel){const t=e.lighteningContrastLevel;this.manager.setContrastLevel(t)}}async onTrack(e,t){var r;this.video&&this.enabled&&(null===(r=this.stopLoop)||void 0===r||r.call(this),await this.stopEffect(e,t));await this.startEffect(e,t)}async startEffect(e,t){if(!this.enabled)return;const r=oO(),i=await this.renderWithWebGL(e);this.output(i,t),HD.info("start video effect, output:",this.outputTrack),this.overloadDetector.startRecordBeautyEffectOutput(this.fps).then(e=>{e||this.onOverload&&this.onOverload()});let n=!1;this.stopLoop=()=>{n=!0};const o=()=>{this.enabled&&!n&&requestAnimationFrame(o);const e=Date.now(),t=1e3/this.fps,r=this.lastRenderTime?e-this.lastRenderTime:t;r<t||(this.lastRenderTime=e-(r-t),this.video&&this.video.paused&&this.video.play(),this.enabled&&this.video&&(this.manager.render(this.video),this.outputTrack&&this.outputTrack.requestFrame&&this.outputTrack.requestFrame(),this.overloadDetector.addFrame()))};requestAnimationFrame(o),r.name===tO.CHROME&&document.addEventListener("visibilitychange",()=>{document.hidden?this.stopChromeBackgroundLoop=Nj(()=>{this.enabled&&this.video&&this.manager.render(this.video),this.outputTrack&&this.outputTrack.requestFrame&&this.outputTrack.requestFrame(),this.overloadDetector.addFrame()},this.fps):this.stopChromeBackgroundLoop&&(this.stopChromeBackgroundLoop(),this.stopChromeBackgroundLoop=null)},!1)}async renderWithWebGL(e){this.canvas&&(this.canvas.remove(),this.canvas=void 0),this.video&&(this.video.remove(),this.video=void 0),this.canvas=document.createElement("canvas"),this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.muted=!0,this.video.setAttribute("playsinline",""),this.video.setAttribute("style","display:none"),this.video.srcObject=new MediaStream([e]);const t=new nT(e=>{const t=()=>{this.video&&this.video.removeEventListener("playing",t),e(void 0)};this.video&&this.video.addEventListener("playing",t)});this.video.play(),await t;const r=e.getSettings(),i=r.width||this.video.videoWidth,n=r.height||this.video.videoHeight;if(r.frameRate&&this.fps!==r.frameRate&&(this.fps=r.frameRate,HD.debug("beauty video processor: set fps to",this.fps)),HD.debug("beauty video processor: width ".concat(i," height ").concat(n)),!i||!n)throw new UD(MD.BEAUTY_PROCESSOR_INTERNAL_ERROR,"can not get track resolution");this.canvas.width=i,this.canvas.height=n,this.video.setAttribute("width",i.toString()),this.video.setAttribute("height",n.toString()),this.manager.init(i,n,this.canvas);const o=vB();return this.canvas.captureStream(o.supportRequestFrame?0:this.fps).getVideoTracks()[0]}async stopEffect(e,t){HD.info("stop video effect"),this.overloadDetector.stopRecordBeautyEffectOutput(),this.manager.release(),this.canvas&&this.canvas.remove(),this.video&&this.video.remove(),this.canvas=void 0,this.video=void 0,this.output(e,t)}}function mX(e){const t={};if(e.facingMode&&(t.facingMode=e.facingMode),e.cameraId&&(t.deviceId={exact:e.cameraId}),!e.encoderConfig)return t;const r=TP(e.encoderConfig);return t.width=r.width,t.height=r.height,!TO()&&r.frameRate&&(t.frameRate=r.frameRate),oO().name===tO.EDGE&&"object"==typeof t.frameRate&&(t.frameRate.max=60),gO()&&(t.frameRate={ideal:30,max:30}),t}function _X(e){const t={};e.screenSourceType&&(t.mediaSource=e.screenSourceType),e.extensionId&&lO()&&(t.extensionId=e.extensionId),e.electronScreenSourceId&&(t.sourceId=e.electronScreenSourceId);const r=e.encoderConfig?RP(e.encoderConfig):null;return t.mandatory={chromeMediaSource:"desktop",maxWidth:r?r.width:void 0,maxHeight:r?r.height:void 0},r&&r.frameRate&&("number"==typeof r.frameRate?(t.mandatory.maxFrameRate=r.frameRate,t.mandatory.minFrameRate=r.frameRate):(t.mandatory.maxFrameRate=r.frameRate.max||r.frameRate.ideal||r.frameRate.exact||void 0,t.mandatory.minFrameRate=r.frameRate.min||r.frameRate.ideal||r.frameRate.exact||void 0),t.frameRate=r.frameRate),r&&r.width&&(t.width=r.width),r&&r.height&&(t.height=r.height),t}function CX(e){const t={};if(TO()||(void 0!==e.AGC&&(t.autoGainControl=e.AGC),void 0!==e.AEC&&(t.echoCancellation=e.AEC),void 0!==e.ANS&&(t.noiseSuppression=e.ANS,lO()&&e.ANS&&(t.googHighpassFilter=e.ANS))),e.encoderConfig){const r=bP(e.encoderConfig);t.channelCount=r.stereo?2:1,t.sampleRate=r.sampleRate,t.sampleSize=r.sampleSize}return e.microphoneId&&(t.deviceId={exact:e.microphoneId}),yO()&&(t.sampleRate=void 0),t}var SX,vX;!function(e){e.COVERED="COVERED",e.POSITION="POSITION",e.SIZE="SIZE",e.STYLE="STYLE"}(SX||(SX={})),function(e){e.UNMOUNTED="UNMOUNTED",e.INVALID_HTML_ELEMENT="INVALID_HTML_ELEMENT"}(vX||(vX={}));var TX,RX,yX,wX,bX,OX,NX,DX,PX,LX,kX,BX,MX,UX,xX,QX,FX,VX,jX,GX,KX,HX,WX,YX,JX,qX,XX=new class{constructor(){kO(this,"_clientSize",null),kO(this,"getClientWidth",()=>document.documentElement?document.documentElement.clientWidth:document.body.clientWidth),kO(this,"getClientHeight",()=>document.documentElement?document.documentElement.clientHeight:document.body.clientHeight),kO(this,"getStyle",e=>window.getComputedStyle(e,null)),kO(this,"checkCssVisibleProperty",e=>{let t=!0;const r=this.getStyle(e),{display:i,visibility:n,opacity:o,filter:s}=r;if(("none"===i||["hidden","collapse"].includes(n)||Number(o)<.1)&&(t=!1),!t)return!1;if(s){s.split(" ").filter(e=>{const t=e.split("(")[0];return["brightness","blur","opacity"].includes(t)}).map(e=>{const[t,r]=e.split(/\(|\)/);return[t,Number(r.match(/^[0-9\.]+/))]}).forEach(e=>{const[r,i]=e;switch(r){case"brightness":(i<.1||i>3)&&(t=!1);break;case"blur":i>3&&(t=!1);break;case"opacity":i<.1&&(t=!1)}})}return t}),kO(this,"checkPropertyUpToAllParentNodes",(e,t)=>{let r=!0,i=!0;const n=e=>t(e);let o=e;for(;o&&i;){n(o)||(r=!1,i=!1),o=o.parentElement,o||(i=!1)}return r}),kO(this,"checkActualCssVisibleIncludeInherit",e=>this.checkPropertyUpToAllParentNodes(e,this.checkCssVisibleProperty)),kO(this,"getSizeAboutClient",e=>{const{width:t,height:r,left:i,right:n,top:o,bottom:s}=e.getBoundingClientRect(),a=this.getClientWidth(),c=this.getClientHeight();return{width:t,height:r,left:i,right:n,top:o,bottom:s,clientWidth:a,clientHeight:c,clientMin:Math.min(a,c)}}),kO(this,"checkActualSize",()=>{const{width:e,height:t,clientMin:r}=this._clientSize;return this.checkSizeIsVisible(e,t,r)}),kO(this,"elementFromPoint",(e,t)=>document.elementFromPoint?document.elementFromPoint(e,t):null),kO(this,"checkCoverForAPoint",(e,t,r)=>{const i=this.elementFromPoint(e,t);return null!==i&&i!==r}),kO(this,"getPointPositionList",()=>{const{width:e,height:t,left:r,top:i}=this._clientSize,n=e/6,o=t/6,s=[],a=10**6;for(let e=0;e<5;e++)for(let t=0;t<5;t++){const c=(r*a+(0===e?.1:4===e?(n*e*a-1e5)/a:n*e)*a)/a,d=(i*a+(0===t?.1:4===t?(o*t*a-1e5)/a:o*t)*a)/a;s.push({x:c,y:d})}return[...s]}),kO(this,"checkElementCover",e=>this.getPointPositionList().map(t=>this.checkCoverForAPoint(t.x,t.y,e)).filter(e=>!!e).length>6),kO(this,"checkSizeIsVisible",(e,t,r)=>(e>50||r/e<=10)&&(t>50||r/t<=10)),kO(this,"checkSizeOfPartInClient",()=>{const{left:e,right:t,top:r,bottom:i,clientHeight:n,clientWidth:o,clientMin:s}=this._clientSize;let a,c,d,u;if(e<0)a=0;else{if(!(e<o))return!1;a=e}if(t<0)return!1;if(c=t<o?t:o,r<0)d=0;else{if(!(r<n))return!1;d=r}if(i<0)return!1;u=i<n?i:n;const A=c-a,h=u-d;return this.checkSizeIsVisible(A,h,s)}),kO(this,"returnHiddenResult",e=>(this._clientSize=null,{visible:!1,reason:e})),kO(this,"checkOneElementVisible",e=>{if(e instanceof HTMLElement){if(this.checkElementIsMountedOnDom(e)){if(this.checkActualCssVisibleIncludeInherit(e)){if(this._clientSize=this.getSizeAboutClient(e),this.checkElementCover(e))return this.returnHiddenResult(SX.COVERED);{const e=this.checkActualSize(),t=this.checkSizeOfPartInClient();return e&&!t?this.returnHiddenResult(SX.POSITION):e?(this._clientSize=null,{visible:!0}):this.returnHiddenResult(SX.SIZE)}}return this.returnHiddenResult(SX.STYLE)}return this.returnHiddenResult(vX.UNMOUNTED)}return this.returnHiddenResult(vX.INVALID_HTML_ELEMENT)}),kO(this,"checkElementIsMountedOnDom",e=>this.checkPropertyUpToAllParentNodes(e,e=>"HTML"!==e.nodeName.toUpperCase()?null!==e.parentElement:!!document.documentElement))}};function zX(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function ZX(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?zX(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):zX(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}let $X=(TX=gP("LocalVideoTrack","getTrackId"),RX=Zj(),yX=fj("LocalVideoTrack","_enabledMutex"),wX=dj({className:"LocalVideoTrack"}),bX=Zj(),OX=fj("LocalVideoTrack","_enabledMutex"),NX=dj({className:"LocalVideoTrack"}),DX=Zj(),PX=Zj(),LX=Zj(),kX=Zj(),BX=Zj(),MX=Zj(),UX=Zj(),xX=Zj(),QX=Zj(),TX((UV((VX=class e extends Ij{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==WL.PLAYING)}constructor(e,t,r,i,n,o){super(e,n),kO(this,"trackMediaType","video"),kO(this,"_player",void 0),kO(this,"_videoBeautyProcessor",void 0),kO(this,"_videoVisibleTimer",null),kO(this,"_previousVideoVisibleStatus",void 0),kO(this,"_clearPreviousVideoVisibleStatus",()=>this._previousVideoVisibleStatus=void 0),kO(this,"_encoderConfig",void 0),kO(this,"_scalabiltyMode",{numSpatialLayers:1,numTemporalLayers:1}),kO(this,"_optimizationMode",void 0),kO(this,"_videoHeight",void 0),kO(this,"_videoWidth",void 0),kO(this,"_forceBitrateLimit",void 0),kO(this,"_enabled",!0),kO(this,"processorDestination",void 0),kO(this,"processorContext",void 0),this.updateMediaStreamTrackResolution(),this._encoderConfig=t,this._scalabiltyMode=r,this._optimizationMode=i,this._hints=o||[],-1===this._hints.indexOf(Xk.SCREEN_TRACK)&&this.updateBitrateFromProfile(),this.processorContext=new xG(this.getTrackId()),this.processorDestination=new UG(this.processorContext),this.bindProcessorDestinationEvents()}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.LOCAL_VIDEO_TRACK_PLAY,options:[this.getTrackId(),"string"==typeof e?e:"HTMLElement",t]});if("string"==typeof e){const t=document.getElementById(e);t?e=t:(HD.warning("[".concat(this.getTrackId(),'] can not find "#').concat(e,'" element, use document.body')),cP("warning",this,'can not find "#'.concat(e,'" element, use document.body')),e=document.body)}HD.debug("[".concat(this.getTrackId(),"] start video playback"),JSON.stringify(t)),hP("debug",this,"play",t);const i=ZX(ZX(ZX({},this._getDefaultPlayerConfig()),t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(this._player=new Jq(i),this._player.updateVideoTrack(this._mediaStreamTrack)),this._player.play(),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval(()=>{try{const e=this.getVideoElementVisibleStatus();this.emit($k.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}},NP("CHECK_VIDEO_VISIBLE_INTERVAL")),r.onSuccess()}stop(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.LOCAL_VIDEO_TRACK_STOP,options:[this.getTrackId()]});if(!this._player)return e.onSuccess();this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,HD.debug("[".concat(this.getTrackId(),"] stop video playback")),hP("debug",this,"stop"),e.onSuccess()}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck("enabled",e)}if(HD.info("[".concat(this.getTrackId(),"] start setEnabled"),e),hP("info",this,"setEnabled",e),!e){this._originMediaStreamTrack.enabled=!1;try{await vK(this,qk.NEED_DISABLE_TRACK,this)}catch(t){throw HD.error("[".concat(this.getTrackId(),"] setEnabled to false error"),t.toString()),hP("error",this,"setEnabled",e,t.toString()),t}return t||(this._enabled=!1),HD.info("[".concat(this.getTrackId(),"] setEnabled to false success")),void hP("info",this,"setEnabled",e,"success")}this._originMediaStreamTrack.enabled=!0;try{await vK(this,qk.NEED_ENABLE_TRACK,this)}catch(t){throw HD.error("[".concat(this.getTrackId(),"] setEnabled to true error"),t.toString()),hP("error",this,"setEnabled",e,t.toString()),t}HD.info("[".concat(this.getTrackId(),"] setEnabled to true success")),hP("info",this,"setEnabled",e,"success"),t||(this._enabled=!0)}async setMuted(e){e!==this._muted&&(this.stateCheck("muted",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,HD.debug("[".concat(this.getTrackId(),"] start set muted: ").concat(e)),hP("debug",this,"setMuted",e),e?await vK(this,qk.NEED_MUTE_TRACK,this):await vK(this,qk.NEED_UNMUTE_TRACK,this))}getStats(){DK(()=>{HD.warning("[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead"),cP("warning",this,"[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead")},"localVideoTrackGetStatsWarning");const e=TK(this,qk.GET_STATS);return e||ZX({},yk)}async setBeautyEffect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.LOCAL_VIDEO_TRACK_BEAUTY,options:[this.getTrackId(),e,t]});if(e||this._videoBeautyProcessor){if(dO()===eO.IOS||dO()===eO.ANDROID){const e=new UD(MD.INVALID_OPERATION,"can not enable beauty effect on mobile device");throw r.onError(e),e}if(!this._enabled&&e){const e=new UD(MD.TRACK_IS_DISABLED,"can not enable beauty effect when track is disabled");throw r.onError(e),e}if(HD.info("[".concat(this.getTrackId(),"] start setBeautyEffect"),e,JSON.stringify(t)),hP("info",this,"setBeautyEffect",[e,t]),this._videoBeautyProcessor||e){try{if(!this._videoBeautyProcessor)if(this._videoBeautyProcessor=new IX,this.processor){const e=this.processor;this.pipe(this._videoBeautyProcessor).pipe(e)}else this.pipe(this._videoBeautyProcessor).pipe(this.processorDestination);await this._videoBeautyProcessor.setBeautyEffectOptions(t),e?await this._videoBeautyProcessor.enable():await this._videoBeautyProcessor.disable()}catch(i){throw HD.error("[".concat(this.getTrackId(),"] setBeautyEffect error"),i.toString()),hP("info",this,"setBeautyEffect",[e,t]),r.onError(i),i}HD.info("[".concat(this.getTrackId(),"] setBeautyEffect success")),hP("info",this,"setBeautyEffect",[e,t],"success"),r.onSuccess()}else r.onSuccess()}}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this._player?this._player.getCurrentFrameToUint8Array(e,t):await Hq(e)}clone(t,r,i,n){const o=this._mediaStreamTrack.clone();return new e(o,t,r,i,n)}async setBitrateLimit(e){if(HD.debug("[".concat(this.getTrackId(),"] set bitrate limit, ").concat(JSON.stringify(e))),hP("debug",this,"setBitrateLimit",e),e){this._forceBitrateLimit=e,this._encoderConfig&&(this._encoderConfig.bitrateMax?this._encoderConfig.bitrateMax=this._encoderConfig.bitrateMax<e.max_bitrate?this._encoderConfig.bitrateMax:e.max_bitrate:this._encoderConfig.bitrateMax=e.max_bitrate,this._encoderConfig.bitrateMin,this._encoderConfig.bitrateMin=e.min_bitrate);try{await vK(this,qk.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw()}}}async setOptimizationMode(e){if("motion"!==e&&"detail"!==e&&"balanced"!==e)return HD.error(MD.INVALID_PARAMS,"optimization mode must be motion, detail or balanced"),void hP("error",this,"setOptimizationMode",e,MD.INVALID_PARAMS);const t=this._optimizationMode;try{this._optimizationMode=e,await vK(this,qk.SET_OPTIMIZATION_MODE,this)}catch(r){throw this._optimizationMode=t,HD.error("[".concat(this.getTrackId(),"] set optimization mode failed"),r.toString()),hP("error",this,"setOptimizationMode",e,r.toString()),r}HD.info("[".concat(this.getTrackId(),"] set optimization mode success (").concat(e,")")),hP("info",this,"setOptimizationMode",e,"success")}setScalabiltyMode(e){if(1===e.numSpatialLayers&&1!==e.numTemporalLayers)return HD.error(MD.INVALID_PARAMS,"scalability mode currently not supported, no SVC."),hP("error",this,"setScalabiltyMode",e,MD.INVALID_PARAMS),void(this._scalabiltyMode={numSpatialLayers:1,numTemporalLayers:1});this._scalabiltyMode=e,HD.info("[".concat(this.getTrackId(),"] set scalability mode success (").concat(e,")")),hP("info",this,"setScalabiltyMode",e,"success")}updateMediaStreamTrackResolution(){_K(this._originMediaStreamTrack).then(e=>{let[t,r]=e;this._videoHeight=r,this._videoWidth=t}).catch(mK)}_updatePlayerSource(){this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}_getDefaultPlayerConfig(){return{fit:"contain"}}updateBitrateFromProfile(){if(!this._encoderConfig)return;const{width:e,height:t,frameRate:r}=this.getMediaStreamTrackSettings();if(!e||!t||!r)return;const[i,n]=function(e,t,r){const i=NP("BITRATE_ADAPTER_TYPE");let n;const o=200*Math.pow(r/15,.6)*Math.pow(e*t/640/360,.75),s=o;if("STANDARD_BITRATE"===i)n=4*o;else{if("COMPATIABLE_BITRATE"!==i)return;n=2*o}return[Math.floor(n),Math.floor(s)]}(e,t,r)||[void 0,void 0];this._encoderConfig.bitrateMin||this._encoderConfig.bitrateMax||(this._encoderConfig.bitrateMin=n,this._encoderConfig.bitrateMax=i,HD.debug("[".concat(this.getTrackId(),"] update bitrate from profile, [w: ").concat(e,", h: ").concat(t,", fps: ").concat(r,"] => [brMax: ").concat(i,", brMin: ").concat(n,"]")),hP("debug",this,"updateBitrateFromProfile",void 0,"[w: ".concat(e,", h: ").concat(t,", fps: ").concat(r,"] => [brMax: ").concat(i,", brMin: ").concat(n,"]")))}getVideoElementVisibleStatus(){try{var e,t;const r=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),i={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==r?void 0:r.parentElement},{element:n,slot:o}=i;if(this.isPlaying&&n instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=XX.checkOneElementVisible(n),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess("Video is visible"):e.onSuccess("Invisible because of ".concat(t.reason))}return t}return}catch(e){throw new UD(MD.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}async renewMediaStreamTrack(e){}pipe(e){if(this._videoBeautyProcessor&&e!==this._videoBeautyProcessor)return this._videoBeautyProcessor.pipe(e);if(this.processor===e)return e;if(e._source)throw new UD(MD.INVALID_OPERATION,"Processor ".concat(e.name," already piped, please call unpipe beforehand."));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe()}bindProcessorDestinationEvents(){this.processorDestination.on(fB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(),await vK(this,qk.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await vK(this,qk.NEED_REPLACE_TRACK,this))})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(fB.ON_TRACK)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(IB.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(IB.REQUEST_CONSTRAINTS)}}).prototype,"play",[RX],Object.getOwnPropertyDescriptor(VX.prototype,"play"),VX.prototype),UV(VX.prototype,"setEnabled",[yX,wX,bX],Object.getOwnPropertyDescriptor(VX.prototype,"setEnabled"),VX.prototype),UV(VX.prototype,"setMuted",[OX,NX,DX],Object.getOwnPropertyDescriptor(VX.prototype,"setMuted"),VX.prototype),UV(VX.prototype,"getStats",[PX],Object.getOwnPropertyDescriptor(VX.prototype,"getStats"),VX.prototype),UV(VX.prototype,"setBeautyEffect",[LX],Object.getOwnPropertyDescriptor(VX.prototype,"setBeautyEffect"),VX.prototype),UV(VX.prototype,"getCurrentFrameData",[kX],Object.getOwnPropertyDescriptor(VX.prototype,"getCurrentFrameData"),VX.prototype),UV(VX.prototype,"getCurrentFrameImage",[BX],Object.getOwnPropertyDescriptor(VX.prototype,"getCurrentFrameImage"),VX.prototype),UV(VX.prototype,"setBitrateLimit",[MX],Object.getOwnPropertyDescriptor(VX.prototype,"setBitrateLimit"),VX.prototype),UV(VX.prototype,"setOptimizationMode",[UX],Object.getOwnPropertyDescriptor(VX.prototype,"setOptimizationMode"),VX.prototype),UV(VX.prototype,"setScalabiltyMode",[xX],Object.getOwnPropertyDescriptor(VX.prototype,"setScalabiltyMode"),VX.prototype),UV(VX.prototype,"updateMediaStreamTrackResolution",[QX],Object.getOwnPropertyDescriptor(VX.prototype,"updateMediaStreamTrackResolution"),VX.prototype),FX=VX))||FX),ez=(jX=gP("CameraVideoTrack","getTrackId"),GX=Zj(),KX=fj("CameraVideoTrack","_enabledMutex"),HX=dj({className:"CameraVideoTrack"}),WX=Zj(),YX=Zj(),jX((UV((qX=class extends $X{constructor(e,t,r,i,n,o){super(e,t.encoderConfig?TP(t.encoderConfig):{},i,n,o),kO(this,"_config",void 0),kO(this,"_originalConstraints",void 0),kO(this,"_constraints",void 0),kO(this,"_enabled",!0),kO(this,"_deviceName","default"),kO(this,"tryResumeVideoForIOS15WeChat",async()=>{IO()&&!CO()&&vO()&&this._enabled&&!this._isClosed&&(HD.debug("[".concat(this.getTrackId(),"] try capture camera media device for interrupted iOS 15 device on WeChat.")),await this.renewMediaStreamTrack())}),pP("info",this,"constructor",{trackId:o,deviceId:e.label,constraints:r,config:t}),this._config=t,this._originalConstraints=r,this._constraints=r,this._deviceName=e.label,this._config.encoderConfig&&(this._encoderConfig=TP(this._config.encoderConfig)),Rj.on(hj.IOS_15_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat),Rj.on(hj.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat),this.bindProcessorContextEvents()}async setDevice(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CAM_VIDEO_TRACK_SET_DEVICE,options:[this.getTrackId(),e]});if(HD.info("[".concat(this.getTrackId(),"] set device to ").concat(e)),hP("info",this,"setDevice",e),this._enabled)try{const t=await Yj.getDeviceById(e),r={};r.video=ZX({},this._constraints),r.video.deviceId={exact:e},r.video.facingMode=void 0,this._originMediaStreamTrack.stop();let i=null;try{i=await Gj(r,this.getTrackId())}catch(t){throw HD.error("[".concat(this.getTrackId(),"] setDevice failed"),t.toString()),hP("error",this,"setDevice",e,t.toString()),i=await Gj({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(i.getVideoTracks()[0],!1),t}await this._updateOriginMediaStreamTrack(i.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution(),this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(r){throw t.onError(r),HD.error("[".concat(this.getTrackId(),"] setDevice error"),r.toString()),hP("error",this,"setDevice",e,r.toString()),r}else try{const t=await Yj.getDeviceById(e);this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(r){throw t.onError(r),HD.error("[".concat(this.getTrackId(),"] setDevice error"),r.toString()),hP("error",this,"setDevice",e,r.toString()),r}HD.info("[".concat(this.getTrackId(),"] setDevice success")),hP("info",this,"setDevice",e,"success"),t.onSuccess()}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck("enabled",e)}if(HD.info("[".concat(this.getTrackId(),"] start setEnabled"),e),hP("info",this,"setEnabled",e),!e){this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop(),t||(this._enabled=!1);try{await vK(this,qk.NEED_DISABLE_TRACK,this)}catch(t){throw HD.error("[".concat(this.getTrackId(),"] setEnabled to false error"),t.toString()),hP("error",this,"setEnabled",e,t.toString()),t}return HD.info("[".concat(this.getTrackId(),"] setEnabled to false success")),void hP("info",this,"setEnabled",e,"success")}const r=ZX({},this._constraints),i=Yj.searchDeviceIdByName(this._deviceName);i&&!r.deviceId&&(r.deviceId={exact:i});try{const e=await Gj({video:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),await vK(this,qk.NEED_ENABLE_TRACK,this)}catch(t){throw HD.error("[".concat(this.getTrackId(),"] setEnabled true error"),t.toString()),hP("error",this,"setEnabled",e,t.toString()),t}this.updateMediaStreamTrackResolution(),HD.info("[".concat(this.getTrackId(),"] setEnabled to true success")),hP("info",this,"setEnabled",e,"success"),t||(this._enabled=!0)}async setEncoderConfiguration(e,t){const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG,options:[this.getTrackId(),e]});if(!this._enabled){const e=new UD(MD.TRACK_IS_DISABLED,"can not set encoder configuration when track is disabled");throw r.onError(e),e}e=TP(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin);const i=OK(this._config);i.encoderConfig=e;const n=mX(i);(pO()||EO()||SO())&&(n.deviceId=void 0),HD.debug("[".concat(this.getTrackId(),"] setEncoderConfiguration applyConstraints"),JSON.stringify(e),JSON.stringify(n)),hP("debug",this,"setEncoderConfiguration",e);try{await this._originMediaStreamTrack.applyConstraints(n),this.updateMediaStreamTrackResolution()}catch(e){const t=new UD(MD.UNEXPECTED_ERROR,e.toString());throw HD.error("[".concat(this.getTrackId(),"] applyConstraints error"),t.toString()),hP("error",this,"setEncoderConfiguration",e.toString()),r.onError(t),t}this._config=i,this._constraints=n,this._originalConstraints=n,this._encoderConfig=e,-1===this._hints.indexOf(Xk.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await vK(this,qk.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return r.onError(e),e.throw()}r.onSuccess()}_getDefaultPlayerConfig(){return{mirror:!0,fit:"cover"}}onTrackEnded(){if((EO()||SO())&&this._enabled&&!this._isClosed&&Rj.duringInterruption){const e=async()=>{Rj.off(hj.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(HD.debug("[".concat(this.getTrackId(),"] try capture camera media device for interrupted iOS device.")),cP("debug",this,"try capture camera media device for interrupted iOS device."),await this.setEnabled(!1),await this.setEnabled(!0))};Rj.on(hj.IOS_INTERRUPTION_END,e)}else HD.debug("[".concat(this.getTrackId(),"] track ended")),AP("debug",["MediaStreamTrack",this.getTrackId()],"ended"),this.emit($k.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,r=Yj.searchDeviceIdByName(this._deviceName);r&&!t.deviceId&&(t.deviceId={exact:r});const i=await Gj({video:t},this.getTrackId());this._constraints=t,await this._updateOriginMediaStreamTrack(i.getVideoTracks()[0],!0),this.updateMediaStreamTrackResolution()}close(){super.close(),Rj.off(hj.IOS_15_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat),Rj.off(hj.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat)}bindProcessorContextEvents(){this.processorContext.on(IB.REQUEST_UPDATE_CONSTRAINTS,async(e,t,r)=>{try{const r=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(r),t()}catch(e){r(e)}}),this.processorContext.on(IB.REQUEST_CONSTRAINTS,async e=>{e(this._originMediaStreamTrack.getSettings())})}}).prototype,"setDevice",[GX],Object.getOwnPropertyDescriptor(qX.prototype,"setDevice"),qX.prototype),UV(qX.prototype,"setEnabled",[KX,HX,WX],Object.getOwnPropertyDescriptor(qX.prototype,"setEnabled"),qX.prototype),UV(qX.prototype,"setEncoderConfiguration",[YX],Object.getOwnPropertyDescriptor(qX.prototype,"setEncoderConfiguration"),qX.prototype),JX=qX))||JX);class tz{get hasVideo(){return this._video_enabled_&&!this._video_muted_&&this._video_added_}get hasAudio(){return this._audio_enabled_&&!this._audio_muted_&&this._audio_added_}get audioTrack(){if(this.hasAudio)return this._audioTrack}get videoTrack(){if(this.hasVideo)return this._videoTrack}constructor(e,t){kO(this,"uid",void 0),kO(this,"_uintid",void 0),kO(this,"_trust_in_room_",!0),kO(this,"_trust_audio_enabled_state_",!0),kO(this,"_trust_video_enabled_state_",!0),kO(this,"_trust_audio_mute_state_",!0),kO(this,"_trust_video_mute_state_",!0),kO(this,"_audio_muted_",!1),kO(this,"_video_muted_",!1),kO(this,"_audio_enabled_",!0),kO(this,"_video_enabled_",!0),kO(this,"_audio_added_",!1),kO(this,"_video_added_",!1),kO(this,"_trust_video_stream_added_state_",!0),kO(this,"_trust_audio_stream_added_state_",!0),kO(this,"_audioTrack",void 0),kO(this,"_videoTrack",void 0),kO(this,"_audioSSRC",void 0),kO(this,"_videoSSRC",void 0),kO(this,"_audioOrtc",void 0),kO(this,"_videoOrtc",void 0),kO(this,"_cname",void 0),kO(this,"_rtxSsrcId",void 0),this.uid=e,this._uintid=t}}var rz=iT,iz=ZC,nz=sS;JA({target:"Promise",stat:!0},{try:function(e){var t=iz.f(this),r=nz(e);return(r.error?t.reject:t.resolve)(r.value),t.promise}});var oz=rz,sz=JA,az=xc,cz=bc,dz=wF,uz=md,Az=Au,hz=th,lz=GP,pz=BF,gz=EV,Ez=Ld,fz=Nu("isConcatSpreadable"),Iz=9007199254740991,mz="Maximum allowed index exceeded",_z=az.TypeError,Cz=Ez>=51||!cz((function(){var e=[];return e[fz]=!1,e.concat()[0]!==e})),Sz=gz("concat"),vz=function(e){if(!uz(e))return!1;var t=e[fz];return void 0!==t?!!t:dz(e)};sz({target:"Array",proto:!0,forced:!Cz||!Sz},{concat:function(e){var t,r,i,n,o,s=Az(this),a=pz(s,0),c=0;for(t=-1,i=arguments.length;t<i;t++)if(vz(o=-1===t?s:arguments[t])){if(c+(n=hz(o))>Iz)throw _z(mz);for(r=0;r<n;r++,c++)r in o&&lz(a,c,o[r])}else{if(c>=Iz)throw _z(mz);lz(a,c++,o)}return a.length=c,a}});var Tz={},Rz=sd,yz=fd,wz=AE.f,bz=qP,Oz="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];Tz.f=function(e){return Oz&&"Window"==Rz(e)?function(e){try{return wz(e)}catch(e){return bz(Oz)}}(e):wz(yz(e))};var Nz={},Dz=Nu;Nz.f=Dz;var Pz=_d,Lz=pu,kz=Nz,Bz=EA.f,Mz=function(e){var t=Pz.Symbol||(Pz.Symbol={});Lz(t,e)||Bz(t,e,{value:kz.f(e)})},Uz=JA,xz=xc,Qz=Rd,Fz=Gc,Vz=qc,jz=Bc,Gz=Wc,Kz=Md,Hz=bc,Wz=pu,Yz=wF,Jz=Kc,qz=md,Xz=Mc,zz=Gd,Zz=SA,$z=Au,eZ=fd,tZ=Vu,rZ=hI,iZ=rd,nZ=hf,oZ=HE,sZ=AE,aZ=Tz,cZ=DE,dZ=Hc,uZ=EA,AZ=jE,hZ=Xc,lZ=Z_,pZ=mm,gZ=ru.exports,EZ=CE,fZ=mu,IZ=Nu,mZ=Nz,_Z=Mz,CZ=Um,SZ=Am,vZ=GF.forEach,TZ=Wg("hidden"),RZ="Symbol",yZ=IZ("toPrimitive"),wZ=SZ.set,bZ=SZ.getterFor(RZ),OZ=Object.prototype,NZ=xz.Symbol,DZ=NZ&&NZ.prototype,PZ=xz.TypeError,LZ=xz.QObject,kZ=Qz("JSON","stringify"),BZ=dZ.f,MZ=uZ.f,UZ=aZ.f,xZ=hZ.f,QZ=jz([].push),FZ=gZ("symbols"),VZ=gZ("op-symbols"),jZ=gZ("string-to-symbol-registry"),GZ=gZ("symbol-to-string-registry"),KZ=gZ("wks"),HZ=!LZ||!LZ.prototype||!LZ.prototype.findChild,WZ=Gz&&Hz((function(){return 7!=nZ(MZ({},"a",{get:function(){return MZ(this,"a",{value:7}).a}})).a}))?function(e,t,r){var i=BZ(OZ,t);i&&delete OZ[t],MZ(e,t,r),i&&e!==OZ&&MZ(OZ,t,i)}:MZ,YZ=function(e,t){var r=FZ[e]=nZ(DZ);return wZ(r,{type:RZ,tag:e,description:t}),Gz||(r.description=t),r},JZ=function(e,t,r){e===OZ&&JZ(VZ,t,r),Zz(e);var i=tZ(t);return Zz(r),Wz(FZ,i)?(r.enumerable?(Wz(e,TZ)&&e[TZ][i]&&(e[TZ][i]=!1),r=nZ(r,{enumerable:iZ(0,!1)})):(Wz(e,TZ)||MZ(e,TZ,iZ(1,{})),e[TZ][i]=!0),WZ(e,i,r)):MZ(e,i,r)},qZ=function(e,t){Zz(e);var r=eZ(t),i=oZ(r).concat($Z(r));return vZ(i,(function(t){Gz&&!Vz(XZ,r,t)||JZ(e,t,r[t])})),e},XZ=function(e){var t=tZ(e),r=Vz(xZ,this,t);return!(this===OZ&&Wz(FZ,t)&&!Wz(VZ,t))&&(!(r||!Wz(this,t)||!Wz(FZ,t)||Wz(this,TZ)&&this[TZ][t])||r)},zZ=function(e,t){var r=eZ(e),i=tZ(t);if(r!==OZ||!Wz(FZ,i)||Wz(VZ,i)){var n=BZ(r,i);return!n||!Wz(FZ,i)||Wz(r,TZ)&&r[TZ][i]||(n.enumerable=!0),n}},ZZ=function(e){var t=UZ(eZ(e)),r=[];return vZ(t,(function(e){Wz(FZ,e)||Wz(EZ,e)||QZ(r,e)})),r},$Z=function(e){var t=e===OZ,r=UZ(t?VZ:eZ(e)),i=[];return vZ(r,(function(e){!Wz(FZ,e)||t&&!Wz(OZ,e)||QZ(i,FZ[e])})),i};(Kz||(pZ(DZ=(NZ=function(){if(Xz(DZ,this))throw PZ("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?rZ(arguments[0]):void 0,t=fZ(e),r=function(e){this===OZ&&Vz(r,VZ,e),Wz(this,TZ)&&Wz(this[TZ],t)&&(this[TZ][t]=!1),WZ(this,t,iZ(1,e))};return Gz&&HZ&&WZ(OZ,t,{configurable:!0,set:r}),YZ(t,e)}).prototype,"toString",(function(){return bZ(this).tag})),pZ(NZ,"withoutSetter",(function(e){return YZ(fZ(e),e)})),hZ.f=XZ,uZ.f=JZ,AZ.f=qZ,dZ.f=zZ,sZ.f=aZ.f=ZZ,cZ.f=$Z,mZ.f=function(e){return YZ(IZ(e),e)},Gz&&MZ(DZ,"description",{configurable:!0,get:function(){return bZ(this).description}})),Uz({global:!0,wrap:!0,forced:!Kz,sham:!Kz},{Symbol:NZ}),vZ(oZ(KZ),(function(e){_Z(e)})),Uz({target:RZ,stat:!0,forced:!Kz},{for:function(e){var t=rZ(e);if(Wz(jZ,t))return jZ[t];var r=NZ(t);return jZ[t]=r,GZ[r]=t,r},keyFor:function(e){if(!zz(e))throw PZ(e+" is not a symbol");if(Wz(GZ,e))return GZ[e]},useSetter:function(){HZ=!0},useSimple:function(){HZ=!1}}),Uz({target:"Object",stat:!0,forced:!Kz,sham:!Gz},{create:function(e,t){return void 0===t?nZ(e):qZ(nZ(e),t)},defineProperty:JZ,defineProperties:qZ,getOwnPropertyDescriptor:zZ}),Uz({target:"Object",stat:!0,forced:!Kz},{getOwnPropertyNames:ZZ,getOwnPropertySymbols:$Z}),Uz({target:"Object",stat:!0,forced:Hz((function(){cZ.f(1)}))},{getOwnPropertySymbols:function(e){return cZ.f($z(e))}}),kZ)&&Uz({target:"JSON",stat:!0,forced:!Kz||Hz((function(){var e=NZ();return"[null]"!=kZ([e])||"{}"!=kZ({a:e})||"{}"!=kZ(Object(e))}))},{stringify:function(e,t,r){var i=lZ(arguments),n=t;if((qz(t)||void 0!==e)&&!zz(e))return Yz(t)||(t=function(e,t){if(Jz(n)&&(t=Vz(n,this,e,t)),!zz(t))return t}),i[1]=t,Fz(kZ,null,i)}});if(!DZ[yZ]){var e$=DZ.valueOf;pZ(DZ,yZ,(function(e){return Vz(e$,this)}))}CZ(NZ,RZ),EZ[TZ]=!0,Mz("asyncIterator"),Mz("hasInstance"),Mz("isConcatSpreadable"),Mz("iterator"),Mz("match"),Mz("matchAll"),Mz("replace"),Mz("search"),Mz("species"),Mz("split"),Mz("toPrimitive"),Mz("toStringTag"),Mz("unscopables"),Um(xc.JSON,"JSON",!0);var t$=_d.Symbol;Mz("asyncDispose"),Mz("dispose"),Mz("matcher"),Mz("metadata"),Mz("observable"),Mz("patternMatch"),Mz("replaceAll");var r$=t$,i$=Nz.f("asyncIterator"),n$=i$;function o$(e){this.wrapped=e}function s$(e){var t,r;function i(t,r){try{var o=e[t](r),s=o.value,a=s instanceof o$;oz.resolve(a?s.wrapped:s).then((function(e){a?i("return"===t?"return":"next",e):n(o.done?"return":"normal",e)}),(function(e){i("throw",e)}))}catch(e){n("throw",e)}}function n(e,n){switch(e){case"return":t.resolve({value:n,done:!0});break;case"throw":t.reject(n);break;default:t.resolve({value:n,done:!1})}(t=t.next)?i(t.key,t.arg):r=null}this._invoke=function(e,n){return new oz((function(o,s){var a={key:e,arg:n,resolve:o,reject:s,next:null};r?r=r.next=a:(t=r=a,i(e,n))}))},"function"!=typeof e.return&&(this.return=void 0)}function a$(e){return function(){return new s$(e.apply(this,arguments))}}function c$(e){return new o$(e)}s$.prototype["function"==typeof r$&&n$||"@@asyncIterator"]=function(){return this},s$.prototype.next=function(e){return this._invoke("next",e)},s$.prototype.throw=function(e){return this._invoke("throw",e)},s$.prototype.return=function(e){return this._invoke("return",e)};var d$=Nz.f("iterator");function u$(e,t){var r={},i=!1;function n(r,n){return i=!0,n=new oz((function(t){t(e[r](n))})),{done:!1,value:t(n)}}return r[void 0!==r$&&d$||"@@iterator"]=function(){return this},r.next=function(e){return i?(i=!1,e):n("next",e)},"function"==typeof e.throw&&(r.throw=function(e){if(i)throw i=!1,e;return n("throw",e)}),"function"==typeof e.return&&(r.return=function(e){return i?(i=!1,e):n("return",e)}),r}var A$=i$,h$=Gi,l$=o,p$=r,g$=S,E$=Be,f$=x,I$=H,m$=Rh,_$=Tt.f,C$=yi,S$=p$.Symbol,v$=S$&&S$.prototype;if(l$&&f$(S$)&&(!("description"in v$)||void 0!==S$().description)){var T$={},R$=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:m$(arguments[0]),t=I$(v$,this)?new S$(e):void 0===e?S$():S$(e);return""===e&&(T$[t]=!0),t};C$(R$,S$),R$.prototype=v$,v$.constructor=R$;var y$="Symbol(test)"==String(S$("test")),w$=g$(v$.toString),b$=g$(v$.valueOf),O$=/^Symbol\((.*)\)[^)]+$/,N$=g$("".replace),D$=g$("".slice);_$(v$,"description",{configurable:!0,get:function(){var e=b$(this),t=w$(e);if(E$(T$,e))return"";var r=y$?D$(t,7,-1):N$(t,O$,"$1");return""===r?void 0:r}}),h$({global:!0,forced:!0},{Symbol:R$})}var P$={exports:{}};function L$(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function k$(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?L$(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):L$(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function B$(e,t,r,i,n,o,s){let a=[],c=[],d=[],u=[],A=!1,h=!1;if(P$.exports.parse(e).mediaDescriptions.forEach(e=>{s&&s!==e.attributes.direction||("video"!==e.media.mediaType||A||(c=e.attributes.payloads,u=e.attributes.extmaps,A=!0),"audio"!==e.media.mediaType||h||(a=e.attributes.payloads,d=e.attributes.extmaps,h=!0))}),!u||0===c.length)throw new Error("Cannot get video capabilities from SDP.");if(!d||0===a.length)throw new Error("Cannot get audio capabilities from SDP.");return c.forEach(e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate))}),a.forEach(e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate))}),t&&(a=a.filter(e=>{var t;return"rtx"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())}),c=c.filter(e=>{var t;return"rtx"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})),r&&(c=c.filter(e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||"")})),i&&(a=a.filter(e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||"")})),n&&(null==n?void 0:n.length)>0&&(a=a.filter(e=>{var t;return n.includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"")})),o&&(null==o?void 0:o.length)>0&&(c=c.filter(e=>{var t;return o.includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"")})),{audioCodecs:a,videoCodecs:c,audioExtensions:d,videoExtensions:u}}function M$(e){const t=P$.exports.parse(e);let r,i;for(const e of t.mediaDescriptions){if(!r){const t=e.attributes.iceUfrag,i=e.attributes.icePwd;if(!t||!i)throw new Error("Cannot get iceUfrag or icePwd from SDP.");r={iceUfrag:t,icePwd:i}}if(!i){const t=e.attributes.fingerprints;t.length>0&&(i={fingerprints:t})}}if(!i&&t.attributes.fingerprints.length>0&&(i={fingerprints:t.attributes.fingerprints}),!i||!r)throw new Error("Cannot get iceParameters or dtlsParameters from SDP.");return{iceParameters:r,dtlsParameters:i}}function U$(e,t,r){const{cname:i}=e;let n;void 0!==t&&void 0!==r?(n=[{foundation:"udpcandidate",componentId:"1",transport:"udp",priority:"2103266323",connectionAddress:t,port:r.toString(),type:"host",extension:{}}],HD.debug("Using remote candidate from AP ".concat(t,":").concat(r)),cP("debug",[],"Using remote candidate from AP ".concat(t,":").concat(r))):n=e.iceParameters.candidates.map(e=>({foundation:e.foundation,componentId:"1",transport:e.protocol,priority:e.priority.toString(),connectionAddress:e.ip,port:e.port.toString(),type:e.type,extension:{}}));const o={fingerprints:e.dtlsParameters.fingerprints.map(e=>({hashFunction:e.algorithm,fingerprint:e.fingerprint}))},s={iceUfrag:e.iceParameters.iceUfrag,icePwd:e.iceParameters.icePwd};let a;switch(e.dtlsParameters.role){case"server":a="passive";break;case"client":a="active";break;case"auto":a="actpass"}return{dtlsParameters:o,iceParameters:s,candidates:n,rtpCapabilities:K$(e.rtpCapabilities),setup:a,cname:i}}function x$(e,t,r){const i=[],n=[];return e.forEach(e=>{let{ssrcId:o,rtx:s}=e;const a=fK(8,"track-"),c={ssrcId:o,attributes:k$({label:a,mslabel:r=r||fK(10,""),msid:"".concat(r," ").concat(a)},t&&{cname:t})};if(i.push(c),void 0!==s){const e={ssrcId:s,attributes:k$({label:a,mslabel:r,msid:"".concat(r," ").concat(a)},t&&{cname:t})};i.push(e),n.push({semantic:"FID",ssrcIds:[o,s]})}}),e.length>1&&n.push({semantic:"SIM",ssrcIds:e.map(e=>{let{ssrcId:t}=e;return t})}),{ssrcs:i,ssrcGroups:n}}function Q$(e,t){t instanceof GG&&e.attributes.payloads.forEach(e=>{var r;const i=null===(r=e.rtpMap)||void 0===r?void 0:r.encodingName.toLowerCase();if(!i||-1===["opus","pcmu","pcma","g722"].indexOf(i))return;e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.minptime="10",e.fmtp.parameters.useinbandfec="1";const n=t._encoderConfig;n&&("pcmu"!==i&&"pcma"!==i&&"g722"!==i&&(n.bitrate&&!gO()&&(e.fmtp.parameters.maxaveragebitrate="".concat(Math.floor(1e3*n.bitrate))),n.sampleRate&&(e.fmtp.parameters.maxplaybackrate="".concat(n.sampleRate),e.fmtp.parameters["sprop-maxcapturerate"]="".concat(n.sampleRate))),n.stereo&&(e.fmtp.parameters.stereo="1",e.fmtp.parameters["sprop-stereo"]="1"))})}function F$(e){const t=e.attributes.unrecognized.findIndex(e=>"x-google-flag"===e.attField&&"conference"===e.attValue);-1!==t&&e.attributes.unrecognized.splice(t,1)}function V$(e,t){if(!(t instanceof $X&&t._encoderConfig&&-1===t._hints.indexOf(Xk.SCREEN_TRACK)))return;const r=t._encoderConfig;vB().supportMinBitrate&&r.bitrateMin&&e.attributes.payloads.forEach(e=>{var t;["h264","vp8","vp9","av1"].includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters["x-google-min-bitrate"]="".concat(r.bitrateMin))}),vB().supportMinBitrate&&!t._hints.includes(Xk.LOW_STREAM)&&r.bitrateMax&&e.attributes.payloads.forEach(e=>{var t;["h264","vp8","vp9","av1"].includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters["x-google-start-bitrate"]="".concat(NP("X_GOOGLE_START_BITRATE")||Math.floor(r.bitrateMax)))})}function j$(e,t,r){if(!t)return;let i,n;if("video"===e.media.mediaType?(i=r.videoExtensions,n=r.videoCodecs):(i=r.audioExtensions,n=r.audioCodecs),!0===t.tcc){const t=i.find(e=>"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01"===e.extensionName);if(t){e.attributes.extmaps.find(e=>"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01"===e.extensionName)||e.attributes.extmaps.push({entry:t.entry,extensionName:"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01"});(function(e,t){return t.filter(t=>!!e.find(e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find(e=>"transport-cc"===e.type)))})(n,e.attributes.payloads).forEach(e=>{e.rtcpFeedbacks.find(e=>"transport-cc"===e.type)||e.rtcpFeedbacks.push({type:"transport-cc"})})}}else if(!1===t.tcc){const t=e.attributes.extmaps.findIndex(e=>"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01"===e.extensionName);-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach(e=>{const t=e.rtcpFeedbacks.findIndex(e=>"transport-cc"===e.type);-1!==t&&e.rtcpFeedbacks.splice(t,1)})}if(!0===t.remb){const t=i.find(e=>"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time"===e.extensionName);if(t){e.attributes.extmaps.find(e=>"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time"===e.extensionName)||e.attributes.extmaps.push({entry:t.entry,extensionName:"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time"});(function(e,t){return t.filter(t=>!!e.find(e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find(e=>"goog-remb"===e.type)))})(n,e.attributes.payloads).forEach(e=>{e.rtcpFeedbacks.find(e=>"goog-remb"===e.type)||e.rtcpFeedbacks.push({type:"goog-remb"})})}}else if(!1===t.remb){const t=e.attributes.extmaps.findIndex(e=>"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time"===e.extensionName);-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach(e=>{const t=e.rtcpFeedbacks.findIndex(e=>"goog-remb"===e.type);-1!==t&&e.rtcpFeedbacks.splice(t,1)})}}function G$(e,t,r,i,n,o){if("videoExtensions"===r||"audioExtensions"===r){const s=[];return e[r].forEach(e=>{t[r].some((t,r)=>{if(e.entry===t.entry&&e.extensionName===t.extensionName)return s.push(r),!0})?o[r].push(e):i[r].push(e)}),void t[r].forEach((e,t)=>{-1===s.indexOf(t)&&n[r].push(e)})}if("videoCodecs"===r||"audioCodecs"===r){const s=[];return e[r].forEach(e=>{t[r].some((t,r)=>{if(e.payloadType===t.payloadType&&JSON.stringify(e)===JSON.stringify(t))return s.push(r),!0})?o[r].push(e):i[r].push(e)}),void t[r].forEach((e,t)=>{-1===s.indexOf(t)&&n[r].push(e)})}}function K$(e){const{send:t,recv:r,sendrecv:i}=e;if(!i){if(!t||!r)throw new Error("cannot merge rtp capabilities because one of send or recv is empty!");return{send:t,recv:r}}let n,o;return t?(n={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},n.audioCodecs=[...t.audioCodecs,...i.audioCodecs],n.videoCodecs=[...t.videoCodecs,...i.videoCodecs],n.audioExtensions=[...t.audioExtensions,...i.audioExtensions],n.videoExtensions=[...t.videoExtensions,...i.videoExtensions]):n=i,r?(o={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},o.audioCodecs=[...r.audioCodecs,...i.audioCodecs],o.videoCodecs=[...r.videoCodecs,...i.videoCodecs],o.audioExtensions=[...r.audioExtensions,...i.audioExtensions],o.videoExtensions=[...r.videoExtensions,...i.videoExtensions]):o=i,{send:n,recv:o}}!function(e,t){e.exports=(()=>{var e={8:(e,t,r)=>{r.r(t),r.d(t,{Parser:()=>S,Printer:()=>w,parse:()=>D,print:()=>P});const i="\n",n="".concat("\r").concat(i),o=" ";let s;function a(e){return e>="0"&&e<="9"}function c(e){return e>="!"&&e<="~"}function d(e){return c(e)||e>=""&&e<="ÿ"}function u(e){return"!"===e||e>="#"&&e<="'"||e>="*"&&e<="+"||e>="-"&&e<="."||e>="0"&&e<="9"||e>="A"&&e<="Z"||e>="^"&&e<="~"}function A(e){return e>="1"&&e<="9"}function h(e){return e>="A"&&e<="Z"||e>="a"&&e<="z"}function l(e){return"d"===e||"h"===e||"m"===e||"s"===e}function p(e){return e>""&&e<"\t"||e>"\v"&&e<"\f"||e>""&&e<"ÿ"}function g(e){return h(e)||a(e)||"+"===e||"/"===e}function E(e){return a(e)||h(e)||"+"===e||"/"===e||"-"===e||"_"===e}function f(e){return h(e)||a(e)||"+"===e||"/"===e}function I(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?I(Object(r),!0).forEach((function(t){_(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):I(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function _(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}!function(e){e.VERSION="v",e.ORIGIN="o",e.SESSION_NAME="s",e.INFORMATION="i",e.URI="u",e.EMAIL="e",e.PHONE="p",e.CONNECTION="c",e.BANDWIDTH="b",e.TIME="t",e.REPEAT="r",e.ZONE_ADJUSTMENTS="z",e.KEY="k",e.ATTRIBUTE="a",e.MEDIA="m"}(s||(s={}));class C{consumeText(e,t){let r=t;for(;r<e.length;){const t=e[r];if("\0"===t||"\r"===t||t===i)break;r+=1}if(r-t==0)throw new Error("Invalid text, at ".concat(e));return r}consumeUnicastAddress(e,t,r){return this.consumeTill(e,t,o)}consumeOneOrMore(e,t,r){let i=t;for(;r(e[i]);)i++;if(i-t==0)throw new Error("Invalid rule at ".concat(t,"."));return i}consumeSpace(e,t){if(e[t]===o)return t+1;throw new Error("Invalid space at ".concat(t,"."))}consumeIP4Address(e,t){let r=t;for(let t=0;t<4;t++)if(r=this.consumeDecimalUChar(e,r),3!==t){if("."!==e[r])throw new Error("Invalid IP4 address.");r++}return r}consumeDecimalUChar(e,t){let r=t;for(let t=0;t<3&&a(e[r]);t++,r++);if(r-t==0)throw new Error("Invalid decimal uchar.");const i=parseInt(e.slice(t,r));if(i>=0&&i<=255)return r;throw new Error("Invalid decimal uchar")}consumeIP6Address(e,t){let r=this.consumeHexpart(e,t);return":"===e[r]?(r+=1,r=this.consumeIP4Address(e,r),r):r}consumeHexpart(e,t){let r=t;if(":"===e[r]&&":"===e[r+1]){r+=2;try{r=this.consumeHexseq(e,r)}catch(e){}return r}if(r=this.consumeHexseq(e,r),":"===e[r]&&":"===e[r+1]){r+=2;try{r=this.consumeHexseq(e,r)}catch(e){}return r}return r}consumeHexseq(e,t){let r=t;for(;r=this.consumeHex4(e,r),":"===e[r]&&":"!==e[r+1];)r+=1;return r}consumeHex4(e,t){let r=0;for(;r<4;r++)if(!((i=e[t+r])>="0"&&i<="9"||i>="a"&&i<="f"||i>="A"&&i<="F")){if(0===r)throw new Error("Invalid hex 4");break}var i;return t+r}consumeFQDN(e,t){let r=t;for(;a(e[r])||h(e[r])||"-"===e[r]||"."===e[r];)r+=1;if(r-t<4)throw new Error("Invalid FQDN");return r}consumeExtnAddr(e,t){return this.consumeOneOrMore(e,t,d)}consumeMulticastAddress(e,t,r){switch(r){case"IP4":case"ip4":return this.consumeIP4MulticastAddress(e,t);case"IP6":case"ip6":return this.consumeIP6MulticastAddress(e,t);default:try{return this.consumeFQDN(e,t)}catch(r){return this.consumeExtnAddr(e,t)}}}consumeIP6MulticastAddress(e,t){const r=this.consumeHexpart(e,t);return"/"===e[r]?this.consumeInteger(e,r+1):r}consumeIP4MulticastAddress(e,t){let r=t+3;const i=e.slice(t,r),n=parseInt(i);if(n<224||n>239)throw new Error("Invalid IP4 multicast address, IPv4 multicast addresses may be in the range 224.0.0.0 to 239.255.255.255.");for(let t=0;t<3;t++){if("."!==e[r])throw new Error("Invalid IP4 multicast address.");r+=1,r=this.consumeDecimalUChar(e,r)}return"/"===e[r]&&(r+=1),r=this.consumeTTL(e,r),"/"===e[r]&&(r=this.consumeInteger(e,r)),r}consumeInteger(e,t){if(!A(e[t]))throw new Error("Invalid integer.");for(t+=1;a(e[t]);)t+=1;return t}consumeTTL(e,t){if("0"===e[t])return t+1;if(!A(e[t]))throw new Error("Invalid TTL.");t+=1;for(let r=0;r<2&&a(e[t]);r++)t+=1;return t}consumeToken(e,t){return this.consumeOneOrMore(e,t,u)}consumeTime(e,t){let r=t;if("0"===e[r])return r+1;for(A(e[r])&&(r+=1);a(e[r]);)r++;if(r-t<10)throw new Error("Invalid time");return r}consumeAddress(e,t){return this.consumeTill(e,t,o)}consumeTypedTime(e,t){let r=t;return r=this.consumeOneOrMore(e,r,a),l(e[r])?r+1:r}consumeRepeatInterval(e,t){if(!A(e[t]))throw new Error("Invalid repeat interval");for(t+=1;a(e[t]);)t+=1;return l(e[t])&&(t+=1),t}consumePort(e,t){return this.consumeOneOrMore(e,t,a)}consume(e,t,r){for(let i=0;i<r.length;i++){if(t+i>=e.length)throw new Error("consume exceeding value length");if(e[t+i]!==r[i])throw new Error("consume ".concat(r," failed at ").concat(i))}return t+r.length}consumeTill(e,t,r){let i=t;for(;i<e.length&&("string"!=typeof r||e[i]!==r)&&("function"!=typeof r||!r(e[i]));)i++;return i}}class S extends C{constructor(){super(),_(this,"records",[]),_(this,"currentLine",0)}parse(e){const t=this.probeEOL(e);this.records=e.split(t).filter(e=>!!e.trim()).map(this.parseLine),this.currentLine=0;const r=this.parseVersion(),i=this.parseOrigin(),n=this.parseSessionName(),o=this.parseInformation(),s=this.parseUri(),a=this.parseEmail(),c=this.parsePhone(),d=this.parseConnection(),u=this.parseBandWidth(),A=this.parseTimeFields(),h=this.parseKey(),l=this.parseSessionAttribute(),p=this.parseMediaDescription();if(this.currentLine!==this.records.length)throw new Error("parsing failed, non exhaustive sdp lines.");return{version:r,origin:i,sessionName:n,information:o,uri:s,emails:a,phones:c,connection:d,bandwidths:u,timeFields:A,key:h,attributes:l,mediaDescriptions:p}}getCurrentRecord(){const e=this.records[this.currentLine];if(!e)throw new Error("Record doesn't exit.");return e}probeEOL(e){for(let t=0;t<e.length;t++)if(e[t]===i)return"\r"===e[t-1]?n:i;throw new Error("Invalid newline character.")}parseLine(e,t){if(e.length<2)throw new Error("Invalid sdp line, sdp line should be of form <type>=<value>.");const r=e[0];if("="!==e[1])throw new Error('Invalid sdp line, <type> should be a single character followed by an "=" sign.');return{type:r,value:e.slice(2),line:t,cur:0}}parseSessionAttribute(){const e=new T;for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.ATTRIBUTE)break;const r={attField:this.extractOneOrMore(t,e=>u(e)&&":"!==e),_cur:0};":"===t.value[t.cur]&&(t.cur+=1,r.attValue=this.extractOneOrMore(t,p)),e.parse(r),this.currentLine++}return e.digest()}parseMediaAttributes(e){const t=new R(e);for(;this.currentLine<this.records.length;){const e=this.getCurrentRecord();if(e.type!==s.ATTRIBUTE)break;const r={attField:this.extractOneOrMore(e,e=>u(e)&&":"!==e),_cur:0};":"===e.value[e.cur]&&(e.cur+=1,r.attValue=this.extractOneOrMore(e,p)),t.parse(r),this.currentLine++}return t.digest()}parseKey(){const e=this.getCurrentRecord();if(e.type===s.KEY){if("prompt"===e.value||"clear:"===e.value||"base64:"===e.value||"uri:"===e.value)return e.value;throw this.currentLine++,new Error("Invalid key.")}}parseZone(){const e=this.getCurrentRecord();if(e.type===s.ZONE_ADJUSTMENTS){const t=[];for(;;)try{const r=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);let i=!1;"-"===e.value[e.cur]&&(i=!0,e.cur+=1);const n=this.extract(e,this.consumeTypedTime);t.push({time:r,typedTime:n,back:i})}catch(e){break}if(0===t.length)throw new Error("Invalid zone adjustments");return this.currentLine++,t}return[]}parseRepeat(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.REPEAT)break;{const r=this.extract(t,this.consumeRepeatInterval),i=this.parseTypedTime(t);e.push({repeatInterval:r,typedTimes:i}),this.currentLine++}}return e}parseTypedTime(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeTypedTime))}catch(e){break}if(0===t.length)throw new Error("Invalid typed time.");return t}parseTime(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);const r=this.extract(e,this.consumeTime);return this.currentLine++,{startTime:t,stopTime:r}}parseBandWidth(){const e=[];for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.BANDWIDTH)break;{const r=this.extractOneOrMore(t,u);if(":"!==t.value[t.cur])throw new Error("Invalid bandwidth field.");t.cur++;const i=this.extractOneOrMore(t,a);e.push({bwtype:r,bandwidth:i}),this.currentLine++}}return e}parseVersion(){const e=this.getCurrentRecord();if(e.type!==s.VERSION)throw new Error("first sdp record must be version");const t=e.value.slice(0,this.consumeOneOrMore(e.value,0,a));if(t.length!==e.value.length)throw new Error('invalid proto version, "v='.concat(e.value,'"'));return this.currentLine++,t}parseOrigin(){const e=this.getCurrentRecord();if(e.type!==s.ORIGIN)throw new Error("second line of sdp must be origin");const t=this.extractOneOrMore(e,d);this.consumeSpaceForRecord(e);const r=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const n=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const o=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const c=this.extract(e,this.consumeUnicastAddress);return this.currentLine++,{username:t,sessId:r,sessVersion:i,nettype:n,addrtype:o,unicastAddress:c}}parseSessionName(){const e=this.getCurrentRecord();if(e.type===s.SESSION_NAME){const t=this.extract(e,this.consumeText);return this.currentLine++,t}}parseInformation(){const e=this.getCurrentRecord();if(e.type!==s.INFORMATION)return;const t=this.extract(e,this.consumeText);return this.currentLine++,t}parseUri(){const e=this.getCurrentRecord();if(e.type===s.URI)return this.currentLine++,e.value}parseEmail(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.EMAIL)break;e.push(t.value),this.currentLine++}return e}parsePhone(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.PHONE)break;e.push(t.value),this.currentLine++}return e}parseConnection(){const e=this.getCurrentRecord();if(e.type===s.CONNECTION){const t=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const r=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const i=this.extract(e,this.consumeAddress);return this.currentLine++,{nettype:t,addrtype:r,address:i}}}parseMedia(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeToken);this.consumeSpaceForRecord(e);let r=this.extract(e,this.consumePort);"/"===e.value[e.cur]&&(e.cur+=1,r+=this.extract(e,this.consumeInteger)),this.consumeSpaceForRecord(e);const i=[];for(i.push(this.extract(e,this.consumeToken));"/"===e.value[e.cur];)e.cur+=1,i.push(this.extract(e,this.consumeToken));if(0===i.length)throw new Error("Invalid proto");const n=this.parseFmt(e);return this.currentLine++,{mediaType:t,port:r,protos:i,fmts:n}}parseTimeFields(){const e=[];for(;this.getCurrentRecord().type===s.TIME;){const t=this.parseTime(),r=this.parseRepeat(),i=this.parseZone();e.push({time:t,repeats:r,zones:i})}return e}parseMediaDescription(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.MEDIA;){const t=this.parseMedia(),r=this.parseInformation(),i=this.parseConnections(),n=this.parseBandWidth(),o=this.parseKey(),s=this.parseMediaAttributes(t);e.push({media:t,information:r,connections:i,bandwidths:n,key:o,attributes:s})}return e}parseConnections(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.CONNECTION;)e.push(this.parseConnection());return e}parseFmt(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeToken))}catch(e){break}if(0===t.length)throw new Error("Invalid fmts");return t}extract(e,t,...r){const i=t.call(this,e.value,e.cur,...r),n=e.value.slice(e.cur,i);return e.cur=i,n}extractOneOrMore(e,t){const r=this.consumeOneOrMore(e.value,e.cur,t),i=e.value.slice(e.cur,r);return e.cur=r,i}consumeSpaceForRecord(e){if(e.value[e.cur]!==o)throw new Error("Invalid space at ".concat(e.cur,"."));e.cur+=1}}class v extends C{constructor(...e){super(...e),_(this,"attributes",void 0),_(this,"digested",!1)}extractOneOrMore(e,t,r){const i=this.consumeOneOrMore(e.attValue,e._cur,t),n=e.attValue.slice(e._cur,i),[o,s]=r||[];if("number"==typeof o&&n.length<o)throw new Error("error in length, should be more or equal than ".concat(o," characters."));if("number"==typeof s&&n.length>s)throw new Error("error in length, should be less or equal than ".concat(s," characters."));return e._cur=i,n}consumeAttributeSpace(e){if(e.attValue[e._cur]!==o)throw new Error("Invalid space at ".concat(e._cur,"."));e._cur+=1}extract(e,t,...r){if(!e.attValue)throw new Error("Nothing to extract from attValue.");const i=t.call(this,e.attValue,e._cur,...r),n=e.attValue.slice(e._cur,i);return e._cur=i,n}atEnd(e){if(!e.attValue)throw new Error;return e._cur>=e.attValue.length}peekChar(e){if(!e.attValue)throw new Error;return e.attValue[e._cur]}peek(e,t){if(!e.attValue)throw new Error;for(let r=0;r<t.length;r++)if(t[r]!==e.attValue[e._cur+r])return!1;return!0}parseIceUfrag(e){if(this.attributes.iceUfrag)throw new Error("Invalid ice-ufrag, should be only a single line if 'a=ice-ufrag'");this.attributes.iceUfrag=this.extractOneOrMore(e,g,[4,256])}parseIcePwd(e){if(this.attributes.icePwd)throw new Error("Invalid ice-pwd, should be only a single line if 'a=ice-pwd'");this.attributes.icePwd=this.extractOneOrMore(e,g,[22,256])}parseIceOptions(e){if(this.attributes.iceOptions)throw new Error("Invalid ice-options, should be only one 'ice-options' line");const t=[];for(;!this.atEnd(e);){t.push(this.extractOneOrMore(e,g));try{this.consumeAttributeSpace(e)}catch(t){if(this.atEnd(e))break;throw t}}this.attributes.iceOptions=t}parseFingerprint(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeTill);this.attributes.fingerprints.push({hashFunction:t,fingerprint:r})}parseExtmap(e){const t=this.extractOneOrMore(e,a);let r;"/"===this.peekChar(e)&&(this.extract(e,this.consume,"/"),r=this.extract(e,this.consumeToken)),this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,o),n=m(m({entry:parseInt(t,10)},r&&{direction:r}),{},{extensionName:i});this.peekChar(e)===o&&(this.consumeAttributeSpace(e),n.extensionAttributes=this.extract(e,this.consumeTill)),this.attributes.extmaps.push(n)}parseSetup(e){if(this.attributes.setup)throw new Error("must only be one single 'a=setup' line.");const t=this.extract(e,this.consumeTill);if("active"!==t&&"passive"!==t&&"actpass"!==t&&"holdconn"!==t)throw new Error("role must be one of 'active', 'passive', 'actpass', 'holdconn'.");this.attributes.setup=t}}class T extends v{constructor(...e){super(...e),_(this,"attributes",{unrecognized:[],groups:[],extmaps:[],fingerprints:[],identities:[]})}parse(e){if(this.digested)throw new Error("already digested");try{switch(e.attField){case"group":this.parseGroup(e);break;case"ice-lite":this.parseIceLite();break;case"ice-ufrag":this.parseIceUfrag(e);break;case"ice-pwd":this.parseIcePwd(e);break;case"ice-options":this.parseIceOptions(e);break;case"fingerprint":this.parseFingerprint(e);break;case"setup":this.parseSetup(e);break;case"tls-id":this.parseTlsId(e);break;case"identity":this.parseIdentity(e);break;case"extmap":this.parseExtmap(e);break;case"msid-semantic":this.parseMsidSemantic(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error("parsing session attribute ".concat(e.attField,' error, "a=').concat(e.attField,":").concat(e.attValue,'"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error("attribute parsing error")}digest(){return this.digested=!0,this.attributes}parseGroup(e){const t=this.extract(e,this.consumeToken),r=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;)this.consumeAttributeSpace(e),r.push(this.extract(e,this.consumeToken));this.attributes.groups.push({semantic:t,identificationTag:r})}parseIceLite(){if(this.attributes.iceLite)throw new Error("Invalid ice-lite, should be only a single line of 'a=ice-lite'");this.attributes.iceLite=!0}parseTlsId(e){if(this.attributes.tlsId)throw new Error("must be only one tld-id line");this.attributes.tlsId=this.extractOneOrMore(e,E)}parseIdentity(e){const t=this.extractOneOrMore(e,f),r=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.extract(e,this.consume,"=");const i=this.extractOneOrMore(e,e=>e!==o&&p(e));r.push({name:t,value:i})}this.attributes.identities.push({assertionValue:t,extensions:r})}parseMsidSemantic(e){this.peekChar(e)===o&&this.consumeAttributeSpace(e);const t={semantic:this.extract(e,this.consumeToken),identifierList:[]};for(;;){try{this.consumeAttributeSpace(e)}catch(e){break}if("*"===this.peekChar(e)){this.extract(e,this.consume,"*"),t.applyForAll=!0;break}{const r=this.extract(e,this.consumeTill,o);t.identifierList.push(r)}}this.attributes.msidSemantic=t}}class R extends v{constructor(e){super(),_(this,"attributes",void 0),-1!==e.protos.indexOf("RTP")||e.protos.indexOf("rtp"),this.attributes={unrecognized:[],candidates:[],extmaps:[],fingerprints:[],imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[]}}parse(e){if(this.digested)throw new Error("already digested");try{switch(e.attField){case"extmap":this.parseExtmap(e);break;case"setup":this.parseSetup(e);break;case"ice-ufrag":this.parseIceUfrag(e);break;case"ice-pwd":this.parseIcePwd(e);break;case"ice-options":this.parseIceOptions(e);break;case"candidate":this.parseCandidate(e);break;case"remote-candidate":this.parseRemoteCandidate(e);break;case"end-of-candidates":this.parseEndOfCandidates();break;case"fingerprint":this.parseFingerprint(e);break;case"rtpmap":this.parseRtpmap(e);break;case"ptime":this.parsePtime(e);break;case"maxptime":this.parseMaxPtime(e);break;case"sendrecv":case"recvonly":case"sendonly":case"inactive":this.parseDirection(e);break;case"ssrc":this.parseSSRC(e);break;case"fmtp":this.parseFmtp(e);break;case"rtcp-fb":this.parseRtcpFb(e);break;case"rtcp-mux":this.parseRTCPMux();break;case"rtcp-mux-only":this.parseRTCPMuxOnly();break;case"rtcp-rsize":this.parseRTCPRsize();break;case"rtcp":this.parseRTCP(e);break;case"mid":this.parseMid(e);break;case"msid":this.parseMsid(e);break;case"imageattr":this.parseImageAttr(e);break;case"rid":this.parseRid(e);break;case"simulcast":this.parseSimulcast(e);break;case"sctp-port":this.parseSctpPort(e);break;case"max-message-size":this.parseMaxMessageSize(e);break;case"ssrc-group":this.parseSSRCGroup(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error("parsing media attribute ".concat(e.attField,' error, "a=').concat(e.attField,":").concat(e.attValue,'"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error("attribute parsing error")}parseCandidate(e){const t=this.extractOneOrMore(e,g,[1,32]);this.consumeAttributeSpace(e);const r=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const n=this.extractOneOrMore(e,a,[1,10]);this.consumeAttributeSpace(e);const s=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const d=this.extract(e,this.consumePort);this.consumeAttributeSpace(e),this.extract(e,this.consume,"typ"),this.consumeAttributeSpace(e);const u={foundation:t,componentId:r,transport:i,priority:n,connectionAddress:s,port:d,type:this.extract(e,this.consumeToken),extension:{}};for(this.peek(e," raddr")&&(this.extract(e,this.consume," raddr"),this.consumeAttributeSpace(e),u.relAddr=this.extract(e,this.consumeAddress)),this.peek(e," rport")&&(this.extract(e,this.consume," rport"),this.consumeAttributeSpace(e),u.relPort=this.extract(e,this.consumePort));this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e),u.extension[t]=this.extractOneOrMore(e,c)}this.attributes.candidates.push(u)}parseRemoteCandidate(e){const t=[];for(;;){const r=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumePort);t.push({componentId:r,connectionAddress:i,port:n});try{this.consumeAttributeSpace(e)}catch(e){break}}this.attributes.remoteCandidatesList.push(t)}parseEndOfCandidates(){if(this.attributes.endOfCandidates)throw new Error("must be only one line of end-of-candidates");this.attributes.endOfCandidates=!0}parseRtpmap(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeTill,"/");this.extract(e,this.consume,"/");const i={encodingName:r,clockRate:this.extractOneOrMore(e,a)};this.atEnd(e)||"/"!==this.peekChar(e)||(this.extract(e,this.consume,"/"),i.encodingParameters=parseInt(this.extract(e,this.consumeTill),10));const n=this.attributes.payloads.find(e=>e.payloadType===parseInt(t,10));n?n.rtpMap=i:this.attributes.payloads.push({payloadType:parseInt(t,10),rtpMap:i,rtcpFeedbacks:[]})}parsePtime(e){if(this.attributes.ptime)throw new Error("must be only one line of ptime");this.attributes.ptime=this.extract(e,this.consumeTill)}parseMaxPtime(e){if(this.attributes.maxPtime)throw new Error("must be only one line of ptime");this.attributes.maxPtime=this.extract(e,this.consumeTill)}parseDirection(e){if(this.attributes.direction)throw new Error("must be only one line of direction info");this.attributes.direction=e.attField}parseSSRC(e){const t=this.extractOneOrMore(e,a);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeTill,":");let i;":"===this.peekChar(e)&&(this.extract(e,this.consume,":"),i=this.extract(e,this.consumeTill));const n=this.attributes.ssrcs.find(e=>e.ssrcId===parseInt(t,10));n?n.attributes[r]=i:this.attributes.ssrcs.push({ssrcId:parseInt(t,10),attributes:{[r]:i}})}parseFmtp(e){const t=this.extract(e,this.consumeTill,o);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeTill),i={};r.split(";").forEach(e=>{let[t,r]=e.split("=");t=t.trim(),r="string"==typeof r?r.trim():r,"string"==typeof t&&t.length>0&&(i[t]=r)});const n=this.attributes.payloads.find(e=>e.payloadType===parseInt(t,10));n?n.fmtp={parameters:i}:this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[],fmtp:{parameters:i}})}parseFmtParameters(e){const t={},r=this.extract(e,this.consumeTill,"=");e._cur++;const i=this.extract(e,this.consumeTill,";");for(t[r]=i;";"===e.attValue[e._cur];){const r=this.extract(e,this.consumeTill,"=");e._cur++;const i=this.extract(e,this.consumeTill,";");t[r]=i}return t}parseRtcpFb(e){let t="";t="*"===this.peekChar(e)?this.extract(e,this.consume,"*"):this.extract(e,this.consumeTill,o),this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeTill,o);let i;switch(r){case"trr-int":i={type:r,interval:this.extract(e,this.consumeTill)};break;case"ack":case"nack":default:{const t={type:r};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.parameter=this.extract(e,this.consumeToken),this.peekChar(e)===o&&(t.additional=this.extract(e,this.consumeTill))),i=t}}if("*"===t)this.attributes.rtcpFeedbackWildcards.push(i);else{const e=this.attributes.payloads.find(e=>e.payloadType===parseInt(t,10));e?e.rtcpFeedbacks.push(i):this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[i]})}}parseRTCPMux(){if(this.attributes.rtcpMux)throw new Error("must be single line of rtcp-mux");this.attributes.rtcpMux=!0}parseRTCPMuxOnly(){if(this.attributes.rtcpMuxOnly)throw new Error("must be single line of rtcp-only");this.attributes.rtcpMuxOnly=!0}parseRTCPRsize(){if(this.attributes.rtcpRsize)throw new Error("must be single line of rtcp-rsize");this.attributes.rtcpRsize=!0}parseRTCP(e){if(this.attributes.rtcp)throw new Error("must be single line of rtcp");const t={port:this.extract(e,this.consumePort)};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.netType=this.extractOneOrMore(e,u),this.consumeAttributeSpace(e),t.addressType=this.extractOneOrMore(e,u),this.consumeAttributeSpace(e),t.address=this.extract(e,this.consumeAddress)),this.attributes.rtcp=t}parseMsid(e){const t={id:this.extractOneOrMore(e,u,[1,64])};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.appdata=this.extractOneOrMore(e,u,[1,64])),this.attributes.msids.push(t)}parseImageAttr(e){this.attributes.imageattr.push(e.attValue)}parseRid(e){const t=this.extractOneOrMore(e,e=>h(e)||a(e)||"_"===e||"-"===e);this.consumeAttributeSpace(e);const r={id:t,direction:this.extract(e,this.consumeToken),params:[]};if(this.peekChar(e)===o){if(this.consumeAttributeSpace(e),this.peek(e,"pt=")){this.extract(e,this.consume,"pt=");const t=[];for(;;){const r=this.extract(e,this.consumeToken);t.push(r);try{this.extract(e,this.consume,",")}catch(e){break}}r.payloads=t,this.peekChar(e)===o&&this.extract(e,this.consume,o)}for(;;){const t=this.extract(e,this.consumeToken);switch(t){case"depend":{const i={type:t,rids:this.extract(e,this.consume,"=").split(",")};r.params.push(i);break}case"max-width":case"height-width":case"max-fps":case"max-fs":case"max-br":case"max-pps":case"max-bpp":default:{const i={type:t};"="===this.peekChar(e)&&(this.extract(e,this.consume,"="),i.val=this.extract(e,this.consumeTill,";")),r.params.push(i)}}try{this.extract(e,this.consume,";")}catch(e){break}}}this.attributes.rids.push(r)}parseSimulcast(e){if(this.attributes.simulcast)throw new Error("must be single line of simulcast");this.attributes.simulcast=e.attValue,this.extract(e,this.consumeTill)}parseSctpPort(e){this.attributes.sctpPort=this.extractOneOrMore(e,a,[1,5])}parseMaxMessageSize(e){this.attributes.maxMessageSize=this.extractOneOrMore(e,a,[1,void 0])}digest(){return this.digested=!0,this.attributes}parseMid(e){this.attributes.mid=this.extract(e,this.consumeToken)}parseSSRCGroup(e){const t=this.extract(e,this.consumeToken),r=[];for(;;)try{this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeInteger);r.push(parseInt(t,10))}catch(e){break}this.attributes.ssrcGroups.push({semantic:t,ssrcIds:r})}}function y(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class w{constructor(){y(this,"eol",n)}print(e,t){let r="";return t&&(this.eol=t),r+=this.printVersion(e.version),r+=this.printOrigin(e.origin),r+=this.printSessionName(e.sessionName),r+=this.printInformation(e.information),r+=this.printUri(e.uri),r+=this.printEmail(e.emails),r+=this.printPhone(e.phones),r+=this.printConnection(e.connection),r+=this.printBandwidth(e.bandwidths),r+=this.printTimeFields(e.timeFields),r+=this.printKey(e.key),r+=this.printSessionAttributes(e.attributes),r+=this.printMediaDescription(e.mediaDescriptions),r}printVersion(e){return"v=".concat(e).concat(this.eol)}printOrigin(e){return"o=".concat(e.username," ").concat(e.sessId," ").concat(e.sessVersion," ").concat(e.nettype," ").concat(e.addrtype," ").concat(e.unicastAddress).concat(this.eol)}printSessionName(e){return e?"s=".concat(e).concat(this.eol):""}printInformation(e){return e?"i=".concat(e).concat(this.eol):""}printUri(e){return e?"u=".concat(e).concat(this.eol):""}printEmail(e){let t="";for(const r of e)t+="e=".concat(r).concat(this.eol);return t}printPhone(e){let t="";for(const r of e)t+="e=".concat(r).concat(this.eol);return t}printConnection(e){return e?"c=".concat(e.nettype," ").concat(e.addrtype," ").concat(e.address).concat(this.eol):""}printBandwidth(e){let t="";for(const r of e)t+="b=".concat(r.bwtype,":").concat(r.bandwidth).concat(this.eol);return t}printTimeFields(e){let t="";for(const r of e){t+="t=".concat(r.time.startTime," ").concat(r.time.startTime).concat(this.eol);for(const e of r.repeats)t+="r=".concat(e.repeatInterval," ").concat(e.typedTimes.join(" ")).concat(this.eol);r.zoneAdjustments&&(t+="z=",t+="z=".concat(r.zoneAdjustments.map(e=>"".concat(e.time," ").concat(e.back?"-":""," ").concat(e.typedTime)).join(" ")).concat(this.eol),t+=this.eol)}return t}printKey(e){return e?"k=".concat(e).concat(this.eol):""}printAttributes(e){let t="";for(const r of e)t+="a=".concat(r.attField).concat(r.attValue?":".concat(r.attValue):"").concat(this.eol);return t}printMediaDescription(e){let t="";for(const r of e)t+=this.printMedia(r.media),t+=this.printInformation(r.information),t+=this.printConnections(r.connections),t+=this.printBandwidth(r.bandwidths),t+=this.printKey(r.key),t+=this.printMediaAttributes(r);return t}printConnections(e){let t="";for(const r of e)t+=this.printConnection(r);return t}printMedia(e){return"m=".concat(e.mediaType," ").concat(e.port," ").concat(e.protos.join("/")," ").concat(e.fmts.join(" ")).concat(this.eol)}printSessionAttributes(e){return new O(this.eol).print(e)}printMediaAttributes(e){return new N(this.eol).print(e)}}class b{constructor(e){y(this,"eol",void 0),this.eol=e}printIceUfrag(e){return void 0===e?"":"a=ice-ufrag:".concat(e).concat(this.eol)}printIcePwd(e){return void 0===e?"":"a=ice-pwd:".concat(e).concat(this.eol)}printIceOptions(e){return void 0===e?"":"a=ice-options:".concat(e.join(o)).concat(this.eol)}printFingerprints(e){return e.length>0?e.map(e=>"a=fingerprint:".concat(e.hashFunction).concat(o).concat(e.fingerprint)).join(this.eol)+this.eol:""}printExtmap(e){return e.map(e=>"a=extmap:".concat(e.entry).concat(e.direction?"/".concat(e.direction):"").concat(o).concat(e.extensionName).concat(e.extensionAttributes?"".concat(o).concat(e.extensionAttributes):"").concat(this.eol)).join("")}printSetup(e){return void 0===e?"":"a=setup:".concat(e).concat(this.eol)}printUnrecognized(e){return e.map(e=>"a=".concat(e.attField).concat(e.attValue?":".concat(e.attValue):"").concat(this.eol)).join("")}}class O extends b{print(e){let t="";return t+=this.printGroups(e.groups),t+=this.printMsidSemantic(e.msidSemantic),t+=this.printIceLite(e.iceLite),t+=this.printIceUfrag(e.iceUfrag),t+=this.printIcePwd(e.icePwd),t+=this.printIceOptions(e.iceOptions),t+=this.printFingerprints(e.fingerprints),t+=this.printSetup(e.setup),t+=this.printTlsId(e.tlsId),t+=this.printIdentity(e.identities),t+=this.printExtmap(e.extmaps),t+=this.printUnrecognized(e.unrecognized),t}printGroups(e){let t="";return e.length>0&&(t+=e.map(e=>"a=group:".concat(e.semantic).concat(e.identificationTag.map(e=>"".concat(o).concat(e)).join("")).concat(this.eol)).join("")),t}printIceLite(e){return void 0===e?"":"a=ice-lite"+this.eol}printTlsId(e){return e?"a=tls-id:".concat(e).concat(this.eol):""}printIdentity(e){return 0===e.length?"":e.map(e=>"a=identity:".concat(e.assertionValue).concat(e.extensions.map(e=>"".concat(o).concat(e.name).concat(e.value?"=".concat(e.value):"")))).join(this.eol)+this.eol}printMsidSemantic(e){if(!e)return"";let t="a=msid-semantic:".concat(e.semantic);return e.applyForAll?t+="".concat(o,"*"):e.identifierList.length>0&&(t+=e.identifierList.map(e=>"".concat(o).concat(e))),t+this.eol}}class N extends b{print(e){const t=e.attributes;let r="";return r+=this.printRTCP(t.rtcp),r+=this.printIceUfrag(t.iceUfrag),r+=this.printIcePwd(t.icePwd),r+=this.printIceOptions(t.iceOptions),r+=this.printCandidates(t.candidates),r+=this.printRemoteCandidatesList(t.remoteCandidatesList),r+=this.printEndOfCandidates(t.endOfCandidates),r+=this.printFingerprints(t.fingerprints),r+=this.printSetup(t.setup),r+=this.printMid(t.mid),r+=this.printExtmap(t.extmaps),r+=this.printRTPRelated(t),r+=this.printPtime(t.ptime),r+=this.printMaxPtime(t.maxPtime),r+=this.printDirection(t.direction),r+=this.printSSRCGroups(t.ssrcGroups),r+=this.printSSRC(t.ssrcs),r+=this.printRTCPMux(t.rtcpMux),r+=this.printRTCPMuxOnly(t.rtcpMuxOnly),r+=this.printRTCPRsize(t.rtcpRsize),r+=this.printMSId(t.msids),r+=this.printImageattr(t.imageattr),r+=this.printRid(t.rids),r+=this.printSimulcast(t.simulcast),r+=this.printSCRPPort(t.sctpPort),r+=this.printMaxMessageSize(t.maxMessageSize),r+=this.printUnrecognized(t.unrecognized),r}printCandidates(e){return e.map(e=>"a=candidate:".concat(e.foundation).concat(o).concat(e.componentId).concat(o).concat(e.transport).concat(o).concat(e.priority).concat(o).concat(e.connectionAddress).concat(o).concat(e.port).concat(o,"typ").concat(o).concat(e.type).concat(e.relAddr?"".concat(o,"raddr").concat(o).concat(e.relAddr):"").concat(e.relPort?"".concat(o,"rport").concat(o).concat(e.relPort):"").concat(Object.keys(e.extension).map(t=>"".concat(o).concat(t).concat(o).concat(e.extension[t])).join("")).concat(this.eol)).join("")}printRemoteCandidatesList(e){return e.map(e=>"a=remote-candidates:".concat(e.join(o)).concat(this.eol)).join("")}printEndOfCandidates(e){return void 0===e?"":"a=end-of-candidates"+this.eol}printRTPRelated(e){if(!e.payloads)return"";const t=e.payloads;let r="";r+=e.rtcpFeedbackWildcards.map(e=>this.printRTCPFeedback("*",e)).join("");for(const e of t)r+=this.printRtpMap(e.payloadType,e.rtpMap),r+=this.printFmtp(e.payloadType,e.fmtp),r+=e.rtcpFeedbacks.map(t=>this.printRTCPFeedback(e.payloadType,t)).join("");return r}printFmtp(e,t){if(!t)return"";const r=Object.keys(t.parameters);return 1===r.length&&void 0===t.parameters[r[0]]?"a=fmtp:".concat(e).concat(o).concat(r[0]).concat(this.eol):"a=fmtp:".concat(e).concat(o).concat(Object.keys(t.parameters).map(e=>"".concat(e,"=").concat(t.parameters[e])).join(";")).concat(this.eol)}printRtpMap(e,t){return t?"a=rtpmap:".concat(e).concat(o).concat(t.encodingName,"/").concat(t.clockRate).concat(t.encodingParameters?"/".concat(t.encodingParameters):"").concat(this.eol):""}printRTCPFeedback(e,t){let r="a=rtcp-fb:".concat(e).concat(o),i=t;switch(i.type){case"trr-int":r+="ttr-int".concat(o).concat(i.interval);break;case"ack":case"nack":default:i=i,r+="".concat(i.type),i.parameter&&(r+="".concat(o).concat(i.parameter),i.additional&&(r+="".concat(o).concat(i.additional)))}return r+this.eol}printPtime(e){return void 0===e?"":"a=ptime:".concat(e).concat(this.eol)}printMaxPtime(e){return void 0===e?"":"a=maxptime:".concat(e).concat(this.eol)}printDirection(e){return void 0===e?"":"a=".concat(e).concat(this.eol)}printSSRC(e){return e.map(e=>Object.keys(e.attributes).map(t=>"a=ssrc:".concat(e.ssrcId.toString(10)).concat(o).concat(t).concat(e.attributes[t]?":".concat(e.attributes[t]):"").concat(this.eol)).join("")).join("")}printRTCPMux(e){return void 0===e?"":"a=rtcp-mux".concat(this.eol)}printRTCPMuxOnly(e){return void 0===e?"":"a=rtcp-mux-only".concat(this.eol)}printRTCPRsize(e){return void 0===e?"":"a=rtcp-rsize".concat(this.eol)}printRTCP(e){if(void 0===e)return"";let t="a=rtcp:".concat(e.port);return e.netType&&(t+="".concat(o).concat(e.netType)),e.addressType&&(t+="".concat(o).concat(e.addressType)),e.address&&(t+="".concat(o).concat(e.address)),t+this.eol}printMSId(e){return e.map(e=>"a=msid:".concat(e.id).concat(e.appdata?"".concat(o).concat(e.appdata):"").concat(this.eol)).join("")}printImageattr(e){return e.map(e=>"a=imageattr:".concat(e).concat(this.eol)).join("")}printRid(e){return e.map(e=>{let t="a=rid:".concat(e.id).concat(o).concat(e.direction);return e.payloads&&(t+="".concat(o,"pt=").concat(e.payloads.join(","))),e.params.length>0&&(t+="".concat(o).concat(e.params.map(e=>"depend"===e.type?"depend=".concat(e.rids.join(",")):"".concat(e.type,"=").concat(e.val)).join(";"))),t+this.eol}).join("")}printSimulcast(e){return void 0===e?"":"a=simulcast:".concat(e).concat(this.eol)}printSCRPPort(e){return void 0===e?"":"a=sctp-port:".concat(e).concat(this.eol)}printMaxMessageSize(e){return void 0===e?"":"a=max-message-size:".concat(e)}printMid(e){return void 0===e?"":"a=mid:".concat(e).concat(this.eol)}printSSRCGroups(e){return e.map(e=>"a=ssrc-group:".concat(e.semantic).concat(e.ssrcIds.map(e=>"".concat(o).concat(e.toString(10))).join("")).concat(this.eol)).join("")}}function D(e){return(new S).parse(e)}function P(e,t){return(new w).print(e,t)}}},t={};function r(i){if(t[i])return t[i].exports;var n=t[i]={exports:{}};return e[i](n,n.exports,r),n.exports}return r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r(8)})()}(P$);class H${constructor(e){kO(this,"sessionDesc",void 0),kO(this,"localCapabilities",void 0),kO(this,"rtpCapabilities",void 0),kO(this,"candidates",void 0),kO(this,"iceParameters",void 0),kO(this,"dtlsParameters",void 0),kO(this,"setup",void 0),kO(this,"currentMidIndex",void 0),kO(this,"cname",void 0),e=OK(e);const{remoteIceParameters:t,remoteDtlsParameters:r,candidates:i,remoteRTPCapabilities:n,remoteSetup:o,localCapabilities:s,sdkCodec:a,cname:c}=e,d=P$.exports.parse("v=0\no=- 0 0 IN IP4 127.0.0.1\ns=AgoraGateway\nt=0 0\na=group:BUNDLE audio video\na=msid-semantic: WMS\na=ice-lite\nm=audio 9 UDP/TLS/RTP/SAVPF 0\nc=IN IP4 127.0.0.1\na=rtcp:9 IN IP4 0.0.0.0\na=sendrecv\na=rtcp-mux\na=rtcp-rsize\na=mid:audio\nm=video 9 UDP/TLS/RTP/SAVPF 0\nc=IN IP4 127.0.0.1\na=rtcp:9 IN IP4 0.0.0.0\na=sendrecv\na=rtcp-mux\na=rtcp-rsize\na=mid:video\n");this.rtpCapabilities=n,this.candidates=i,this.iceParameters=t,this.dtlsParameters=r,this.setup=o,this.localCapabilities=s,this.cname=c;for(let e=0;e<d.mediaDescriptions.length;e++){const s=d.mediaDescriptions[e];if(s.attributes.iceUfrag=t.iceUfrag,s.attributes.icePwd=t.icePwd,s.attributes.fingerprints=r.fingerprints,s.attributes.candidates=i,s.attributes.setup=o,"video"===s.media.mediaType){s.media.fmts=n.videoCodecs.map(e=>e.payloadType.toString(10));const e=n.videoCodecs.filter(e=>{var t;return null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase().includes(a)});if(0===e.length)throw new Error("Codec ".concat(a," not supported by remote SDP."));s.attributes.payloads=e,s.attributes.extmaps=n.videoExtensions}"audio"===s.media.mediaType&&(s.media.fmts=n.audioCodecs.map(e=>e.payloadType.toString(10)),s.attributes.payloads=n.audioCodecs,s.attributes.extmaps=n.audioExtensions),d.mediaDescriptions[e]=this.mungMediaDesc(s)}this.sessionDesc=d,this.currentMidIndex=d.mediaDescriptions.length-1}toString(){return P$.exports.print(this.sessionDesc)}send(e,t,r){const{ssrcs:i,ssrcGroups:n}=x$(t,this.cname),o=this.sessionDesc.mediaDescriptions.find(t=>e===dB.VIDEO?"video"===t.media.mediaType:"audio"===t.media.mediaType),s=i[0].attributes.label,a=i[0].attributes.mslabel;return o.attributes.ssrcs=o.attributes.ssrcs.concat(i),o.attributes.ssrcGroups=o.attributes.ssrcGroups.concat(n),{id:s,mslabel:a}}batchSend(e){return e.map(e=>{let{kind:t,ssrcMsg:r}=e;return this.send(t,r,void 0)})}stopSending(e){this.sessionDesc.mediaDescriptions.forEach(t=>{const r=[],i=[],n=[];t.attributes.ssrcs.forEach(t=>{e.includes(t.attributes.label||"")?n.push(t):r.push(t)}),t.attributes.ssrcGroups.forEach(e=>{n.map(e=>e.ssrcId).includes(e.ssrcIds[0])||i.push(e)}),t.attributes.ssrcs=r,t.attributes.ssrcGroups=i})}mute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error("mediaDescription not found with ".concat(e," in remote SDP when calling RemoteSDP.mute."));t.attributes.direction="inactive"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error("mediaDescription not found with ".concat(e," in remote SDP when calling RemoteSDP.unmute."));t.attributes.direction="sendonly"}receive(e,t,r){e.forEach((e,t)=>{const r=e._mediaStreamTrack,i=this.sessionDesc.mediaDescriptions.findIndex(e=>e.attributes.mid===r.kind),n=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],e);this.sessionDesc.mediaDescriptions[i]=n})}stopReceiving(e){}restartICE(e,t){e=OK(e),t=OK(t),this.iceParameters=e,this.candidates=t,this.sessionDesc.mediaDescriptions.forEach(t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd,t.attributes.candidates=this.candidates})}predictReceivingMids(e){const t=[];for(let r=0;r<e;r++)t.push((this.currentMidIndex+r+1).toString(10));return t}mungRecvMediaDsec(e,t){const r=OK(e);return Q$(r,t),V$(r,t),r}updateRecvMedia(e,t){const r=this.sessionDesc.mediaDescriptions.findIndex(t=>t.attributes.mid===e);if(-1!==r){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[r],t);this.sessionDesc.mediaDescriptions[r]=e}}bumpMid(e){this.currentMidIndex+=e}updateTrackLabel(e,t,r){const i=this.sessionDesc.mediaDescriptions.find(t=>e===dB.VIDEO?"video"===t.attributes.mid:"audio"===t.attributes.mid);if(i){const e=i.attributes.ssrcs.find(e=>e.attributes.label===t);var n;if(e)e.attributes.label=r,null===(n=e.attributes.msid)||void 0===n||n.replace(t,r)}}mungMediaDesc(e){const t=OK(e);return F$(t),function(e){const t=e.attributes.extmaps.find(e=>"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01"===e.extensionName);t&&e.attributes.extmaps.splice(e.attributes.extmaps.indexOf(t),1),e.attributes.payloads.forEach(e=>{const t=e.rtcpFeedbacks.findIndex(e=>"transport-cc"===e.type);-1!==t&&e.rtcpFeedbacks.splice(t,1)})}(t),t}getSSRC(e){for(const t of this.sessionDesc.mediaDescriptions)for(const r of t.attributes.ssrcs)if(r.attributes.label===e)return[r]}}function W$(e){if(Array.isArray(e))return e.map((function(e){return e}));if(!Y$(e))return e;var t={};for(var r in e)Y$(e[r])||Array.isArray(e[r])?t[r]=W$(e[r]):t[r]=e[r];return t}function Y$(e){return!("object"!=typeof e||Array.isArray(e)||!e)}var J$=function(){function e(e){this.input=[],this.size=e}return e.prototype.add=function(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)},e.prototype.diffMean=function(){return 0===this.input.length?0:(this.input[this.input.length-1]-this.input[0])/this.input.length},e}(),q$=function(e,t){return(q$=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};
/*! *****************************************************************************
	Copyright (c) Microsoft Corporation. All rights reserved.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of the
	License at http://www.apache.org/licenses/LICENSE-2.0

	THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	MERCHANTABLITY OR NON-INFRINGEMENT.

	See the Apache Version 2.0 License for specific language governing permissions
	and limitations under the License.
	***************************************************************************** */function X$(e,t){function r(){this.constructor=e}q$(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var z$=function(){return(z$=Object.assign||function(e){for(var t,r=1,i=arguments.length;r<i;r++)for(var n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};function Z$(e,t,r,i){return new(r||(r=Promise))((function(n,o){function s(e){try{c(i.next(e))}catch(e){o(e)}}function a(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){e.done?n(e.value):new r((function(t){t(e.value)})).then(s,a)}c((i=i.apply(e,t||[])).next())}))}function $$(e,t){var r,i,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,i&&(n=2&o[0]?i.return:o[0]?i.throw||((n=i.return)&&n.call(i),0):i.next)&&!(n=n.call(i,o[1])).done)return n;switch(i=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,i=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(n=s.trys,(n=n.length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],i=0}finally{r=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}var e1,t1={address:"unknown",candidateType:"unknown",id:"unknown",port:0,priority:0,protocol:"unknown",type:"unknown"},r1={timestamp:0,bitrate:{actualEncoded:0,transmit:0},sendPacketLossRate:0,recvPacketLossRate:0,videoRecv:[],videoSend:[],audioRecv:[],audioSend:[],selectedCandidatePair:{id:"unknown",localCandidate:t1,remoteCandidate:t1}},i1={firsCount:0,nacksCount:0,plisCount:0,framesDecodeCount:0,framesDecodeInterval:0,framesDecodeFreezeTime:0,decodeFrameRate:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,qpSumPerFrame:0},n1={firsCount:0,nacksCount:0,plisCount:0,frameCount:0,bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,qpSumPerFrame:0},o1={bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0},s1={jitterBufferMs:0,jitterMs:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,receivedFrames:0,droppedFrames:0},a1=function(){function e(e,t){var r=this;this.videoIsReady=!1,this.videoIsReady2={},this.stats=W$(r1),this.isFirstVideoReceived={},this.isFirstVideoDecoded={},this.isFirstAudioReceived={},this.isFirstAudioDecoded={},this.lossRateWindowStats=[],this.pc=e,this.options=t,this.intervalTimer=window.setInterval((function(){return Z$(r,void 0,void 0,(function(){return $$(this,(function(e){return this.updateStats(),[2]}))}))}),this.options.updateInterval)}return e.prototype.getStats=function(){return this.stats},e.prototype.setVideoIsReady=function(e){this.videoIsReady=e},e.prototype.setVideoIsReady2=function(e,t){this.videoIsReady2[e]=t},e.prototype.getVideoIsReady=function(e){return this.videoIsReady2[e]||!1},e.prototype.setIsFirstAudioDecoded=function(e){},e.prototype.destroy=function(){window.clearInterval(this.intervalTimer),this.pc=void 0},e.prototype.calcLossRate=function(e){var t=this;this.lossRateWindowStats.push(e),this.lossRateWindowStats.length>this.options.lossRateInterval&&this.lossRateWindowStats.splice(0,1);for(var r=this.lossRateWindowStats.length,i=0,n=0,o=0,s=0,a=function(a){e[a].forEach((function(e,c){if(t.lossRateWindowStats[r-1][a][c]&&t.lossRateWindowStats[0][a][c]){var d=t.lossRateWindowStats[r-1][a][c].packets-t.lossRateWindowStats[0][a][c].packets,u=t.lossRateWindowStats[r-1][a][c].packetsLost-t.lossRateWindowStats[0][a][c].packetsLost;"videoSend"===a||"audioSend"===a?(i+=d,o+=u):(n+=d,s+=u),Number.isNaN(d)||Number.isNaN(d)?e.packetLostRate=0:e.packetLostRate=d<=0||u<=0?0:u/(d+u)}}))},c=0,d=["videoSend","audioSend","videoRecv","audioRecv"];c<d.length;c++){a(d[c])}e.sendPacketLossRate=i<=0||o<=0?0:o/(i+o),e.recvPacketLossRate=n<=0||s<=0?0:s/(n+s)},e}(),c1=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._stats=r1,t.lastDecodeVideoReceiverStats=new Map,t}return X$(t,e),t.prototype.updateStats=function(){return Z$(this,void 0,void 0,(function(){var e,t,r,i;return $$(this,(function(n){switch(n.label){case 0:return[4,this._getStats()];case 1:return e=n.sent(),t=this.statsResponsesToObjects(e),this._stats=W$(r1),r=t.filter((function(e){return"ssrc"===e.type})),this.processSSRCStats(r),(i=t.find((function(e){return"VideoBwe"===e.type})))&&this.processBandwidthStats(i),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats,[2]}}))}))},t.prototype.processBandwidthStats=function(e){this._stats.bitrate={actualEncoded:Number(e.googActualEncBitrate),targetEncoded:Number(e.googTargetEncBitrate),retransmit:Number(e.googRetransmitBitrate),transmit:Number(e.googTransmitBitrate)},this._stats.sendBandwidth=Number(e.googAvailableSendBandwidth)},t.prototype.processSSRCStats=function(e){var t=this;e.forEach((function(e){var r=e.id.includes("send");switch(e.mediaType+"_"+(r?"send":"recv")){case"video_send":var i=W$(n1);i.codec=e.googCodecName,i.adaptionChangeReason="none",e.googCpuLimitedResolution&&(i.adaptionChangeReason="cpu"),e.googBandwidthLimitedResolution&&(i.adaptionChangeReason="bandwidth"),i.avgEncodeMs=Number(e.googAvgEncodeMs),i.inputFrame={width:Number(e.googFrameWidthInput)||Number(e.googFrameWidthSent),height:Number(e.googFrameHeightInput)||Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},i.sentFrame={width:Number(e.googFrameWidthSent),height:Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},i.firsCount=Number(e.googFirReceived),i.nacksCount=Number(e.googNacksReceived),i.plisCount=Number(e.googPlisReceived),i.frameCount=Number(e.framesEncoded),i.bytes=Number(e.bytesSent),i.packets=Number(e.packetsSent),i.packetsLost=Number(e.packetsLost),i.ssrc=Number(e.ssrc),i.rttMs=Number(e.googRtt||0),t._stats.videoSend.push(i),t._stats.rtt=i.rttMs;break;case"video_recv":var n=W$(i1),o=t.lastDecodeVideoReceiverStats.get(Number(e.ssrc));if(n.codec=e.googCodecName,n.targetDelayMs=Number(e.googTargetDelayMs),n.renderDelayMs=Number(e.googRenderDelayMs),n.currentDelayMs=Number(e.googCurrentDelayMs),n.minPlayoutDelayMs=Number(e.googMinPlayoutDelayMs),n.decodeMs=Number(e.googDecodeMs),n.maxDecodeMs=Number(e.googMaxDecodeMs),n.receivedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateReceived)},n.decodedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateDecoded)},n.outputFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateOutput)},n.jitterBufferMs=Number(e.googJitterBufferMs),n.firsCount=Number(e.googFirsSent),n.nacksCount=Number(e.googNacksSent),n.plisCount=Number(e.googPlisSent),n.framesDecodeCount=Number(e.framesDecoded),n.bytes=Number(e.bytesReceived),n.packets=Number(e.packetsReceived),n.packetsLost=Number(e.packetsLost),n.ssrc=Number(e.ssrc),n.packets>0&&!t.isFirstVideoReceived[n.ssrc]&&(t.onFirstVideoReceived&&t.onFirstVideoReceived(n.ssrc),t.isFirstVideoReceived[n.ssrc]=!0),n.framesDecodeCount>0&&!t.isFirstVideoDecoded[n.ssrc]&&(t.onFirstVideoDecoded&&t.onFirstVideoDecoded(n.ssrc,n.decodedFrame.width,n.decodedFrame.height),t.isFirstVideoDecoded[n.ssrc]=!0),o){var s=o.stats,a=Date.now()-o.lts;n.framesDecodeFreezeTime=s.framesDecodeFreezeTime,n.framesDecodeInterval=s.framesDecodeInterval,n.framesDecodeCount>s.framesDecodeCount&&t.isFirstVideoDecoded[n.ssrc]?(o.lts=Date.now(),n.framesDecodeInterval=a,n.framesDecodeInterval>=t.options.freezeRateLimit&&(t.getVideoIsReady(parseInt(e.ssrc,10))?n.framesDecodeFreezeTime+=n.framesDecodeInterval:t.setVideoIsReady2(parseInt(e.ssrc,10),!0))):n.framesDecodeCount<o.stats.framesDecodeCount&&(n.framesDecodeInterval=0)}t.lastDecodeVideoReceiverStats.set(n.ssrc,{stats:z$({},n),lts:Date.now()}),t._stats.videoRecv.push(n);break;case"audio_recv":var c=W$(s1);c.codec=e.googCodecName,c.outputLevel=Math.abs(Number(e.audioOutputLevel))/32767,c.decodingCNG=Number(e.googDecodingCNG),c.decodingCTN=Number(e.googDecodingCTN),c.decodingCTSG=Number(e.googDecodingCTSG),c.decodingNormal=Number(e.googDecodingNormal),c.decodingPLC=Number(e.googDecodingPLC),c.decodingPLCCNG=Number(e.googDecodingPLCCNG),c.expandRate=Number(e.googExpandRate),c.accelerateRate=Number(e.googAccelerateRate),c.preemptiveExpandRate=Number(e.googPreemptiveExpandRate),c.secondaryDecodedRate=Number(e.googSecondaryDecodedRate),c.speechExpandRate=Number(e.googSpeechExpandRate),c.preferredJitterBufferMs=Number(e.googPreferredJitterBufferMs),c.jitterBufferMs=Number(e.googJitterBufferMs),c.jitterMs=Number(e.googJitterReceived),c.bytes=Number(e.bytesReceived),c.packets=Number(e.packetsReceived),c.packetsLost=Number(e.packetsLost),c.ssrc=Number(e.ssrc),c.receivedFrames=Number(e.googDecodingCTN)||Number(e.packetsReceived),c.droppedFrames=Number(e.googDecodingPLC)+Number(e.googDecodingPLCCNG)||Number(e.packetsLost),c.receivedFrames>0&&!t.isFirstAudioReceived[c.ssrc]&&(t.onFirstAudioReceived&&t.onFirstAudioReceived(c.ssrc),t.isFirstAudioReceived[c.ssrc]=!0),c.decodingNormal>0&&!t.isFirstAudioDecoded[c.ssrc]&&(t.onFirstAudioDecoded&&t.onFirstAudioDecoded(c.ssrc),t.isFirstAudioDecoded[c.ssrc]=!0),t._stats.audioRecv.push(c);break;case"audio_send":var d=W$(o1);d.codec=e.googCodecName,d.inputLevel=Math.abs(Number(e.audioInputLevel))/32767,d.aecReturnLoss=Number(e.googEchoCancellationReturnLoss||0),d.aecReturnLossEnhancement=Number(e.googEchoCancellationReturnLossEnhancement||0),d.residualEchoLikelihood=Number(e.googResidualEchoLikelihood||0),d.residualEchoLikelihoodRecentMax=Number(e.googResidualEchoLikelihoodRecentMax||0),d.bytes=Number(e.bytesSent),d.packets=Number(e.packetsSent),d.packetsLost=Number(e.packetsLost),d.ssrc=Number(e.ssrc),d.rttMs=Number(e.googRtt||0),t._stats.rtt=d.rttMs,t._stats.audioSend.push(d)}}))},t.prototype._getStats=function(){var e=this;return new Promise((function(t,r){e.pc.getStats(t,r)}))},t.prototype.statsResponsesToObjects=function(e){var t=[];return e.result().forEach((function(e){var r={id:e.id,timestamp:e.timestamp.valueOf().toString(),type:e.type};e.names().forEach((function(t){r[t]=e.stat(t)})),t.push(r)})),t},t}(a1);!function(e){e.CERTIFICATE="certificate",e.CODEC="codec",e.CANDIDATE_PAIR="candidate-pair",e.LOCAL_CANDIDATE="local-candidate",e.REMOTE_CANDIDATE="remote-candidate",e.INBOUND="inbound-rtp",e.TRACK="track",e.OUTBOUND="outbound-rtp",e.PC="peer-connection",e.REMOTE_INBOUND="remote-inbound-rtp",e.REMOTE_OUTBOUND="remote-outbound-rtp",e.TRANSPORT="transport",e.CSRC="csrc",e.DATA_CHANNEL="data-channel",e.STREAM="stream",e.SENDER="sender",e.RECEIVER="receiver"}(e1||(e1={}));var d1,u1=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._stats=r1,t.lastDecodeVideoReceiverStats=new Map,t.lastVideoFramesRecv=new Map,t.lastVideoFramesSent=new Map,t.lastVideoFramesDecode=new Map,t.lastVideoJBDelay=new Map,t.lastAudioJBDelay=new Map,t.mediaBytesSent=new Map,t.mediaBytesRetransmit=new Map,t.mediaBytesTargetEncode=new Map,t.lastEncoderMs=new Map,t}return X$(t,e),t.prototype.updateStats=function(){return Z$(this,void 0,void 0,(function(){var e,t=this;return $$(this,(function(r){switch(r.label){case 0:return e=this,[4,this.pc.getStats()];case 1:return e.report=r.sent(),this._stats=W$(r1),this.report.forEach((function(e){switch(e.type){case e1.OUTBOUND:"audio"===e.mediaType?t.processAudioOutboundStats(e):"video"===e.mediaType&&t.processVideoOutboundStats(e);break;case e1.INBOUND:"audio"===e.mediaType?t.processAudioInboundStats(e):"video"===e.mediaType&&t.processVideoInboundStats(e);break;case e1.TRANSPORT:var r=t.report.get(e.selectedCandidatePairId);r&&t.processCandidatePairStats(r);break;case e1.CANDIDATE_PAIR:e.selected&&t.processCandidatePairStats(e)}})),this.updateSendBitrate(),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats,[2]}}))}))},t.prototype.processCandidatePairStats=function(e){if(this._stats.sendBandwidth=e.availableOutgoingBitrate||0,e.currentRoundTripTime&&(this._stats.rtt=1e3*e.currentRoundTripTime),this._stats.videoSend.forEach((function(t){!t.rttMs&&e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.audioSend.forEach((function(t){!t.rttMs&&e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.selectedCandidatePair.id=e.id,e.localCandidateId){var t=this.report.get(e.localCandidateId);t&&this.processCandidateStats(t)}if(e.remoteCandidateId){var r=this.report.get(e.remoteCandidateId);r&&this.processCandidateStats(r)}},t.prototype.processCandidateStats=function(e){var t;e.type===e1.LOCAL_CANDIDATE&&(t=this._stats.selectedCandidatePair.localCandidate),e.type===e1.REMOTE_CANDIDATE&&(t=this._stats.selectedCandidatePair.remoteCandidate),t&&(t.type=e.type,t.id=e.id,e.address&&(t.address=e.address),e.candidateType&&(t.candidateType=e.candidateType),e.port&&(t.port=e.port),e.priority&&(t.priority=e.priority),e.protocol&&(t.protocol=e.protocol),e.relayProtocol&&(t.relayProtocol=e.relayProtocol),e.type===e1.LOCAL_CANDIDATE&&this.stats.selectedCandidatePair.localCandidate.id!==t.id&&this.onSelectedLocalCandidateChanged&&this.onSelectedLocalCandidateChanged(z$({},t),z$({},this.stats.selectedCandidatePair.localCandidate)),e.type===e1.REMOTE_CANDIDATE&&this.stats.selectedCandidatePair.remoteCandidate.id!==t.id&&this.onSelectedRemoteCandidateChanged&&this.onSelectedRemoteCandidateChanged(z$({},t),z$({},this.stats.selectedCandidatePair.remoteCandidate)))},t.prototype.processAudioInboundStats=function(e){var t=this._stats.audioRecv.find((function(t){return t.ssrc===e.ssrc}));t||(t=W$(s1),this._stats.audioRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.jitterMs=1e3*e.jitter,e.trackId&&this.processAudioTrackReceiverStats(e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),t.receivedFrames||(t.receivedFrames=e.packetsReceived),t.droppedFrames||(t.droppedFrames=e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.outputLevel&&t.outputLevel>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0)},t.prototype.processVideoInboundStats=function(e){var t=this._stats.videoRecv.find((function(t){return t.ssrc===e.ssrc}));t||(t=W$(i1),this._stats.videoRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.framesDecodeCount=e.framesDecoded;var r=this.lastDecodeVideoReceiverStats.get(t.ssrc),i=this.lastVideoFramesDecode.get(t.ssrc),n=Date.now();if(t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]){var o=t.decodedFrame?t.decodedFrame.width:0,s=t.decodedFrame?t.decodedFrame.height:0;this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,o,s),this.isFirstVideoDecoded[t.ssrc]=!0}if(r){var a=r.stats,c=n-r.lts;t.framesDecodeFreezeTime=a.framesDecodeFreezeTime,t.framesDecodeInterval=a.framesDecodeInterval,!this.isFirstVideoDecoded[t.ssrc]&&c>this.options.firstVideoDecodedTimeout&&this.onFirstVideoDecodedTimeout&&this.onFirstVideoDecodedTimeout(t.ssrc),t.framesDecodeCount>a.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(r.lts=Date.now(),t.framesDecodeInterval=c,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<a.framesDecodeCount&&(t.framesDecodeInterval=0),e.framesDecoded&&e.qpSum&&(r.stats.framesDecodeCount>e.framesDecoded?t.qpSumPerFrame=e.qpSum/e.framesDecoded:t.qpSumPerFrame=(e.qpSum-r.qpSum)/(e.framesDecoded-r.stats.framesDecodeCount))}i&&n-i.lts>=800?(t.decodeFrameRate=Math.round((t.framesDecodeCount-i.count)/((n-i.lts)/1e3)),this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:n,rate:t.decodeFrameRate})):i?t.decodeFrameRate=i.rate:this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:n,rate:0}),e.totalDecodeTime&&(t.decodeMs=1e3*e.totalDecodeTime),e.trackId&&this.processVideoTrackReceiverStats(e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.framerateMean&&(t.framesRateFirefox=e.framerateMean),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:z$({},t),lts:r?r.lts:Date.now(),qpSum:e.qpSum})},t.prototype.processVideoOutboundStats=function(e){var t=this._stats.videoSend.find((function(t){return t.ssrc===e.ssrc}));t||(t=W$(n1),this._stats.videoSend.push(t));var r,i=this.mediaBytesSent.get(e.ssrc);i?i.add(e.bytesSent):((o=new J$(10)).add(e.bytesSent),this.mediaBytesSent.set(e.ssrc,o));if(void 0!==e.retransmittedBytesSent){var n=this.mediaBytesRetransmit.get(e.ssrc);if(n)n.add(e.retransmittedBytesSent);else(o=new J$(10)).add(e.retransmittedBytesSent),this.mediaBytesRetransmit.set(e.ssrc,o)}if(e.totalEncodedBytesTarget){var o,s=this.mediaBytesTargetEncode.get(e.ssrc);if(s)s.add(e.totalEncodedBytesTarget);else(o=new J$(10)).add(e.totalEncodedBytesTarget),this.mediaBytesTargetEncode.set(e.ssrc,o)}if(t.ssrc=e.ssrc,t.bytes=e.bytesSent,t.packets=e.packetsSent,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.frameCount=e.framesEncoded,t.adaptionChangeReason=e.qualityLimitationReason,e.totalEncodeTime&&e.framesEncoded)if(!(r=this.lastEncoderMs.get(e.ssrc))||r.lastFrameCount>e.framesEncoded)t.avgEncodeMs=1e3*e.totalEncodeTime/e.framesEncoded;else{var a=e.framesEncoded-r.lastFrameCount,c=e.totalEncodeTime-r.lastEncoderTime;t.avgEncodeMs=1e3*c/a}e.framesEncoded&&e.qpSum&&(!(r=this.lastEncoderMs.get(e.ssrc))||r.lastFrameCount>e.framesEncoded?t.qpSumPerFrame=e.qpSum/e.framesEncoded:t.qpSumPerFrame=(e.qpSum-r.lastQpSum)/(e.framesEncoded-r.lastFrameCount));if(this.lastEncoderMs.set(e.ssrc,{lastFrameCount:e.framesEncoded,lastEncoderTime:e.totalEncodeTime,lastQpSum:e.qpSum,lts:Date.now()}),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.mediaSourceId&&this.processVideoMediaSource(e.mediaSourceId,t),e.trackId&&this.processVideoTrackSenderStats(e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{var d=this.findRemoteStatsId(e.ssrc,e1.REMOTE_INBOUND);d&&this.processRemoteInboundStats(d,t)}},t.prototype.processAudioOutboundStats=function(e){var t=this._stats.audioSend.find((function(t){return t.ssrc===e.ssrc}));if(t||(t=W$(o1),this._stats.audioSend.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsSent,t.bytes=e.bytesSent,e.mediaSourceId&&this.processAudioMediaSource(e.mediaSourceId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.trackId&&this.processAudioTrackSenderStats(e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{var r=this.findRemoteStatsId(e.ssrc,e1.REMOTE_INBOUND);r&&this.processRemoteInboundStats(r,t)}},t.prototype.findRemoteStatsId=function(e,t){var r=Array.from(this.report.values()).find((function(r){return r.type===t&&r.ssrc===e}));return r?r.id:null},t.prototype.processVideoMediaSource=function(e,t){var r=this.report.get(e);r&&r.width&&r.height&&r.framesPerSecond&&(t.inputFrame={width:r.width,height:r.height,frameRate:r.framesPerSecond})},t.prototype.processAudioMediaSource=function(e,t){var r=this.report.get(e);r&&(t.inputLevel=r.audioLevel)},t.prototype.processVideoTrackSenderStats=function(e,t){var r=this.report.get(e);if(r){var i=0,n=Date.now(),o=this.lastVideoFramesSent.get(t.ssrc);o&&n-o.lts>=800?(i=Math.round((r.framesSent-o.count)/((n-o.lts)/1e3)),this.lastVideoFramesSent.set(t.ssrc,{count:r.framesSent,lts:n,rate:i})):o?i=o.rate:this.lastVideoFramesSent.set(t.ssrc,{count:r.framesSent,lts:n,rate:0}),t.sentFrame={width:r.frameWidth,height:r.frameHeight,frameRate:i}}},t.prototype.processVideoTrackReceiverStats=function(e,t){var r=this.report.get(e);if(r){var i=this.lastVideoFramesRecv.get(t.ssrc),n=Date.now();t.framesReceivedCount=r.framesReceived;var o=0;if(i&&n-i.lts>=800?(o=Math.round((r.framesReceived-i.count)/((n-i.lts)/1e3)),this.lastVideoFramesRecv.set(t.ssrc,{count:r.framesReceived,lts:n,rate:o})):i?o=i.rate:this.lastVideoFramesRecv.set(t.ssrc,{count:r.framesReceived,lts:n,rate:0}),t.receivedFrame={width:r.frameWidth||0,height:r.frameHeight||0,frameRate:o||0},t.decodedFrame={width:r.frameWidth||0,height:r.frameHeight||0,frameRate:t.decodeFrameRate||0},t.outputFrame={width:r.frameWidth||0,height:r.frameHeight||0,frameRate:t.decodeFrameRate||0},r.jitterBufferDelay&&r.jitterBufferEmittedCount){var s=this.lastVideoJBDelay.get(t.ssrc);this.lastVideoJBDelay.set(t.ssrc,{jitterBufferDelay:r.jitterBufferDelay,jitterBufferEmittedCount:r.jitterBufferEmittedCount}),s||(s={jitterBufferDelay:0,jitterBufferEmittedCount:0});var a=1e3*(r.jitterBufferDelay-s.jitterBufferDelay)/(r.jitterBufferEmittedCount-s.jitterBufferEmittedCount);t.jitterBufferMs=a,t.currentDelayMs=Math.round(a)}}},t.prototype.processAudioTrackSenderStats=function(e,t){var r=this.report.get(e);r&&(t.aecReturnLoss=r.echoReturnLoss||0,t.aecReturnLossEnhancement=r.echoReturnLossEnhancement||0)},t.prototype.processAudioTrackReceiverStats=function(e,t){var r=this.report.get(e);if(r){if(r.removedSamplesForAcceleration&&r.totalSamplesReceived&&(t.accelerateRate=r.removedSamplesForAcceleration/r.totalSamplesReceived),r.jitterBufferDelay&&r.jitterBufferEmittedCount){var i=this.lastAudioJBDelay.get(t.ssrc);this.lastAudioJBDelay.set(t.ssrc,{jitterBufferDelay:r.jitterBufferDelay,jitterBufferEmittedCount:r.jitterBufferEmittedCount}),i||(i={jitterBufferDelay:0,jitterBufferEmittedCount:0});var n=1e3*(r.jitterBufferDelay-i.jitterBufferDelay)/(r.jitterBufferEmittedCount-i.jitterBufferEmittedCount);t.jitterBufferMs=Math.round(n)}t.outputLevel=r.audioLevel;var o=1920;r.totalSamplesDuration&&r.totalSamplesReceived&&(o=r.totalSamplesReceived/r.totalSamplesDuration/50,t.receivedFrames=Math.round(r.totalSamplesReceived/o)),r.concealedSamples&&(t.droppedFrames=Math.round(r.concealedSamples/o))}},t.prototype.processRemoteInboundStats=function(e,t){var r=this.report.get(e);r&&(t.packetsLost=r.packetsLost,r.roundTripTime&&(t.rttMs=1e3*r.roundTripTime))},t.prototype.getCodecFromCodecStats=function(e){var t=this.report.get(e);if(!t)return"";var r=t.mimeType.match(/\/(.*)$/);return r&&r[1]?r[1]:""},t.prototype.updateSendBitrate=function(){var e=0,t=null,r=null;this.mediaBytesSent.forEach((function(t){e+=t.diffMean()})),this.mediaBytesRetransmit.forEach((function(e){t=null===t?e.diffMean():t+e.diffMean()})),this.mediaBytesTargetEncode.forEach((function(e){r=null===r?e.diffMean():r+e.diffMean()}));var i=null!==t?e-t:e;this._stats.bitrate={actualEncoded:8*i/(this.options.updateInterval/1e3),transmit:8*e/(this.options.updateInterval/1e3)},null!==t&&(this._stats.bitrate.retransmit=8*t/(this.options.updateInterval/1e3)),null!==r&&(this._stats.bitrate.targetEncoded=8*r/(this.options.updateInterval/1e3))},t}(a1),A1=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return X$(t,e),t.prototype.updateStats=function(){return Promise.resolve()},t}(a1);function h1(e,t,r,i,n){void 0===t&&(t=250),void 0===r&&(r=8),void 0===i&&(i=500),void 0===n&&(n=1e4);var o,s=(o=navigator.userAgent.toLocaleLowerCase().match(/chrome\/[\d]*/i))&&o[0]?Number(o[0].split("/")[1]):null;return s?s<76?new c1(e,{updateInterval:t,lossRateInterval:r,freezeRateLimit:i,firstVideoDecodedTimeout:n}):new u1(e,{updateInterval:t,lossRateInterval:r,freezeRateLimit:i,firstVideoDecodedTimeout:n}):function(e){return!!window.RTCStatsReport&&e.getStats()instanceof Promise}(e)?new u1(e,{updateInterval:t,lossRateInterval:r,freezeRateLimit:i,firstVideoDecodedTimeout:n}):new A1(e,{updateInterval:t,lossRateInterval:r,freezeRateLimit:i,firstVideoDecodedTimeout:n})}function l1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function p1(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l1(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l1(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}let g1=(UV((d1=class e extends gB{get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}constructor(t,r){super(t,r),kO(this,"store",void 0),kO(this,"peerConnection",void 0),kO(this,"remoteSDP",void 0),kO(this,"initialOffer",void 0),kO(this,"statsFilter",void 0),kO(this,"useRTX",!1),kO(this,"localCapabilities",void 0),kO(this,"localCandidateCount",0),kO(this,"allCandidatesReceived",!1),kO(this,"mutex",new Ej("P2PConnection-mutex")),this.store=r,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=h1(this.peerConnection,void 0,void 0,gO()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(){try{const e=await this.peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});if(!e.sdp)throw new Error("Cannot get initialOffer.sdp when trying to establish PeerConnection.");const t=M$(e.sdp),r=B$(e.sdp,!this.useRTX,NP("FILTER_VIDEO_FEC"),NP("FILTER_AUDIO_FEC"),["opus"]);return this.localCapabilities=r,this.initialOffer=e,p1(p1({},t),{},{rtpCapabilities:{send:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},recv:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},sendrecv:r},offerSDP:e.sdp})}catch(e){throw new UD(MD.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,r,i,n,o){try{if(!this.initialOffer)throw new Error("Cannot establish P2PConnection without initial offer.");this.remoteSDP=new H$({remoteIceParameters:e,remoteDtlsParameters:t,candidates:r,remoteRTPCapabilities:i.send,remoteSetup:n,localCapabilities:this.localCapabilities,sdkCodec:this.store.codec,cname:o});const s=this.remoteSDP.toString();await this.peerConnection.setLocalDescription(this.initialOffer),await this.peerConnection.setRemoteDescription({type:"answer",sdp:s})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.connect failed; ".concat(e.toString()))}}send(e,t){var r=this;return a$((function*(){const i=yield c$(r.mutex.lock());try{if(!r.remoteSDP)throw new Error("Cannot call P2PConnection.send before remote SDP created");const n=e.map(e=>r.peerConnection.addTrack(e._mediaStreamTrack)),o=yield c$(r.peerConnection.createOffer()),s=P$.exports.parse(o.sdp),a=e.map(e=>{const t=e._mediaStreamTrack,i=s.mediaDescriptions.find(e=>e.attributes.mid===t.kind);if(!i)throw new Error("Cannot extract ssrc from mediaDescription.");return function(e,t,r){const i=e.attributes.ssrcs.filter(e=>e.attributes.label===t),n=e.attributes.ssrcGroups;if(0===i.length)throw new Error("Cannot extract ssrc from plan-b SDP.");if(n&&i.length>1){const e=n.find(e=>-1!==e.ssrcIds.indexOf(i[0].ssrcId));return e?[{ssrcId:e.ssrcIds[0],rtx:r?e.ssrcIds[1]:void 0}]:[{ssrcId:i[0].ssrcId}]}return[{ssrcId:i[0].ssrcId}]}(i,t.id,r.useRTX)});let c;try{c=yield a}catch(e){throw n.forEach(e=>{pO()&&e.replaceTrack(null),r.peerConnection.removeTrack(e)}),e}const d=r.mungSendOfferSDP(o.sdp,e);r.remoteSDP.receive(e,t,c);const u=r.remoteSDP.toString();return yield c$(r.peerConnection.setLocalDescription({type:"offer",sdp:d})),yield c$(r.applySendEncodings(n,e)),yield c$(r.peerConnection.setRemoteDescription({type:"answer",sdp:u})),e.map((e,t)=>{const r=e._mediaStreamTrack.id;return{localSSRC:a[t],id:r}})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.send failed; ".concat(e.toString()))}finally{i()}}))()}async stopSending(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.stopSending before remote SDP created");const t=this.peerConnection.getSenders().filter(t=>{var r;return-1!==e.indexOf((null===(r=t.track)||void 0===r?void 0:r.id)||"")});if(t.length!==e.length)throw new Error("Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.");t.map(e=>{pO()&&e.replaceTrack(null),this.peerConnection.removeTrack(e)});const r=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(r),this.remoteSDP.stopReceiving(e);const i=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:"answer",sdp:i})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.stopSending failed; ".concat(e.toString()))}}async receive(e,t,r,i){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.receive ".concat(e," before remoteSDP created."));const{id:r,mslabel:n}=this.remoteSDP.send(e,t,i),o=new nT((t,i)=>{const o=setTimeout(()=>{i(new Error("Cannot receive track, id: ".concat(r)))},1e4),s=i=>{const a=oO();if(("Safari"===a.name&&11===Number(a.version)||EO())&&i.track.id!==r&&i.streams[0].id===n){var c;const n=i.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(e,r,i.track.id),this.peerConnection.removeEventListener("track",s),clearTimeout(o),void t(n)}if(i.track.id===r)return this.peerConnection.removeEventListener("track",s),clearTimeout(o),void t(i.track)};this.peerConnection.addEventListener("track",s)}),s=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:"offer",sdp:s});const a=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(a);return{track:await o,id:r}}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.receive failed; ".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.stopReceiving before remote SDP created.");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:"offer",sdp:t});const r=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(r)}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection stopReceiving failed; ".concat(e.toString()))}}async muteRemote(e){}async unmuteRemote(e){}async muteLocal(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.muteLocal before remote SDP created.");const t=this.peerConnection.getSenders().filter(t=>{var r;return-1!==e.indexOf((null===(r=t.track)||void 0===r?void 0:r.id)||"")});if(t.length!==e.length)throw new Error("sender' length doesn't match mids' length.");t.map(e=>{if(pO()&&e.track)e.track.enabled=!1;else{const t=e.getParameters();t.encodings.forEach(e=>e.active=!1),e.setParameters(t)}})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.muteLocal failed; ".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.unmuteLocal before remote SDP created.");const t=this.peerConnection.getSenders().filter(t=>{var r;return-1!==e.indexOf((null===(r=t.track)||void 0===r?void 0:r.id)||"")});if(t.length!==e.length)throw new Error("Senders' length doesn't match mids' length.");t.map(async e=>{if(pO()&&e.track)e.track.enabled=!0;else{const t=e.getParameters();t.encodings.forEach(e=>e.active=!0),await e.setParameters(t)}});const r=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(r);const i=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:"answer",sdp:i})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.unmuteLocal failed; ".concat(e.toString()))}}async reEstablish(){const e=await this.peerConnection.createOffer({iceRestart:!0});if(!e.sdp)throw new Error("Cannot get SDP from restart offer.");return{iceParameters:M$(e.sdp).iceParameters,restartICE:async(t,r)=>this.restartICE(e,t,r),restartOfferSDP:e.sdp}}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,"closed"),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.updateEncoderConfig before remote SDP created.");const e=await this.peerConnection.createOffer(),r=this.mungSendOfferSDP(e.sdp,[t]);this.remoteSDP.updateRecvMedia(t._mediaStreamTrack.kind,t);const i=this.remoteSDP.toString();await this.peerConnection.setLocalDescription({type:"offer",sdp:r}),await this.peerConnection.setRemoteDescription({type:"answer",sdp:i})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const r=this.peerConnection.getSenders().filter(t=>{var r;return(null===(r=t.track)||void 0===r?void 0:r.id)===e});1===r.length&&await this.applySendEncodings(r,[t])}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const r=this.peerConnection.getSenders().find(e=>{var r;return(null===(r=e.track)||void 0===r?void 0:r.id)===t});r&&await r.replaceTrack(e._mediaStreamTrack)}async restartICE(e,t,r){try{if(!this.remoteSDP)throw new Error("Cannot restartICE before remoteSDP created.");this.remoteSDP.restartICE(t,r);const i=this.remoteSDP.toString();await this.peerConnection.setLocalDescription(e),await this.peerConnection.setRemoteDescription({type:"answer",sdp:i})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.restartICE failed; ".concat(e.toString()))}}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,HD.debug("[pc-".concat(this.store.p2pId,"] local candidate count"),this.localCandidateCount))},setTimeout(()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,HD.debug("[pc-".concat(this.store.p2pId,"] onicecandidate timeout, local candidate count"),this.localCandidateCount))},NP("CANDIDATE_TIMEOUT"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const r={iceServers:[],sdpSemantics:"plan-b"};return t.iceServers?r.iceServers=t.iceServers:t.turnServer&&"off"!==t.turnServer.mode&&(Sk(t.turnServer.servers)?r.iceServers=t.turnServer.servers:(r.iceServers&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),NP("USE_TURN_SERVER_OF_GATEWAY")&&r.iceServers&&t.turnServer.serversFromGateway&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach(e=>{e.forceturn&&(r.iceTransportPolicy="relay")}))),r}static turnServerConfigToIceServers(e){const t=[];return e.forEach(e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:"password",urls:"turns:".concat(e.turnServerURL,":").concat(e.tcpport,"?transport=tcp")}):(e.udpport&&t.push({username:e.username,credential:e.password,credentialType:"password",urls:"turn:".concat(e.turnServerURL,":").concat(e.udpport,"?transport=udp")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:"password",urls:"turn:".concat(e.turnServerURL,":").concat(e.tcpport,"?transport=tcp")}))}),t}async applySendEncodings(e,t){try{if(!vB().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let i=0;i<e.length;i++){var r;const n=e[i],o=t[i];if(!o)continue;const s={},a={};if(o instanceof $X)switch(o._optimizationMode){case"motion":s.degradationPreference="maintain-framerate";break;case"detail":s.degradationPreference="maintain-resolution";break;default:s.degradationPreference="balanced"}if(NP("DSCP_TYPE")&&RO()){const e=NP("DSCP_TYPE");["very-low","low","medium","high"].includes(e)&&(a.networkPriority=e)}const c=n.getParameters(),d=null===(r=c.encodings)||void 0===r?void 0:r[0];d&&Object.assign(d,a),Object.assign(c,s),await n.setParameters(c)}}catch(e){HD.debug("Apply RTPSendEncodings failed.")}}mungSendOfferSDP(e,t){const r=P$.exports.parse(e);return t.forEach((e,t)=>{const i=e._mediaStreamTrack,n=r.mediaDescriptions.find(e=>e.attributes.mid===i.kind);n&&Q$(n,e)}),P$.exports.print(r)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,r)=>{var i;null===(i=this.onFirstVideoDecoded)||void 0===i||i.call(this,e,t,r)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var r;null===(r=this.onSelectedLocalCandidateChanged)||void 0===r||r.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var r;null===(r=this.onSelectedRemoteCandidateChanged)||void 0===r||r.call(this,e,t)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0}async batchReceive(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.batchReceive before remoteSDP created.");const t=this.remoteSDP.batchSend(e).map((t,r)=>{let{id:i,mslabel:n}=t;const{kind:o}=e[r];return new nT((e,t)=>{const r=setTimeout(()=>{t(new Error("Cannot receive track, id: ".concat(i)))},1e4),s=t=>{const a=oO();if("Safari"===a.name&&11===Number(a.version)&&t.track.id!==i&&t.streams[0].id===n){var c;const n=t.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(o,i,t.track.id),this.peerConnection.removeEventListener("track",s),clearTimeout(r),void e({track:n,id:i})}if(t.track.id===i)return this.peerConnection.removeEventListener("track",s),clearTimeout(r),void e({track:t.track,id:i})};this.peerConnection.addEventListener("track",s)})}),r=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:"offer",sdp:r});const i=await this.peerConnection.createAnswer();return await this.peerConnection.setLocalDescription(i),await nT.all(t)}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.receive failed; ".concat(e.toString()))}}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}}).prototype,"connect",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"connect"),d1.prototype),UV(d1.prototype,"stopSending",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"stopSending"),d1.prototype),UV(d1.prototype,"receive",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"receive"),d1.prototype),UV(d1.prototype,"stopReceiving",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"stopReceiving"),d1.prototype),UV(d1.prototype,"muteRemote",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"muteRemote"),d1.prototype),UV(d1.prototype,"unmuteRemote",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"unmuteRemote"),d1.prototype),UV(d1.prototype,"muteLocal",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"muteLocal"),d1.prototype),UV(d1.prototype,"unmuteLocal",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"unmuteLocal"),d1.prototype),UV(d1.prototype,"reEstablish",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"reEstablish"),d1.prototype),UV(d1.prototype,"close",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"close"),d1.prototype),UV(d1.prototype,"updateEncoderConfig",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"updateEncoderConfig"),d1.prototype),UV(d1.prototype,"updateSendParameters",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"updateSendParameters"),d1.prototype),UV(d1.prototype,"replaceTrack",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"replaceTrack"),d1.prototype),UV(d1.prototype,"restartICE",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"restartICE"),d1.prototype),UV(d1.prototype,"getRemoteSSRC",[E1],Object.getOwnPropertyDescriptor(d1.prototype,"getRemoteSSRC"),d1.prototype),d1);function E1(e,t,r){const i=e[t];if("function"!=typeof i)throw new Error("Cannot use mutex on object property.");return r.value=async function(){const e=this.mutex,r=await e.lock("Locking from P2PConnection.".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await i.apply(this,o)}finally{r()}},r}var f1;const I1="9",m1=4e4;let _1=gP("RemoteSDP")(f1=class{get localCapabilities(){return OK(this._localCapabilities)}get rtpCapabilities(){return OK(this._rtpCapabilities)}get candidates(){return OK(this._candidates)}get iceParameters(){return OK(this._iceParameters)}get dtlsParameters(){return OK(this._dtlsParameters)}constructor(e){kO(this,"sessionDesc",void 0),kO(this,"_localCapabilities",void 0),kO(this,"_rtpCapabilities",void 0),kO(this,"_candidates",void 0),kO(this,"_iceParameters",void 0),kO(this,"_dtlsParameters",void 0),kO(this,"setup",void 0),kO(this,"currentMidIndex",void 0),kO(this,"cname",void 0),kO(this,"firefoxSsrcMidMap",new Map),e=OK(e);const{remoteIceParameters:t,remoteDtlsParameters:r,candidates:i,remoteRTPCapabilities:n,remoteSetup:o,localCapabilities:s,cname:a}=e,c=P$.exports.parse("v=0\no=- 0 0 IN IP4 127.0.0.1\ns=AgoraGateway\nt=0 0\na=group:BUNDLE 0 1\na=msid-semantic: WMS\na=ice-lite\nm=video 9 UDP/TLS/RTP/SAVPF 0\nc=IN IP4 127.0.0.1\na=rtcp:9 IN IP4 0.0.0.0\na=sendonly\na=rtcp-mux\na=rtcp-rsize\na=mid:0\nm=audio 9 UDP/TLS/RTP/SAVPF 0\nc=IN IP4 127.0.0.1\na=rtcp:9 IN IP4 0.0.0.0\na=sendonly\na=rtcp-mux\na=rtcp-rsize\na=mid:1\n");this._rtpCapabilities=n,this._candidates=i,this._iceParameters=t,this._dtlsParameters=r,this._localCapabilities=s,this.setup=o,this.cname=a;const d=this.rtpCapabilities.send;for(const e of c.mediaDescriptions){if(e.attributes.iceUfrag=t.iceUfrag,e.attributes.icePwd=t.icePwd,e.attributes.fingerprints=r.fingerprints,e.attributes.candidates=i,e.attributes.setup=o,"video"===e.media.mediaType&&(e.media.fmts=d.videoCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=d.videoCodecs,e.attributes.extmaps=d.videoExtensions,NP("PRELOAD_MEDIA_COUNT")>0)){const{ssrcs:t,ssrcGroups:r}=x$([{ssrcId:m1,rtx:NP("USE_RTX")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=r}if("audio"===e.media.mediaType&&(e.media.fmts=d.audioCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=d.audioCodecs,e.attributes.extmaps=d.audioExtensions,NP("PRELOAD_MEDIA_COUNT")>0)){const{ssrcs:t,ssrcGroups:r}=x$([{ssrcId:2e4}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=r}}this.sessionDesc=c,this.currentMidIndex=c.mediaDescriptions.length-1}preloadRemoteMedia(){const e=NP("PRELOAD_MEDIA_COUNT");hP("debug",this,"preloadRemoteMedia",e),this.rtpCapabilities;const t=this.candidates,r=this.dtlsParameters,i=this.iceParameters,n=this.rtpCapabilities.send;for(let o=1;o<e;o++){const e=2*o+2e4,s=2*o+m1,{ssrcs:a,ssrcGroups:c}=x$([{ssrcId:e}],this.cname),{ssrcs:d,ssrcGroups:u}=x$([{ssrcId:s,rtx:NP("USE_RTX")?s+1:void 0}],this.cname);this.sessionDesc.mediaDescriptions.push({media:{mediaType:"video",port:I1,protos:["UDP","TLS","RTP","SAVPF"],fmts:n.videoCodecs.map(e=>e.payloadType.toString(10))},connections:[{nettype:"IN",addrtype:"IP4",address:"127.0.0.1"}],bandwidths:[],attributes:{iceUfrag:i.iceUfrag,icePwd:i.icePwd,unrecognized:[],candidates:t,extmaps:n.videoExtensions,fingerprints:r.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:d,ssrcGroups:u,rtcpFeedbackWildcards:[],payloads:n.videoCodecs,rtcp:{port:"9",netType:"IN",addressType:"IP4",address:"0.0.0.0"},setup:this.setup,direction:"sendonly",rtcpMux:!0,rtcpRsize:!0,mid:"".concat(2*o)}}),this.sessionDesc.mediaDescriptions.push({media:{mediaType:"audio",port:I1,protos:["UDP","TLS","RTP","SAVPF"],fmts:n.audioCodecs.map(e=>e.payloadType.toString(10))},connections:[{nettype:"IN",addrtype:"IP4",address:"127.0.0.1"}],bandwidths:[],attributes:{iceUfrag:i.iceUfrag,icePwd:i.icePwd,unrecognized:[],candidates:t,extmaps:n.audioExtensions,fingerprints:r.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:a,ssrcGroups:c,rtcpFeedbackWildcards:[],payloads:n.audioCodecs,rtcp:{port:"9",netType:"IN",addressType:"IP4",address:"0.0.0.0"},setup:this.setup,direction:"sendonly",rtcpMux:!0,rtcpRsize:!0,mid:"".concat(2*o+1)}}),this.currentMidIndex+=2}this.updateBundleMids()}toString(){return P$.exports.print(this.sessionDesc)}send(e,t,r,i){const{ssrcs:n,ssrcGroups:o}=x$(t,this.cname,r),s=this.findPreloadMediaDesc(n);if(s){if(gO()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,s.attributes.mid),i&&(i.tcc||i.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(s);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(s,i),{mid:s.attributes.mid,needExchangeSDP:!0}}return{mid:s.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,n);if(pO()||fO()){if(-1!==t&&1!==t){const e=OK(this.sessionDesc.mediaDescriptions[t]);return e.attributes.direction="sendonly",e.attributes.ssrcs=n,e.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(e,i),{mid:e.attributes.mid,needExchangeSDP:!0}}{const t=this.createOrRecycleSendMedia(e,n,o,"sendonly",i);return this.updateBundleMids(),{mid:t.attributes.mid,needExchangeSDP:!0}}}if(-1!==t){const e=OK(this.sessionDesc.mediaDescriptions[t]);return e.attributes.direction="sendonly",e.attributes.ssrcs=n,e.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(e,i),gO()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,e.attributes.mid),{mid:e.attributes.mid,needExchangeSDP:!0}}{const t=this.createOrRecycleSendMedia(e,n,o,"sendonly",i);return this.updateBundleMids(),gO()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,t.attributes.mid),{mid:t.attributes.mid,needExchangeSDP:!0}}}}batchSend(e){const t=e.map(e=>{let{kind:t,ssrcMsg:r,mslabel:i}=e;return this.send(t,r,i)}),r=[];let i=!1;return t.forEach(e=>{let{mid:t,needExchangeSDP:n}=e;n&&(i=!0),r.push(t)}),{mids:r,needExchangeSDP:i}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid));if(t.length!==e.length)throw new Error("mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.");t.forEach(e=>{"0"===e.attributes.mid||gO()||pO()||fO()?e.attributes.ssrcs=[]:(e.attributes.ssrcs=[],e.attributes.direction="inactive",e.media.port="0")}),this.updateBundleMids()}mute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error("mediaDescription not found with ".concat(e," in remote SDP when calling RemoteSDP.mute."));t.attributes.direction="inactive"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error("mediaDescription not found with ".concat(e," in remote SDP when calling RemoteSDP.unmute."));t.attributes.direction="sendonly"}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>e.includes(t.attributes.mid||""));if(t.length!==e.length)throw new Error("mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.");t.forEach(e=>{e.attributes.direction="inactive"})}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>e.includes(t.attributes.mid||""));if(t.length!==e.length)throw new Error("mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.");t.forEach(e=>{e.attributes.direction="recvonly"})}receive(e,t,r,i){e.forEach((e,n)=>{this.createOrRecycleRecvMedia(e,[],"recvonly",t,r,i[n])}),this.updateBundleMids()}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>-1!==e.indexOf(t.attributes.mid));if(t.length!==e.length)throw new Error("MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.");t.forEach(e=>{e.media.port="0",e.attributes.direction="inactive"}),this.updateBundleMids()}restartICE(e,t){e=OK(e),t=OK(t),this._iceParameters=e,this._candidates=t,this.sessionDesc.mediaDescriptions.forEach(t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd,t.attributes.candidates=this.candidates})}predictReceivingMids(e){const t=[];for(let r=0;r<e;r++)t.push((this.currentMidIndex+r+1).toString(10));return t}findAvailableMediaIndex(e,t){return this.sessionDesc.mediaDescriptions.findIndex(r=>{const i=r.media.mediaType===e&&"0"!==r.media.port&&("sendonly"===r.attributes.direction||"sendrecv"===r.attributes.direction)&&0===r.attributes.ssrcs.length;if(gO()){if(i){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||"0"!==r.attributes.mid&&"1"!==r.attributes.mid)||!(!e||e!==r.attributes.mid)}return!1}return i})}createOrRecycleRecvMedia(e,t,r,i,n,o){const s=e._mediaStreamTrack.kind,a=this.rtpCapabilities.recv,c=this.localCapabilities.send;let d=[];if(s===dB.VIDEO){var u,A;if(NP("H264_PROFILE_LEVEL_ID")&&"h264"===i&&(d=a.videoCodecs.filter(e=>{var t,r;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"").includes(i)&&(null==e||null===(r=e.fmtp)||void 0===r?void 0:r.parameters["profile-level-id"])===NP("H264_PROFILE_LEVEL_ID")})),!d||0===(null===(u=d)||void 0===u?void 0:u.length)){const e=c.videoCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"").includes(i)});0!==e.length&&(d=a.videoCodecs.filter(t=>e.some(e=>e.payloadType===t.payloadType)))}if(NP("USE_RTX")){const e=d.map(e=>e.payloadType.toString()),t=a.videoCodecs.filter(t=>{var r,i;return"rtx"===(null===(r=t.rtpMap)||void 0===r?void 0:r.encodingName)&&e.includes((null===(i=t.fmtp)||void 0===i?void 0:i.parameters.apt)||"")});d=[...d,...t]}if(0===d.length)HD.warning("codec ".concat(i," not included in rtpCapabilities, fallback to default payloads: ").concat(null===(A=a.videoCodecs[0].rtpMap)||void 0===A?void 0:A.encodingName)),d=a.videoCodecs}else d=a.audioCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"").includes(n)}),0===d.length&&(HD.warning("codec ".concat(n," not included in rtpCapabilities, fallback to opus")),d=a.audioCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||"").includes("opus")}));const h=s===dB.VIDEO?a.videoExtensions:a.audioExtensions;this.currentMidIndex+=1;const l="".concat(this.currentMidIndex);let p={media:{mediaType:s,port:I1,protos:["UDP","TLS","RTP","SAVPF"],fmts:d.map(e=>e.payloadType.toString(10))},connections:[{nettype:"IN",addrtype:"IP4",address:"127.0.0.1"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:h,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:d,rtcp:{port:"9",netType:"IN",addressType:"IP4",address:"0.0.0.0"},setup:this.setup,direction:r,rtcpMux:!0,rtcpRsize:!0,mid:"".concat(l)}};p=this.mungRecvMediaDsec(p,e,o);const g=this.findFirstClosedMedia(s);if(g){const e=this.sessionDesc.mediaDescriptions.indexOf(g);this.sessionDesc.mediaDescriptions[e]=p}else this.sessionDesc.mediaDescriptions.push(p);return p}createOrRecycleSendMedia(e,t,r,i,n){const o=this.rtpCapabilities.send,s=e===dB.VIDEO?o.videoCodecs:o.audioCodecs,a=e===dB.VIDEO?o.videoExtensions:o.audioExtensions;this.currentMidIndex+=1;const c="".concat(this.currentMidIndex);let d={media:{mediaType:e,port:I1,protos:["UDP","TLS","RTP","SAVPF"],fmts:s.map(e=>e.payloadType.toString(10))},connections:[{nettype:"IN",addrtype:"IP4",address:"127.0.0.1"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:a,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:r,rtcpFeedbackWildcards:[],payloads:s,rtcp:{port:"9",netType:"IN",addressType:"IP4",address:"0.0.0.0"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:"".concat(c)}};d=this.mungSendMediaDesc(d,n);const u=this.findFirstClosedMedia(e);if(u){const e=this.sessionDesc.mediaDescriptions.indexOf(u);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter(e=>"0"!==e.media.port).map(e=>e.attributes.mid)}mungRecvMediaDsec(e,t,r){const i=OK(e);return F$(i),Q$(i,t),V$(i,t),function(e){if("video"!==e.media.mediaType)return;const t=oO();if(t.name!==tO.SAFARI&&t.os!==eO.IOS)return;const r=e.attributes.extmaps.findIndex(e=>/video-orientation/g.test(e.extensionName));-1!==r&&e.attributes.extmaps.splice(r,1)}(i),j$(i,r,this.localCapabilities.send),i}mungSendMediaDesc(e,t){const r=OK(e);return j$(r,t,this.localCapabilities.recv),r}updateRecvMedia(e,t){const r=this.sessionDesc.mediaDescriptions.findIndex(t=>t.attributes.mid===e);if(-1!==r){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[r],t);this.sessionDesc.mediaDescriptions[r]=e}}bumpMid(e){this.currentMidIndex+=e}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find(t=>gO()?"0"===t.media.port&&t.media.mediaType===e:"0"===t.media.port)}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find(t=>{var r,i;return(null===(r=t.attributes)||void 0===r||null===(i=r.ssrcs[0])||void 0===i?void 0:i.ssrcId)===e[0].ssrcId})}getSSRC(e){var t;return null===(t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e))||void 0===t?void 0:t.attributes.ssrcs}})||f1;var C1,S1;function v1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function T1(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?v1(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):v1(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}let R1=gP("P2PConnection","store.p2pId")((UV((S1=class e extends gB{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}constructor(t,r){super(t,r),kO(this,"store",void 0),kO(this,"peerConnection",void 0),kO(this,"remoteSDP",void 0),kO(this,"initialOffer",void 0),kO(this,"transportEventReceiver",void 0),kO(this,"statsFilter",void 0),kO(this,"useRTX",NP("USE_RTX")),kO(this,"localCapabilities",void 0),kO(this,"localCandidateCount",0),kO(this,"allCandidatesReceived",!1),kO(this,"mutex",new Ej("P2PConnection-mutex")),this.store=r,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=h1(this.peerConnection,void 0,void 0,gO()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(){try{this.peerConnection.addTransceiver("video",{direction:"recvonly"}),this.peerConnection.addTransceiver("audio",{direction:"recvonly"});const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error("Cannot get initialOffer.sdp when trying to establish PeerConnection.");const t=M$(e.sdp),r=await async function(e,t,r,i,n){const o=new RTCPeerConnection;o.addTransceiver("video",{direction:"sendonly"}),o.addTransceiver("audio",{direction:"sendonly"}),o.addTransceiver("video",{direction:"recvonly"}),o.addTransceiver("audio",{direction:"recvonly"});const s=(await o.createOffer()).sdp,a=B$(s,e,t,r,i,n,"sendonly"),c=B$(s,e,t,r,i,n,"recvonly"),d={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},u={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},A={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(G$(a,c,"videoExtensions",d,u,A),G$(a,c,"videoCodecs",d,u,A),G$(a,c,"audioExtensions",d,u,A),G$(a,c,"audioCodecs",d,u,A),NP("RAISE_H264_BASELINE_PRIORITY")){const e=A.videoCodecs.findIndex(e=>{var t,r;return"h264"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&"42001f"===(null===(r=e.fmtp)||void 0===r?void 0:r.parameters["profile-level-id"])});if(-1!==e){const t=A.videoCodecs.findIndex(e=>{var t;return"h264"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())});if(t<e){HD.debug("raising H264 baseline profile priority");const r=A.videoCodecs[e];A.videoCodecs.splice(e,1),A.videoCodecs.splice(t,0,r)}-1!==t&&(u.videoCodecs=u.videoCodecs.filter(e=>{var t,r;return!("h264"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&"42001f"!==(null===(r=e.fmtp)||void 0===r?void 0:r.parameters["profile-level-id"]))})),-1!==t&&NP("FILTER_SEND_H264_BASELINE")&&(d.videoCodecs=d.videoCodecs.filter(e=>{var t,r;return!("h264"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&"42001f"!==(null===(r=e.fmtp)||void 0===r?void 0:r.parameters["profile-level-id"]))}))}}try{o.close()}catch(e){}return{send:d,recv:u,sendrecv:A}}(!this.useRTX,NP("FILTER_VIDEO_FEC"),NP("FILTER_AUDIO_FEC"));return this.localCapabilities=K$(r),this.initialOffer=e,T1(T1({},t),{},{rtpCapabilities:r,offerSDP:e.sdp})}catch(e){throw new UD(MD.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,r,i,n,o){try{if(!this.initialOffer)throw new Error("Cannot establish P2PConnection without initial offer.");this.remoteSDP=new _1({remoteIceParameters:e,remoteDtlsParameters:t,candidates:r,remoteRTPCapabilities:i,remoteSetup:n,localCapabilities:this.localCapabilities,cname:o});const s=this.remoteSDP.toString(),a=this.logSDPExchange(this.initialOffer.sdp||"","offer","local","connect");await this.peerConnection.setLocalDescription(this.initialOffer),null==a||a(s),await this.peerConnection.setRemoteDescription({type:"answer",sdp:s});const c=this.peerConnection.getTransceivers()[0];if(null!=c&&c.receiver&&this.tryBindTransportEvents(c.receiver),NP("PRELOAD_MEDIA_COUNT")>0){this.remoteSDP.preloadRemoteMedia();const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:"offer",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t)}}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.connect failed; ".concat(e.toString()))}}send(e,t,r){var i=this;return a$((function*(){const n=yield c$(i.mutex.lock());try{if(!i.remoteSDP)throw new Error("Cannot call P2PConnection.send before remote SDP created");const o=[];e.forEach(e=>{const t=i.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:"sendonly"});o.push(t)}),gO()&&!0===NP("SIMULCAST")&&(cP("debug",i,"apply simulcast for firefox"),yield c$(i.applySimulcastForFirefox(o,e)));const s=yield c$(i.peerConnection.createOffer()),a=i.remoteSDP.predictReceivingMids(e.length),c=i.mungSendOfferSDP(s.sdp,e,a),d=P$.exports.parse(c),u=a.map(e=>{const t=d.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error("Cannot extract ssrc from mediaDescription.");return function(e,t){const r=[],i=e.attributes.ssrcGroups.filter(e=>"FID"===e.semantic),n=e.attributes.ssrcGroups.find(e=>"SIM"===e.semantic),o=e.attributes.ssrcs;if(n)n.ssrcIds.forEach(e=>{var n;const o=null===(n=i.find(t=>t.ssrcIds[0]===e))||void 0===n?void 0:n.ssrcIds[1];r.push({ssrcId:e,rtx:t?o:void 0})});else if(i.length>0){const e=i[0].ssrcIds[0],n=i[0].ssrcIds[1];r.push({ssrcId:e,rtx:t?n:void 0})}else{if(0===o.length)throw new Error("No ssrcs found on local media description.");r.push({ssrcId:o[0].ssrcId})}return r}(t,i.useRTX)});let A;try{A=yield u}catch(n){A=[],i.remoteSDP.receive(e,t,r,A);const o=i.remoteSDP.toString();throw yield c$(i.peerConnection.setLocalDescription({type:"offer",sdp:c})),yield c$(i.peerConnection.setRemoteDescription({type:"answer",sdp:o})),yield c$(i.stopSending(a,!0)),n}i.remoteSDP.receive(e,t,r,A);const h=i.remoteSDP.toString(),l=i.logSDPExchange(c,"offer","local","send");return yield c$(i.peerConnection.setLocalDescription({type:"offer",sdp:c})),yield c$(i.applySimulcastEncodings(o,e)),yield c$(i.applySendEncodings(o,e)),null==l||l(h),yield c$(i.peerConnection.setRemoteDescription({type:"answer",sdp:h})),o.map((e,t)=>{const r=a[t];return{localSSRC:u[t],id:r,transceiver:e}})}catch(e){throw e instanceof UD?e:new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.send failed; ".concat(e.toString()))}finally{n()}}))()}async stopSending(e,t){const r=t?void 0:await this.mutex.lock("From P2PConnection.stopSending");try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.stopSending before remote SDP created");const t=this.peerConnection.getTransceivers().filter(t=>-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error("Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.");t.map(e=>{var t;e.direction="inactive",null===(t=e.stop)||void 0===t||t.call(e)});const i=await this.peerConnection.createOffer(),n=this.logSDPExchange(i.sdp||"","offer","local","stopSending");await this.peerConnection.setLocalDescription(i),this.remoteSDP.stopReceiving(e);const o=this.remoteSDP.toString();null==n||n(o),await this.peerConnection.setRemoteDescription({type:"answer",sdp:o})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.stopSending failed; ".concat(e.toString()))}finally{r&&r()}}async receive(e,t,r,i){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.receive ".concat(e," before remoteSDP created."));const{mid:n,needExchangeSDP:o}=this.remoteSDP.send(e,t,r,i);if(o){const t=this.remoteSDP.toString(),r=this.logSDPExchange(t,"offer","remote","receive");await this.peerConnection.setRemoteDescription({type:"offer",sdp:t});const i=await this.peerConnection.createAnswer();null==r||r(i.sdp||""),await this.peerConnection.setLocalDescription(i),HD.debug("[P2PConnection] receive ".concat(e," by exchanging SDP."))}else HD.debug("[P2PConnection] receive ".concat(e," no need to exchange SDP."));const s=this.peerConnection.getTransceivers().find(e=>e.mid===n);if(!s)throw new Error("Cannot get transceiver after setLocalDescription.");return{track:s.receiver.track,id:n}}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.receive failed; ".concat(e.toString()))}}async batchReceive(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.batchReceive before remoteSDP created.");const{mids:t,needExchangeSDP:r}=this.remoteSDP.batchSend(e);if(r){const e=this.remoteSDP.toString(),t=this.logSDPExchange(e,"offer","remote","receive");await this.peerConnection.setRemoteDescription({type:"offer",sdp:e});const r=await this.peerConnection.createAnswer();null==t||t(r.sdp||""),await this.peerConnection.setLocalDescription(r),HD.debug("[P2PConnection] batchReceive by exchanging SDP.")}else HD.debug("[P2PConnection] batchReceive no need to exchange SDP.");return t.map(e=>{const t=this.peerConnection.getTransceivers().find(t=>t.mid===e);if(!t)throw new Error("Cannot get transceiver after setLocalDescription.");return{track:t.receiver.track,id:e}})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.receive failed; ".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.stopReceiving before remote SDP created.");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),r=this.logSDPExchange(t,"offer","remote","stopReceiving");await this.peerConnection.setRemoteDescription({type:"offer",sdp:t});const i=await this.peerConnection.createAnswer();null==r||r(i.sdp||""),await this.peerConnection.setLocalDescription(i)}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection stopReceiving failed; ".concat(e.toString()))}}async muteRemote(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.muteRemote mid=".concat(e," before remote SDP created."));this.remoteSDP.mute(e);const t=this.remoteSDP.toString(),r=this.logSDPExchange(t,"offer","remote","muteRemote");await this.peerConnection.setRemoteDescription({type:"offer",sdp:t});const i=await this.peerConnection.createAnswer();null==r||r(i.sdp||""),await this.peerConnection.setLocalDescription(i)}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.muteRemote failed; ".concat(e.toString()))}}async unmuteRemote(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.unmuteRemote mid=".concat(e," before remote SDP created."));this.remoteSDP.unmute(e);const t=this.remoteSDP.toString(),r=this.logSDPExchange(t,"offer","remote","unmuteRemote");await this.peerConnection.setRemoteDescription({type:"offer",sdp:t});const i=await this.peerConnection.createAnswer();null==r||r(i.sdp||""),await this.peerConnection.setLocalDescription(i)}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.unmuteRemote failed; ".concat(e.toString()))}}async muteLocal(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.muteLocal before remote SDP created.");const t=this.peerConnection.getTransceivers().filter(t=>t.mid&&-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error("Transceivers' length doesn't match mids' length.");t.map(e=>{e.direction="inactive"});const r=await this.peerConnection.createOffer(),i=this.logSDPExchange(r.sdp||"","offer","local","muteLocal");await this.peerConnection.setLocalDescription(r),this.remoteSDP.muteRemote(e);const n=this.remoteSDP.toString();null==i||i(n),await this.peerConnection.setRemoteDescription({type:"answer",sdp:n})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.muteLocal failed; ".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.unmuteLocal before remote SDP created.");const t=this.peerConnection.getTransceivers().filter(t=>t.mid&&-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error("Transceivers' length doesn't match mids' length.");t.map(async(e,t)=>{e.direction="sendonly"});const r=await this.peerConnection.createOffer(),i=this.logSDPExchange(r.sdp||"","offer","local","unmuteLocal");await this.peerConnection.setLocalDescription(r),this.remoteSDP.unmuteRemote(e);const n=this.remoteSDP.toString();null==i||i(n),await this.peerConnection.setRemoteDescription({type:"answer",sdp:n})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.unmuteLocal failed; ".concat(e.toString()))}}async reEstablish(){const e=await this.peerConnection.createOffer({iceRestart:!0});if(!e.sdp)throw new Error("Cannot get SDP from restart offer.");return{iceParameters:M$(e.sdp).iceParameters,restartICE:async(t,r)=>this.restartICE(e,t,r),restartOfferSDP:e.sdp}}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,"closed"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.transportEventReceiver=void 0,this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error("Cannot call P2PConnection.updateEncoderConfig before remote SDP created.");const r=await this.peerConnection.createOffer(),i=this.mungSendOfferSDP(r.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const n=this.remoteSDP.toString(),o=this.logSDPExchange(i,"offer","local","updateEncoderConfig");await this.peerConnection.setLocalDescription({type:"offer",sdp:i}),null==o||o(n),await this.peerConnection.setRemoteDescription({type:"answer",sdp:n})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const r=this.peerConnection.getTransceivers().filter(t=>t.mid===e);1===r.length&&(this.isVP8Simulcast(t)?gO()||await this.applySimulcastEncodings(r,[t]):await this.applySendEncodings(r,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const r=this.peerConnection.getTransceivers().find(e=>e.mid===t);r&&await r.sender.replaceTrack(e._mediaStreamTrack)}async restartICE(e,t,r){try{if(!this.remoteSDP)throw new Error("Cannot restartICE before remoteSDP created.");this.remoteSDP.restartICE(t,r);const i=this.remoteSDP.toString(),n=this.logSDPExchange(e.sdp||"","offer","local","restartICE");await this.peerConnection.setLocalDescription(e),null==n||n(i),await this.peerConnection.setRemoteDescription({type:"answer",sdp:i})}catch(e){throw new UD(MD.EXCHANGE_SDP_FAILED,"P2PConnection.restartICE failed; ".concat(e.toString()))}}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,HD.debug("[pc-".concat(this.store.p2pId,"] local candidate count"),this.localCandidateCount))},setTimeout(()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,HD.debug("[pc-".concat(this.store.p2pId,"] onicecandidate timeout, local candidate count"),this.localCandidateCount))},NP("CANDIDATE_TIMEOUT"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const r={iceServers:[]};return t.iceServers?r.iceServers=t.iceServers:t.turnServer&&"off"!==t.turnServer.mode&&(Sk(t.turnServer.servers)?r.iceServers=t.turnServer.servers:(r.iceServers&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),NP("USE_TURN_SERVER_OF_GATEWAY")&&r.iceServers&&t.turnServer.serversFromGateway&&r.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),NP("FORCE_TURN_TCP")?r.iceTransportPolicy="relay":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach(e=>{e.forceturn&&(r.iceTransportPolicy="relay")}))),r}static turnServerConfigToIceServers(e){const t=[];return e.forEach(e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:"password",urls:"turns:".concat(rK(e.turnServerURL),":").concat(e.tcpport,"?transport=tcp")}):(e.udpport&&!NP("FORCE_TURN_TCP")&&t.push({username:e.username,credential:e.password,credentialType:"password",urls:"turn:".concat(e.turnServerURL,":").concat(e.udpport,"?transport=udp")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:"password",urls:"turn:".concat(e.turnServerURL,":").concat(e.tcpport,"?transport=tcp")}))}),t}tryBindTransportEvents(e){e.transport&&(this.transportEventReceiver=e,e.transport.onstatechange=()=>{var t,r;null!==(t=e.transport)&&void 0!==t&&t.state&&(null===(r=this.onDTLSTransportStateChange)||void 0===r||r.call(this,e.transport.state))},e.transport.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,e.error)},e.transport.iceTransport&&(e.transport.iceTransport.onstatechange=()=>{var t,r,i;null!==(t=e.transport)&&void 0!==t&&t.iceTransport.state&&(null===(r=this.onICETransportStateChange)||void 0===r||r.call(this,null===(i=e.transport)||void 0===i?void 0:i.iceTransport.state))}))}tryUnbindTransportEvents(){this.transportEventReceiver&&this.transportEventReceiver.transport&&(this.transportEventReceiver.transport.onstatechange=null,this.transportEventReceiver.transport.onerror=null,this.transportEventReceiver.transport.iceTransport&&(this.transportEventReceiver.transport.iceTransport.onstatechange=null))}async applySendEncodings(e,t){try{if(!vB().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let c=0;c<e.length;c++){const d=e[c],u=t[c];if(u&&u instanceof $X){var r,i;if(this.isVP8Simulcast(u))continue;const e={},t={};switch(u._optimizationMode){case"motion":e.degradationPreference="maintain-framerate";break;case"detail":e.degradationPreference="maintain-resolution";break;default:e.degradationPreference="balanced"}var n,o,s,a;if(null!==(r=u._encoderConfig)&&void 0!==r&&r.bitrateMax)t.maxBitrate=1e3*(null===(n=u._encoderConfig)||void 0===n?void 0:n.bitrateMax);if(u._hints.includes(Xk.LOW_STREAM))null!==(o=u._encoderConfig)&&void 0!==o&&o.frameRate&&(t.maxFramerate=nK(u._encoderConfig.frameRate)),null!==(s=u._encoderConfig)&&void 0!==s&&s.scaleResolutionDownBy&&(null===(a=u._encoderConfig)||void 0===a?void 0:a.scaleResolutionDownBy)>1&&(t.scaleResolutionDownBy=u._encoderConfig.scaleResolutionDownBy);if(NP("DSCP_TYPE")&&RO()){const e=NP("DSCP_TYPE");["very-low","low","medium","high"].includes(e)&&(t.networkPriority=e)}const c=d.sender.getParameters(),A=null===(i=c.encodings)||void 0===i?void 0:i[0];gO()&&!A&&(e.encodings=[t]),A&&Object.assign(A,t),Object.assign(c,e),await d.sender.setParameters(c)}}}catch(e){HD.debug("Apply RTPSendEncodings failed.")}}mungSendOfferSDP(e,t,r){const i=P$.exports.parse(e);return t.forEach((e,t)=>{const n=r[t],o=i.mediaDescriptions.find(e=>e.attributes.mid===n);o&&(Q$(o,e),function(e,t,r){if(gO())return;if("video"!==e.media.mediaType)return;if(!(t instanceof $X))return;if("vp9"!==r&&"vp8"!==r)return;if("vp8"===r&&!NP("SIMULCAST"))return;if(void 0===t._scalabiltyMode||t._scalabiltyMode.numSpatialLayers<=1)return;const i="vp8"===r?2:t._scalabiltyMode.numSpatialLayers,n=e.attributes.ssrcs[0],o=e.attributes.ssrcGroups.find(e=>"FID"===e.semantic&&e.ssrcIds[0]===n.ssrcId),s={semantic:"SIM",ssrcIds:[n.ssrcId]};for(let t=1;t<i;t++)e.attributes.ssrcs.push({ssrcId:n.ssrcId+t,attributes:OK(n.attributes)}),s.ssrcIds.push(n.ssrcId+t),o&&(e.attributes.ssrcs.push({ssrcId:o.ssrcIds[1]+t,attributes:OK(n.attributes)}),e.attributes.ssrcGroups.push({semantic:"FID",ssrcIds:[n.ssrcId+t,o.ssrcIds[1]+t]}));e.attributes.ssrcGroups.unshift(s)}(o,e,this.store.codec))}),P$.exports.print(i)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,r)=>{var i;null===(i=this.onFirstVideoDecoded)||void 0===i||i.call(this,e,t,r)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var r;null===(r=this.onSelectedLocalCandidateChanged)||void 0===r||r.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var r;null===(r=this.onSelectedRemoteCandidateChanged)||void 0===r||r.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let s=0;s<e.length;s++){var r,i,n,o;const a=e[s],c=t[s];if(c instanceof $X&&!c._hints.includes(Xk.LOW_STREAM)&&null!==(r=c._encoderConfig)&&void 0!==r&&r.bitrateMax&&(null===(i=c._encoderConfig)||void 0===i?void 0:i.bitrateMax)>200&&null!==(n=c._scalabiltyMode)&&void 0!==n&&n.numSpatialLayers&&(null===(o=c._scalabiltyMode)||void 0===o?void 0:o.numSpatialLayers)>1&&"vp8"===this.store.codec){const e={},t={high:1e3*(c._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:"m",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:"h",active:!0,maxBitrate:t.high}];const r=a.sender.getParameters();await a.sender.setParameters(Object.assign(r,e))}}}async applySimulcastEncodings(e,t){if(!gO()&&e.length===t.length)for(let r=0;r<e.length;r++){const i=t[r];if(i instanceof $X&&this.isVP8Simulcast(i)){const t=e[r],n={},o={high:1e3*(i._encoderConfig.bitrateMax-50),medium:5e4};n.encodings=[{active:!0,adaptivePtime:!1,networkPriority:"high",priority:"high",maxBitrate:o.high},{active:!0,adaptivePtime:!1,networkPriority:"low",priority:"low",maxBitrate:o.medium,scaleResolutionDownBy:4}];const s=t.sender.getParameters();await t.sender.setParameters(Object.assign(s,n))}}}isVP8Simulcast(e){var t,r,i,n;return!!(e instanceof $X&&NP("SIMULCAST")&&"vp8"===this.store.codec&&!e._hints.includes(Xk.LOW_STREAM)&&null!==(t=e._encoderConfig)&&void 0!==t&&t.bitrateMax&&(null===(r=e._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(i=e._scalabiltyMode)&&void 0!==i&&i.numSpatialLayers&&(null===(n=e._scalabiltyMode)||void 0===n?void 0:n.numSpatialLayers)>1)}logSDPExchange(e,t,r,i){if(NP("SDP_LOGGING"))return HD.upload("exchanging ".concat(r," ").concat(t," SDP during P2PConnection.").concat(i,"\n"),e),"offer"===t?e=>{this.logSDPExchange(e,"answer","local"===r?"remote":"local",i)}:void 0}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}}).prototype,"connect",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"connect"),S1.prototype),UV(S1.prototype,"receive",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"receive"),S1.prototype),UV(S1.prototype,"batchReceive",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"batchReceive"),S1.prototype),UV(S1.prototype,"stopReceiving",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"stopReceiving"),S1.prototype),UV(S1.prototype,"muteRemote",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"muteRemote"),S1.prototype),UV(S1.prototype,"unmuteRemote",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"unmuteRemote"),S1.prototype),UV(S1.prototype,"muteLocal",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"muteLocal"),S1.prototype),UV(S1.prototype,"unmuteLocal",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"unmuteLocal"),S1.prototype),UV(S1.prototype,"reEstablish",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"reEstablish"),S1.prototype),UV(S1.prototype,"close",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"close"),S1.prototype),UV(S1.prototype,"updateEncoderConfig",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"updateEncoderConfig"),S1.prototype),UV(S1.prototype,"updateSendParameters",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"updateSendParameters"),S1.prototype),UV(S1.prototype,"replaceTrack",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"replaceTrack"),S1.prototype),UV(S1.prototype,"restartICE",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"restartICE"),S1.prototype),UV(S1.prototype,"getRemoteSSRC",[y1],Object.getOwnPropertyDescriptor(S1.prototype,"getRemoteSSRC"),S1.prototype),C1=S1))||C1;function y1(e,t,r){const i=e[t];if("function"!=typeof i)throw new Error("Cannot use mutex on object property.");return r.value=async function(){const e=this.mutex,r=await e.lock("From P2PConnection.".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await i.apply(this,o)}finally{r()}},r}function w1(e,t){let r=document.createElement("video"),i=document.createElement("canvas");r.setAttribute("style","display:none"),i.setAttribute("style","display:none"),r.setAttribute("muted",""),r.muted=!0,r.setAttribute("autoplay",""),r.autoplay=!0,r.setAttribute("playsinline",""),i.width=nK(t.width),i.height=nK(t.height);const n=nK(t.framerate||15);document.body.append(r),document.body.append(i);let o=e._mediaStreamTrack;r.srcObject=new MediaStream([o]),r.play();const s=i.getContext("2d");if(!s)throw new UD(MD.UNEXPECTED_ERROR,"can not get canvas context");const a=vB(),c=i.captureStream(a.supportRequestFrame?0:n).getVideoTracks()[0],d=Nj(()=>(()=>{if(r.paused&&r.play(),r.videoHeight>2&&r.videoWidth>2){const e=r.videoWidth,t=r.videoHeight/e,n=i.width*t;Math.abs(n-i.height)>=2&&(HD.debug("adjust low stream resolution","".concat(i.width,"x").concat(i.height," -> ").concat(i.width,"x").concat(n)),i.height=n)}s.drawImage(r,0,0,i.width,i.height),c.requestFrame&&c.requestFrame(),o!==e._mediaStreamTrack&&(o=e._mediaStreamTrack,r.srcObject=new MediaStream([o]))})(),n),u=c.stop;return c.stop=()=>{u.call(c),d(),r&&(r.remove(),r=null),i&&(i.width=0,i.remove(),i=null),HD.debug("clean low stream renderer")},c}var b1,O1;function N1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function D1(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?N1(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):N1(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class P1 extends Aj{getUserId(){return this._userId}constructor(e,t,r,i){super(e,"track-".concat(e.kind,"-").concat(t,"-").concat(i.clientId,"_").concat(fK(5,""))),kO(this,"_userId",void 0),kO(this,"_uintId",void 0),kO(this,"_isDestroyed",!1),kO(this,"store",void 0),kO(this,"processor",void 0),kO(this,"processorContext",void 0),this._userId=t,this._uintId=r,this.store=i}_updateOriginMediaStreamTrack(e){this._originMediaStreamTrack=e,this._mediaStreamTrack=e,this._updatePlayerSource(),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext})}_destroy(){this._isDestroyed=!0,HD.info("[".concat(this.getTrackId(),"] is destroyed")),hP("info",this,"_destroy"),this.stop(),super.close()}}let L1=gP("RemoteVideoTrack","getTrackId")(b1=class extends P1{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==WL.PLAYING)}constructor(e,t,r,i){super(e,t,r,i),kO(this,"_videoVisibleTimer",null),kO(this,"_previousVideoVisibleStatus",void 0),kO(this,"_clearPreviousVideoVisibleStatus",()=>this._previousVideoVisibleStatus=void 0),kO(this,"trackMediaType","video"),kO(this,"_videoWidth",void 0),kO(this,"_videoHeight",void 0),kO(this,"_player",void 0),kO(this,"processorDestination",void 0),kO(this,"processorContext",void 0),hP("info",this,"constructor",{userId:t}),this.updateMediaStreamTrackResolution(),this.processorContext=new xG(this.getTrackId()),this.processorDestination=new UG(this.processorContext),this.bindProcessorDestinationEvents()}getStats(){DK(()=>{HD.warning("[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead"),cP("warning",this,"[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead")},"remoteVideoTrackGetStatsWarning");return TK(this,qk.GET_STATS)||D1({},Ok)}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_VIDEO_TRACK_PLAY,options:[this.getTrackId(),"string"==typeof e?e:"HTMLElement",t]});if("string"==typeof e){const t=document.getElementById(e);t?e=t:(HD.warning("[".concat(this.getTrackId(),'] can not find "#').concat(e,'" element, use document.body')),cP("warning",this,'can not find "#'.concat(e,'" element, use document.body')),e=document.body)}HD.debug("[".concat(this.getTrackId(),"] start video playback"),JSON.stringify(t)),hP("debug",this,"play",t);const i=D1(D1({fit:"cover"},t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(i):(this._player=new Jq(i),this._player.updateVideoTrack(this._mediaStreamTrack),this._player.onFirstVideoFrameDecoded=()=>{this.store.subscribe(this.getUserId(),"video",void 0,void 0,Date.now()),this.emit(eB.FIRST_FRAME_DECODED)}),this._player.play(this.store.sessionId||void 0),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval(()=>{try{const e=this.getVideoElementVisibleStatus();this.emit(eB.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}},NP("CHECK_VIDEO_VISIBLE_INTERVAL")),r.onSuccess()}stop(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_VIDEO_TRACK_STOP,options:[this.getTrackId()]});if(!this._player)return e.onSuccess();this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,HD.debug("[".concat(this.getTrackId(),"] stop video playback")),hP("debug",this,"stop"),e.onSuccess()}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}updateMediaStreamTrackResolution(){_K(this._originMediaStreamTrack).then(e=>{let[t,r]=e;this._videoHeight=r,this._videoWidth=t}).catch(mK)}_updatePlayerSource(){HD.debug("[".concat(this.getTrackId(),"] update player source track")),hP("debug",this,"_updatePlayerSource"),this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}getVideoElementVisibleStatus(){try{var e,t;const r=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),i={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==r?void 0:r.parentElement},{element:n,slot:o}=i;if(this.isPlaying&&n instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=XX.checkOneElementVisible(n),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess("Video is visible"):e.onSuccess("Invisible because of ".concat(t.reason))}return t}return}catch(e){throw new UD(MD.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}pipe(e){if(this.processor===e)return e;if(e._source)throw new UD(MD.INVALID_OPERATION,"Processor ".concat(e.name," already piped, please call unpipe beforehand."));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(fB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource()):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(fB.ON_TRACK)}_destroy(){super._destroy(),this.unbindProcessorDestinationEvents()}})||b1,k1=gP("RemoteAudioTrack","getTrackId")(O1=class extends P1{get isPlaying(){return this._useAudioElement?zj.isPlaying(this.getTrackId()):this._source.isPlayed}constructor(e,t,r,i){super(e,t,r,i),kO(this,"trackMediaType","audio"),kO(this,"_source",void 0),kO(this,"_useAudioElement",!0),kO(this,"_volume",100),kO(this,"processorContext",void 0),kO(this,"processorDestination",void 0),kO(this,"_played",!1),hP("info",this,"constructor",{userId:t}),NP("REMOTE_AUDIO_TRACK_USES_WEB_AUDIO")&&(this._useAudioElement=!1),this._source=new kj(e,!0),this._source.once(mk.RECEIVE_TRACK_BUFFER,()=>{this.emit(eB.FIRST_FRAME_DECODED)}),this.processorContext=new FG(this._source.context,this.getTrackId()),this.processorDestination=new QG(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(mk.UPDATE_SOURCE,()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})})}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(mk.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(mk.ON_AUDIO_BUFFER),this._source.on(mk.ON_AUDIO_BUFFER,t=>e(t))}setVolume(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_AUDIO_SET_VOLUME,options:[this.getTrackId(),e]},300);this._volume=e,this._useAudioElement?zj.setVolume(this.getTrackId(),e):this._source.setVolume(e/100),t.onSuccess()}async setPlaybackDevice(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_AUDIO_SET_OUTPUT_DEVICE,options:[this.getTrackId(),e]});if(!this._useAudioElement)throw new UD(MD.NOT_SUPPORTED,"your browser does not support setting the audio output device");try{await zj.setSinkID(this.getTrackId(),e)}catch(e){throw t.onError(e),e}t.onSuccess()}getVolumeLevel(){return this._source.getAccurateVolumeLevel()}getStats(){DK(()=>{HD.warning("[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead"),cP("warning",this,"[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead")},"remoteAudioTrackGetStatsWarning");return TK(this,qk.GET_STATS)||D1({},wk)}play(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_AUDIO_TRACK_PLAY,options:[this.getTrackId()]});HD.debug("[".concat(this.getTrackId(),"] start audio playback")),hP("debug",this,"play"),this._played=!0,this._useAudioElement?(HD.debug("[".concat(this.getTrackId(),"] use audio element to play")),cP("debug",this,"use audio element to play"),zj.play(this._mediaStreamTrack,this.getTrackId(),this._volume,this.store.sessionId||void 0)):this._source.play(),e.onSuccess()}stop(){const e=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.REMOTE_AUDIO_TRACK_STOP,options:[this.getTrackId()]});HD.debug("[".concat(this.getTrackId(),"] stop audio playback")),hP("debug",this,"stop"),this._played=!1,this._useAudioElement?zj.stop(this.getTrackId()):this._source.stop(),e.onSuccess()}_destroy(){super._destroy(),this._played=!1,this.unbindProcessorDestinationEvents(),this._source.destroy()}_isFreeze(){return this._source.isFreeze}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];HD.debug("[".concat(this.getTrackId(),"] update player source track")),hP("debug",this,"_updatePlayerSource"),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&zj.updateTrack(this.getTrackId(),this._mediaStreamTrack)}pipe(e){if(this.processor===e)return e;if(e._source)throw new UD(MD.INVALID_OPERATION,"Processor ".concat(e.name," already piped, please call unpipe beforehand."));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(fB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())}),this.processorDestination.on(fB.ON_NODE,e=>{this._source.processedNode=e;const t=!e;this._useAudioElement!==t&&(this._played?(this.stop(),this._useAudioElement=t,this.play()):this._useAudioElement=t)})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(fB.ON_TRACK),this.processorDestination.removeAllListeners(fB.ON_NODE)}})||O1;function B1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function M1(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?B1(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):B1(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class U1 extends kD{constructor(){super(),kO(this,"uplinkStatsUploadInterval",void 0),kO(this,"uplinkStatsUploadSlowInterval",void 0),kO(this,"uplinkRelatedStatsUploadInterval",void 0),kO(this,"uplinkDenoiserStatsUploadInterval",void 0),kO(this,"transportStatsUploadInterval",void 0),kO(this,"extensionStatsUploadInterval",void 0),kO(this,"downlinkStatsUploadInterval",void 0),kO(this,"downlinkStatsUploadSlowInterval",void 0),kO(this,"downlinkRelatedStatsUploadInterval",void 0),kO(this,"lastStats",void 0),kO(this,"uploadUnplinkStarted",!1),kO(this,"uploadDownlinkStarted",!1),kO(this,"uploadTransportStarted",!1),kO(this,"requestStats",void 0),kO(this,"requestLocalMedia",void 0),kO(this,"requestRemoteMedia",void 0),kO(this,"requestAllTracks",void 0),kO(this,"requestVideoIsReady",void 0),kO(this,"requestUpload",void 0)}startUploadTransportStats(){this.uploadTransportStarted||(this.uploadTransportStarted=!0,this.transportStatsUploadInterval&&window.clearInterval(this.transportStatsUploadInterval),this.transportStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadTransportStats(t)},6e3))}startUploadUplinkStats(){this.uploadUnplinkStarted||(this.uploadUnplinkStarted=!0,this.uplinkStatsUploadInterval&&window.clearInterval(this.uplinkStatsUploadInterval),this.uplinkStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&(this.uploadUplinkStats(t,this.lastStats),this.lastStats=t)},3e3),this.uplinkStatsUploadSlowInterval&&window.clearInterval(this.uplinkStatsUploadSlowInterval),this.uplinkStatsUploadSlowInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadSlowUplinkStats(t)},6e4),this.uplinkRelatedStatsUploadInterval&&window.clearInterval(this.uplinkRelatedStatsUploadInterval),this.uplinkRelatedStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadRelatedUplinkStats(t,this.lastStats),this.lastStats=t},1e3),this.uplinkDenoiserStatsUploadInterval&&window.clearInterval(this.uplinkDenoiserStatsUploadInterval),this.uplinkDenoiserStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestAllTracks)||void 0===e?void 0:e.call(this);t&&this.uploadDenoiserStats(t)},2e3),this.extensionStatsUploadInterval&&window.clearInterval(this.extensionStatsUploadInterval),this.extensionStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestAllTracks)||void 0===e?void 0:e.call(this);t&&this.uploadExtensionStats(t)},2e3))}uploadTransportStats(e){bK(()=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,Ek.TRANSPORT_STATS,function(e){const t={connectionType:100};if("relay"===e.selectedCandidatePair.localCandidate.candidateType){const r=e.selectedCandidatePair.localCandidate.relayProtocol;"udp"===r&&(t.connectionType=101),"tcp"===r&&(t.connectionType=103),"tls"===r&&(t.connectionType=104)}return t}(e))})}uploadUplinkStats(e,t){var r;((null===(r=this.requestLocalMedia)||void 0===r?void 0:r.call(this))||[]).forEach(r=>{let[i,{track:n,ssrcs:o}]=r;switch(i){case uB.LocalVideoLowTrack:case uB.LocalVideoTrack:{const r=function(e,t,r){var i;const n=t.videoSend.find(t=>t.ssrc===e);if(!n)return null;const o={id:fK(10,""),timestamp:new Date(t.timestamp).toISOString(),mediaType:"video",type:"ssrc",ssrc:n.ssrc.toString()};switch(o.A_vstd=r._originMediaStreamTrack&&!r._originMediaStreamTrack.enabled||!r._mediaStreamTrack.enabled?"1":"0",n.sentFrame&&(o.A_fhs=n.sentFrame.height.toString(),o.A_frs=n.sentFrame.frameRate.toString(),o.A_fws=n.sentFrame.width.toString()),n.adaptionChangeReason){case"none":o.A_ac="0";break;case"cpu":o.A_ac="1";break;case"bandwidth":o.A_ac="2";break;case"other":o.A_ac="3"}return o.A_lvps=YL[r._player?r._player.videoElementStatus:"uninit"].toString(),o.A_nr=null===(i=n.nacksCount)||void 0===i?void 0:i.toString(),n.avgEncodeMs&&(o.A_aem=n.avgEncodeMs.toFixed(0).toString()),o}(o[0].ssrcId,e,n),s=sK(o[0].ssrcId,e,t);r&&bK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ek.PUBLISH_STATS,{stream_type:i===uB.LocalVideoLowTrack?"low":"high",stats:M1(M1({},r),s)})});break}case uB.LocalAudioTrack:{const t=function(e,t,r){const i=t.audioSend.find(t=>t.ssrc===e);if(!i)return null;const n={id:fK(10,""),timestamp:new Date(t.timestamp).toISOString(),mediaType:"audio",type:"ssrc",ssrc:i.ssrc.toString()};return n.A_astd=r._originMediaStreamTrack.enabled&&r._mediaStreamTrack.enabled?"0":"1",i.inputLevel?n.A_ail=Math.round(100*i.inputLevel).toString():n.A_ail=Math.round(100*r._source.getAccurateVolumeLevel()).toString(),n.A_apil=Math.round(100*r._source.getAccurateVolumeLevel()).toString(),i.aecReturnLoss&&(n.A_ecrl=Math.round(i.aecReturnLoss).toString()),i.aecReturnLossEnhancement&&(n.A_ecrle=Math.round(i.aecReturnLossEnhancement).toString()),n}(o[0].ssrcId,e,n);t&&bK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ek.PUBLISH_STATS,{stream_type:"high",stats:t})});break}}const s=function(e){const t={id:"bweforvideo",timestamp:new Date(e.timestamp).toISOString(),type:"VideoBwe"};return e.bitrate.retransmit&&(t.A_rb=e.bitrate.retransmit.toString()),e.bitrate.targetEncoded&&(t.A_teb=e.bitrate.targetEncoded.toString()),t.A_aeb=e.bitrate.actualEncoded.toString(),t.A_tb=e.bitrate.transmit.toString(),void 0!==e.sendBandwidth&&(t.A_asb=e.sendBandwidth.toString()),t}(e);s&&bK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ek.PUBLISH_STATS,{stream_type:i===uB.LocalVideoLowTrack?"low":"high",stats:s})})})}uploadSlowUplinkStats(e){var t;((null===(t=this.requestLocalMedia)||void 0===t?void 0:t.call(this))||[]).filter(e=>{let[t]=e;return t===uB.LocalVideoLowTrack||t===uB.LocalVideoTrack}).forEach(t=>{let[r,{ssrcs:i}]=t;const n=sK(i[0].ssrcId,e);n&&bK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ek.PUBLISH_STATS,{stream_type:r===uB.LocalVideoLowTrack?"low":"high",stats:n})})})}uploadRelatedUplinkStats(e,t){var r;((null===(r=this.requestLocalMedia)||void 0===r?void 0:r.call(this))||[]).filter(e=>{let[t]=e;return t===uB.LocalVideoLowTrack||t===uB.LocalVideoTrack}).forEach(t=>{let[r,{ssrcs:i}]=t;const n=function(e,t){const r=t.videoSend.find(t=>t.ssrc===e);return r?{mediaType:"video",isVideoMute:!1,frameRateInput:r.inputFrame&&r.inputFrame.frameRate.toString(),frameRateSent:r.sentFrame&&r.sentFrame.frameRate.toString(),googRtt:r.rttMs.toString(),qpSumPerFrame:Math.floor(r.qpSumPerFrame).toString()}:null}(i[0].ssrcId,e);n&&bK(()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Ek.PUBLISH_RELATED_STATS,{stream_type:r===uB.LocalVideoLowTrack?"low":"high",stats:n})})})}uploadDenoiserStats(e){for(let n=0;n<e.length;n++){const o=e[n];if(o instanceof KG){var t,r,i;const e=null===(t=(r=o._external).getDenoiserStats)||void 0===t?void 0:t.call(r);return void(e&&(null===(i=this.requestUpload)||void 0===i||i.call(this,Ek.DENOISER_STATS,e)))}}}uploadExtensionStats(e){for(let t=0;t<e.length;t++){const r=e[t];if(r instanceof KG){return void r.getProcessorStats().forEach(e=>{var t;e.type===Ek.DENOISER_STATS&&(null===(t=this.requestUpload)||void 0===t||t.call(this,Ek.DENOISER_STATS,e.stats))})}}}stopUploadUplinkStats(){this.uploadUnplinkStarted&&(this.uploadUnplinkStarted=!1,this.uplinkStatsUploadInterval&&window.clearInterval(this.uplinkStatsUploadInterval),this.uplinkRelatedStatsUploadInterval&&window.clearInterval(this.uplinkRelatedStatsUploadInterval),this.uplinkDenoiserStatsUploadInterval&&window.clearInterval(this.uplinkDenoiserStatsUploadInterval),this.uplinkStatsUploadInterval=void 0,this.uplinkRelatedStatsUploadInterval=void 0,this.uplinkDenoiserStatsUploadInterval=void 0)}startUploadDownlinkStats(){this.uploadDownlinkStarted||(this.uploadDownlinkStarted=!0,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval),this.downlinkStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&(this.uploadDownlinkStats(t,this.lastStats),this.lastStats=t)},3e3),this.downlinkStatsUploadSlowInterval&&window.clearInterval(this.downlinkStatsUploadSlowInterval),this.downlinkStatsUploadSlowInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadSlowDownlinkStats(t)},6e4),this.downlinkRelatedStatsUploadInterval&&window.clearInterval(this.downlinkRelatedStatsUploadInterval),this.downlinkRelatedStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&(this.uploadRelatedDownlinkStats(t,this.lastStats),this.lastStats=t)},1e3))}uploadDownlinkStats(e,t){var r;((null===(r=this.requestRemoteMedia)||void 0===r?void 0:r.call(this))||[]).forEach(t=>{let[r,i]=t;if(i.has(dB.VIDEO)&&r.videoTrack){const t=r.videoTrack?function(e,t,r){const i=t.videoRecv.find(t=>t.ssrc===e);if(!i)return null;const n={id:fK(10,""),timestamp:new Date(t.timestamp).toISOString(),mediaType:"video",type:"ssrc",ssrc:i.ssrc.toString()};var o,s;return n.bytesReceived=i.bytes.toString(),n.packetsLost=i.packetsLost.toString(),n.packetsReceived=i.packets.toString(),i.framesRateFirefox&&(n.A_frr=i.framesRateFirefox.toString()),i.receivedFrame?(n.A_frr=i.receivedFrame.frameRate.toString(),n.A_fhr=i.receivedFrame.height.toString(),n.A_fwr=i.receivedFrame.width.toString()):(n.A_fhr=null===(o=r._videoHeight)||void 0===o?void 0:o.toString(),n.A_fwr=null===(s=r._videoWidth)||void 0===s?void 0:s.toString()),n.A_frd=i.decodeFrameRate.toString(),i.outputFrame&&(n.A_fro=i.outputFrame.frameRate.toString()),void 0!==i.jitterBufferMs&&(n.A_jbm=Math.floor(i.jitterBufferMs).toString()),void 0!==i.currentDelayMs&&(n.A_cdm=Math.floor(i.currentDelayMs).toString()),n.A_fs=i.firsCount.toString(),n.A_ns=i.nacksCount.toString(),n.A_ps=i.plisCount.toString(),r&&(n.A_vrtd=r._originMediaStreamTrack.enabled&&r._mediaStreamTrack.enabled?"0":"1"),r._player&&r._player.freezeTimeCounterList.length>0&&(n.A_vrft=r._player.freezeTimeCounterList.splice(0,1)[0].toString()),n.A_rvps=YL[r._player?r._player.videoElementStatus:"uninit"].toString(),n}(r._videoSSRC,e,r.videoTrack):void 0;t&&bK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ek.SUBSCRIBE_STATS,{stream_id:r.uid,stats:t})})}if(i.has(dB.AUDIO)&&r.audioTrack){const t=r.audioTrack?function(e,t,r){const i=t.audioRecv.find(t=>t.ssrc===e);if(!i)return null;const n={id:fK(10,""),timestamp:new Date(t.timestamp).toISOString(),mediaType:"audio",type:"ssrc",ssrc:i.ssrc.toString()};return n.bytesReceived=i.bytes.toString(),n.packetsLost=i.packetsLost.toString(),n.packetsReceived=i.packets.toString(),i.outputLevel?n.A_aol=Math.round(100*i.outputLevel).toString():n.A_aol=Math.round(100*r._source.getAccurateVolumeLevel()).toString(),n.A_apol=Math.round(100*r._source.getAccurateVolumeLevel()).toString(),r&&(n.A_artd=r._originMediaStreamTrack.enabled&&r._mediaStreamTrack.enabled?"0":"1"),n.A_jr=i.jitterMs.toString(),n.A_jbm=Math.floor(i.jitterBufferMs).toString(),n.A_cdm=Math.floor(i.jitterBufferMs).toString(),n.A_raps=YL[zj.getPlayerState(r.getTrackId())].toString(),n}(r._audioSSRC,e,r.audioTrack):void 0;t&&bK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ek.SUBSCRIBE_STATS,{stream_id:r.uid,stats:t})})}})}uploadSlowDownlinkStats(e){}uploadRelatedDownlinkStats(e,t){var r;((null===(r=this.requestRemoteMedia)||void 0===r?void 0:r.call(this))||[]).forEach(r=>{let[i,n]=r;if(n.has(dB.VIDEO)&&i.videoTrack){var o;const r=!0===(i._videoSSRC&&(null===(o=this.requestVideoIsReady)||void 0===o?void 0:o.call(this,i._videoSSRC))||!1),n=function(e,t,r,i,n,o){const s=r.videoRecv.find(t=>t.ssrc===e),a=n?n.videoRecv.find(t=>t.ssrc===e):void 0;if(!s)return null;const c=ZG.isRemoteVideoFreeze(o,s,a)&&t,d={mediaType:"video",isVideoMute:!1,peerId:i,frameRateReceived:s.receivedFrame&&s.receivedFrame.frameRate.toString(),frameRateDecoded:s.decodedFrame&&s.decodedFrame.frameRate.toString(),isFreeze:c,bytesReceived:s.bytes.toString(),packetsReceived:s.packets.toString(),packetsLost:s.packetsLost.toString(),qpSumPerFrame:Math.floor(s.qpSumPerFrame).toString()};return s.framesRateFirefox&&(d.frameRateDecoded=s.framesRateFirefox.toString(),d.frameRateReceived=s.framesRateFirefox.toString()),d}(i._videoSSRC,r,e,i.uid,t,i.videoTrack);n&&bK(()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Ek.SUBSCRIBE_RELATED_STATS,{stream_id:i.uid,stats:n})})}if(n.has(dB.AUDIO)&&i.audioTrack){const t=function(e,t,r,i){const n=t.audioRecv.find(t=>t.ssrc===e);if(!n)return null;const o=ZG.isRemoteAudioFreeze(i);return{mediaType:"audio",isAudioMute:!1,peerId:r,googJitterReceived:n.jitterMs.toString(),isFreeze:o,bytesReceived:n.bytes.toString(),packetsReceived:n.packets.toString(),packetsLost:n.packetsLost.toString(),frameReceived:n.receivedFrames.toString(),frameDropped:n.droppedFrames.toString()}}(i._audioSSRC,e,i.uid,i.audioTrack);t&&bK(()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Ek.SUBSCRIBE_RELATED_STATS,{stream_id:i.uid,stats:t})})}})}stopUploadDownlinkStats(){this.uploadDownlinkStarted&&(this.uploadDownlinkStarted=!1,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval),this.downlinkRelatedStatsUploadInterval&&window.clearInterval(this.downlinkRelatedStatsUploadInterval),this.downlinkStatsUploadInterval=void 0,this.downlinkRelatedStatsUploadInterval=void 0)}stopUploadTransportStats(){this.uploadTransportStarted&&(this.uploadTransportStarted=!1,this.transportStatsUploadInterval&&window.clearInterval(this.transportStatsUploadInterval),this.transportStatsUploadInterval=void 0)}}var x1,Q1;function F1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function V1(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?F1(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):F1(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function j1(e){var t,r,i,n=2;for("undefined"!=typeof Symbol&&(r=A$,i=Symbol.iterator);n--;){if(r&&null!=(t=e[r]))return t.call(e);if(i&&null!=(t=e[i]))return new G1(t.call(e));r="@@asyncIterator",i="@@iterator"}throw new TypeError("Object is not async iterable")}function G1(e){function t(e){if(Object(e)!==e)return nT.reject(new TypeError(e+" is not an object."));var t=e.done;return nT.resolve(e.value).then((function(e){return{value:e,done:t}}))}return(G1=function(e){this.s=e,this.n=e.next}).prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var r=this.s.return;return void 0===r?nT.resolve({value:e,done:!0}):t(r.apply(this.s,arguments))},throw:function(e){var r=this.s.return;return void 0===r?nT.reject(e):t(r.apply(this.s,arguments))}},new G1(e)}let K1=gP("P2PChannel","store.p2pId")((UV((Q1=class extends kD{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(hB.StateChange,t,this._state)}constructor(e,t){super(),kO(this,"store",void 0),kO(this,"statsUploader",void 0),kO(this,"connection",void 0),kO(this,"localTrackMap",new Map),kO(this,"remoteUserMap",new Map),kO(this,"pendingLocalTracks",[]),kO(this,"pendingRemoteTracks",[]),kO(this,"statsCollector",void 0),kO(this,"isPlanB",!1),kO(this,"iceFailedCount",0),kO(this,"dtlsFailedCount",0),kO(this,"mutex",new Ej("P2PChannel-mutex")),kO(this,"_state",AB.Disconnected),kO(this,"handleMuteLocalTrack",async(e,t,r)=>{const i=await this.mutex.lock("Locking from P2PChannel.handleMuteLocalTrack");try{if(!this.connection)return void r(new UD(MD.INVALID_OPERATION,"Cannot call P2PChannel.handleMuteLocalTrack before connection established."));hP("debug",this,"handleMuteLocalTrack",e.getTrackId()),await this.waitTillConnected();const n=this.filterTobeMutedTracks(e);if(0===n.length)return void t();const o=n.find(e=>"videoLowTrack"===e[0]);if(o){o[1].track._originMediaStreamTrack.stop()}await this.connection.muteLocal(n.map(e=>{let[,{id:t}]=e;return t}));const s=this.createMuteMessage(n);await vK(this,hB.RequestMuteLocal,s),t()}catch(e){r(e)}finally{i()}}),kO(this,"handleUnmuteLocalTrack",async(e,t,r)=>{const i=await this.mutex.lock("Locking from P2PChannel.handleUnmuteLocalTrack");try{if(!this.connection)return void r(new UD(MD.INVALID_OPERATION,"Cannot call P2PChannel.handleUnmuteLocalTrack before connection established."));hP("debug",this,"handleUnmuteLocalTrack",e.getTrackId()),await this.waitTillConnected();const n=this.filterTobeUnmutedTracks(e);if(0===n.length)return void t();const o=n.find(e=>"videoLowTrack"===e[0]);if(o){const t=o[1];if(t.track._originMediaStreamTrack.stop(),vB().supportDualStreamEncoding){const r=e._mediaStreamTrack.clone();t.track._mediaStreamTrack=r,t.track._originMediaStreamTrack=r}else{const r=w1(e,RK(this,hB.RequestLowStreamParameter));t.track._mediaStreamTrack=r,t.track._originMediaStreamTrack=r}await new nT((e,r)=>{this.handleReplaceTrack(t.track,e,r,!0)})}await this.connection.unmuteLocal(n.map(e=>{let[,{id:t}]=e;return t}));const s=this.createUnmuteMessage(n);await vK(this,hB.RequestUnmuteLocal,s),t()}catch(e){r(e)}finally{i()}}),kO(this,"handleUpdateVideoEncoder",async(e,t,r)=>{const i=await this.mutex.lock("Locking from P2PChannel.handleSetVideoEncoder");try{const r=this.localTrackMap.get(uB.LocalVideoTrack);if(!this.connection||!r||r.track!==e)return void t();await this.waitTillConnected();const{id:n,track:o}=r;await this.connection.updateSendParameters(n,o),await this.connection.updateEncoderConfig(n,o),this.emit(hB.UpdateVideoEncoder,o),t()}catch(e){r(e)}finally{i()}}),kO(this,"handleSetOptimizationMode",async(e,t,r)=>{const i=await this.mutex.lock("Locking from P2PChannel.handleSetOptimizationMode");try{const r=this.localTrackMap.get(uB.LocalVideoTrack);if(!this.connection||!r||r.track!==e)return;await this.waitTillConnected();const{id:n,track:o}=r;await this.connection.updateSendParameters(n,o),t()}catch(e){r(e)}finally{i()}}),kO(this,"handleReplaceTrack",async(e,t,r,i)=>{let n;HD.debug("P2PChannel handleReplaceTrack for [track-id-".concat(e.getTrackId(),"]")),"boolean"==typeof i&&i||(n=await this.mutex.lock("From P2PChannel.handleReplaceTrack"));try{var o;const r=Array.from(this.localTrackMap.entries()).find(t=>{let[,{track:r}]=t;return e===r});if(!this.connection||!r)return void t();if(await this.waitTillConnected(),await(null===(o=this.connection)||void 0===o?void 0:o.replaceTrack(e,r[1].id)),this.isPlanB){const t=r[1];t.id=e._mediaStreamTrack.id,this.localTrackMap.set(r[0],t)}if(r[0]===uB.LocalVideoTrack&&vB().supportDualStreamEncoding){const t=this.localTrackMap.get(uB.LocalVideoLowTrack);if(t){const r=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=r,t.track._originMediaStreamTrack=r,await new nT((e,r)=>{this.handleReplaceTrack(t.track,e,r,!0)})}}t()}catch(e){r(e)}finally{var s;null===(s=n)||void 0===s||s()}}),kO(this,"handleGetLocalVideoStats",e=>{e(this.statsCollector.getLocalVideoTrackStats())}),kO(this,"handleGetLocalAudioStats",e=>{e(this.statsCollector.getLocalAudioTrackStats())}),kO(this,"handleGetRemoteVideoStats",e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid]),kO(this,"handleGetRemoteAudioStats",e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid]),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new U1,this.bindStatsUploaderEvents(),this.isPlanB=!vB().supportUnifiedPlan||NP("CHROME_FORCE_PLAN_B")&&RO()}async startP2PConnection(e){return this.state=AB.New,this.connection=this.isPlanB?new g1(e,this.store):new R1(e,this.store),this.bindConnectionEvents(this.connection),this.connection.establish()}async connect(e,t,r,i,n,o){if(!this.connection)throw new UD(MD.UNEXPECTED_ERROR,"Cannot P2PChannel.connect before P2PChannel.startP2PConnection .");this.store.peerConnectionStart(),await this.connection.connect(e,t,r,i,n,o),this.statsUploader.startUploadTransportStats(),this.state=AB.Connected}publish(e,t,r){var i=this;return a$((function*(){const n=yield c$(i.mutex.lock("From P2PChannel.publish"));try{if(!i.connection){if(i.state===AB.Disconnected)throw new UD(MD.UNEXPECTED_ERROR,"PeerConnection already disconnected.");i.throwIfTrackTypeNotMatch(e);const t=e.filter(e=>-1===i.pendingLocalTracks.indexOf(e));return void(i.pendingLocalTracks=i.pendingLocalTracks.concat(t))}i.store.pubId=i.store.pubId+1,qG.markPublishStart(i.store.clientId,i.store.pubId),yield c$(i.waitTillConnected());const o=i.filterTobePublishedTracks(e,t,r);if(0===o.length)return void(yield c$(i.tryToUnmuteAudio(e)));yield*u$(j1(i.doPublish(i.connection,o)),c$)}finally{n()}}))()}doPublish(e,t){var r=this;return a$((function*(){t.forEach(e=>{let{track:t,type:i}=e;const n=Date.now();r.store.publish(t.getTrackId(),i===uB.LocalAudioTrack?"audio":"video",n)}),r.bindLocalTrackEvents(t);const i=yield c$(e.send(t.map(e=>{let{track:t}=e;return t}),r.store.codec,r.store.audioCodec)),n=(yield c$(i.next())).value,o=r.createGatewayPublishMessage(t,n);let s;try{s=yield o}catch(e){throw cP("error",r,"doPublish yield error: ".concat(e.toString())),i.throw(e),(null==e?void 0:e.code)===MD.WS_ABORT&&t.forEach(e=>{let{track:t}=e;-1===r.pendingLocalTracks.indexOf(t)&&r.pendingLocalTracks.push(t)}),r.unbindLocalTrackEvents(t),e}const a=r.mapPubResToRemoteConfig(o,s);hP("debug",r,"doPublish",{remoteConfigs:a,tracks:t.map(e=>{let{track:t}=e;return t.getTrackId()}),pubMsg:o,pubAns:s});const c=(yield c$(i.next(a))).value;t.forEach(e=>{let{type:t}=e;r.statsCollector.addLocalStats(t)}),r.assignLocalTracks(t,c),r.statsUploader.startUploadUplinkStats(),t.forEach(e=>{let{track:t,type:i}=e;const n=Date.now();r.store.publish(t.getTrackId(),i===uB.LocalAudioTrack?"audio":"video",void 0,n)})}))()}publishLowStream(e){var t=this;return a$((function*(){if(!t.connection)return;hP("debug",t,"publishLowStream",e);const r=yield c$(t.mutex.lock("Locking from P2PChannel.publishLowStream"));try{const n=t.localTrackMap.get(uB.LocalVideoTrack);if(!n)throw new UD(MD.UNEXPECTED_ERROR,"Could not find high stream");if(t.localTrackMap.has(uB.LocalVideoLowTrack))throw new UD(MD.UNEXPECTED_ERROR,"[".concat(t.store.clientId,"] Can't publish low stream when stream already publish"));yield c$(t.waitTillConnected());const o=[{track:t.getLowVideoTrack(n.track,e),type:uB.LocalVideoLowTrack}];if(yield*u$(j1(t.doPublish(t.connection,o)),c$),n.track.muted||!n.track.enabled){var i;const e=null===(i=t.localTrackMap.get(uB.LocalVideoLowTrack))||void 0===i?void 0:i.id;void 0!==e&&(yield c$(t.connection.muteLocal([e])))}}finally{r()}}))()}async republish(){this.pendingLocalTracks.length>0&&(HD.debug("Emit P2PChannelEvents.RequestRePublish to republish tracks."),hP("debug",this,"republish",this.pendingLocalTracks.map(e=>e.getTrackId())),await SK(this,hB.RequestRePublish,this.pendingLocalTracks),this.emit(hB.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[])}async reSubscribe(e){hP("debug",this,"reSubscribe",this.pendingRemoteTracks.map(e=>{let{user:t}=e;return t.uid}));for(let e=this.pendingRemoteTracks.length-1;e>=0;e--){const{user:t,kind:r}=this.pendingRemoteTracks[e];(r!==dB.AUDIO||t._audio_added_&&t._audioSSRC)&&(r!==dB.VIDEO||t._video_added_&&t._videoSSRC)||this.pendingRemoteTracks.splice(e,1)}if(e)await SK(this,hB.RequestReSubscribe,this.pendingRemoteTracks);else for(const{user:e,kind:t}of this.pendingRemoteTracks)await this.subscribe(e,t,t===dB.VIDEO?e._videoSSRC:e._audioSSRC);this.pendingRemoteTracks.forEach(e=>{let{user:t}=e;this.emit(hB.MediaReconnectEnd,t.uid)}),this.pendingRemoteTracks=[]}async unpublish(e){if(!this.connection)return void e.forEach(e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)});await this.waitTillConnected();const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;const r=t.find(e=>"videoLowTrack"===e[0]);if(r){r[1].track.close()}return hP("debug",this,"unpublish"),this.doUnpublish(this.connection,t)}async unpublishLowStream(){if(!this.connection)return;hP("debug",this,"unpublishLowStream");const e=this.localTrackMap.get(uB.LocalVideoLowTrack);if(!e)return;await this.waitTillConnected(),e.track.close();const t=[[uB.LocalVideoLowTrack,e]];return this.doUnpublish(this.connection,t)}async doUnpublish(e,t){const r=this.createGatewayUnpublishMessage(t);return await e.stopSending(t.map(e=>{let[,{id:t}]=e;return t})),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map(e=>{let[t,{track:r}]=e;return{type:t,track:r}})),t.forEach(e=>{let[t]=e;this.statsCollector.removeLocalStats(t)}),0===this.localTrackMap.size&&this.statsUploader.stopUploadUplinkStats(),r}async subscribe(e,t,r,i,n){var o;if(!this.connection)throw new UD(MD.INVALID_OPERATION,"Cannot subscribe remote user when peerConnection disconnected.");if(hP("debug",this,"subscribe",{uid:e.uid,mediaType:t,ssrcId:r}),null!==(o=this.remoteUserMap.get(e))&&void 0!==o&&o.has(t))return;let s,a;if(await this.waitTillConnected(),n){const r=n.find(e=>{let{stream_type:r}=e;return r===t});if(!r)throw new UD(MD.UNEXPECTED_ERROR,"Cannot subscribe to remote ".concat(t," for user: ").concat(e.uid," because subscribe answer from gateway does not contain stream_type: ").concat(t,"."));const i=await this.connection.receive(t,r.ssrcs,String(e._uintid),r.attributes);s=i.track,a=i.id}else{const n=await this.connection.receive(t,[{ssrcId:r,rtx:i}],String(e._uintid),void 0);s=n.track,a=n.id}t===dB.AUDIO?(e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(s):(e._audioTrack=new k1(s,e.uid,e._uintid,this.store),HD.info("[".concat(this.store.p2pId,"] create remote audio track: ").concat(e._audioTrack.getTrackId()))),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(s):(e._videoTrack=new L1(s,e.uid,e._uintid,this.store),HD.info("[".concat(this.store.p2pId,"] create remote video track: ").concat(e._videoTrack.getTrackId()))),this.bindRemoteTrackEvents(e,e._videoTrack));const c=this.remoteUserMap.get(e);c?c.set(t,a):this.remoteUserMap.set(e,new Map([[t,a]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadDownlinkStats();const d=this.pendingRemoteTracks.findIndex(r=>{let{user:i,kind:n}=r;return i.uid===e.uid&&t===n});-1!==d&&(this.pendingRemoteTracks.splice(d,1),this.emit(hB.MediaReconnectEnd,e.uid))}async massSubscribe(e){return this.massSubscribeNoLock(e)}async massSubscribeNoLock(e){if(!this.connection)throw new UD(MD.INVALID_OPERATION,"Cannot subscribeAll remote users when peerConnection disconnected.");hP("debug",this,"subscribeAll",e.map(e=>{let{user:t,mediaType:r,ssrcId:i}=e;return{uid:t.uid,mediaType:r,ssrcId:i}})),e=e.filter(e=>{var t;let{user:r,mediaType:i}=e;return!(null!==(t=this.remoteUserMap.get(r))&&void 0!==t&&t.has(i))}),await this.waitTillConnected();const t=await this.connection.batchReceive(e.map(e=>{let{user:t,mediaType:r,ssrcId:i,rtxSsrcId:n}=e;return{kind:r,ssrcMsg:[{ssrcId:i,rtx:n}],mslabel:String(t._uintid)}}));e.forEach((e,r)=>{let{user:i,mediaType:n}=e;const{track:o,id:s}=t[r];n===dB.AUDIO?(i._audioTrack?i._audioTrack._updateOriginMediaStreamTrack(o):(i._audioTrack=new k1(o,i.uid,i._uintid,this.store),HD.info("[".concat(this.store.p2pId,"] create remote audio track: ").concat(i._audioTrack.getTrackId()))),this.bindRemoteTrackEvents(i,i._audioTrack)):(i._videoTrack?i._videoTrack._updateOriginMediaStreamTrack(o):(i._videoTrack=new L1(o,i.uid,i._uintid,this.store),HD.info("[".concat(this.store.p2pId,"] create remote video track: ").concat(i._videoTrack.getTrackId()))),this.bindRemoteTrackEvents(i,i._videoTrack));const a=this.remoteUserMap.get(i);a?a.set(n,s):this.remoteUserMap.set(i,new Map([[n,s]])),this.statsCollector.addRemoteStats(i.uid),this.statsUploader.startUploadDownlinkStats();const c=this.pendingRemoteTracks.findIndex(e=>{let{user:t,kind:r}=e;return t.uid===i.uid&&n===r});-1!==c&&(this.pendingRemoteTracks.splice(c,1),this.emit(hB.MediaReconnectEnd,i.uid))})}async unsubscribe(e,t,r){const i=this.pendingRemoteTracks.filter(r=>{let{user:i,kind:n}=r;return void 0!==t?i.uid===e.uid&&t===n:i.uid===e.uid});if(i.forEach(e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)}),this.connection||r||i.forEach(t=>{let{kind:r}=t;var i;if(r===dB.AUDIO)null===(i=e._audioTrack)||void 0===i||i._destroy(),e._audioTrack=void 0;else if(r===dB.VIDEO){var n;null===(n=e._videoTrack)||void 0===n||n._destroy(),e._videoTrack=void 0}}),!this.connection)return;hP("debug",this,"unsubscribe",{uid:e.uid,mediaType:t});const n=this.filterTobeUnSubscribedTracks(e,t);if(0===n.length)return;await this.connection.stopReceiving(n.map(e=>{let[,{id:t}]=e;return t}));const o=this.createUnsubscribeMessage(n);return this.withdrawRemoteTracks(n),0===this.remoteUserMap.size&&this.statsUploader.stopUploadDownlinkStats(),n.forEach(e=>{let[t,{kind:i}]=e;var n,o;i===dB.VIDEO&&t._videoSSRC&&(null===(n=this.connection)||void 0===n||n.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(i===dB.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),r||(null===(o=t._videoTrack)||void 0===o||o._destroy(),t._videoTrack=void 0);else if(i===dB.AUDIO){var s;if(this.unbindRemoteTrackEvents(t._audioTrack),!r)null===(s=t._audioTrack)||void 0===s||s._destroy(),t._audioTrack=void 0}}),o}async massUnsubscribe(e){return this.massUnsubscribeNoLock(e)}async massUnsubscribeNoLock(e){let t=[];for(const{user:r,mediaType:i}of e){const e=this.pendingRemoteTracks.filter(e=>{let{user:t,kind:n}=e;return void 0!==i?t.uid===r.uid&&i===n:t.uid===r.uid});e.forEach(e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)}),t=t.concat(e)}if(!this.connection)return void t.forEach(e=>{let{user:t,kind:r}=e;var i;if(r===dB.AUDIO)null===(i=t._audioTrack)||void 0===i||i._destroy(),t._audioTrack=void 0;else if(r===dB.VIDEO){var n;null===(n=t._videoTrack)||void 0===n||n._destroy(),t._videoTrack=void 0}});hP("debug",this,"batchUnsubscribe",e.map(e=>{let{user:t,mediaType:r}=e;return{uid:t.uid,mediaType:r}}));const r=Sh(e).call(e,(e,t)=>{let{user:r,mediaType:i}=t;const n=this.filterTobeUnSubscribedTracks(r,i);return e.concat(n)},[]);if(0===r.length)return;await this.connection.stopReceiving(r.map(e=>{let[,{id:t}]=e;return t}));const i=this.createUnsubscribeAllMessage(r);return this.withdrawRemoteTracks(r),0===this.remoteUserMap.size&&this.statsUploader.stopUploadDownlinkStats(),r.forEach(e=>{let[t,{kind:r}]=e;var i,n;r===dB.VIDEO&&t._videoSSRC&&(null===(i=this.connection)||void 0===i||i.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(r===dB.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),null===(n=t._videoTrack)||void 0===n||n._destroy(),t._videoTrack=void 0;else if(r===dB.AUDIO){var o;this.unbindRemoteTrackEvents(t._audioTrack),null===(o=t._audioTrack)||void 0===o||o._destroy(),t._audioTrack=void 0}}),i}async muteRemote(e,t){if(!this.connection)return;hP("debug",this,"muteRemote",{uid:e.uid,kind:t});const r=this.remoteUserMap.get(e);if(!r)return HD.warning("P2PChannel.muteRemote has no remote user ".concat(e.uid,".")),void cP("warning",this,"P2PChannel.muteRemote has no remote user ".concat(e.uid,"."));if(!r.get(t))return HD.warning("P2PChannel.muteRemote has no remote user ".concat(e.uid," media type ").concat(t,".")),void cP("warning",this,"P2PChannel.muteRemote has no remote user ".concat(e.uid," media type ").concat(t,"."));const i=t===dB.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==i&&this.connection.setStatsRemoteVideoIsReady(i,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.connection)return;hP("debug",this,"unmuteRemote",{uid:e.uid,kind:t});const r=this.remoteUserMap.get(e);if(!r)return HD.warning("P2PChannel.unmuteRemote has no remote user ".concat(e.uid,".")),void cP("warning",this,"unmuteRemote has no remote user ".concat(e.uid));return r.get(t)?void 0:(HD.warning("P2PChannel.unmuteRemote has no remote user ".concat(e.uid," media type ").concat(t,".")),void cP("warning",this,"unmuteRemote has no remote user ".concat(e.uid," media type ").concat(t)))}getAllTracks(e){const t=this.localTrackMap.get(uB.LocalAudioTrack);if((null==t?void 0:t.track)instanceof WG){const r=t.track;return Array.from(this.localTrackMap.entries()).filter(e=>{let[t]=e;return t!==uB.LocalAudioTrack}).filter(t=>{let[r]=t;return!(e&&r===uB.LocalVideoLowTrack)}).map(e=>{let[,{track:t}]=e;return t}).concat(r.trackList)}return Array.from(this.localTrackMap.entries()).filter(t=>{let[r]=t;return!(e&&r===uB.LocalVideoLowTrack)}).map(e=>{let[,{track:t}]=e;return t})}reportPublishEvent(e,t,r,i,n){if(e){const r=this.localTrackMap.get(uB.LocalAudioTrack),o=i?this.localTrackMap.get(uB.LocalVideoLowTrack):this.localTrackMap.get(uB.LocalVideoTrack);uj.publish(this.store.sessionId,{eventElapse:qG.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==r?void 0:r.track.getTrackLabel(),videoName:null==o?void 0:o.track.getTrackLabel(),screenshare:-1!==(null==o?void 0:o.track._hints.indexOf(Xk.SCREEN_TRACK)),audio:!!r,video:!!o,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:n})}else{var o;r||(r=[]);const s=r.find(e=>e instanceof GG),a=i?null===(o=this.localTrackMap.get(uB.LocalVideoTrack))||void 0===o?void 0:o.track:r.find(e=>e instanceof $X);uj.publish(this.store.sessionId,{eventElapse:qG.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==s?void 0:s.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf(Xk.SCREEN_TRACK)),audio:!!s,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:n})}}reportSubscribeEvent(e,t,r,i){const n=i===dB.VIDEO?r._videoSSRC:r._audioSSRC;n&&uj.subscribe(this.store.sessionId,{succ:e,ec:t,video:i===dB.VIDEO,audio:i===dB.AUDIO,peerid:r.uid,subscribeRequestid:i===dB.VIDEO?r._videoSSRC:r._audioSSRC,p2pid:this.store.p2pId,eventElapse:qG.measureFromSubscribeStart(this.store.clientId,n)})}reset(){HD.debug("P2PChannel.reset"),this.mutex=new Ej("P2PChannel-mutex"),this.connection&&(this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.iceFailedCount=0,this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.state=AB.Disconnected}getStats(){var e;return null===(e=this.connection)||void 0===e?void 0:e.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.connection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(uB.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(uB.LocalVideoTrack);if(e)return{width:e.track._videoWidth||0,height:e.track._videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof $X||t&&t.track instanceof GG?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const r=this.remoteUserMap.get(e);return!!r&&(!t||r.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const r=this.remoteUserMap.get(e);return!!r&&(!t||r.has(t))}getRemoteMedia(e){var t;const r=Array.from(HV(t=this.remoteUserMap).call(t)).find(t=>t.uid===e);return r?{audioTrack:r.audioTrack,audioSSRC:r._audioSSRC,videoTrack:r.videoTrack,videoSSRC:r._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map(e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}});const t=this.localTrackMap.get(uB.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=DL(e).call(e,(e,t)=>e.level-t.level),e}async disconnectForReconnect(){this.connection&&(hP("debug",this,"disconnectForReconnect"),HD.debug("P2PChannel.disconnectForReconnect closing P2PConnection"),this.state=AB.Reconnecting,this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0,0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach(e=>{let[t,{track:r}]=e;switch(t){case uB.LocalVideoTrack:r._hints.includes(Xk.LOW_STREAM)?r.close():this.pendingLocalTracks.push(r);break;case uB.LocalAudioTrack:r instanceof WG?this.pendingLocalTracks=this.pendingLocalTracks.concat(r.trackList):this.pendingLocalTracks.push(r);break;case uB.LocalVideoLowTrack:}}),this.emit(hB.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach(e=>{let[t,r]=e;Array.from(HV(r).call(r)).forEach(e=>{this.setPendingRemoteMedia(t,e)}),this.emit(hB.MediaReconnectStart,t.uid)}),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),HD.debug("P2PChannel disconnected, waiting to reconnect."))}hasPendingRemoteMedia(e,t){for(const r of this.pendingRemoteTracks){const{user:i,kind:n}=r;if((e instanceof tz?e.uid:e)===i.uid&&t===n)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}async reEstablish(){if(this.connection)return this.connection.reEstablish()}getUplinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats(),t=this.localTrackMap.get(uB.LocalVideoTrack),r=this.localTrackMap.get(uB.LocalAudioTrack),i=e.videoSend.find(e=>e.ssrc===(null==t?void 0:t.ssrcs[0].ssrcId)),n=e.audioSend.find(e=>e.ssrc===(null==r?void 0:r.ssrcs[0].ssrcId));if(!i||!n)return 1;const o=TK(this,hB.NeedSignalRTT),s=i?i.rttMs:void 0,a=n?n.rttMs:void 0,c=s&&a?(s+a)/2:s||a,d=(c&&o?(c+o)/2:c||o)||0,u=100*e.sendPacketLossRate*.7/50+.3*d/1500,A=u<.17?1:u<.36?2:u<.59?3:u<.1?4:5,h=null==t?void 0:t.track;if(h&&h._encoderConfig&&-1===h._hints.indexOf(Xk.SCREEN_TRACK)){const t=h._encoderConfig.bitrateMax,r=e.bitrate.actualEncoded;if(t&&r){const e=(1e3*t-r)/(1e3*t);return UP[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][A]}}return A}getDownlinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach(r=>{let[i]=r;const n=i._audioSSRC,o=i._videoSSRC,s=e.audioRecv.find(e=>e.ssrc===n),a=e.videoRecv.find(e=>e.ssrc===o);if(!s&&!a)return void(t+=1);const c=TK(this,hB.NeedSignalRTT),d=e.rtt,u=(d&&c?(d+c)/2:d||c)||0,A=s?s.jitterMs:void 0,h=e.recvPacketLossRate;let l=.7*h*100/50+.3*u/1500;A&&(l=.6*h*100/50+.2*u/1500+.2*A/400);t+=l<.1?1:l<.17?2:l<.36?3:l<.59?4:5}),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new nT((t,r)=>{this.handleMuteLocalTrack(e,t,r)})}filterTobePublishedTracks(e,t,r){const i=[],n=vB(),o=this.getAllTracks();e=wK(e=e.filter(e=>-1===o.indexOf(e)));let s=!1,a=!1;for(const o of e){if(o instanceof $X&&(this.localTrackMap.has(uB.LocalVideoTrack)||s?new UD(MD.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(i.push({track:o,type:uB.LocalVideoTrack}),s=!0),t)){const e=this.getLowVideoTrack(o,r);i.push({track:e,type:uB.LocalVideoLowTrack})}if(o instanceof GG){const e=this.localTrackMap.get(uB.LocalAudioTrack);if(e){if(!(e.track instanceof WG))throw new UD(MD.NOT_SUPPORTED,"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing");if(o._bypassWebAudio)throw new UD(MD.NOT_SUPPORTED,"cannot publish multiple tracks which one of them configured with bypassWebAudio");e.track.addAudioTrack(o),this.bindLocalAudioTrackEvents(o,!0)}else if(a){const e=i.find(e=>{let{type:t}=e;return t===uB.LocalAudioTrack});if(!(e.track instanceof WG))throw new UD(MD.NOT_SUPPORTED,"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing");if(o._bypassWebAudio)throw new UD(MD.NOT_SUPPORTED,"cannot publish multiple tracks which one of them configured with bypassWebAudio");e.track.addAudioTrack(o)}else{if(!n.webAudioMediaStreamDest||o instanceof WG||o._bypassWebAudio)i.push({track:o,type:uB.LocalAudioTrack});else{const e=new WG;e.addAudioTrack(o),i.push({track:e,type:uB.LocalAudioTrack})}a=!0}}}return i}filterTobeUnpublishedTracks(e){const t=[],r=this.getAllTracks();e=wK(e=e.filter(e=>-1!==r.indexOf(e)));for(const r of e){if(r instanceof GG){const e=this.localTrackMap.get(uB.LocalAudioTrack);if(!e)continue;e.track instanceof WG?(e.track.removeAudioTrack(r),this.unbindLocalAudioTrackEvents(r),0===e.track.trackList.length&&(t.push([uB.LocalAudioTrack,e]),e.track.close())):t.push([uB.LocalAudioTrack,e])}if(r instanceof $X){const e=this.localTrackMap.get(uB.LocalVideoTrack);if(!e)continue;t.push([uB.LocalVideoTrack,e]);const r=this.localTrackMap.get(uB.LocalVideoLowTrack);r&&t.push([uB.LocalVideoLowTrack,r])}}return t}bindLocalTrackEvents(e){e.forEach(e=>{let{track:t,type:r}=e;switch(r){case uB.LocalVideoTrack:t.addListener(qk.GET_STATS,this.handleGetLocalVideoStats),t.addListener(qk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener(qk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener(qk.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener(qk.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.addListener(qk.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener(qk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener(qk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case uB.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);break;case uB.LocalVideoLowTrack:}})}bindLocalAudioTrackEvents(e,t){e instanceof WG?e.trackList.forEach(e=>{e.addListener(qk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(qk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(qk.GET_STATS,this.handleGetLocalAudioStats),e.addListener(qk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(qk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)}):(e.addListener(qk.GET_STATS,this.handleGetLocalAudioStats),e.addListener(qk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(qk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(qk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(qk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||e.addListener(qk.NEED_REPLACE_TRACK,this.handleReplaceTrack))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map(e=>{let[t,{track:r}]=e;return{track:r,type:t}})),e.forEach(e=>{let{track:t,type:r}=e;switch(r){case uB.LocalVideoTrack:t.off(qk.GET_STATS,this.handleGetLocalVideoStats),t.off(qk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off(qk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off(qk.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off(qk.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.off(qk.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off(qk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off(qk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case uB.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);break;case uB.LocalVideoLowTrack:}})}unbindLocalAudioTrackEvents(e){e instanceof WG?e.trackList.forEach(e=>{e.off(qk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(qk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(qk.GET_STATS,this.handleGetLocalAudioStats),e.off(qk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(qk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)}):(e.off(qk.GET_STATS,this.handleGetLocalAudioStats),e.off(qk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(qk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(qk.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off(qk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(qk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof L1&&t.addListener(qk.GET_STATS,t=>{t(this.handleGetRemoteVideoStats(e))}),t instanceof k1&&t.addListener(qk.GET_STATS,t=>{t(this.handleGetRemoteAudioStats(e))})}unbindRemoteTrackEvents(e){e&&e.removeAllListeners(qk.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach(e=>{let[t,r]=e;r.has(dB.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),r.has(dB.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)})}createGatewayPublishMessage(e,t){return e.map((e,r)=>{let i,n,{track:o,type:s}=e;switch(s){case uB.LocalAudioTrack:i=Wk.Audio,n={dtx:o instanceof KG&&o._config.DTX,hq:!1,lq:!1,stereo:!1,speech:!1};break;case uB.LocalVideoTrack:i=o._hints.includes(Xk.SCREEN_TRACK)?Wk.Screen:Wk.High,n=V1(V1({},oK(o)),{},{codec:this.store.codec});break;case uB.LocalVideoLowTrack:i=Wk.Low,n=V1(V1({},oK(o)),{},{codec:this.store.codec})}return{stream_type:i,attributes:n,ssrcs:t[r]}})}createGatewayUnpublishMessage(e){return e.map(e=>{let t,[r,{track:i,ssrcs:n,id:o}]=e;switch(r){case uB.LocalVideoTrack:t=i._hints.includes(Xk.SCREEN_TRACK)?Wk.Screen:Wk.High;break;case uB.LocalAudioTrack:t=Wk.Audio;break;case uB.LocalVideoLowTrack:t=Wk.Low}return{stream_type:t,ssrcs:n,mid:o}})}assignLocalTracks(e,t){e.forEach((e,r)=>{let{track:i,type:n}=e;this.localTrackMap.set(n,{track:i,id:t[r].id,ssrcs:t[r].localSSRC})})}withdrawLocalTracks(e){e.forEach(e=>{let[t]=e;this.localTrackMap.delete(t)})}async waitTillConnected(){return new nT((e,t)=>{switch(this.state){case AB.New:case AB.Reconnecting:{const r=(i,n)=>n===AB.Disconnected?(this.off(hB.StateChange,r),void t(new UD(MD.UNEXPECTED_ERROR,"PeerConnection already disconnected."))):n===AB.Connected?(this.off(hB.StateChange,r),void e(void 0)):void 0;this.on(hB.StateChange,r);break}case AB.Connected:e(void 0);break;case AB.Disconnected:t(new UD(MD.UNEXPECTED_ERROR,"PeerConnection already disconnected."))}})}bindConnectionEvents(e){e.onConnectionStateChange=async e=>{HD.info("[p2pId: ".concat(this.store.p2pId,"]: P2PConnection.onConnectionStateChange(").concat(e,")")),dP("info",this,"connectionStateChange",e),this.emit(hB.PeerConnectionStateChange,e),"connected"!==e||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),"failed"===e&&await this.requestReconnect()},e.onICEConnectionStateChange=e=>{HD.info("[p2pId: ".concat(this.store.p2pId,"]: P2PConnection.onICEConnectionStateChange(").concat(e,")")),dP("info",this,"iceConnectionStateChange",e),uj.reportApiInvoke(this.store.sessionId,{name:"ICEConnectionStateChange",options:e,tag:tk.TRACER}).onSuccess(),this.emit(hB.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{HD.info("[p2pId: ".concat(this.store.p2pId,"]: P2PConnection.onICETransportStateChange(").concat(e,")")),dP("info",this,"ICETransportStateChange",e)},e.onDTLSTransportStateChange=e=>{HD.info("[p2pId: ".concat(this.store.p2pId,"]: P2PConnection.onDTLSTransportStateChange(").concat(e,")")),dP("info",this,"DTLSTransportStateChange",e)},e.onDTLSTransportError=e=>{HD.info("[p2pId: ".concat(this.store.p2pId,"]: P2PConnection.onDTLSTransportError(").concat(e,")")),dP("info",this,"DTLSTransportError",e)},e.onFirstAudioDecoded=e=>{var t;const r=Array.from(HV(t=this.remoteUserMap).call(t)).find(t=>t._audioSSRC===e);var i;r&&(this.store.subscribe(r.uid,"audio",void 0,void 0,void 0,Date.now()),null===(i=r.audioTrack)||void 0===i||i.emit(eB.FIRST_FRAME_DECODED),uj.firstRemoteFrame(this.store.sessionId,XL.FIRST_AUDIO_DECODE,zL.FIRST_AUDIO_DECODE,{peer:r._uintid,subscribeElapse:qG.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const r=Array.from(HV(t=this.remoteUserMap).call(t)).find(t=>t._audioSSRC===e);r&&uj.firstRemoteFrame(this.store.sessionId,XL.FIRST_AUDIO_RECEIVED,zL.FIRST_AUDIO_RECEIVED,{peer:r._uintid,subscribeElapse:qG.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,r)=>{this.reportVideoFirstFrameDecoded(e,t,r)},e.onFirstVideoReceived=e=>{var t;const r=Array.from(HV(t=this.remoteUserMap).call(t)).find(t=>t._videoSSRC===e);r&&uj.firstRemoteFrame(this.store.sessionId,XL.FIRST_VIDEO_RECEIVED,zL.FIRST_VIDEO_RECEIVED,{peer:r._uintid,subscribeElapse:qG.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const r="relay"===e.candidateType,i="relay"===t.candidateType;"unknown"!==t.candidateType&&r===i||this.emit(hB.ConnectionTypeChange,r),HD.info("[p2pId: ".concat(this.store.p2pId,"]: P2PConnection.SelectedLocalCandidateChanged(").concat(JSON.stringify(AK(t))," -> ").concat(JSON.stringify(AK(e)),")")),dP("info",this,"SelectedLocalCandidateChanged","".concat(JSON.stringify(AK(t))," -> ").concat(JSON.stringify(AK(e))))},e.onSelectedRemoteCandidateChanged=(e,t)=>{HD.info("[p2pId: ".concat(this.store.p2pId,"]: P2PConnection.SelectedRemoteCandidateChanged(").concat(JSON.stringify(AK(t))," -> ").concat(JSON.stringify(AK(e)),")")),dP("info",this,"SelectedRemoteCandidateChanged","".concat(JSON.stringify(AK(t))," -> ").concat(JSON.stringify(AK(e))))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const r=this.localTrackMap.get(uB.LocalAudioTrack);if(e instanceof GG&&(null==r?void 0:r.track)instanceof WG)return r.track.isActive||t.push([uB.LocalAudioTrack,r]),t;const i=Array.from(this.localTrackMap.entries()).find(t=>{let[,{track:r}]=t;return e===r});if(i&&(t.push(i),i[0]===uB.LocalVideoTrack)){const e=this.localTrackMap.get(uB.LocalVideoLowTrack);e&&t.push([uB.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],r=this.localTrackMap.get(uB.LocalAudioTrack);if(e instanceof GG&&(null==r?void 0:r.track)instanceof WG)return r.track.isActive&&t.push([uB.LocalAudioTrack,r]),t;const i=Array.from(this.localTrackMap.entries()).find(t=>{let[,{track:r}]=t;return e===r});if(i)if(i[0]===uB.LocalVideoTrack){t.push(i);const e=this.localTrackMap.get(uB.LocalVideoLowTrack);e&&t.push([uB.LocalVideoLowTrack,e])}else t.push(i);return t}createMuteMessage(e){return e.map(e=>{let t,[r,{track:i,ssrcs:n,id:o}]=e;switch(r){case uB.LocalAudioTrack:t=Wk.Audio;break;case uB.LocalVideoTrack:t=i._hints.includes(Xk.SCREEN_TRACK)?Wk.Screen:Wk.High;break;case uB.LocalVideoLowTrack:t=Wk.Low}return{stream_type:t,ssrcs:n,mid:o}})}createUnmuteMessage(e){return e.map(e=>{let t,[r,{track:i,ssrcs:n,id:o}]=e;switch(r){case uB.LocalAudioTrack:t=Wk.Audio;break;case uB.LocalVideoTrack:t=i._hints.includes(Xk.SCREEN_TRACK)?Wk.Screen:Wk.High;break;case uB.LocalVideoLowTrack:t=Wk.Low}return{stream_type:t,ssrcs:n,mid:o}})}filterTobeUnSubscribedTracks(e,t){const r=[],i=this.remoteUserMap.get(e);if(!i)return r;if(t){const n=i.get(t);if(!n)return r;r.push([e,{kind:t,id:n}])}else Array.from(i.entries()).forEach(t=>{let[i,n]=t;r.push([e,{kind:i,id:n}])});return r}createUnsubscribeMessage(e){const t=[];return e.forEach(e=>{let[r,{kind:i,id:n}]=e;switch(i){case dB.VIDEO:return void(r._videoSSRC&&t.push({stream_type:dB.VIDEO,ssrcId:r._videoSSRC}));case dB.AUDIO:return void(r._audioSSRC&&t.push({stream_type:dB.AUDIO,ssrcId:r._audioSSRC}))}}),t}createUnsubscribeAllMessage(e){const t=new Map;return e.forEach(e=>{let[r,{kind:i}]=e;if(t.has(r)){let e=t.get(r);i===dB.VIDEO?e|=Jk.Video:e|=Jk.Audio,t.set(r,e)}else i===dB.VIDEO?t.set(r,Jk.Video):t.set(r,Jk.Audio)}),{users:Array.from(t.entries()).map(e=>{let[t,r]=e;return{stream_id:t.uid,stream_type:r}})}}withdrawRemoteTracks(e){e.forEach(e=>{let[t,{kind:r}]=e;const i=this.remoteUserMap.get(t);i&&(i.delete(r),0===Array.from(i.entries()).length&&this.remoteUserMap.delete(t))})}async updateBitrateLimit(e){const t=this.localTrackMap.get(uB.LocalVideoTrack),r=this.localTrackMap.get(uB.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),r&&e.low_stream_uplink&&await r.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.connection){return"connected"!==this.connection.peerConnectionState}return!0}mapPubResToRemoteConfig(e,t){return e.map((e,r)=>{var i;let{stream_type:n}=e;return null===(i=t.find(e=>{let{stream_type:t}=e;return n===t}))||void 0===i?void 0:i.attributes})}async tryToUnmuteAudio(e){for(let r=0;r<e.length;r++)if(e[r]instanceof GG){var t;const i=this.filterTobeUnmutedTracks(e[r]);if(0===i.length)continue;await(null===(t=this.connection)||void 0===t?void 0:t.unmuteLocal(i.map(e=>{let[,{id:t}]=e;return t})));const n=this.createUnmuteMessage(i);return void await vK(this,hB.RequestUnmuteLocal,n)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=()=>this.getStats(),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.connection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(hB.RequestUploadStats,e,t),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await gK(QD(this.dtlsFailedCount,xD)),this.emit(hB.RequestReconnect)}async reconnectP2P(){const e=Array.from(this.localTrackMap.entries()),t=this.createGatewayUnpublishMessage(e);Array.from(this.remoteUserMap.entries()),t.length>0&&await SK(this,hB.RequestUnpublishForReconnectPC,t),this.disconnectForReconnect(),this.emit(hB.RequestReconnectPC)}canPublishLowStream(){return this.localTrackMap.has(uB.LocalVideoTrack)||this.pendingLocalTracks.some(e=>e instanceof $X)}throwIfTrackTypeNotMatch(e){if(e.filter(e=>e instanceof $X).length>1)throw new UD(MD.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter(e=>e instanceof GG).length>1&&(e.some(e=>e instanceof GG&&e._bypassWebAudio)||!vB().webAudioMediaStreamDest))throw new UD(MD.NOT_SUPPORTED,"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode");for(const t of e){if(t instanceof $X&&this.pendingLocalTracks.some(e=>e instanceof $X))throw new UD(MD.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof GG&&this.pendingLocalTracks.some(e=>e instanceof GG)&&(!vB().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some(e=>e instanceof GG&&e._bypassWebAudio)))throw new UD(MD.NOT_SUPPORTED,"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode")}}getLowVideoTrack(e,t){const r=vB().supportDualStreamEncoding,i=V1(V1({},{width:160,height:120,framerate:15,bitrate:50}),t);let n;n=r?e._mediaStreamTrack.clone():w1(e,i);const o=new $X(n,V1(V1({},r&&{scaleResolutionDownBy:uK(i,e)}),{},{frameRate:i.framerate,bitrateMax:i.bitrate,bitrateMin:i.bitrate}));return o._hints.push(Xk.LOW_STREAM),e.addListener(qk.NEED_CLOSE,()=>{o.close()}),o}async globalLock(){return this.mutex.lock("From P2PChannel.globalLock")}reportVideoFirstFrameDecoded(e,t,r,i){var n;const o=Array.from(HV(n=this.remoteUserMap).call(n)).find(t=>t._videoSSRC===e);if(o){i||this.store.subscribe(o.uid,"video",void 0,void 0,void 0,void 0,Date.now());const n=this.store.keyMetrics,s=n.subscribe.find(e=>e.userId===o.uid&&"video"===e.type);uj.firstRemoteVideoDecode(this.store.sessionId,XL.FIRST_VIDEO_DECODE,zL.FIRST_VIDEO_DECODE,{peer:o._uintid,videowidth:t,videoheight:r,subscribeElapse:qG.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:n.requestAPEnd||0,apStart:n.requestAPStart||0,joinGwEnd:n.joinGatewayEnd||0,joinGwStart:n.joinGatewayStart||0,pcEnd:n.peerConnectionEnd||0,pcStart:n.peerConnectionStart||0,subscriberEnd:(null==s?void 0:s.subscribeEnd)||0,subscriberStart:(null==s?void 0:s.subscribeStart)||0,videoAddNotify:(null==s?void 0:s.streamAdded)||0,state:i?1:0})}}async remoteMediaSsrcChanged(e,t,r){if(!this.connection)return!1;const i=this.remoteUserMap.get(e);if(!i)return!1;const n=i.get(t);if(!n)return!1;const o=await this.connection.getRemoteSSRC(n);return void 0!==o&&o!==r}}).prototype,"startP2PConnection",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"startP2PConnection"),Q1.prototype),UV(Q1.prototype,"connect",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"connect"),Q1.prototype),UV(Q1.prototype,"unpublish",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"unpublish"),Q1.prototype),UV(Q1.prototype,"unpublishLowStream",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"unpublishLowStream"),Q1.prototype),UV(Q1.prototype,"subscribe",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"subscribe"),Q1.prototype),UV(Q1.prototype,"massSubscribe",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"massSubscribe"),Q1.prototype),UV(Q1.prototype,"unsubscribe",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"unsubscribe"),Q1.prototype),UV(Q1.prototype,"massUnsubscribe",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"massUnsubscribe"),Q1.prototype),UV(Q1.prototype,"muteRemote",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"muteRemote"),Q1.prototype),UV(Q1.prototype,"unmuteRemote",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"unmuteRemote"),Q1.prototype),UV(Q1.prototype,"hasRemoteMediaWithLock",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"hasRemoteMediaWithLock"),Q1.prototype),UV(Q1.prototype,"disconnectForReconnect",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"disconnectForReconnect"),Q1.prototype),UV(Q1.prototype,"reEstablish",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"reEstablish"),Q1.prototype),UV(Q1.prototype,"updateBitrateLimit",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"updateBitrateLimit"),Q1.prototype),UV(Q1.prototype,"remoteMediaSsrcChanged",[H1],Object.getOwnPropertyDescriptor(Q1.prototype,"remoteMediaSsrcChanged"),Q1.prototype),x1=Q1))||x1;function H1(e,t,r){const i=e[t];if("function"!=typeof i)throw new Error("Cannot use mutex on object property.");return r.value=async function(){const e=this.mutex,r=await e.lock("From P2PChannel.".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await i.apply(this,o)}finally{r()}},r}function W1(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}var Y1,J1="function"==typeof Symbol&&Symbol.observable||"@@observable",q1=function(){return Math.random().toString(36).substring(7).split("").join(".")},X1={INIT:"@@redux/INIT"+q1(),REPLACE:"@@redux/REPLACE"+q1(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+q1()}};function z1(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function Z1(e,t,r){var i;if("function"==typeof t&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error(W1(0));if("function"==typeof t&&void 0===r&&(r=t,t=void 0),void 0!==r){if("function"!=typeof r)throw new Error(W1(1));return r(Z1)(e,t)}if("function"!=typeof e)throw new Error(W1(2));var n=e,o=t,s=[],a=s,c=!1;function d(){a===s&&(a=s.slice())}function u(){if(c)throw new Error(W1(3));return o}function A(e){if("function"!=typeof e)throw new Error(W1(4));if(c)throw new Error(W1(5));var t=!0;return d(),a.push(e),function(){if(t){if(c)throw new Error(W1(6));t=!1,d();var r=a.indexOf(e);a.splice(r,1),s=null}}}function h(e){if(!z1(e))throw new Error(W1(7));if(void 0===e.type)throw new Error(W1(8));if(c)throw new Error(W1(9));try{c=!0,o=n(o,e)}finally{c=!1}for(var t=s=a,r=0;r<t.length;r++){(0,t[r])()}return e}function l(e){if("function"!=typeof e)throw new Error(W1(10));n=e,h({type:X1.REPLACE})}function p(){var e,t=A;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new Error(W1(11));function r(){e.next&&e.next(u())}return r(),{unsubscribe:t(r)}}})[J1]=function(){return this},e}return h({type:X1.INIT}),(i={dispatch:h,subscribe:A,getState:u,replaceReducer:l})[J1]=p,i}function $1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function e0(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?$1(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):$1(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}!function(e){e.SET_SESSION_ID="SET_SESSION_ID",e.SET_P2P_ID="SET_P2P_id",e.SET_UID="SET_UID",e.SET_PUB_ID="SET_PUB_ID",e.SET_CLOUD_PROXY_SERVER_MODE="SET_CLOUD_PROXY_SERVER_MODE",e.KEY_METRIC_CLIENT_CREATED="KEY_METRIC_CLIENT_CREATED",e.KEY_METRIC_JOIN_START="KEY_METRIC_JOIN_START",e.AVOID_JOIN_START="AVOID_JOIN_START",e.KEY_METRIC_JOIN_END="KEY_METRIC_JOIN_END",e.KEY_METRIC_REQUEST_AP_START="KEY_METRIC_REQUEST_AP_START",e.KEY_METRIC_REQUEST_AP_END="KEY_METRIC_REQUEST_AP_END",e.KEY_METRIC_JOIN_GATEWAY_START="KEY_METRIC_JOIN_GATEWAY_START",e.KEY_METRIC_JOIN_GATEWAY_END="KEY_METRIC_JOIN_GATEWAY_END",e.KEY_METRIC_PEER_CONNECTION_START="KEY_METRIC_PEER_CONNECTION_START",e.KEY_METRIC_PEER_CONNECTION_END="KEY_METRIC_PEER_CONNECTION_END",e.KEY_METRIC_PUBLISH="KEY_METRIC_PUBLISH",e.KEY_METRIC_SUBSCRIBE="KEY_METRIC_SUBSCRIBE",e.RECORD_JOIN_CHANNEL_SERVICE="RECORD_JOIN_CHANNEL_SERVICE",e.RESET_JOIN_CHANNEL_SERVICE_RECORDS="RESET_JOIN_CHANNEL_SERVICE_RECORDS",e.RESET_KEY_METRICS="RESET_KEY_METRICS"}(Y1||(Y1={}));class t0{constructor(e,t,r,i){kO(this,"store",void 0),kO(this,"reducer",void 0);const n={codec:e,audioCodec:t,mode:r,clientId:i,sessionId:null,p2pId:0,pubId:0,subId:0,avoidJoinStart:0,keyMetrics:{publish:[],subscribe:[]},joinChannelServiceRecords:[],cloudProxyServerMode:"disabled"};this.reducer=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case Y1.SET_SESSION_ID:return e0(e0({},e),{},{sessionId:t.sessionId});case Y1.SET_P2P_ID:return e0(e0({},e),{},{p2pId:t.p2pId});case Y1.SET_UID:return e0(e0({},e),{},{uid:t.uid});case Y1.SET_PUB_ID:return e0(e0({},e),{},{pubId:t.pubId});case Y1.KEY_METRIC_CLIENT_CREATED:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{clientCreated:t.metric})});case Y1.KEY_METRIC_JOIN_START:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{joinStart:t.metric})});case Y1.AVOID_JOIN_START:return e0(e0({},e),{},{avoidJoinStart:t.avoidJoinStart});case Y1.KEY_METRIC_JOIN_END:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{joinEnd:t.metric})});case Y1.KEY_METRIC_REQUEST_AP_START:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{requestAPStart:t.metric})});case Y1.KEY_METRIC_REQUEST_AP_END:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{requestAPEnd:t.metric})});case Y1.KEY_METRIC_JOIN_GATEWAY_START:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{joinGatewayStart:t.metric})});case Y1.KEY_METRIC_JOIN_GATEWAY_END:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{joinGatewayEnd:t.metric})});case Y1.KEY_METRIC_PEER_CONNECTION_START:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{peerConnectionStart:t.metric})});case Y1.KEY_METRIC_PEER_CONNECTION_END:return e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{peerConnectionEnd:t.metric})});case Y1.KEY_METRIC_PUBLISH:{const r=e.keyMetrics.publish,i=r.findIndex(e=>e.trackId===t.metric.trackId);return-1!==i?(r[i]=e0(e0({},r[i]),t.metric),e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{publish:[...r]})})):e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{publish:[...e.keyMetrics.publish,t.metric]})})}case Y1.KEY_METRIC_SUBSCRIBE:{const r=e.keyMetrics.subscribe,i=r.findIndex(e=>e.userId===t.metric.userId&&e.type===t.metric.type);return-1!==i?(r[i]=e0(e0({},r[i]),t.metric),e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{subscribe:[...r]})})):e0(e0({},e),{},{keyMetrics:e0(e0({},e.keyMetrics),{},{subscribe:[...e.keyMetrics.subscribe,t.metric]})})}case Y1.SET_CLOUD_PROXY_SERVER_MODE:return e.cloudProxyServerMode=t.mode,e;case Y1.RECORD_JOIN_CHANNEL_SERVICE:return"number"!=typeof t.index?e.joinChannelServiceRecords=[...e.joinChannelServiceRecords,t.record]:(e.joinChannelServiceRecords[t.index]=e0(e0({},e.joinChannelServiceRecords[t.index]),t.record),e.joinChannelServiceRecords=[...e.joinChannelServiceRecords]),e;case Y1.RESET_JOIN_CHANNEL_SERVICE_RECORDS:return e.joinChannelServiceRecords=[],e;case Y1.RESET_KEY_METRICS:return e.keyMetrics={publish:[],subscribe:[]},e;default:return e}},this.store=Z1(this.reducer)}set sessionId(e){this.store.dispatch({type:Y1.SET_SESSION_ID,sessionId:e})}get sessionId(){return this.store.getState().sessionId}get codec(){return this.store.getState().codec}get audioCodec(){return this.store.getState().audioCodec}get clientId(){return this.store.getState().clientId}set p2pId(e){this.store.dispatch({type:Y1.SET_P2P_ID,p2pId:e})}get p2pId(){return this.store.getState().p2pId}set uid(e){this.store.dispatch({type:Y1.SET_UID,uid:e})}get uid(){return this.store.getState().uid}set pubId(e){this.store.dispatch({type:Y1.SET_PUB_ID,pubId:e})}get pubId(){return this.store.getState().pubId}set cloudProxyServerMode(e){this.store.dispatch({type:Y1.SET_CLOUD_PROXY_SERVER_MODE,mode:e})}get cloudProxyServerMode(){return this.store.getState().cloudProxyServerMode}clientCreated(){this.store.dispatch({type:Y1.KEY_METRIC_CLIENT_CREATED,metric:Date.now()})}joinStart(){this.store.dispatch({type:Y1.KEY_METRIC_JOIN_START,metric:Date.now()})}joinEnd(){this.store.dispatch({type:Y1.KEY_METRIC_JOIN_END,metric:Date.now()})}requestAPStart(){this.store.dispatch({type:Y1.KEY_METRIC_REQUEST_AP_START,metric:Date.now()})}requestAPEnd(){this.store.dispatch({type:Y1.KEY_METRIC_REQUEST_AP_END,metric:Date.now()})}joinGatewayStart(){this.store.dispatch({type:Y1.KEY_METRIC_JOIN_GATEWAY_START,metric:Date.now()})}joinGatewayEnd(){this.store.dispatch({type:Y1.KEY_METRIC_JOIN_GATEWAY_END,metric:Date.now()})}peerConnectionStart(){this.store.dispatch({type:Y1.KEY_METRIC_PEER_CONNECTION_START,metric:Date.now()})}peerConnectionEnd(){this.store.dispatch({type:Y1.KEY_METRIC_PEER_CONNECTION_END,metric:Date.now()})}publish(e,t,r,i){this.store.dispatch({type:Y1.KEY_METRIC_PUBLISH,metric:e0(e0({trackId:e,type:t},r&&{publishStart:r}),i&&{publishEnd:i})})}subscribe(e,t,r,i,n,o,s){this.store.dispatch({type:Y1.KEY_METRIC_SUBSCRIBE,metric:e0(e0(e0(e0(e0({userId:e,type:t},r&&{subscribeStart:r}),i&&{subscribeEnd:i}),n&&{firstFrame:n}),o&&{streamAdded:o}),s&&{firstDecoded:s})})}massSubscribe(e,t,r,i){e.forEach(e=>{this.store.dispatch({type:Y1.KEY_METRIC_SUBSCRIBE,metric:e0(e0(e0({userId:e.userId,type:e.type},t&&{subscribeStart:t}),r&&{subscribeEnd:r}),i&&{firstFrame:i})})})}get keyMetrics(){return this.store.getState().keyMetrics}recordJoinChannelService(e,t){"gateway"===e.service&&Array.isArray(e.urls)&&(e.urls=e.urls.map(e=>e.replace(/(\d+)-\d+-\d+-(\d+)/,"$1-*-*-$2")));try{return"number"!=typeof t?(this.store.dispatch({type:Y1.RECORD_JOIN_CHANNEL_SERVICE,record:e0(e0({},e),{},{sessionId:this.sessionId,cloudProxyMode:this.cloudProxyServerMode,uid:this.uid})}),this.store.getState().joinChannelServiceRecords.length-1):(t<0||t>=this.store.getState().joinChannelServiceRecords.length||this.store.dispatch({type:Y1.RECORD_JOIN_CHANNEL_SERVICE,record:e,index:t}),t)}catch(e){return 0}}resetJoinChannelServiceRecords(){this.store.dispatch({type:Y1.RESET_JOIN_CHANNEL_SERVICE_RECORDS})}resetKeyMetrics(){this.store.dispatch({type:Y1.RESET_KEY_METRICS})}get joinChannelServiceRecords(){try{return this.store.getState().joinChannelServiceRecords}catch(e){return[]}}get avoidJoinStart(){return this.store.getState().avoidJoinStart}set avoidJoinStart(e){this.store.dispatch({type:Y1.AVOID_JOIN_START,avoidJoinStart:e})}}let r0;const i0=()=>"HTTPS"===(r0||r0||(r0=(window.location.protocol.split(":")[0]||"").toUpperCase(),r0)),n0=()=>void 0!==window.isSecureContext;class o0{constructor(e,t){kO(this,"time",void 0),kO(this,"sequence",void 0),kO(this,"name",void 0),kO(this,"elapse",void 0),this.name=e,this.time=performance.now(),this.sequence=EB[t].indexOf(e)}setElapse(e){this.elapse=e}}const s0=new Map;class a0{constructor(e,t){kO(this,"records",[]),kO(this,"_id",void 0),kO(this,"_group",void 0),kO(this,"_localTimeStamp",void 0),kO(this,"_performanceTimeStamp",void 0),this._id=e,this._group=t,this._localTimeStamp=Date.now(),this._performanceTimeStamp=performance.now()}checkPoint(e){const t=new o0(e,this._group);-1===t.sequence&&HD.warning("[".concat(this._id,"] check point record failed, cannot get the sequence")),this.records.push(t);const r=this.records.find(e=>e.sequence===t.sequence-1);r&&t.setElapse(t.time-r.time)}getRecord(e){return this.records.find(t=>t&&t.name===e)}resetRecords(){this.records.length=0}}function c0(e){let t=m0();return function(e,t){let r=e.appId;void 0!==r&&(L0(t,10),y0(t,r));let i=e.cid;void 0!==i&&(L0(t,16),L0(t,i));let n=e.cname;void 0!==n&&(L0(t,26),y0(t,n));let o=e.deviceId;void 0!==o&&(L0(t,34),y0(t,o));let s=e.elapse;void 0!==s&&(L0(t,40),k0(t,s));let a=e.fileSize;void 0!==a&&(L0(t,48),k0(t,f0(a)));let c=e.height;void 0!==c&&(L0(t,56),k0(t,f0(c)));let d=e.jpg;void 0!==d&&(L0(t,66),L0(t,d.length),function(e,t){let r=v0(e,t.length);e.bytes.set(t,r)}(t,d));let u=e.networkType;void 0!==u&&(L0(t,72),k0(t,f0(u)));let A=e.osType;void 0!==A&&(L0(t,80),k0(t,f0(A)));let h=e.requestId;void 0!==h&&(L0(t,90),y0(t,h));let l=e.sdkVersion;void 0!==l&&(L0(t,98),y0(t,l));let p=e.sequence;void 0!==p&&(L0(t,104),k0(t,f0(p)));let g=e.sid;void 0!==g&&(L0(t,114),y0(t,g));let E=e.timestamp;void 0!==E&&(L0(t,120),k0(t,E));let f=e.uid;void 0!==f&&(L0(t,128),L0(t,f));let I=e.vid;void 0!==I&&(L0(t,136),L0(t,I));let m=e.width;void 0!==m&&(L0(t,144),k0(t,f0(m)));let _=e.service;void 0!==_&&(L0(t,152),L0(t,_));let C=e.callbackData;void 0!==C&&(L0(t,162),y0(t,C));let S=e.jpgEncryption;void 0!==S&&(L0(t,168),L0(t,S));let v=e.requestType;void 0!==v&&(L0(t,176),L0(t,v));let T=e.scorePorn;void 0!==T&&(L0(t,185),D0(t,T));let R=e.scoreSexy;void 0!==R&&(L0(t,193),D0(t,R));let y=e.scoreNeutral;void 0!==y&&(L0(t,201),D0(t,y));let w=e.scene;void 0!==w&&(L0(t,208),L0(t,w));let b=e.ossFilePrefix;void 0!==b&&(L0(t,218),y0(t,b));let O=e.serviceVendor;if(void 0!==O)for(let e of O){L0(t,226);let r=m0();A0(e,r),L0(t,r.limit),w0(t,r),_0(r)}}(e,t),function(e){let t=e.bytes,r=e.limit;return t.length===r?t:t.subarray(0,r)}(t)}function d0(e){return function(e){let t={};e:for(;!S0(e);){let r=P0(e);switch(r>>>3){case 0:break e;case 1:t.code=P0(e);break;case 2:t.msg=R0(e,P0(e));break;case 3:{let r=h0(e);t.data=u0(e),e.limit=r;break}default:l0(e,7&r)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function u0(e){let t={};e:for(;!S0(e);){let r=P0(e);switch(r>>>3){case 0:break e;case 1:t.requestId=R0(e,P0(e));break;case 2:t.requestType=P0(e)>>>0;break;case 3:t.scorePorn=N0(e);break;case 4:t.scoreSexy=N0(e);break;case 5:t.scoreNeutral=N0(e);break;case 6:t.requestScene=P0(e)>>>0;break;case 7:t.scene=P0(e)>>>0;break;default:l0(e,7&r)}}return t}function A0(e,t){let r=e.service;void 0!==r&&(L0(t,8),L0(t,r));let i=e.vendor;void 0!==i&&(L0(t,16),L0(t,i));let n=e.token;void 0!==n&&(L0(t,26),y0(t,n));let o=e.callbackUrl;void 0!==o&&(L0(t,34),y0(t,o))}function h0(e){let t=P0(e),r=e.limit;return e.limit=e.offset+t,r}function l0(e,t){switch(t){case 0:for(;128&b0(e););break;case 2:C0(e,P0(e));break;case 5:C0(e,4);break;case 1:C0(e,8);break;default:throw new Error("Unimplemented type: "+t)}}let p0=new Float32Array(1);new Uint8Array(p0.buffer);let g0=new Float64Array(1),E0=new Uint8Array(g0.buffer);function f0(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let I0=[];function m0(){const e=I0.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}function _0(e){I0.push(e)}function C0(e,t){if(e.offset+t>e.limit)throw new Error("Skip past limit");e.offset+=t}function S0(e){return e.offset>=e.limit}function v0(e,t){let r=e.bytes,i=e.offset,n=e.limit,o=i+t;if(o>r.length){let t=new Uint8Array(2*o);t.set(r),e.bytes=t}return e.offset=o,o>n&&(e.limit=o),i}function T0(e,t){let r=e.offset;if(r+t>e.limit)throw new Error("Read past limit");return e.offset+=t,r}function R0(e,t){let r=T0(e,t),i=String.fromCharCode,n=e.bytes,o="�",s="";for(let e=0;e<t;e++){let a,c,d,u,A=n[e+r];0==(128&A)?s+=i(A):192==(224&A)?e+1>=t?s+=o:(a=n[e+r+1],128!=(192&a)?s+=o:(u=(31&A)<<6|63&a,u<128?s+=o:(s+=i(u),e++))):224==(240&A)?e+2>=t?s+=o:(a=n[e+r+1],c=n[e+r+2],32896!=(49344&(a|c<<8))?s+=o:(u=(15&A)<<12|(63&a)<<6|63&c,u<2048||u>=55296&&u<=57343?s+=o:(s+=i(u),e+=2))):240==(248&A)?e+3>=t?s+=o:(a=n[e+r+1],c=n[e+r+2],d=n[e+r+3],8421504!=(12632256&(a|c<<8|d<<16))?s+=o:(u=(7&A)<<18|(63&a)<<12|(63&c)<<6|63&d,u<65536||u>1114111?s+=o:(u-=65536,s+=i(55296+(u>>10),56320+(1023&u)),e+=3))):s+=o}return s}function y0(e,t){let r=t.length,i=0;for(let e=0;e<r;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<r&&(n=(n<<10)+t.charCodeAt(++e)-56613888),i+=n<128?1:n<2048?2:n<65536?3:4}L0(e,i);let n=v0(e,i),o=e.bytes;for(let e=0;e<r;e++){let i=t.charCodeAt(e);i>=55296&&i<=56319&&e+1<r&&(i=(i<<10)+t.charCodeAt(++e)-56613888),i<128?o[n++]=i:(i<2048?o[n++]=i>>6&31|192:(i<65536?o[n++]=i>>12&15|224:(o[n++]=i>>18&7|240,o[n++]=i>>12&63|128),o[n++]=i>>6&63|128),o[n++]=63&i|128)}}function w0(e,t){let r=v0(e,t.limit),i=e.bytes,n=t.bytes;for(let e=0,o=t.limit;e<o;e++)i[e+r]=n[e]}function b0(e){return e.bytes[T0(e,1)]}function O0(e,t){let r=v0(e,1);e.bytes[r]=t}function N0(e){let t=T0(e,8),r=e.bytes;return E0[0]=r[t++],E0[1]=r[t++],E0[2]=r[t++],E0[3]=r[t++],E0[4]=r[t++],E0[5]=r[t++],E0[6]=r[t++],E0[7]=r[t++],g0[0]}function D0(e,t){let r=v0(e,8),i=e.bytes;g0[0]=t,i[r++]=E0[0],i[r++]=E0[1],i[r++]=E0[2],i[r++]=E0[3],i[r++]=E0[4],i[r++]=E0[5],i[r++]=E0[6],i[r++]=E0[7]}function P0(e){let t,r=0,i=0;do{t=b0(e),r<32&&(i|=(127&t)<<r),r+=7}while(128&t);return i}function L0(e,t){for(t>>>=0;t>=128;)O0(e,127&t|128),t>>>=7;O0(e,t)}function k0(e,t){let r=t.low>>>0,i=(t.low>>>28|t.high<<4)>>>0,n=t.high>>>24,o=0===n?0===i?r<16384?r<128?1:2:r<1<<21?3:4:i<16384?i<128?5:6:i<1<<21?7:8:n<128?9:10,s=v0(e,o),a=e.bytes;switch(o){case 10:a[s+9]=n>>>7&1;case 9:a[s+8]=9!==o?128|n:127&n;case 8:a[s+7]=8!==o?i>>>21|128:i>>>21&127;case 7:a[s+6]=7!==o?i>>>14|128:i>>>14&127;case 6:a[s+5]=6!==o?i>>>7|128:i>>>7&127;case 5:a[s+4]=5!==o?128|i:127&i;case 4:a[s+3]=4!==o?r>>>21|128:r>>>21&127;case 3:a[s+2]=3!==o?r>>>14|128:r>>>14&127;case 2:a[s+1]=2!==o?r>>>7|128:r>>>7&127;case 1:a[s]=1!==o?128|r:127&r}}var B0={};Object.defineProperty(B0,"__esModule",{value:!0});var M0=function(){function e(){this._dataLength=0,this._bufferLength=0,this._state=new Int32Array(4),this._buffer=new ArrayBuffer(68),this._buffer8=new Uint8Array(this._buffer,0,68),this._buffer32=new Uint32Array(this._buffer,0,17),this.start()}return e.hashStr=function(e,t){return void 0===t&&(t=!1),this.onePassHasher.start().appendStr(e).end(t)},e.hashAsciiStr=function(e,t){return void 0===t&&(t=!1),this.onePassHasher.start().appendAsciiStr(e).end(t)},e._hex=function(t){var r,i,n,o,s=e.hexChars,a=e.hexOut;for(o=0;o<4;o+=1)for(i=8*o,r=t[o],n=0;n<8;n+=2)a[i+1+n]=s.charAt(15&r),r>>>=4,a[i+0+n]=s.charAt(15&r),r>>>=4;return a.join("")},e._md5cycle=function(e,t){var r=e[0],i=e[1],n=e[2],o=e[3];i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&n|~i&o)+t[0]-680876936|0)<<7|r>>>25)+i|0)&i|~r&n)+t[1]-389564586|0)<<12|o>>>20)+r|0)&r|~o&i)+t[2]+606105819|0)<<17|n>>>15)+o|0)&o|~n&r)+t[3]-1044525330|0)<<22|i>>>10)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&n|~i&o)+t[4]-176418897|0)<<7|r>>>25)+i|0)&i|~r&n)+t[5]+1200080426|0)<<12|o>>>20)+r|0)&r|~o&i)+t[6]-1473231341|0)<<17|n>>>15)+o|0)&o|~n&r)+t[7]-45705983|0)<<22|i>>>10)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&n|~i&o)+t[8]+1770035416|0)<<7|r>>>25)+i|0)&i|~r&n)+t[9]-1958414417|0)<<12|o>>>20)+r|0)&r|~o&i)+t[10]-42063|0)<<17|n>>>15)+o|0)&o|~n&r)+t[11]-1990404162|0)<<22|i>>>10)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&n|~i&o)+t[12]+1804603682|0)<<7|r>>>25)+i|0)&i|~r&n)+t[13]-40341101|0)<<12|o>>>20)+r|0)&r|~o&i)+t[14]-1502002290|0)<<17|n>>>15)+o|0)&o|~n&r)+t[15]+1236535329|0)<<22|i>>>10)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&o|n&~o)+t[1]-165796510|0)<<5|r>>>27)+i|0)&n|i&~n)+t[6]-1069501632|0)<<9|o>>>23)+r|0)&i|r&~i)+t[11]+643717713|0)<<14|n>>>18)+o|0)&r|o&~r)+t[0]-373897302|0)<<20|i>>>12)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&o|n&~o)+t[5]-701558691|0)<<5|r>>>27)+i|0)&n|i&~n)+t[10]+38016083|0)<<9|o>>>23)+r|0)&i|r&~i)+t[15]-660478335|0)<<14|n>>>18)+o|0)&r|o&~r)+t[4]-405537848|0)<<20|i>>>12)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&o|n&~o)+t[9]+568446438|0)<<5|r>>>27)+i|0)&n|i&~n)+t[14]-1019803690|0)<<9|o>>>23)+r|0)&i|r&~i)+t[3]-187363961|0)<<14|n>>>18)+o|0)&r|o&~r)+t[8]+1163531501|0)<<20|i>>>12)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i&o|n&~o)+t[13]-1444681467|0)<<5|r>>>27)+i|0)&n|i&~n)+t[2]-51403784|0)<<9|o>>>23)+r|0)&i|r&~i)+t[7]+1735328473|0)<<14|n>>>18)+o|0)&r|o&~r)+t[12]-1926607734|0)<<20|i>>>12)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i^n^o)+t[5]-378558|0)<<4|r>>>28)+i|0)^i^n)+t[8]-2022574463|0)<<11|o>>>21)+r|0)^r^i)+t[11]+1839030562|0)<<16|n>>>16)+o|0)^o^r)+t[14]-35309556|0)<<23|i>>>9)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i^n^o)+t[1]-1530992060|0)<<4|r>>>28)+i|0)^i^n)+t[4]+1272893353|0)<<11|o>>>21)+r|0)^r^i)+t[7]-155497632|0)<<16|n>>>16)+o|0)^o^r)+t[10]-1094730640|0)<<23|i>>>9)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i^n^o)+t[13]+681279174|0)<<4|r>>>28)+i|0)^i^n)+t[0]-358537222|0)<<11|o>>>21)+r|0)^r^i)+t[3]-722521979|0)<<16|n>>>16)+o|0)^o^r)+t[6]+76029189|0)<<23|i>>>9)+n|0,i=((i+=((n=((n+=((o=((o+=((r=((r+=(i^n^o)+t[9]-640364487|0)<<4|r>>>28)+i|0)^i^n)+t[12]-421815835|0)<<11|o>>>21)+r|0)^r^i)+t[15]+530742520|0)<<16|n>>>16)+o|0)^o^r)+t[2]-995338651|0)<<23|i>>>9)+n|0,i=((i+=((o=((o+=(i^((r=((r+=(n^(i|~o))+t[0]-198630844|0)<<6|r>>>26)+i|0)|~n))+t[7]+1126891415|0)<<10|o>>>22)+r|0)^((n=((n+=(r^(o|~i))+t[14]-1416354905|0)<<15|n>>>17)+o|0)|~r))+t[5]-57434055|0)<<21|i>>>11)+n|0,i=((i+=((o=((o+=(i^((r=((r+=(n^(i|~o))+t[12]+1700485571|0)<<6|r>>>26)+i|0)|~n))+t[3]-1894986606|0)<<10|o>>>22)+r|0)^((n=((n+=(r^(o|~i))+t[10]-1051523|0)<<15|n>>>17)+o|0)|~r))+t[1]-2054922799|0)<<21|i>>>11)+n|0,i=((i+=((o=((o+=(i^((r=((r+=(n^(i|~o))+t[8]+1873313359|0)<<6|r>>>26)+i|0)|~n))+t[15]-30611744|0)<<10|o>>>22)+r|0)^((n=((n+=(r^(o|~i))+t[6]-1560198380|0)<<15|n>>>17)+o|0)|~r))+t[13]+1309151649|0)<<21|i>>>11)+n|0,i=((i+=((o=((o+=(i^((r=((r+=(n^(i|~o))+t[4]-145523070|0)<<6|r>>>26)+i|0)|~n))+t[11]-1120210379|0)<<10|o>>>22)+r|0)^((n=((n+=(r^(o|~i))+t[2]+718787259|0)<<15|n>>>17)+o|0)|~r))+t[9]-343485551|0)<<21|i>>>11)+n|0,e[0]=r+e[0]|0,e[1]=i+e[1]|0,e[2]=n+e[2]|0,e[3]=o+e[3]|0},e.prototype.start=function(){return this._dataLength=0,this._bufferLength=0,this._state.set(e.stateIdentity),this},e.prototype.appendStr=function(t){var r,i,n=this._buffer8,o=this._buffer32,s=this._bufferLength;for(i=0;i<t.length;i+=1){if((r=t.charCodeAt(i))<128)n[s++]=r;else if(r<2048)n[s++]=192+(r>>>6),n[s++]=63&r|128;else if(r<55296||r>56319)n[s++]=224+(r>>>12),n[s++]=r>>>6&63|128,n[s++]=63&r|128;else{if((r=1024*(r-55296)+(t.charCodeAt(++i)-56320)+65536)>1114111)throw new Error("Unicode standard supports code points up to U+10FFFF");n[s++]=240+(r>>>18),n[s++]=r>>>12&63|128,n[s++]=r>>>6&63|128,n[s++]=63&r|128}s>=64&&(this._dataLength+=64,e._md5cycle(this._state,o),s-=64,o[0]=o[16])}return this._bufferLength=s,this},e.prototype.appendAsciiStr=function(t){for(var r,i=this._buffer8,n=this._buffer32,o=this._bufferLength,s=0;;){for(r=Math.min(t.length-s,64-o);r--;)i[o++]=t.charCodeAt(s++);if(o<64)break;this._dataLength+=64,e._md5cycle(this._state,n),o=0}return this._bufferLength=o,this},e.prototype.appendByteArray=function(t){for(var r,i=this._buffer8,n=this._buffer32,o=this._bufferLength,s=0;;){for(r=Math.min(t.length-s,64-o);r--;)i[o++]=t[s++];if(o<64)break;this._dataLength+=64,e._md5cycle(this._state,n),o=0}return this._bufferLength=o,this},e.prototype.getState=function(){var e=this._state;return{buffer:String.fromCharCode.apply(null,Array.from(this._buffer8)),buflen:this._bufferLength,length:this._dataLength,state:[e[0],e[1],e[2],e[3]]}},e.prototype.setState=function(e){var t,r=e.buffer,i=e.state,n=this._state;for(this._dataLength=e.length,this._bufferLength=e.buflen,n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],t=0;t<r.length;t+=1)this._buffer8[t]=r.charCodeAt(t)},e.prototype.end=function(t){void 0===t&&(t=!1);var r=this._bufferLength,i=this._buffer8,n=this._buffer32,o=1+(r>>2);this._dataLength+=r;var s=8*this._dataLength;if(i[r]=128,i[r+1]=i[r+2]=i[r+3]=0,n.set(e.buffer32Identity.subarray(o),o),r>55&&(e._md5cycle(this._state,n),n.set(e.buffer32Identity)),s<=4294967295)n[14]=s;else{var a=s.toString(16).match(/(.*?)(.{0,8})$/);if(null===a)return;var c=parseInt(a[2],16),d=parseInt(a[1],16)||0;n[14]=c,n[15]=d}return e._md5cycle(this._state,n),t?this._state:e._hex(this._state)},e.stateIdentity=new Int32Array([1732584193,-271733879,-1732584194,271733878]),e.buffer32Identity=new Int32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),e.hexChars="0123456789abcdef",e.hexOut=[],e.onePassHasher=new e,e}(),U0=B0.Md5=M0;if("5d41402abc4b2a76b9719d911017c592"!==M0.hashStr("hello"))throw new Error("Md5 self test failed.");const x0=async(e,t,r)=>await(async(e,t,r)=>{const i=""+t+r,n=new Uint8Array(U0.hashStr(i,!0).buffer).slice(0,16),o=n.slice(0,12),s=await window.crypto.subtle.importKey("raw",n,"AES-GCM",!0,["encrypt"]);return new Uint8Array(await window.crypto.subtle.encrypt({name:"AES-GCM",iv:o},s,e))})(e.buffer,t,r);function Q0(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}const F0=new Map([["moderation",1],["supervise",2],["all",3]]);class V0 extends kD{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(CB.CONNECTION_STATE_CHANGE,t,e)}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this.qualityTimer&&(window.clearTimeout(this.qualityTimer),this.qualityTimer=null),this._quality>=1||(this.qualityTimer=window.setTimeout(()=>{this.quality=this._quality/this.qualityRatio},6e4))}constructor(e){super(),kO(this,"name","AgoraRTCVideoContentInspect"),kO(this,"_connectionState",mB.CONNECTING),kO(this,"_innerConnectionState",void 0),kO(this,"sequence",0),kO(this,"inspectStartTime",void 0),kO(this,"workerManagerConnection",void 0),kO(this,"workerConnection",void 0),kO(this,"workerMessageLengthLimit",void 0),kO(this,"inspectIntervalMinimum",void 0),kO(this,"qualityRatio",void 0),kO(this,"_connectInfo",void 0),kO(this,"_cancelTokenSource",PD.CancelToken.source()),kO(this,"_retryConfig",void 0),kO(this,"wmSequence",0),kO(this,"inspectInterval",void 0),kO(this,"inspectTimer",null),kO(this,"ossFilePrefix",void 0),kO(this,"extraInfo",void 0),kO(this,"inspectType","all"),kO(this,"_quality",1),kO(this,"qualityTimer",null),kO(this,"_inspectId",void 0),kO(this,"_needWorkUrlOnly",!1),kO(this,"inspectImage",()=>{if(this.connectionState!==mB.CONNECTED)throw new UD(MD.OPERATION_ABORTED,"content inspect service connection status is ".concat(this.connectionState));this.inspectTimer&&(window.clearInterval(this.inspectTimer),this.inspectTimer=null),this.inspectTimer=window.setInterval(()=>{if(this.connectionState!==mB.CONNECTED)return HD.debug("[".concat(this._inspectId,"] Inspect State is not connected , "),this.connectionState),void cP("debug",this,"Inspect State is not connected , ".concat(this.connectionState));this.requestToInspectImage()},this.inspectInterval<this.inspectIntervalMinimum?this.inspectIntervalMinimum:this.inspectInterval),this.requestToInspectImage()}),this._inspectId=fK(5,"inspect-"),this.workerMessageLengthLimit=NP("VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT"),this.inspectIntervalMinimum=NP("VIDEO_INSPECT_INTERVAL_MINIMUM"),this.qualityRatio=NP("VIDEO_INSPECT_QUALITY_RATIO"),this.inspectInterval=e.interval,this.ossFilePrefix=e.ossFilePrefix,this.extraInfo=e.extraInfo,this.inspectType=e.inspectType||"all",this.inspectStartTime=Number(Date.now()),this.workerManagerConnection=new JJ("worker-manager-"+this._inspectId,xD),this.on(CB.STATE_CHANGE,(e,t)=>{this._innerConnectionState=e,HD.debug("[".concat(this._inspectId,"] Inspect operation :").concat(_B[e]," ").concat(t||"")),AP("debug",["Inspect",this._inspectId],CB.STATE_CHANGE,"".concat(_B[e]," ").concat(t||""))}),this.handleWorkerManagerEvents(),this.workerConnection=new JJ("worker-"+this._inspectId,xD),this.handleWorkerEvents()}async init(e,t){this.emit(CB.STATE_CHANGE,_B.CONNECT_AP),this._connectInfo=e;const r=this._cancelTokenSource.token;return this._retryConfig=t,new nT((i,n)=>{this.on(CB.CONNECTION_STATE_CHANGE,(e,t)=>{t===mB.CONNECTED&&i()}),this.requestAP(e,r,t).then(e=>{this.connectWorkerManager(e)}).catch(e=>{n(e)})})}async requestAP(e,t,r){const i=NP("WEBCS_DOMAIN").map(e=>"https://".concat(e,"/api/v1")),n=await function(e,t,r,i){let{appId:n,areaCode:o,cname:s,sid:a,token:c,uid:d}=t;gq++;const u="image_moderation_api",A={service_name:u,json_body:JSON.stringify({appId:n,areaCode:o,cname:s,command:"allocateEdge",requestId:gq,seq:gq,sid:a,token:c,ts:Date.now(),uid:d+""})};let h,l,p=e[0];return FD(async()=>{h=Date.now();const e=await XV(p,{data:A,cancelToken:r,headers:{"X-Packet-Service-Type":"0","X-Packet-URI":"61"},params:{action:"wrtc_gateway"}});if(l=Date.now()-h,0!==e.code){const t=new UD(MD.UNEXPECTED_RESPONSE,"image inspect ap error, code"+e.code,{retry:!0,responseTime:l});throw HD.error(t.toString()),hP("error",["AjaxAPI"],"requestImageInspectAP",void 0,t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new UD(MD.UNEXPECTED_RESPONSE,"image inspect ap error, code: ".concat(t.code,", reason: ").concat(t.reason),{code:t.code,responseTime:l});throw HD.error(e.toString()),hP("error",["AjaxAPI"],"requestImageInspectAP",void 0,e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new UD(MD.UNEXPECTED_RESPONSE,"image inspect ap empty server",{code:t.code,responseTime:l});throw HD.error(e.toString()),hP("error",["AjaxAPI"],"requestImageInspectAP",void 0,e.toString()),e}const i=NP("VIDEO_INSPECT_WORKER_MANAGER_HOST"),n=NP("VIDEO_INSPECT_WORKER_MANAGER_PORT");return{addressList:t.servers.map(e=>{let{address:t,wss:r}=e;if(t&&r)return"wss://".concat(t.replace(/\./g,"-"),".").concat(i,":").concat(n||r)}).filter(e=>!!e),workerToken:t.workerToken,vid:t.vid,responseTime:l}},(t,r)=>(uj.apworkerEvent(a,{success:!0,sc:200,serviceName:u,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===r,responseTime:l,serverIp:e[r%e.length]}),!1),(t,r)=>(uj.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:u,responseTime:l,serverIp:e[r%e.length]}),!!(t.code!==MD.OPERATION_ABORTED&&t.code!==MD.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(p=e[(r+1)%e.length],!0)),i)}(i,e,t,r);this.emit(CB.STATE_CHANGE,_B.AP_CONNECTED);const{addressList:o}=n;return this.wmSequence++,o}async connectWorkerManager(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._needWorkUrlOnly=t,this.emit(CB.STATE_CHANGE,_B.CONNECT_WORKER_MANAGER),await this.workerManagerConnection.init(e,1e4)}async connectWorker(e){await this.workerConnection.init([e])}handleWorkerManagerEvents(){this.workerManagerConnection.on(Nk.CONNECTED,async()=>{this.emit(CB.STATE_CHANGE,_B.WORKER_MANAGER_CONNECTED,this.workerManagerConnection.url),this.workerManagerConnection.sendMessage({appId:this._connectInfo.appId,cname:this._connectInfo.cname,uid:this._connectInfo.uid+"",sdkVersion:"4.13.0",sid:this._connectInfo.sid,seq:this.wmSequence,ts:Number(Date.now()),requestId:Math.floor(1e12*Math.random()),allocate:!0,clientRequest:{command:"join"}},!0)}),this.workerManagerConnection.on(Nk.CLOSED,()=>{this._innerConnectionState<_B.GET_WORKER_MANAGER_RESPONSE&&(HD.debug("[".concat(this._inspectId,"] Inspect worker manager is closed before connecting worker")),AP("debug",["Inspect",this._inspectId],"workerManagerConnectionClosed"))}),this.workerManagerConnection.on(Nk.FAILED,()=>{this._innerConnectionState<_B.GET_WORKER_MANAGER_RESPONSE&&(HD.debug("[".concat(this._inspectId,"] Connecting inspect worker manager is failed before connecting worker")),AP("debug",["Inspect",this._inspectId],"workerManagerConnectionFailed"))}),this.workerManagerConnection.on(Nk.RECONNECTING,()=>{this._innerConnectionState<_B.GET_WORKER_MANAGER_RESPONSE&&(HD.debug("[".concat(this._inspectId,"] Inspect worker manager is reconnecting before connecting worker")),AP("debug",["Inspect",this._inspectId],"workerManagerConnectionReconnecting"))}),this.workerManagerConnection.on(Nk.ON_MESSAGE,async e=>{this.emit(CB.STATE_CHANGE,_B.GET_WORKER_MANAGER_RESPONSE);const t=this.workerManagerConnection.url;this.workerManagerConnection.close();const r=JSON.parse(e.data);if(200!==r.code)throw HD.error("[".concat(this._inspectId,"] Unexpected code ").concat(r.code," from worker manager")),cP("error",this,"Unexpected code ".concat(r.code," from worker manager")),new UD(MD.UNEXPECTED_RESPONSE,"response code of worker is unexpected",r);if(!(r.serverResponse&&r.serverResponse.portWss&&t))throw HD.error("[".concat(this._inspectId,"] Unexpected content from worker manager : ").concat(JSON.stringify(r))),cP("error",this,"Unexpected content from worker manager : "+JSON.stringify(r)),new UD(MD.UNEXPECTED_RESPONSE,"response content of worker is unexpected",r);{const e=NP("VIDEO_INSPECT_WORKER_PORT")||r.serverResponse.portWss,i=t.replace(/:\d+\/?$/,":".concat(e));this.emit(CB.STATE_CHANGE,_B.CONNECT_WORKER,i),this._needWorkUrlOnly?this.emit(CB.REQUEST_NEW_WORKER_URL,i):await this.connectWorker(i)}}),this.workerManagerConnection.on(Nk.WILL_RECONNECT,(e,t)=>{t(e)}),this.workerManagerConnection.on(Nk.REQUEST_NEW_URLS,(e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)})}handleWorkerEvents(){this.workerConnection.on(Nk.CONNECTED,async()=>{this.emit(CB.STATE_CHANGE,_B.WORKER_CONNECTED,this.workerConnection.url),this.connectionState=mB.CONNECTED}),this.workerConnection.on(Nk.ON_MESSAGE,async e=>{if(e.data instanceof ArrayBuffer){const r=d0(new Uint8Array(e.data));if(NP("SHOW_VIDEO_INSPECT_WORKER_MESSAGE")&&HD.debug("[".concat(this._inspectId,"] Response message for worker of inspect content "),JSON.stringify(r)),200===r.code){if("supervise"===this.inspectType)return void this.emit(CB.INSPECT_RESULT,void 0,void 0);if(r.data&&r.data.scorePorn&&r.data.scoreSexy&&r.data.scoreNeutral){var t;const e={porn:r.data.scorePorn,sexy:r.data.scoreSexy,neutral:r.data.scoreNeutral},i=Sh(t=Object.keys(e)).call(t,(t,r)=>e[t]>e[r]?t:r,"porn"),n=Object.keys(e).find(e=>e===i);this.emit(CB.INSPECT_RESULT,n)}else this.emit(CB.INSPECT_RESULT,void 0,new UD(MD.UNEXPECTED_RESPONSE,r.code+"","There is an unexpected data on message"))}else this.emit(CB.INSPECT_RESULT,void 0,new UD(MD.UNEXPECTED_RESPONSE,r.code+"",r.msg))}else HD.error("[".concat(this._inspectId,"] Unexpected message type from worker")),cP("error",this,"Unexpected message type from worker"),this.emit(CB.INSPECT_RESULT,void 0,new UD(MD.UNEXPECTED_RESPONSE,"invalid worker message type"))}),this.workerConnection.on(Nk.CLOSED,()=>{this.connectionState=mB.CLOSED}),this.workerConnection.on(Nk.FAILED,()=>{this.connectionState=mB.CLOSED}),this.workerConnection.on(Nk.RECONNECTING,()=>{this.connectionState=this.connectionState===mB.CONNECTED?mB.RECONNECTING:mB.CONNECTING}),this.workerConnection.on(Nk.WILL_RECONNECT,(e,t)=>{"recover"===e&&t(e),t("tryNext")}),this.workerConnection.on(Nk.REQUEST_NEW_URLS,(e,t)=>{this.workerManagerConnection.close(),this.once(CB.REQUEST_NEW_WORKER_URL,t=>{e([t])}),this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e=>{this.connectWorkerManager(e,!0)}).catch(e=>{t(e)})})}static intToLong(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}async requestToInspectImage(){this.sequence++;const e=TK(this,CB.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void this.emit(CB.INSPECT_RESULT,void 0,new UD(MD.INVALID_OPERATION,"Only the track being played can be inspected"));const r=await this.generateRequestData(e,t);this.workerConnection.sendMessage(r,!0,!0)}else this.emit(CB.INSPECT_RESULT,void 0,new UD(MD.INVALID_OPERATION,"Only the track being published can be inspected"))}async generateRequestData(e,t){let{appId:r,cname:i,cid:n,vid:o,sid:s,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage("image/jpeg",this.quality),u=await x0(d,r,i),A=this.sequence+"-"+n+"-"+a+"-"+c+"-"+fK(12,""),h={appId:r,cid:n,cname:i,deviceId:"",elapse:V0.intToLong(Number(c-this.inspectStartTime)),fileSize:u.byteLength,jpgEncryption:2,height:d.height,width:d.width,jpg:u,networkType:6,osType:7,requestId:A,sdkVersion:"4.13.0",sequence:this.sequence,sid:s,timestamp:V0.intToLong(c),uid:a,vid:o,service:F0.get(this.inspectType)||3,callbackData:this.extraInfo,ossFilePrefix:this.ossFilePrefix};void 0===this.extraInfo&&delete h.callbackData,void 0===this.ossFilePrefix&&delete h.ossFilePrefix;const l=c0(h);if(l.byteLength<this.workerMessageLengthLimit){if(NP("SHOW_VIDEO_INSPECT_WORKER_MESSAGE")){const e=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Q0(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Q0(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},h);delete e.jpg,HD.debug("[".concat(this._inspectId,"] Request message for worker of inspect content "),JSON.stringify(e)),cP("debug",this,"Request message for worker of inspect content ".concat(JSON.stringify(e)))}return l}{const t=this.quality*this.qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:r,cname:i,cid:n,vid:o,sid:s,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=PD.CancelToken.source(),this.workerManagerConnection&&this.workerManagerConnection.close(),this.workerConnection&&this.workerConnection.close(),this.inspectTimer&&window.clearInterval(this.inspectTimer),this.inspectTimer=null,this.connectionState=mB.CLOSED,this.emit(CB.STATE_CHANGE,_B.CLOSED)}}var j0,G0,K0,H0,W0,Y0,J0,q0,X0,z0,Z0,$0,e2,t2;function r2(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function i2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?r2(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):r2(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}let n2=(j0=gP("AgoraRTCClient","store.clientId"),G0=cj({report:uj}),K0=cj(),H0=cj(),W0=cj({report:uj}),Y0=dj(),J0=cj({report:uj}),q0=dj({report:uj}),X0=dj({report:uj}),z0=dj({report:uj}),Z0=cj({reportResult:!0,report:uj}),$0=dj(),j0((UV((t2=class extends kD{get connectionState(){return this._gateway.state}get remoteUsers(){return this._users}get localTracks(){return this._p2pChannel.getAllTracks(!0)}get uid(){return this._uid}get channelName(){return this._channelName}get isStringUID(){return!!this._joinInfo&&!!this._joinInfo.stringUid}constructor(e){let t;if(super(),kO(this,"store",void 0),kO(this,"_uid",void 0),kO(this,"_channelName",void 0),kO(this,"_uintUid",void 0),kO(this,"_users",[]),kO(this,"_codec",void 0),kO(this,"_mode",void 0),kO(this,"_config",void 0),kO(this,"_clientId",void 0),kO(this,"_appId",void 0),kO(this,"_sessionId",null),kO(this,"_key",void 0),kO(this,"_joinInfo",void 0),kO(this,"_gateway",void 0),kO(this,"_statsCollector",void 0),kO(this,"_configDistribute",void 0),kO(this,"_leaveMutex",new Ej("client-leave")),kO(this,"_publishMutex",new Ej("client-publish")),kO(this,"_renewTokenMutex",new Ej("client-renewtoken")),kO(this,"_subscribeMutex",new Ej("client-subscribe")),kO(this,"_encryptionMode","none"),kO(this,"_encryptionSecret",null),kO(this,"_encryptionSalt",null),kO(this,"_proxyServer",void 0),kO(this,"_performanceRecorder",void 0),kO(this,"_turnServer",{servers:[],mode:"auto"}),kO(this,"_cloudProxyServerMode","disabled"),kO(this,"_isDualStreamEnabled",!1),kO(this,"_defaultStreamFallbackType",void 0),kO(this,"_lowStreamParameter",void 0),kO(this,"_streamFallbackTypeCacheMap",new Map),kO(this,"_remoteStreamTypeCacheMap",new Map),kO(this,"_axiosCancelSource",PD.CancelToken.source()),kO(this,"_audioVolumeIndicationInterval",void 0),kO(this,"_networkQualityInterval",void 0),kO(this,"_userOfflineTimeout",void 0),kO(this,"_streamRemovedTimeout",void 0),kO(this,"_injectStreamingClient",void 0),kO(this,"_liveTranscodeStreamingClient",void 0),kO(this,"_liveRawStreamingClient",void 0),kO(this,"_channelMediaRelayClient",void 0),kO(this,"_networkQualitySensitivity","normal"),kO(this,"_p2pChannel",void 0),kO(this,"_useLocalAccessPoint",!1),kO(this,"_joinAndNotLeaveYet",!1),kO(this,"_numberOfJoinCount",0),kO(this,"_remoteDefaultVideoStreamType",void 0),kO(this,"_inspect",void 0),kO(this,"_license",void 0),kO(this,"_handleLocalTrackEnable",(e,t,r)=>{this.publish(e,!1).then(t).catch(r)}),kO(this,"_handleLocalTrackDisable",(e,t,r)=>{this.unpublish(e).then(t).catch(r)}),kO(this,"_handleUserOnline",e=>{this.isStringUID&&"string"!=typeof e.uid&&(HD.error("[".concat(this._clientId,"] StringUID is Mixed with UintUID")),cP("error",this,"StringUID is Mixed with UintUID"));const t=this._users.find(t=>t.uid===e.uid);if(t)t._trust_in_room_=!0;else{const t=new tz(e.uid,e.uint_id||e.uid);this._users.push(t),HD.debug("[".concat(this._clientId,"] user online"),e.uid),uP("info",this,"user-joined",{uid:e.uid}),this.emit(Ak.USER_JOINED,t)}}),kO(this,"_handleUserOffline",e=>{const t=this._users.find(t=>t.uid===e.uid);t&&(this._handleRemoveStream(e),yK(this._users,t),this._remoteStreamTypeCacheMap.delete(t.uid),this._streamFallbackTypeCacheMap.delete(t.uid),HD.debug("[".concat(this._clientId,"] user offline"),e.uid,"reason:",e.reason),uP("info",this,"user-left",{reason:e.reason,uid:e.uid}),this.emit(Ak.USER_LEAVED,t,e.reason))}),kO(this,"_handleAddAudioOrVideoStream",(e,t,r,i,n,o,s)=>{const a=this._users.find(e=>e.uid===t);if(!a)return HD.error("[".concat(this._clientId,"] can not find target user!(on_add_stream)")),void dP("error",["AgoraRTCGateway",this._clientId],"add_".concat(e,"_stream"),"can not find target user!");HD.debug("[".concat(this._clientId,"] stream added with uid ").concat(t,", type ").concat(e)),dP("debug",["AgoraRTCGateway",this._clientId],"add_".concat(e,"_stream"),{uid:t,mediaType:e}),this.store.subscribe(a.uid,e,void 0,void 0,void 0,Date.now());const c="audio"===e?a.hasAudio:a.hasVideo;a._uintid||(a._uintid=n||t),"audio"===e?a._trust_audio_stream_added_state_=!0:a._trust_video_stream_added_state_=!0,"audio"===e?(a._audio_added_=!0,void 0!==r&&(a._audioSSRC=r),void 0!==i&&(a._cname=i),o&&(a._audioOrtc=o)):(a._video_added_=!0,void 0!==r&&(a._videoSSRC=r),void 0!==i&&(a._cname=i),void 0!==s&&(a._rtxSsrcId=s),o&&(a._videoOrtc=o)),("audio"===e?a.hasAudio:a.hasVideo)&&!c&&(HD.info("[".concat(this._clientId,"] remote user ").concat(a.uid," published ").concat(e)),cP("info",this,"remote user ".concat(a.uid," published ").concat(e)),uP("info",this,"user-published",{uid:a.uid,mediaType:e}),this.emit(Ak.USER_PUBLISHED,a,e)),"video"===e?uj.onGatewayStream(this._sessionId,XL.ON_ADD_VIDEO_STREAM,zL.ON_ADD_VIDEO_STREAM,{peer:n||t}):uj.onGatewayStream(this._sessionId,XL.ON_ADD_AUDIO_STREAM,zL.ON_ADD_AUDIO_STREAM,{peer:n||t}),this._p2pChannel.remoteMediaSsrcChanged(a,e,r).then(t=>{if(t)return HD.debug("[".concat(this._clientId,"] resubscribe ").concat(e," for user ").concat(a.uid," after rejoin because SSRC id changed.")),this._p2pChannel.unsubscribe(a,e,!0).then(()=>this._subscribe(a,e,!0).catch(e=>{HD.error("[".concat(this._clientId,"] resubscribe error"),e.toString()),cP("error",this,"resubscribe error: ".concat(e.toString()))}))}),this._p2pChannel.hasPendingRemoteMedia(a,e)&&(HD.debug("[".concat(this._clientId,"] resubscribe ").concat(e," for user ").concat(a.uid," after reconnect.")),this._subscribe(a,e,!0).catch(e=>{HD.error("[".concat(this._clientId,"] resubscribe error"),e.toString()),cP("error",this,"resubscribe error: ".concat(e.toString()))}))}),kO(this,"_handleRemoveStream",e=>{const t=this._users.find(t=>t.uid===e.uid);if(!t)return HD.warning("[".concat(this._clientId,"] can not find target user!(on_remove_stream)")),void dP("warning",["AgoraRTCGateway",this._clientId],"remove_stream",{uid:e.uid,info:"can not find target user!"});HD.debug("[".concat(this._clientId,"] stream removed with uid ").concat(e.uid)),dP("debug",["AgoraRTCGateway",this._clientId],"remove_stream",{uid:e.uid});let r=()=>{};t.hasAudio&&t.hasVideo?r=()=>{HD.info("[".concat(this._clientId,"] remote user ").concat(t.uid," unpublished audio track")),uP("info",this,"user-unpublished",{uid:t.uid,mediaType:"audio"}),this.emit(Ak.USER_UNPUBLISHED,t,"audio"),HD.info("[".concat(this._clientId,"] remote user ").concat(t.uid," unpublished video track")),uP("info",this,"user-unpublished",{uid:t.uid,mediaType:"video"}),this.emit(Ak.USER_UNPUBLISHED,t,"video")}:t.hasVideo?r=()=>{HD.info("[".concat(this._clientId,"] remote user ").concat(t.uid," unpublished video track")),uP("info",this,"user-unpublished",{uid:t.uid,mediaType:"video"}),this.emit(Ak.USER_UNPUBLISHED,t,"video")}:t.hasAudio&&(r=()=>{HD.info("[".concat(this._clientId,"] remote user ").concat(t.uid," unpublished audio track")),uP("info",this,"user-unpublished",{uid:t.uid,mediaType:"audio"}),this.emit(Ak.USER_UNPUBLISHED,t,"audio")}),t._trust_audio_stream_added_state_=!0,t._trust_video_stream_added_state_=!0,t._audio_added_=!1,t._video_added_=!1,this._p2pChannel.unsubscribe(t).then(e=>{if(e)return this._gateway.unsubscribe(e,t.uid)}),t._audioSSRC=void 0,t._videoSSRC=void 0,t._audioOrtc=void 0,t._videoOrtc=void 0,t._rtxSsrcId=void 0,uj.onGatewayStream(this._sessionId,XL.ON_REMOVE_STREAM,zL.ON_REMOVE_STREAM,{peer:e.uint_id||e.uid}),r()}),kO(this,"_handleSetStreamLocalEnable",(e,t,r)=>{const i=this._users.find(e=>e.uid===t);if(!i)return HD.error("[".concat(this._clientId,"] can not find target user!(disable_local)")),void dP("error",this,"disable_local_video","can not find target user!(disable_local)");HD.debug("[".concat(this._clientId,"] local ").concat(e," ").concat(r?"enabled":"disabled"," with uid ").concat(t)),dP("debug",this,"disable_local_video","local ".concat(e," ").concat(r?"enabled":"disabled"," with uid ").concat(t));const n="audio"===e?i.hasAudio:i.hasVideo;if("audio"===e){i._trust_audio_enabled_state_=!0;const e=i._audio_enabled_;if(i._audio_enabled_=r,i._audio_enabled_===e)return;{const e=i._audio_enabled_?"enable-local-audio":"disable-local-audio";HD.debug("[".concat(this._clientId,"] user-info-updated, uid: ").concat(t,", msg: ").concat(e)),pP("debug",this,"user-info-updated",{uid:t,msg:e}),this.emit(Ak.USER_INFO_UPDATED,t,e)}}else{i._trust_video_enabled_state_=!0;const e=i._video_enabled_;if(i._video_enabled_=r,i._video_enabled_===e)return;{const e=i._video_enabled_?"enable-local-video":"disable-local-video";HD.debug("[".concat(this._clientId,"] user-info-update, uid: ").concat(t,", msg: ").concat(e)),pP("debug",this,"user-info-updated",{uid:t,msg:e}),this.emit(Ak.USER_INFO_UPDATED,t,e)}}const o="audio"===e?i.hasAudio:i.hasVideo;return n!==o?!n&&o?(HD.info("[".concat(this._clientId,"] remote user ").concat(t," published ").concat(e)),uP("info",this,"user-published",{uid:t,mediaType:e}),void this.emit(Ak.USER_PUBLISHED,i,e)):("video"===e&&i._videoTrack&&i._videoTrack._destroy(),"audio"===e&&i._audioTrack,this._p2pChannel.muteRemote(i,e),HD.info("[".concat(this._clientId,"] remote user ").concat(t," unpublished ").concat(e)),uP("info",this,"user-unpublished",{uid:t,mediaType:e}),void this.emit(Ak.USER_UNPUBLISHED,i,e)):void 0}),kO(this,"_handleMuteStream",(e,t,r)=>{HD.debug("[".concat(this._clientId,"] receive mute message"),e,t,r),dP("debug",this,"mute_".concat(t),r);const i=this._users.find(t=>t.uid===e);if(!i)return HD.warning("[".concat(this._clientId,"] can not find remote user, ignore mute event, uid: ").concat(e)),void dP("warning",this,"mute_".concat(t),"can not find remote user, ignore mute event, uid: ".concat(e));const n="audio"===t?i.hasAudio:i.hasVideo;if("audio"===t){i._trust_audio_mute_state_=!0;const t=i._audio_muted_;if(i._audio_muted_=r,i._audio_muted_===t)return;{const t=i._audio_muted_?"mute-audio":"unmute-audio";HD.debug("[".concat(this._clientId,"] user-info-update, uid: ").concat(e,", msg: ").concat(t)),pP("debug",this,"user-info-updated",{uid:e,msg:t}),this.emit(Ak.USER_INFO_UPDATED,e,t)}}else{i._trust_video_mute_state_=!0;const t=i._video_muted_;if(i._video_muted_=r,i._video_muted_===t)return;{const t=i._video_muted_?"mute-video":"unmute-video";HD.debug("[".concat(this._clientId,"] user-info-update, uid: ").concat(e,", msg: ").concat(t)),pP("debug",this,"user-info-updated",{uid:e,msg:t}),this.emit(Ak.USER_INFO_UPDATED,e,t)}}const o="audio"===t?i.hasAudio:i.hasVideo;if(n!==o){if(!n&&o){return("audio"===t?i._audioSSRC:i._videoSSRC)?(HD.info("[".concat(this._clientId,"] remote user ").concat(e," published ").concat(t)),uP("info",this,"user-published",{uid:i.uid,mediaType:t}),void this.emit(Ak.USER_PUBLISHED,i,t)):void HD.warning("[".concat(this._clientId,"] remote user ").concat(e," receive ").concat(t," unmute message  before add stream message, ").concat(t," SSRC doesn't exist yet."))}"video"===t&&i._videoTrack&&i._videoTrack._destroy(),"audio"===t&&i._audioTrack,this._p2pChannel.muteRemote(i,t),HD.info("[".concat(this._clientId,"] remote user ").concat(e," unpublished ").concat(t)),uP("info",this,"user-unpublished",{uid:e,mediaType:t}),this.emit(Ak.USER_UNPUBLISHED,i,t)}}),kO(this,"_handleP2PLost",async e=>{if(HD.debug("[".concat(this._clientId,"] receive p2p lost"),e),dP("debug",this,"p2p_lost",e),parseInt(e.p2pid,10)!==this.store.p2pId)return HD.warning("P2PLost stream not found",e),void dP("warning",this,"p2p_lost","P2PLost stream not found, ".concat(e));await this._p2pChannel.requestReconnect()}),kO(this,"_handleTokenWillExpire",()=>{HD.debug("[".concat(this._clientId,"] received message onTokenPrivilegeWillExpire")),dP("debug",this,"token_privilege_will_expire"),this.emit(Ak.ON_TOKEN_PRIVILEGE_WILL_EXPIRE)}),kO(this,"_handleBeforeUnload",e=>{"beforeunload"===e.type&&void 0!==e.returnValue&&""!==e.returnValue||(this.leave(),HD.info("[".concat(this._clientId,"] auto leave onbeforeunload or pagehide")),AP("info",["window",this.store.clientId],pO()?"beforeunload":"pagehide"))}),kO(this,"_handleUpdateNetworkQuality",()=>{if("normal"===this._networkQualitySensitivity)return;if(navigator&&void 0!==navigator.onLine&&!navigator.onLine)return void this.emit(Ak.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6});const e={downlinkNetworkQuality:0,uplinkNetworkQuality:0};e.uplinkNetworkQuality=this._p2pChannel.getUplinkNetworkQuality(),e.downlinkNetworkQuality=this._p2pChannel.getDownlinkNetworkQuality(),this.emit(Ak.NETWORK_QUALITY,e)}),this._codec=e.codec,this._mode=e.mode,this._clientId=fK(5,"client-"),this.store=new t0(e.codec,e.audioCodec,e.mode,this._clientId),this.store.clientCreated(),e.proxyServer&&this.setProxyServer(e.proxyServer,!0),e.turnServer&&this.setTurnServer(e.turnServer,!0),HD.info("[".concat(this._clientId,"] Initializing AgoraRTC client v").concat(IP," build: ").concat(fP,", mode: ").concat(this._mode,", codec: ").concat(this._codec)),pP("info",this,"constructor",{version:IP,build:fP,mode:this._mode,codec:this._codec}),this._performanceRecorder=function(e,t){const r=new a0(e,t);return s0.set(e,r),r}(this._clientId,"join"),e.clientRoleOptions)try{Tk(e.clientRoleOptions),t=Object.assign({},e.clientRoleOptions)}catch(e){HD.warning("[".concat(this._clientId,"] ").concat(e.toString())),cP("warning",this,e.toString())}this._statsCollector=new ZG(this.store),this._statsCollector.onStatsException=(e,t,r)=>{HD.debug("[".concat(this._clientId,"] receive exception msg, code: ").concat(e,", msg: ").concat(t,", uid: ").concat(r)),uP("debug",this,Ak.EXCEPTION,{code:e,message:t,uid:r}),this.emit(Ak.EXCEPTION,{code:e,msg:t,uid:r})},this._statsCollector.onUploadPublishDuration=(e,t,r,i)=>{const n=this._users.find(t=>t.uid===e);n&&uj.peerPublishStatus(this._sessionId,{subscribeElapse:i,audioPublishDuration:t,videoPublishDuration:r,peer:n._uintid})},this._gateway=new rq(this.store,{clientId:this._clientId,mode:this._mode,codec:this._codec,websocketRetryConfig:e.websocketRetryConfig||xD,httpRetryConfig:e.httpRetryConfig||xD,forceWaitGatewayResponse:void 0===e.forceWaitGatewayResponse||e.forceWaitGatewayResponse,statsCollector:this._statsCollector,role:e.role,clientRoleOptions:t}),this._config=e,this._configDistribute=new kq,this._p2pChannel=new K1(this.store,this._statsCollector),this._handleP2PChannelEvents(),this._handleGatewayEvents()}async join(e,t,r,i,n){const o=++this._numberOfJoinCount;this._performanceRecorder.checkPoint("startJoin"),this.store.joinStart(),i&&(this.store.uid=i);const s=i0(),a=n0()?window.isSecureContext:"Browser Not Support";if(!n0()&&!s||!window.isSecureContext){const e="The website must be running in a secure context (About secure context: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts ), otherwise the media collection will be restricted by the browser";HD.warning(e),hP("warning",this,e)}const c=IK();"DISCONNECTED"===this.connectionState&&(this.store.avoidJoinStart=Math.round(Date.now()),HD.debug("[".concat(this._clientId,"] set avoidJoinStart to ").concat(this.store.avoidJoinStart)),hP("debug",this,"join",void 0,"[".concat(this._clientId,"] set avoidJoinStart to ").concat(this.store.avoidJoinStart)));const d=uj.reportApiInvoke(c,{name:ek.JOIN,options:[e,t,r,i],states:{isHttps:s,isSecureContext:a},tag:tk.TRACER});uj.setAppId(e);try{if(!r&&null!==r)throw new UD(MD.INVALID_PARAMS,"Invalid token: ".concat(r,". If you don not use token, set it to null"));r&&ML(r,"token",1,2047),ML(e,"appid",1,2047),xL(t),i&&QL(i),n&&ML(n,"optionalInfo",1,2047)}catch(e){throw d.onError(e),e}if(HD.info("[".concat(this._clientId,"] start join channel ").concat(t,", join number: ").concat(o)),pP("info",this,"join",{channel:t}),this._leaveMutex.isLocked){HD.debug("[".concat(this._clientId,"] join: waiting leave operation")),cP("debug",this,"join: waiting leave operation");(await this._leaveMutex.lock())(),HD.debug("[".concat(this._clientId,"] join: continue")),cP("debug",this,"join: continue")}if(this._joinAndNotLeaveYet=!0,"DISCONNECTED"!==this.connectionState){const e=new UD(MD.INVALID_OPERATION,"[".concat(this._clientId,"] Client already in connecting/connected state"));throw d.onError(e),e}this._sessionId||(this._sessionId=c,this.store.sessionId=this._sessionId),this._gateway.state="CONNECTING";const u=i2({clientId:this._clientId,appId:e,sid:this._sessionId,cname:t,uid:"string"!=typeof i?i:null,turnServer:this._turnServer,proxyServer:this._proxyServer,token:r||e,cloudProxyServer:this._cloudProxyServerMode,optionalInfo:n,license:this._license,useLocalAccessPoint:this._useLocalAccessPoint},void 0!==this._remoteDefaultVideoStreamType&&{defaultVideoStream:this._remoteDefaultVideoStreamType});if("string"==typeof i&&(u.stringUid=i,this._uintUid?(u.uid=this._uintUid,this._uintUid=void 0):u.uid=0),"none"!==this._encryptionMode&&this._encryptionSecret){if(u.aesmode=this._encryptionMode,u.aespassword=await(async e=>{const t=PK("MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCMnXAHkKIGAM+x4N22gCI+Wyu\nSTM9ztkT3uYslTT2PuKmZfPzhH6kVdO7PTjGCOZnAsyb3oTtWat0KcxQ4jxvqQV+\nHvYl3iI1Yd4vl2c3qRMJPLtRDfNxa2Mcxgq7e9aEUibzdd0st+OJAy3tOj/Y0aVy\nxQiYDz3vqa6bP29adwIDAQAB"),r=await window.crypto.subtle.importKey("spki",t,{name:"RSA-OAEP",hash:"SHA-256"},!0,["encrypt"]),i=rj(e),n=await window.crypto.subtle.encrypt({name:"RSA-OAEP"},r,i);return LK(new Uint8Array(n))})(this._encryptionSecret),!this._joinAndNotLeaveYet)throw new UD(MD.INVALID_OPERATION,"[".concat(this._clientId,"] Client already left"));this._encryptionSalt&&(u.aessalt=this._encryptionSalt)}this._startSession(this._sessionId,{channel:t,appId:e});const A=this._sessionId;setTimeout(()=>{"CONNECTING"===this.connectionState&&A===this._sessionId&&uj.joinChannelTimeout(this._sessionId,5)},5e3);try{let i;const n=u.cloudProxyServer;if("443only"===n)u.proxyServer=NP("PROXY_SERVER_TYPE2");else if(["proxy3","proxy4","proxy5"].includes(n)){const e=NP("PROXY_SERVER_TYPE3");Array.isArray(e)?u.proxyServer=e[0]:u.proxyServer=e}if(uj.setProxyServer(u.proxyServer),HD.setProxyServer(u.proxyServer),aP(u.proxyServer),this._performanceRecorder.checkPoint("startRequestAp"),this.store.requestAPStart(),u.stringUid&&!u.uid&&"normal"===n){await vq(u,this._axiosCancelSource.token,this._config.httpRetryConfig||xD,!1,this.store);const e=await Tq(u.stringUid,u,this._axiosCancelSource.token,this._config.httpRetryConfig||xD,this.store);HD.debug("getUserAccount Success ".concat(u.stringUid," => ").concat(e)),cP("debug",this,"getUserAccount Success ".concat(u.stringUid," => ").concat(e)),u.uid=e,i=await Sq(u,this._axiosCancelSource.token,this._config.httpRetryConfig||xD,this.store)}else if(u.stringUid&&!u.uid){const e=await Tq(u.stringUid,u,this._axiosCancelSource.token,this._config.httpRetryConfig||xD,this.store);HD.debug("getUserAccount Success ".concat(u.stringUid," => ").concat(e)),cP("debug",this,"getUserAccount Success ".concat(u.stringUid," => ").concat(e)),u.uid=e,i=await vq(u,this._axiosCancelSource.token,this._config.httpRetryConfig||xD,!0,this.store)}else i=await vq(u,this._axiosCancelSource.token,this._config.httpRetryConfig||xD,!0,this.store);if(!this._joinAndNotLeaveYet)throw new UD(MD.INVALID_OPERATION,"[".concat(this._clientId,"] Client already left"));this.store.requestAPEnd(),this._performanceRecorder.checkPoint("startJoinGateway"),setTimeout(()=>{this._configDistribute.startGetConfigDistribute(u,this._axiosCancelSource.token),this._configDistribute.on(aB.UPDATE_BITRATE_LIMIT,e=>{this._p2pChannel.updateBitrateLimit(e)})},0),this._key=r||e;const o=i.gatewayInfo;this._joinInfo=i2(i2({},u),{},{cid:o.cid,uid:u.uid?u.uid:o.uid,vid:o.vid,apResponse:o.res,uni_lbs_ip:o.uni_lbs_ip,gatewayAddrs:o.gatewayAddrs});const s=await this._joinGateway();if(!this._joinAndNotLeaveYet)throw new UD(MD.INVALID_OPERATION,"[".concat(this._clientId,"] Client already left"));return d.onSuccess(s),this._appId=e,this._channelName=u.cname,this._uid=s,this.store.uid=s,setTimeout(()=>{this._networkQualityInterval&&window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=window.setInterval(this._handleUpdateNetworkQuality,2e3),window.addEventListener(pO()?"beforeunload":"pagehide",this._handleBeforeUnload)},0),HD.info("[".concat(this._clientId,"] Joining channel success: ").concat(t)),pP("info",this,"join",t,"success"),setTimeout(()=>{NP("USE_NEW_LOG")?EP():HD.startUpload()},5e3),this._performanceRecorder.checkPoint("finishJoin"),this.store.joinEnd(),h=this,xP.includes(h)||xP.push(h),s}catch(e){const r=Array.isArray(e)?e[0]:e;throw HD.error("[".concat(this._clientId,"] join number: ").concat(o,", Joining channel failed, rollback"),r),pP("error",this,"join",t,r.toString()),r.code!==MD.OPERATION_ABORTED&&this._numberOfJoinCount===o&&(this._gateway.state="DISCONNECTED",this._reset()),d.onError(r),r}var h}_joinGateway(){if(!this._joinInfo||!this._key)throw new UD(MD.INVALID_OPERATION);return this._gateway.join(this._joinInfo,this._key,!("disabled"!==this._joinInfo.cloudProxyServer||this._joinInfo.proxyServer||!NP("JOIN_WITH_FALLBACK_SIGNAL_PROXY"))).then(e=>e).catch(e=>{if(e.code===MD.INIT_WEBSOCKET_TIMEOUT)return this._gateway.leave(!0,uk.FALLBACK);throw e}).then(e=>{if(e)return e;if(HD.info("[".concat(this._clientId,"] join timeout, fallback to proxy")),!this._joinInfo||!this._key)throw new UD(MD.INVALID_OPERATION);this._joinInfo.cloudProxyServer="fallback",this._cloudProxyServerMode="fallback",this.store.cloudProxyServerMode="fallback";const t=NP("PROXY_SERVER_TYPE3");if(Array.isArray(t))if(this._joinInfo.apUrl){const e=new bJ(this._joinInfo.apUrl).host.split("."),r=e.slice(e.length-2).join(".");t.forEach(e=>{this._joinInfo&&e.includes(r)&&(this._joinInfo.proxyServer=e)}),this._joinInfo.proxyServer||(this._joinInfo.proxyServer=t[0])}else this._joinInfo.proxyServer=t[0];else this._joinInfo.proxyServer=t;HD.setProxyServer(this._joinInfo.proxyServer),uj.setProxyServer(this._joinInfo.proxyServer),aP(this._joinInfo.proxyServer);return uj.reportApiInvoke(this._sessionId,{name:ek.JOIN_FALLBACK_TO_PROXY,options:[this._joinInfo.proxyServer],tag:tk.TRACER}).onSuccess(),this.emit(Ak.JOIN_FALLBACK_TO_PROXY,this._joinInfo.proxyServer),this._gateway.join(this._joinInfo,this._key)}).then(e=>e)}async leave(){const e=uj.reportApiInvoke(this._sessionId,{name:ek.LEAVE,options:[],tag:tk.TRACER});HD.info("[".concat(this._clientId,"] Leaving channel")),pP("info",this,"leave"),window.removeEventListener(pO()?"beforeunload":"pagehide",this._handleBeforeUnload),this._reset(),function(e){const t=xP.indexOf(e);-1!==t&&xP.splice(t,1)}(this);const t=await this._leaveMutex.lock();if("DISCONNECTED"===this.connectionState)return HD.info("[".concat(this._clientId,"] Leaving channel repeated, success")),t(),e.onSuccess();await this._gateway.leave("CONNECTED"!==this.connectionState),HD.info("[".concat(this._clientId,"] Leaving channel success")),pP("info",this,"leave",void 0,"success"),this._joinAndNotLeaveYet=!1,this.store.resetJoinChannelServiceRecords(),t(),e.onSuccess()}async publish(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];Array.isArray(e)||(e=[e]);const r=uj.reportApiInvoke(this._sessionId,{name:ek.PUBLISH,options:e.map(e=>e?Object(e).toString():"null"),tag:tk.TRACER});if(0===e.length){const e=new UD(MD.INVALID_PARAMS,"track list is empty");return r.onError(e),e.throw()}if("audience"===this._gateway.role){const e=new UD(MD.INVALID_OPERATION,"audience can not publish stream");return r.onError(e),e.throw()}for(const i of e){if(!(i instanceof Ij)){const e=new UD(MD.INVALID_PARAMS,"parameter is not local track");return r.onError(e),e.throw()}if(!i._enabled&&t){const e=new UD(MD.TRACK_IS_DISABLED,"can not publish a disabled track: ".concat(i.getTrackId()));return r.onError(e),e.throw()}}HD.info("[".concat(this._clientId,"] Publishing tracks, id ").concat(e.map(e=>"".concat(e.getTrackId()," ")))),pP("info",this,"publish",e.map(e=>"".concat(e.getTrackId()))),await this._configDistribute.awaitConfigDistributeComplete(),t&&e.forEach(e=>{const t=this._configDistribute.getBitrateLimit();e instanceof $X&&t&&e.setBitrateLimit(t.uplink)});const i=await this._publishMutex.lock();try{await this._publishHighStream(e),r.onSuccess(e.map(e=>e.trackMediaType+":"+e.getTrackLabel()).toString()),HD.info("[".concat(this._clientId,"] Publish success, id ").concat(e.map(e=>"".concat(e.getTrackId()," ")))),pP("info",this,"publish",e.map(e=>"".concat(e.getTrackId())),"success")}catch(e){throw r.onError(e),HD.error("[".concat(this._clientId,"] publish error"),e.toString()),pP("error",this,"publish",void 0,e.toString()),e}finally{i()}}async unpublish(e){if(!this._joinInfo||void 0===this._uid)throw new UD(MD.INVALID_OPERATION,"Can't unpublish stream, haven't joined yet!");e?Array.isArray(e)||(e=[e]):e=this._p2pChannel.getAllTracks(!0);const t=uj.reportApiInvoke(this._sessionId,{name:ek.UNPUBLISH,options:e.map(e=>e.getTrackId()),tag:tk.TRACER});HD.info("[".concat(this._clientId,"] Unpublish tracks, tracks ").concat(e.map(e=>"".concat(e.getTrackId()," "))," ")),pP("info",this,"unpublish",e.map(e=>"".concat(e.getTrackId())));const r=await this._publishMutex.lock();try{const i=await this._p2pChannel.unpublish(e);i&&await this._gateway.unpublish(i,this._uid),HD.info("[".concat(this._clientId,"] Unpublish success,tracks ").concat(e.map(e=>"".concat(e.getTrackId())))),pP("info",this,"unpublish",e.map(e=>"".concat(e.getTrackId())),"success"),t.onSuccess()}catch(e){throw t.onError(e),HD.error("[".concat(this._clientId,"] unpublish error"),e.toString()),pP("error",this,"unpublish",void 0,e.toString()),e}finally{r&&r()}}async subscribe(e,t){return this._subscribe(e,t)}async _subscribe(e,t,r){LL(t,"mediaType",["audio","video"]);const i=uj.reportApiInvoke(this._sessionId,{name:ek.SUBSCRIBE,options:[e.uid,t],tag:tk.TRACER});if(!this._joinInfo){const e=new UD(MD.INVALID_OPERATION,"Can't subscribe stream, not joined");throw i.onError(e),e}if("CONNECTED"!==this.connectionState&&"RECONNECTING"!==this.connectionState){const e=new UD(MD.INVALID_OPERATION,"Can't subscribe stream in ".concat(this.connectionState," state"));throw i.onError(e),e}if(!this._users.find(t=>t===e)){const t=new UD(MD.INVALID_REMOTE_USER,"user is not in the channel");throw HD.error("[".concat(this._clientId,"] can not subscribe ").concat(e.uid,", this user is not in the channel")),pP("error",this,"subscribe",e.uid,"this user is not in the channel"),i.onError(t),t}if(!e.hasAudio&&!e.hasVideo){const t=new UD(MD.INVALID_REMOTE_USER,"user is not published");throw HD.error("[".concat(this._clientId,"] can not subscribe ").concat(e.uid,", user is not published")),pP("error",this,"subscribe",e.uid,"this user is not published"),i.onError(t),t}if(!(r||("audio"!==t||e.hasAudio&&void 0!==e._audioSSRC)&&("video"!==t||e.hasVideo&&void 0!==e._videoSSRC))){const r=new UD(MD.REMOTE_USER_IS_NOT_PUBLISHED);throw HD.error("[".concat(this._clientId,"] can not subscribe ").concat(e.uid," with mediaType ").concat(t,", remote track is not published")),pP("error",this,"subscribe",e.uid,"mediaType ".concat(t,", remote track is not published")),i.onError(r),r}const n="audio"===t?e._audioSSRC:e._videoSSRC,o="audio"===t?e._audioOrtc:e._videoOrtc,s="video"===t?e._rtxSsrcId:void 0,a={stream_type:"audio"===t?dB.AUDIO:dB.VIDEO,ssrcId:n},c=await this._subscribeMutex.lock();HD.info("[".concat(this._clientId,"] subscribe user ").concat(e.uid,", mediaType: ").concat(t)),pP("info",this,"subscribe",{uid:e.uid,mediaType:t});try{if(await this._p2pChannel.hasRemoteMediaWithLock(e,t))await this._p2pChannel.unmuteRemote(e,t);else try{qG.markSubscribeStart(this.store.clientId,n),this.store.subscribe(e.uid,t,Date.now()),await this._p2pChannel.subscribe(e,t,n,s,o);try{await this._gateway.subscribe(e.uid,a,!0)}catch(r){if((null==r?void 0:r.code)!==MD.WS_ABORT)throw await this._p2pChannel.unsubscribe(e,t),r;await this._p2pChannel.unsubscribe(e,t,!0),this._p2pChannel.setPendingRemoteMedia(e,t)}this.store.subscribe(e.uid,t,void 0,Date.now()),this._p2pChannel.reportSubscribeEvent(!0,null,e,t)}catch(r){throw this._p2pChannel.reportSubscribeEvent(!1,null==r?void 0:r.code,e,t),r}HD.info("[".concat(this._clientId,"] subscribe success user ").concat(e.uid,", mediaType: ").concat(t)),pP("info",this,"subscribe",{uid:e.uid,mediaType:t},"success"),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch(e=>{HD.warning("[".concat(this._clientId,"] auto set fallback failed"),e),cP("warning",this,"auto set fallback failed, ".concat(e.toString()))});const r="audio"===t?e._audioTrack:e._videoTrack;if(!r){const e=new UD(MD.UNEXPECTED_ERROR,"can not find remote track in user object");return i.onError(e),e.throw()}return i.onSuccess(r.getTrackId()),r}catch(r){throw i.onError(r),HD.error("[".concat(this._clientId,"] subscribe user ").concat(e.uid," error"),r),pP("error",this,"subscribe",{uid:e.uid,mediaType:t},r.toString()),r}finally{c()}}async massSubscribe(e){UL(e,"subscribeList");const t=uj.reportApiInvoke(this._sessionId,{name:ek.MASS_SUBSCRIBE,options:e.map(e=>{let{user:t,mediaType:r}=e;return[null==t?void 0:t.uid,r]}),tag:tk.TRACER});if(!this._joinInfo){const e=new UD(MD.INVALID_OPERATION,"Can't subscribe stream, not joined");throw t.onError(e),e}if("CONNECTED"!==this.connectionState&&"RECONNECTING"!==this.connectionState){const e=new UD(MD.INVALID_OPERATION,"Can't subscribe stream in ".concat(this.connectionState," state"));throw t.onError(e),e}const r=Date.now(),i=new Map,n=await this._subscribeMutex.lock();HD.info("[".concat(this._clientId,"]start massSubscribe user ").concat(e.map(e=>{let{user:t,mediaType:r}=e;return"user: ".concat(null==t?void 0:t.uid,", mediaType: ").concat(r)}).join("; "))),pP("info",this,"massSubscribe",e);const o=(e=[...e]).map(e=>{let{user:t,mediaType:r}=e;return{user:t,mediaType:r}}),s=await this._p2pChannel.globalLock();try{var a;for(let r=e.length-1;r>=0;r--){const n=e[r],{user:s,mediaType:a}=n;if(LL(a,"mediaType",["audio","video"]),!s){const e=new UD(MD.INVALID_PARAMS,"user property does not exist in subscribeList item");throw HD.error("[".concat(this._clientId,"] user property does not exist in subscribeList item")),t.onError(e),e}if(!this._users.find(e=>e===s)){const t=new UD(MD.INVALID_REMOTE_USER,"user is not in the channel");HD.error("[".concat(this._clientId,"] can not massSubscribe ").concat(s.uid,", this user is not in the channel")),pP("error",this,"massSubscribe",s.uid,"this user is not in the channel"),o[r].error=t,e.splice(r,1);continue}if("audio"===a&&(!s.hasAudio||void 0===s._audioSSRC)||"video"===a&&(!s.hasVideo||void 0===s._videoSSRC)){const t=new UD(MD.REMOTE_USER_IS_NOT_PUBLISHED);HD.error("[".concat(this._clientId,"] can not subscribe ").concat(s.uid," with mediaType ").concat(a,", remote user is not published")),pP("error",this,"subscribe",s.uid,"mediaType ".concat(a,", remote user is not published")),o[r].error=t,e.splice(r,1);continue}const c=Jk.Video|Jk.LwoVideo,d=i.get(s);if(d){if("video"===a?d&c:d&Jk.Audio){e.splice(r,1),HD.warning("repeat massSubscribe user:".concat(s.uid,", mediaType:").concat(a," twice"));continue}i.set(s,d|("video"===a?c:Jk.Audio))}else i.set(s,"video"===a?c:Jk.Audio)}for(let t=e.length-1;t>=0;t--){const r=e[t],{user:n,mediaType:o}=r,s=Jk.Video|Jk.LwoVideo;if(this._p2pChannel.hasRemoteMedia(n,o)){await this._p2pChannel.unmuteRemoteNoLock(n,o);const r=i.get(n);i.set(n,"video"===o?r^s:r^Jk.Audio),e.splice(t,1)}}this.store.massSubscribe(e.map(e=>({userId:e.user.uid,type:e.mediaType})),r);const c=Sh(a=Array.from(i.entries())).call(a,(e,t)=>{let[r,i]=t;if(0===i)return e;const n={stream_id:r.uid,stream_type:i};return i&Jk.Audio&&(n.audio_ssrc=r._audioSSRC),i&Jk.Video&&(n.video_ssrc=r._videoSSRC),e.push(n),e},[]);try{e.length>0&&await this._p2pChannel.massSubscribeNoLock(e.map(e=>{let{user:t,mediaType:r}=e;return{user:t,mediaType:r,ssrcId:r===dB.VIDEO?t._videoSSRC:t._audioSSRC,rtxSsrcId:t._rtxSsrcId}}));const i=new Map;if(c.length>0){const e=await this._gateway.subscribeAll(c,!0);((null==e?void 0:e.users)||[]).forEach(e=>{let{stream_id:t,video_error_code:r,audio_error_code:n,error_code:o}=e;(r||n||o)&&i.set(t,{video_error_code:r,audio_error_code:n,error_code:o})})}if(Array.from(i.entries()).length>0){const e=Array.from(i.entries()).map(e=>{let t,[r,i]=e;i.error_code||i.video_error_code&&i.audio_error_code?t=void 0:i.video_error_code?t=dB.VIDEO:i.audio_error_code&&(t=dB.AUDIO);return{user:this.remoteUsers.find(e=>e.uid===r),mediaType:t}});await this._p2pChannel.massUnsubscribeNoLock(e)}for(const e of o){const t=i.get(e.user.uid);if(t){const r=t.error_code||"audio"===e.mediaType&&t.audio_error_code||"video"===e.mediaType&&t.video_error_code;if(r){const t=PJ(r);HD.error("user:".concat(e.user.uid," mediaType:").concat(e.mediaType," has massSubscribe error ").concat(t.desc)),e.error=new UD(MD.SUBSCRIBE_FAILED,"code ".concat(r,": ").concat(t.desc))}}e.error||("video"===e.mediaType?e.track=e.user.videoTrack:e.track=e.user.audioTrack)}return this.store.massSubscribe(o.filter(e=>!e.error).map(e=>({userId:e.user.uid,type:e.mediaType})),void 0,Date.now()),o.forEach(e=>{var t;uj.subscribe(this.store.sessionId,{succ:!!e.error,ec:(null===(t=e.error)||void 0===t?void 0:t.code)||null,video:e.mediaType===dB.VIDEO,audio:e.mediaType===dB.AUDIO,peerid:e.user.uid,subscribeRequestid:e.mediaType===dB.VIDEO?e.user._videoSSRC:e.user._audioSSRC,p2pid:this.store.p2pId,eventElapse:Math.floor(performance.now()-r)},!0)}),t.onSuccess(),HD.info("[".concat(this._clientId,"] massSubscribe success ").concat(e.map(e=>{let{user:t,mediaType:r}=e;return"user: ".concat(null==t?void 0:t.uid,", mediaType: ").concat(r)}).join("; "))),pP("info",this,"massSubscribe",e,"success"),o}catch(r){throw await this._p2pChannel.massUnsubscribeNoLock(e),t.onError(r),r}}finally{s(),n()}}async unsubscribe(e,t){if(t&&LL(t,"mediaType",["audio","video"]),!this._joinInfo)throw new UD(MD.INVALID_OPERATION,"Can't unsubscribe stream, haven't joined yet!");const r=uj.reportApiInvoke(this._sessionId,{name:ek.UNSUBSCRIBE,options:[e.uid,t],tag:tk.TRACER});if(!this._users.find(t=>t===e)){const i=new UD(MD.INVALID_REMOTE_USER,"user is not in the channel");throw HD.error("[".concat(this._clientId,"] can not unsubscribe ").concat(e.uid,", user is not in the channel")),pP("error",this,"unsubscribe",{uid:e.uid,mediaType:t},"user is not in the channel"),r.onError(i),i}HD.info("[".concat(this._clientId,"] unsubscribe uid: ").concat(e.uid,", mediaType: ").concat(t)),pP("info",this,"unsubscribe",{uid:e.uid,mediaType:t});try{const i=await this._p2pChannel.unsubscribe(e,t);i&&await this._gateway.unsubscribe(i,e.uid),HD.info("[".concat(this._clientId,"] unsubscribe success uid: ").concat(e.uid,", mediaType: ").concat(t)),pP("info",this,"unsubscribe",{uid:e.uid,mediaType:t},"success"),r.onSuccess()}catch(i){if(i.code===MD.DISCONNECT_P2P)return HD.warning("disconnecting p2p, abort unsubscribe request."),void r.onSuccess();throw HD.error("[".concat(this._clientId,"] unsubscribe user ").concat(e.uid," error"),i.toString()),pP("error",this,"unsubscribe",{uid:e.uid,mediaType:t},i.toString()),r.onError(i),i}}async massUnsubscribe(e){UL(e,"unsubscribeList");const t=uj.reportApiInvoke(this._sessionId,{name:ek.UNSUBSCRIBE,options:e.map(e=>{let{user:t,mediaType:r}=e;return{uid:null==t?void 0:t.uid,mediaType:r}}),tag:tk.TRACER});if(!this._joinInfo){const e=new UD(MD.INVALID_OPERATION,"Can't unsubscribeAll stream, haven't joined yet!");throw t.onError(e),e}HD.info("[".concat(this._clientId,"] start massUnsubscribe ").concat(e.map(e=>{let{user:t,mediaType:r}=e;return"user: ".concat(null==t?void 0:t.uid,", mediaType: ").concat(r,";")}).join())),pP("info",this,"massUnsubscribe",e),e=[...e];const r=new Map;for(let i=e.length-1;i>=0;i--){const{user:n,mediaType:o}=e[i];if(!n){const e=new UD(MD.INVALID_PARAMS,"user property does not exist in unsubscribeList item");throw HD.error("[".concat(this._clientId,"] user property does not exist in unsubscribeList item")),t.onError(e),e}LL(o,"mediaType",["video","audio",void 0]);if(!this._users.find(e=>e===n)){HD.warning("[".concat(this._clientId,"] can not unsubscribe ").concat(n.uid,", user is not in the channel")),pP("error",this,"unsubscribe",{uid:n.uid,mediaType:o},"user is not in the channel"),e.splice(i,1);continue}const s=Jk.Video|Jk.LwoVideo;if(r.has(n)){const t=r.get(n);let a;switch(o){case"video":a=t&s;break;case"audio":a=t&Jk.Audio;break;default:a=t&(Jk.Audio|s)}if(a){HD.warning("repeat massUnsubscribe user:".concat(n.uid,",mediaType:").concat(o," twice.")),e.splice(i,1);continue}o?"audio"===o?r.set(n,t|Jk.Audio):"video"===o&&r.set(n,t|s):r.set(n,t|Jk.Audio|s)}else o?"audio"===o?r.set(n,Jk.Audio):"video"===o&&r.set(n,s):r.set(n,Jk.Audio|s)}try{const r=await this._p2pChannel.massUnsubscribe(e);r&&await this._gateway.massUnsubscribe(r),HD.info("[".concat(this._clientId,"] massUnsubscribe success ").concat(e.map(e=>{let{user:t,mediaType:r}=e;return"user: ".concat(null==t?void 0:t.uid,", mediaType: ").concat(r,";")}).join())),pP("info",this,"massUnsubscribe",e,"success"),t.onSuccess()}catch(r){if(r.code===MD.DISCONNECT_P2P)return HD.warning("disconnecting p2p, abort unsubscribe request."),void t.onSuccess();throw HD.error("[".concat(this._clientId,"] massUnsubscribe error"),r.toString()),pP("error",this,"massUnsubscribe",e,r.toString()),t.onError(r),r}}setLowStreamParameter(e){!function(e){if(!e)throw new UD(MD.INVALID_PARAMS);FL(e.width)||BL(e.width,"streamParameter.width"),FL(e.height)||BL(e.height,"streamParameter.height"),FL(e.framerate)||BL(e.framerate,"streamParameter.framerate"),FL(e.bitrate)||kL(e.bitrate,"streamParameter.bitrate")}(e);const t=uj.reportApiInvoke(this._sessionId,{name:ek.SET_LOW_STREAM_PARAMETER,options:[e],tag:tk.TRACER});(!e.width&&e.height||e.width&&!e.height)&&(HD.warning("[".concat(this._clientId,"] The width and height parameters take effect only when both are set")),cP("warning",this,"The width and height parameters take effect only when both are set")),HD.info("[".concat(this._clientId,"] set low stream parameter to"),JSON.stringify(e)),pP("info",this,"setLowStreamParameter",e);const r=this._configDistribute.getLowStreamConfigDistribute();r&&r.bitrate&&e.bitrate&&r.bitrate<e.bitrate&&(e.bitrate=r.bitrate),this._lowStreamParameter=e,t.onSuccess()}async enableDualStream(){const e=uj.reportApiInvoke(this._sessionId,{name:ek.ENABLE_DUAL_STREAM,options:[],tag:tk.TRACER});if(!vB().supportDualStream){uj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1});const t=new UD(MD.NOT_SUPPORTED,"Your browser is not support dual stream");throw e.onError(t),t}if(this._isDualStreamEnabled){const t=new UD(MD.INVALID_OPERATION,"Dual stream is already enabled");throw e.onError(t),t}if(this._p2pChannel.canPublishLowStream())try{await this._publishLowStream()}catch(t){throw uj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),e.onError(t),t}this._isDualStreamEnabled=!0,uj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!0}),HD.info("[".concat(this._clientId,"] enable dual stream")),pP("info",this,"enableDualStream"),e.onSuccess()}async disableDualStream(){if(!this._isDualStreamEnabled)return;if(!this._joinInfo)throw new UD(MD.INVALID_OPERATION,"Can't publish stream, haven't joined yet!");const e=uj.reportApiInvoke(this._sessionId,{name:ek.DISABLE_DUAL_STREAM,options:[],tag:tk.TRACER});if(this._p2pChannel.getLocalMedia(uB.LocalVideoLowTrack))try{const e=await this._p2pChannel.unpublishLowStream();e&&await this._gateway.unpublish(e,this._joinInfo.stringUid||this._joinInfo.uid)}catch(t){throw uj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!1}),e.onError(t),t}this._isDualStreamEnabled=!1,uj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!0}),HD.info("[".concat(this._clientId,"] disable dual stream")),pP("info",this,"disableDualStream"),e.onSuccess()}async setClientRole(e,t){!function(e){LL(e,"role",["audience","host"])}(e),t&&Tk(t);const r=uj.reportApiInvoke(this._sessionId,{name:ek.SET_CLIENT_ROLE,options:[e,t],tag:tk.TRACER});if("rtc"===this._mode){HD.warning("[".concat(this._clientId,"]rtc mode can not use setClientRole")),pP("warning",this,"setClientRole",e,"rtc mode can not use setClientRole");const t=new UD(MD.INVALID_OPERATION,"rtc mode can not use setClientRole");return r.onError(t),t.throw()}if(t&&t.level&&"host"===e){const e=new UD(MD.INVALID_OPERATION,"host mode can not set audience latency level");return r.onError(e),e.throw()}try{if("audience"===e&&this._p2pChannel.hasLocalMedia()){const e=new UD(MD.INVALID_OPERATION,"can not set client role to audience when publishing stream");return r.onError(e),e.throw()}await this._gateway.setClientRole(e,t),HD.info("[".concat(this._clientId,"] set client role to ").concat(e,", level: ").concat(t&&t.level)),pP("info",this,"setClientRole",{role:e,level:t&&t.level}),r.onSuccess()}catch(e){throw r.onError(e),e}}setProxyServer(e,t){if(ML(e,"proxyServer"),!t){if("DISCONNECTED"!==this.connectionState)throw new UD(MD.INVALID_OPERATION,"Set proxy server before join channel");if("disabled"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new UD(MD.INVALID_OPERATION,"You have already set the proxy")}this._proxyServer=e,uj.setProxyServer(this._proxyServer),HD.setProxyServer(this._proxyServer),aP(this._proxyServer),HD.info("[".concat(this._clientId,"] Set proxy server ").concat(t?"by initialize call":""," success.")),pP("info",this,"setProxyServer",[...arguments],"success")}setTurnServer(e,t){if(Array.isArray(e)||(e=[e]),!t){if("DISCONNECTED"!==this.connectionState)throw new UD(MD.INVALID_OPERATION,"Set turn server before join channel");if("disabled"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new UD(MD.INVALID_OPERATION,"You have already set the proxy")}if(Sk(e))return this._turnServer={servers:e,mode:"original-manual"},HD.info("[".concat(this._clientId,"] Set original turnserver ").concat(t?"by initialize call":""," success: ").concat(e.map(e=>e.urls).join(","),".")),void pP("info",this,"setOriginalTurnServer",[...arguments],"success");e.forEach(e=>vk(e)),this._turnServer={servers:e,mode:"manual"},HD.info("[".concat(this._clientId,"] Set turnserver ").concat(t?"by initialize call":""," success.")),pP("info",this,"setTurnServer",[...arguments],"success")}setLicense(e){if("DISCONNECTED"!==this.connectionState){throw new UD(MD.INVALID_OPERATION,"you should set license before join channel")}ML(e,"license",0,32),this._license=e,HD.info("[".concat(this._clientId,"] set license success"),e)}startProxyServer(e){const t=uj.reportApiInvoke(this._sessionId,{name:ek.START_PROXY_SERVER,options:[],tag:tk.TRACER});if("DISCONNECTED"!==this.connectionState){const e=new UD(MD.INVALID_OPERATION,"Start proxy server before join channel");throw t.onError(e),e}if(this._proxyServer||"manual"===this._turnServer.mode||this._useLocalAccessPoint){const e=new UD(MD.INVALID_OPERATION,"You have already set the proxy");throw t.onError(e),e}const r=[1,2,3,4,5];let i;switch(void 0===e&&(e=1),e){case 1:i="normal";break;case 2:i="443only";break;case 3:i="proxy3";break;case 4:i="proxy4";break;case 5:i="proxy5";break;default:{const e=new UD(MD.INVALID_PARAMS,"proxy server mode must be ".concat(r.join("|")));throw t.onError(e),e}}this._cloudProxyServerMode=i,this.store.cloudProxyServerMode=i,HD.info("[".concat(this._clientId,"] set cloud proxy server mode to"),this._cloudProxyServerMode),pP("info",this,"startProxyServer",this._cloudProxyServerMode),t.onSuccess()}stopProxyServer(){const e=uj.reportApiInvoke(this._sessionId,{name:ek.STOP_PROXY_SERVER,options:[],tag:tk.TRACER});if("DISCONNECTED"!==this.connectionState)throw new UD(MD.INVALID_OPERATION,"Stop proxy server after leave channel");uj.setProxyServer(),HD.setProxyServer(),aP(),this._cloudProxyServerMode="disabled",this.store.cloudProxyServerMode="disabled",HD.info("[".concat(this._clientId,"] set cloud proxy server mode to"),this._cloudProxyServerMode),pP("info",this,"stopProxyServer",this._cloudProxyServerMode),this._proxyServer=void 0,this._turnServer={mode:"auto",servers:[]},e.onSuccess()}setLocalAccessPoints(e,t){if(UL(e,"serverList"),ML(t,"domain"),this._proxyServer||"disabled"!==this._cloudProxyServerMode)throw new UD(MD.INVALID_OPERATION,"set local access point failed, You have already set the cloud proxy");const r=/^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;e=e.map(e=>r.test(e)?"".concat(e.replace(/\./g,"-"),".").concat(t):e),this._useLocalAccessPoint=!0,OP("WEBCS_DOMAIN",e),OP("WEBCS_DOMAIN_BACKUP_LIST",e),OP("GATEWAY_DOMAINS",[t]),OP("EVENT_REPORT_DOMAIN",e[0]),OP("EVENT_REPORT_BACKUP_DOMAIN",e[1]||e[0]),OP("LOG_UPLOAD_SERVER","".concat(e[0],":6444")),HD.info("set local access point success"),pP("info",this,"setLocalAccessPoints")}async setRemoteDefaultVideoStreamType(e){if(LL(e,"streamType",[0,1]),this._remoteDefaultVideoStreamType=e,this._joinInfo)try{await this._gateway.setDefaultRemoteVideoStreamType(e),this._joinInfo.defaultVideoStream=this._remoteDefaultVideoStreamType}catch(e){throw HD.error("[".concat(this._clientId,"] set default remote video stream type error"),e.toString()),e}else HD.debug("haven't joined yet, cache remoteDefaultVideoStreamType ".concat(e))}async setRemoteVideoStreamType(e,t){LL(t,"streamType",[0,1]);const r=uj.reportApiInvoke(this._sessionId,{name:ek.SET_REMOTE_VIDEO_STREAM_TYPE,options:[e,t],tag:tk.TRACER});try{await this._gateway.setRemoteVideoStreamType(e,t),setTimeout(()=>{const t=this._users.find(t=>t.uid===e);t&&t.videoTrack&&t.videoTrack.updateMediaStreamTrackResolution()},2e3)}catch(e){throw r.onError(e),HD.error("[".concat(this._clientId,"] set remote video stream type error"),e.toString()),pP("error",this,"setRemoteVideoStreamType",void 0,e.toString()),e}HD.info("[".concat(this._clientId,"] set remote ").concat(e," video stream type to ").concat(t)),pP("info",this,"setRemoteVideoStreamType",{uid:e,streamType:t}),this._remoteStreamTypeCacheMap.set(e,t),r.onSuccess()}async setStreamFallbackOption(e,t){LL(t,"fallbackType",[0,1,2]);const r=uj.reportApiInvoke(this._sessionId,{name:ek.SET_STREAM_FALLBACK_OPTION,options:["too long to show",t],tag:tk.TRACER});try{await this._gateway.setStreamFallbackOption(e,t)}catch(e){throw r.onError(e),HD.error("[".concat(this._clientId,"] set stream fallback option"),e.toString()),pP("error",this,"setStreamFallbackOption",void 0,e.toString()),e}HD.info("[".concat(this._clientId,"] set remote ").concat(e," stream fallback type to ").concat(t)),pP("info",this,"setStreamFallbackOption",{uid:e,fallbackType:t}),this._streamFallbackTypeCacheMap.set(e,t),r.onSuccess()}setEncryptionConfig(e,t,r){!function(e){LL(e,"encryptionMode",["aes-128-xts","aes-256-xts","aes-128-ecb","sm4-128-ecb","aes-128-gcm","aes-256-gcm","aes-128-gcm2","aes-256-gcm2","none"])}(e),ML(t,"secret");if(["aes-128-gcm2","aes-256-gcm2"].includes(e)){if(!r||!(r instanceof Uint8Array&&32===r.length))throw new UD(MD.INVALID_PARAMS,"salt must be an Uint8Array and exactly equal to 32 bytes")}else if(r)throw new UD(MD.INVALID_PARAMS,"current encrypt mode does not need salt");new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*,.<>?/:;'\"|{}\\[\\]])(?=.{8,})").test(t)||(HD.warning("The secret is not strong:\n      The secret must contain at least 1 lowercase alphabetical character,\n      The secret must contain at least 1 uppercase alphabetical character,\n      The secret must contain at least 1 numeric character,\n      The secret must contain at least one special character,\n      The secret must be eight characters or longer.\n      "),cP("warning",this,"The secret is not strong:\n      The secret must contain at least 1 lowercase alphabetical character,\n      The secret must contain at least 1 uppercase alphabetical character,\n      The secret must contain at least 1 numeric character,\n      The secret must contain at least one special character,\n      The secret must be eight characters or longer.\n      ")),this._encryptionMode=e,this._encryptionSecret=t,r&&(this._encryptionSalt=LK(r))}async renewToken(e){ML(e,"token",1,2047);const t=uj.reportApiInvoke(this._sessionId,{name:ek.RENEW_TOKEN,options:[e],tag:tk.TRACER});if(!this._key||!this._joinInfo){const e=new UD(MD.INVALID_OPERATION,"renewToken should not be called before user join");return t.onError(e),e.throw()}const r=this._key;this._key=e,this._joinInfo&&(this._joinInfo.token=e);const i=await this._renewTokenMutex.lock();try{if(NP("USE_NEW_TOKEN")){HD.debug("start renew token with ticket from unilbs"),pP("debug",this,"renewToken","unilbs");const t=await Nq(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||xD);HD.debug("[".concat(this._clientId,"] get ticket from unilbs success")),pP("debug",this,"renewToken","unilbs","success"),await this._gateway.renewToken({token:e,ticket:t})}else HD.debug("start renew token without ticket"),pP("debug",this,"renewToken"),await this._gateway.renewToken({token:e});HD.debug("[".concat(this._clientId,"] renewToken success")),pP("debug",this,"renewToken",void 0,"success"),t.onSuccess()}catch(e){throw this._key=r,this._joinInfo.token=r,t.onError(e),HD.error("[".concat(this._clientId,"] renewToken failed"),e.toString()),pP("error",this,"renewToken",void 0,e.toString()),e}finally{i()}}enableAudioVolumeIndicator(){const e=uj.reportApiInvoke(this._sessionId,{name:ek.ENABLE_AUDIO_VOLUME_INDICATOR,options:[],tag:tk.TRACER});if(this._audioVolumeIndicationInterval)return HD.warning("you have already enabled audio volume indicator!"),pP("warning",this,"enableAudioVolumeIndicator","you have already enabled audio volume indicator!"),e.onSuccess();this._audioVolumeIndicationInterval=window.setInterval(()=>{const e=this._p2pChannel.getAudioLevels();this.emit(Ak.VOLUME_INDICATOR,e)},NP("AUDIO_VOLUME_INDICATION_INTERVAL")||2e3),e.onSuccess()}getRTCStats(){const e=this._statsCollector.getRTCStats(),t=this._gateway.getInChannelInfo();return e.Duration=Math.round(t.duration/1e3),e}startLiveStreaming(e,t){const r=uj.reportApiInvoke(this._sessionId,{name:ek.START_LIVE_STREAMING,options:[e,t],tag:tk.TRACER});if(!t){if("h264"!==this._codec){const e=new UD(MD.LIVE_STREAMING_INVALID_RAW_STREAM,"raw streaming is only support h264");return r.onError(e),nT.reject(e)}if(!this._p2pChannel.hasLocalMedia()){const e=new UD(MD.LIVE_STREAMING_INVALID_RAW_STREAM,"can not find stream to raw streaming");return r.onError(e),nT.reject(e)}}if(this._liveRawStreamingClient&&this._liveRawStreamingClient.hasUrl(e)||this._liveTranscodeStreamingClient&&this._liveTranscodeStreamingClient.hasUrl(e)){const e=new UD(MD.LIVE_STREAMING_TASK_CONFLICT);return r.onError(e),nT.reject(e)}const i=t?Dk.TRANSCODE:Dk.RAW;return this._createLiveStreamingClient(i).startLiveStreamingTask(e,i).then(()=>r.onSuccess()).catch(e=>{throw r.onError(e),e})}setLiveTranscoding(e){const t=uj.reportApiInvoke(this._sessionId,{name:ek.SET_LIVE_TRANSCODING,options:[e],tag:tk.TRACER});return this._createLiveStreamingClient(Dk.TRANSCODE).setTranscodingConfig(e).then(()=>t.onSuccess()).catch(e=>{throw t.onError(e),e})}stopLiveStreaming(e){const t=uj.reportApiInvoke(this._sessionId,{name:ek.STOP_LIVE_STREAMING,options:[e],tag:tk.TRACER}),r=[this._liveRawStreamingClient,this._liveTranscodeStreamingClient].filter(t=>t&&t.hasUrl(e));if(!r.length){const e=new UD(MD.INVALID_PARAMS,"can not find live streaming url to stop");return t.onError(e),nT.reject(e)}return nT.all(r.map(t=>t&&t.stopLiveStreamingTask(e))).then(()=>t.onSuccess()).catch(e=>{throw t.onError(e),e})}async addInjectStreamUrl(e,t){const r=uj.reportApiInvoke(this._sessionId,{name:ek.ADD_INJECT_STREAM_URL,options:[e,t],tag:tk.TRACER});try{if(!this._joinInfo)throw new UD(MD.INVALID_OPERATION,"can not addInjectStreamUrl, no joininfo");const r=this._createLiveStreamingClient(Dk.INJECT);r.setInjectStreamConfig(t,0),await r.startLiveStreamingTask(e,Dk.INJECT)}catch(e){throw r.onError(e),e}r.onSuccess()}async removeInjectStreamUrl(){const e=uj.reportApiInvoke(this._sessionId,{name:ek.REMOVE_INJECT_STREAM_URL,options:[],tag:tk.TRACER});try{var t;const e=this._createLiveStreamingClient(Dk.INJECT),r=Array.from(MG(t=e.streamingTasks).call(t)).find(e=>e.mode===Dk.INJECT);if(!this._joinInfo||!r)throw new UD(MD.INVALID_OPERATION,"can remove addInjectStreamUrl, no joininfo or inject task");await e.stopLiveStreamingTask(r.url)}catch(t){throw e.onError(t),t}e.onSuccess()}async startChannelMediaRelay(e){const t=uj.reportApiInvoke(this._sessionId,{name:ek.START_CHANNEL_MEDIA_RELAY,options:[e],tag:tk.TRACER});try{jq(e);const t=this._createChannelMediaRelayClient();await t.startChannelMediaRelay(e)}catch(e){return t.onError(e),e.throw()}t.onSuccess()}async updateChannelMediaRelay(e){const t=uj.reportApiInvoke(this._sessionId,{name:ek.UPDATE_CHANNEL_MEDIA_RELAY,options:[e],tag:tk.TRACER});try{jq(e);const t=this._createChannelMediaRelayClient();await t.updateChannelMediaRelay(e)}catch(e){return t.onError(e),e.throw()}t.onSuccess()}async stopChannelMediaRelay(){const e=uj.reportApiInvoke(this._sessionId,{name:ek.STOP_CHANNEL_MEDIA_RELAY,options:[],tag:tk.TRACER});try{const e=this._createChannelMediaRelayClient();await e.stopChannelMediaRelay()}catch(t){return e.onError(t),t.throw()}e.onSuccess()}sendStreamMessage(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this._joinInfo)throw new UD(MD.INVALID_OPERATION,"can not send data stream, not joined");if("string"==typeof e){e=(new TextEncoder).encode(e)}if(new Blob([e]).size>1024)throw new UD(MD.INVALID_PARAMS,"stream message out of range.");return this._gateway.signal.request(gk.DATA_STREAM,{payload:LK(e)},!t)}sendMetadata(e){if(!this._joinInfo)throw new UD(MD.INVALID_OPERATION,"can not send metadata, not joined");if(new Blob([e]).size>1024)throw new UD(MD.METADATA_OUT_OF_RANGE);return this._gateway.signal.request(gk.SEND_METADATA,{session_id:this._joinInfo.sid,metadata:LK(e)})}async sendCustomReportMessage(e){Array.isArray(e)||(e=[e]),e.forEach(JL);const t=uj.reportApiInvoke(this._sessionId,{name:ek.SEND_CUSTOM_REPORT_MESSAGE,options:[JSON.stringify(e)],tag:tk.TRACER});if(!this._joinInfo){const e=new UD(MD.INVALID_OPERATION,"can not send custom report, not joined");return t.onError(e),e.throw()}await uj.sendCustomReportMessage(this._joinInfo.sid,e),t.onSuccess()}getLocalAudioStats(){return this._statsCollector.getLocalAudioTrackStats()}getRemoteAudioStats(){return this._statsCollector.getRemoteAudioTrackStats()}getLocalVideoStats(){return this._statsCollector.getLocalVideoTrackStats()}getRemoteVideoStats(){return this._statsCollector.getRemoteVideoTrackStats()}getRemoteNetworkQuality(){return this._statsCollector.getRemoteNetworkQualityStats()}async pickSVCLayer(e,t){LL(t.spatialLayer,"spatialLayer",[0,1,2,3]),LL(t.temporalLayer,"temporalLayer",[0,1,2,3]);try{await this._gateway.pickSVCLayer(e,t)}catch(e){throw HD.error("[".concat(this._clientId,"] pick SVC layer failed"),e.toString()),hP("error",this,"pickSVCLayer",t,e.toString()),e}}_reset(){if(HD.debug("[".concat(this._clientId,"] reset client")),hP("debug",this,"_reset"),this._axiosCancelSource.cancel(),this._axiosCancelSource=PD.CancelToken.source(),this._streamFallbackTypeCacheMap=new Map,this._remoteStreamTypeCacheMap=new Map,this._configDistribute.stopGetConfigDistribute(),this._joinInfo=void 0,this._proxyServer=void 0,this._defaultStreamFallbackType=void 0,this._sessionId=null,this.store.sessionId=null,this._statsCollector.reset(),this._key=void 0,this._appId=void 0,this._uid=void 0,this.store.uid=void 0,this._channelName=void 0,this._encryptionMode="none",this._encryptionSecret=null,this._encryptionSalt=null,this._users.forEach(e=>{e._audioTrack&&e._audioTrack._destroy(),e._videoTrack&&e._videoTrack._destroy()}),this._users=[],this._audioVolumeIndicationInterval&&(window.clearInterval(this._audioVolumeIndicationInterval),this._audioVolumeIndicationInterval=void 0),"fallback"===this._cloudProxyServerMode&&(this._cloudProxyServerMode="disabled",this.store.cloudProxyServerMode="disabled"),this._p2pChannel.reset(),this._publishMutex=new Ej("client-publish"),this._subscribeMutex=new Ej("client-subscribe"),this._networkQualityInterval&&(window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=void 0),this._injectStreamingClient&&(this._injectStreamingClient.terminate(),this._injectStreamingClient.removeAllListeners(),this._injectStreamingClient=void 0),this._liveRawStreamingClient&&(this._liveRawStreamingClient.terminate(),this._liveRawStreamingClient.removeAllListeners(),this._liveRawStreamingClient=void 0),this._liveTranscodeStreamingClient&&(this._liveTranscodeStreamingClient.terminate(),this._liveTranscodeStreamingClient.removeAllListeners(),this._liveTranscodeStreamingClient=void 0),this._channelMediaRelayClient&&(this._channelMediaRelayClient.dispose(),this._channelMediaRelayClient=void 0),this._inspect)try{this._inspect.close(),this._inspect=void 0}catch(e){}}_startSession(e,t){const r=e||IK();e?HD.debug("[".concat(this._clientId,"] new Session ").concat(r)):HD.debug("[".concat(this._clientId,"] renewSession ").concat(this._sessionId," => ").concat(r)),hP("debug",this,"_startSession",{newSid:r,sid:this._sessionId}),this._sessionId=r,this.store.sessionId=r,t?uj.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:t.channel,appid:t.appId,mode:this._mode}):this._joinInfo?uj.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:this._joinInfo.cname,appid:this._joinInfo.appId,mode:this._mode}):this._gateway.joinInfo&&uj.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:this._gateway.joinInfo.cname,appid:this._gateway.joinInfo.appId,mode:this._mode}),this._joinInfo&&(this._joinInfo.sid=r),this._gateway.joinInfo&&(this._gateway.joinInfo.sid=r)}async _publishHighStream(e){if(!this._joinInfo||void 0===this._uid)throw new UD(MD.INVALID_OPERATION,"Can't publish stream, haven't joined yet!");if("CONNECTED"!==this.connectionState&&"RECONNECTING"!==this.connectionState)throw new UD(MD.INVALID_OPERATION,"can not publish stream in ".concat(this.connectionState," state"));if("auto"===this._turnServer.mode&&NP("FORCE_TURN")&&!NP("TURN_ENABLE_TCP")&&!NP("TURN_ENABLE_UDP"))throw new UD(MD.UNEXPECTED_ERROR,"force TURN With No TURN Configuration");HD.debug("[".concat(this._clientId,"] publish high stream")),hP("debug",this,"_publishHighStream");try{const r=await this._p2pChannel.publish(e,this._isDualStreamEnabled,this._lowStreamParameter),i=(await r.next()).value;if(i){var t;let e;try{e=await this._gateway.publish(this._uid,i,!0)}catch(e){if(e.code!==MD.DISCONNECT_P2P)throw r.throw(e),e}await r.next((null===(t=e)||void 0===t?void 0:t.ortc)||[])}this._p2pChannel.reportPublishEvent(!0,null);for(const t of e)t instanceof $X&&t._encoderConfig&&this._gateway.setVideoProfile(t._encoderConfig),!t.muted&&t.enabled||await this._p2pChannel.muteLocalTrack(t)}catch(t){if(this._p2pChannel.reportPublishEvent(!1,null==t?void 0:t.code,e),(null==t?void 0:t.code)===MD.WS_ABORT)return;throw t}}async _publishLowStream(){if(!this._joinInfo||void 0===this._uid)throw new UD(MD.INVALID_OPERATION,"Can't publish stream, haven't joined yet!");if("CONNECTED"!==this.connectionState&&"RECONNECTING"!==this.connectionState)throw new UD(MD.INVALID_OPERATION,"can not publish stream in ".concat(this.connectionState," state"));HD.debug("[".concat(this._clientId,"] publish low stream")),hP("debug",this,"_publishLowStream");const e=this._configDistribute.getLowStreamConfigDistribute();e&&e.bitrate&&(this._lowStreamParameter||(this._lowStreamParameter={width:160,height:120,framerate:15,bitrate:50}),this._lowStreamParameter&&this._lowStreamParameter.bitrate&&e.bitrate<this._lowStreamParameter.bitrate&&(this._lowStreamParameter.bitrate=e.bitrate));try{const e=await this._p2pChannel.publishLowStream(this._lowStreamParameter),r=(await e.next()).value;if(r){var t;let i;try{i=await this._gateway.publish(this._uid,r,!0)}catch(t){if(t.code!==MD.DISCONNECT_P2P)throw e.throw(t),t}e.next((null===(t=i)||void 0===t?void 0:t.ortc)||[]),this._p2pChannel.reportPublishEvent(!0,null,void 0,!0)}}catch(e){if(this._p2pChannel.reportPublishEvent(!1,null==e?void 0:e.code,void 0,!0),(null==e?void 0:e.code)===MD.WS_ABORT)return;throw e}}_createLiveStreamingClient(e){if(!this._joinInfo||!this._appId){return new UD(MD.INVALID_OPERATION,"can not create live streaming client, please join channel first").throw()}const t=()=>new Fq(this._joinInfo,this._config.websocketRetryConfig||xD,this._config.httpRetryConfig||xD),r=e=>{e.onLiveStreamError=(e,t)=>{uj.reportApiInvoke(this._sessionId,{name:ek.ON_LIVE_STREAM_ERROR,options:[e,t],tag:tk.TRACER}).onSuccess(),this.emit(Ak.LIVE_STREAMING_ERROR,e,t)},e.onLiveStreamWarning=(e,t)=>{uj.reportApiInvoke(this._sessionId,{name:ek.ON_LIVE_STREAM_WARNING,options:[e,t],tag:tk.TRACER}).onSuccess(),this.emit(Ak.LIVE_STREAMING_WARNING,e,t)},e.on(Qk.REQUEST_WORKER_MANAGER_LIST,(e,t,r)=>{if(!this._joinInfo)return r(new UD(MD.INVALID_OPERATION,"can not find join info to get worker manager"));bq(e,this._joinInfo,this._axiosCancelSource.token,xD).then(t).catch(r)})};switch(e){case Dk.RAW:return this._liveRawStreamingClient||(this._liveRawStreamingClient=t(),r(this._liveRawStreamingClient)),this._liveRawStreamingClient;case Dk.TRANSCODE:return this._liveTranscodeStreamingClient||(this._liveTranscodeStreamingClient=t(),r(this._liveTranscodeStreamingClient)),this._liveTranscodeStreamingClient;case Dk.INJECT:return this._injectStreamingClient||(this._injectStreamingClient=t(),this._injectStreamingClient.on(Qk.REQUEST_WORKER_MANAGER_LIST,(e,t,r)=>{if(!this._joinInfo)return r(new UD(MD.INVALID_OPERATION,"can not find join info to get worker manager"));bq(e,this._joinInfo,this._axiosCancelSource.token,xD).then(t).catch(r)}),this._injectStreamingClient.onInjectStatusChange=(e,t,r)=>{this.emit(Ak.INJECT_STREAM_STATUS,e,t,r)}),this._injectStreamingClient}}_createChannelMediaRelayClient(){if(!this._joinInfo){return new UD(MD.INVALID_OPERATION,"can not create channel media relay client, please join channel first").throw()}return this._channelMediaRelayClient||(this._channelMediaRelayClient=new Kq(this._joinInfo,this._clientId,this._config.websocketRetryConfig||xD,this._config.httpRetryConfig||xD),this._channelMediaRelayClient.on("state",e=>{e===Kk.RELAY_STATE_FAILURE&&this._channelMediaRelayClient&&this._channelMediaRelayClient.dispose(),this.emit(Ak.CHANNEL_MEDIA_RELAY_STATE,e)}),this._channelMediaRelayClient.on("event",e=>{this.emit(Ak.CHANNEL_MEDIA_RELAY_EVENT,e)})),this._channelMediaRelayClient}_handleGatewayEvents(){this._gateway.on(Yk.DISCONNECT_P2P,async()=>{await this._p2pChannel.disconnectForReconnect()}),this._gateway.on(Yk.CONNECTION_STATE_CHANGE,(e,t,r)=>{var i;if(r===uk.FALLBACK)return;const n=()=>{this.emit(Ak.CONNECTION_STATE_CHANGE,e,t,r)};if(uj.reportApiInvoke(this._sessionId||(null===(i=this._gateway.joinInfo)||void 0===i?void 0:i.sid)||null,{name:ek.CONNECTION_STATE_CHANGE,options:[e,t,r],tag:tk.TRACER}).onSuccess(JSON.stringify({cur:e,prev:t,reason:r})),HD.info("[".concat(this._clientId,"] connection state change: ").concat(t," -> ").concat(e)),dP("info",this,"connection-state-change","".concat(t," -> ").concat(e)),"DISCONNECTED"===e)return this._reset(),void n();if("RECONNECTING"===e)this._users.forEach(e=>{e._trust_in_room_=!1,e._trust_audio_enabled_state_=!1,e._trust_video_enabled_state_=!1,e._trust_audio_mute_state_=!1,e._trust_video_mute_state_=!1,e._trust_audio_stream_added_state_=!1,e._trust_video_stream_added_state_=!1,e._audioSSRC=void 0,e._videoSSRC=void 0,e._videoOrtc=void 0,e._audioOrtc=void 0,e._cname=void 0,e._rtxSsrcId=void 0}),this._userOfflineTimeout&&window.clearTimeout(this._userOfflineTimeout),this._streamRemovedTimeout&&window.clearTimeout(this._streamRemovedTimeout),this._userOfflineTimeout=void 0,this._streamRemovedTimeout=void 0;else if("CONNECTED"===e){var o;this._streamFallbackTypeCacheMap.forEach((e,t)=>{this._gateway.setStreamFallbackOption(t,e).catch(e=>{HD.warning("[".concat(this._clientId,"] auto set stream fallback option failed"),e),cP("warning",this,"auto set stream fallback option failed, ".concat(e.toString()))})}),this._remoteStreamTypeCacheMap.forEach((e,t)=>{this._gateway.setRemoteVideoStreamType(t,e).catch(e=>{HD.warning("[".concat(this._clientId,"] auto set remote stream type failed"),e),cP("warning",this,"auto set remote stream type failed, ".concat(e.toString()))})}),void 0!==this._remoteDefaultVideoStreamType&&void 0===(null===(o=this._joinInfo)||void 0===o?void 0:o.defaultVideoStream)&&this.setRemoteDefaultVideoStreamType(this._remoteDefaultVideoStreamType).then(()=>{HD.debug("[".concat(this._clientId,"] setRemoteDefaultVideoStreamType after gateway connected"))}).catch(e=>{HD.error("[".concat(this._clientId,"] setRemoteDefaultVideoStreamType after gateway failed, ").concat(e))}),this._p2pChannel.republish(),this._userOfflineTimeout=window.setTimeout(()=>{if("CONNECTED"!==this.connectionState)return;this._userOfflineTimeout=void 0;this._users.filter(e=>!e._trust_in_room_).forEach(e=>{HD.debug("[".concat(this._clientId,"] user offline timeout, emit user offline ").concat(e.uid)),cP("debug",this,"user offline timeout, emit user offline ".concat(e.uid)),this._handleUserOffline({uid:e.uid})})},3e3),this._streamRemovedTimeout=window.setTimeout(()=>{"CONNECTED"===this.connectionState&&(this._streamRemovedTimeout=void 0,this._users.forEach(e=>{e._trust_audio_mute_state_||(HD.debug("[".concat(this._clientId,"] auto dispatch audio unmute event ").concat(e.uid)),cP("debug",this,"auto dispatch audio unmute event ".concat(e.uid)),this._handleMuteStream(e.uid,"audio",!1)),e._trust_video_mute_state_||(HD.debug("[".concat(this._clientId,"] auto dispatch video unmute event ").concat(e.uid)),cP("debug",this,"auto dispatch video unmute event ".concat(e.uid)),this._handleMuteStream(e.uid,"video",!1)),e._trust_audio_enabled_state_||(HD.debug("[".concat(this._clientId,"] auto dispatch enable local audio ").concat(e.uid)),cP("debug",this,"auto dispatch enable local audio ".concat(e.uid)),this._handleSetStreamLocalEnable("audio",e.uid,!0)),e._trust_video_enabled_state_||(HD.debug("[".concat(this._clientId,"] auto dispatch enable local video ").concat(e.uid)),cP("debug",this,"auto dispatch enable local video ".concat(e.uid)),this._handleSetStreamLocalEnable("video",e.uid,!0)),e._trust_video_stream_added_state_||(HD.debug("[".concat(this._clientId,"] auto dispatch reset video stream added ").concat(e.uid)),this._handleResetAddStream(e,"video")),e._trust_audio_stream_added_state_||(HD.debug("[".concat(this._clientId,"] auto dispatch reset audio stream added ").concat(e.uid)),this._handleResetAddStream(e,"audio")),e._video_added_||e._audio_added_||(HD.debug("[".concat(this._clientId,"] auto dispatch stream remove ").concat(e.uid)),cP("debug",this,"auto dispatch stream remove ".concat(e.uid)),this._handleRemoveStream({uid:e.uid,uint_id:e._uintid}))}))},1e3)}n()}),this._gateway.on(Yk.REQUEST_NEW_GATEWAY_LIST,(e,t)=>{if(!this._joinInfo)return t(new UD(MD.UNEXPECTED_ERROR,"can not recover, no join info"));Sq(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||xD,this.store).then(t=>{this._joinInfo&&(this._joinInfo.apResponse=t.gatewayInfo.res,this._joinInfo.gatewayAddrs=t.gatewayInfo.gatewayAddrs,this._joinInfo.uni_lbs_ip=t.gatewayInfo.uni_lbs_ip),e(t.gatewayInfo.gatewayAddrs.map(e=>{if(this._joinInfo&&this._joinInfo.proxyServer){const t=e.address.split(":");return"wss://".concat(this._joinInfo.proxyServer,"/ws/?h=").concat(t[0],"&p=").concat(t[1])}return"wss://".concat(e.address)}))}).catch(t)}),this._gateway.on(Yk.NETWORK_QUALITY,e=>{"normal"===this._networkQualitySensitivity&&this.emit(Ak.NETWORK_QUALITY,e)}),this._gateway.on(Yk.STREAM_TYPE_CHANGE,(e,t)=>{this.emit(Ak.STREAM_TYPE_CHANGED,e,t);uj.reportApiInvoke(this._sessionId,{name:ek.STREAM_TYPE_CHANGE,options:[e,t],tag:tk.TRACER}).onSuccess(JSON.stringify({uid:e,streamType:t}))}),this._gateway.on(Yk.IS_P2P_DISCONNECTED,e=>{this._p2pChannel.isP2PDisconnected()?e(!0):this._p2pChannel.hasLocalMedia()||this._p2pChannel.hasRemoteMedia()?e(!1):e(!0)}),this._gateway.on(Yk.NEED_RENEW_SESSION,()=>{this._startSession()}),this._gateway.on(Yk.REQUEST_P2P_CONNECTION_PARAMS,async(e,t,r)=>{try{t(await this._p2pChannel.startP2PConnection(e))}catch(e){r(e)}}),this._gateway.on(Yk.JOIN_RESPONSE,(e,t,r)=>{const{dtlsParameters:i,iceParameters:n,candidates:o,rtpCapabilities:s,setup:a,cname:c}=U$(e.ortc,t,r);this._p2pChannel.connect(n,i,o,s,a,c)}),this._gateway.signal.on(fk.ON_USER_ONLINE,this._handleUserOnline),this._gateway.signal.on(fk.ON_USER_OFFLINE,this._handleUserOffline),this._gateway.signal.on(fk.ON_ADD_AUDIO_STREAM,e=>this._handleAddAudioOrVideoStream("audio",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc)),this._gateway.signal.on(fk.ON_ADD_VIDEO_STREAM,e=>this._handleAddAudioOrVideoStream("video",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc,e.rtxSsrcId)),this._gateway.signal.on(fk.ON_REMOVE_STREAM,this._handleRemoveStream),this._gateway.signal.on(fk.ON_P2P_LOST,this._handleP2PLost),this._gateway.signal.on(fk.MUTE_AUDIO,e=>(dP("debug",["AgoraRTCGateway",this._clientId],"mute_audio",{uid:e.uid}),this._handleMuteStream(e.uid,"audio",!0))),this._gateway.signal.on(fk.UNMUTE_AUDIO,e=>(dP("debug",["AgoraRTCGateway",this._clientId],"unmute_audio",{uid:e.uid}),this._handleMuteStream(e.uid,"audio",!1))),this._gateway.signal.on(fk.MUTE_VIDEO,e=>(dP("debug",["AgoraRTCGateway",this._clientId],"mute_video",{uid:e.uid}),this._handleMuteStream(e.uid,"video",!0))),this._gateway.signal.on(fk.UNMUTE_VIDEO,e=>(dP("debug",["AgoraRTCGateway",this._clientId],"unmute_video",{uid:e.uid}),this._handleMuteStream(e.uid,"video",!1))),this._gateway.signal.on(fk.RECEIVE_METADATA,e=>{const t=PK(e.metadata);this.emit(Ak.RECEIVE_METADATA,e.uid,t)}),this._gateway.signal.on(fk.ON_DATA_STREAM,e=>{e.seq&&delete e.seq,e.payload=PK(e.payload),this.emit(Ak.STREAM_MESSAGE,e.uid,e.payload),this.onStreamMessage&&this.onStreamMessage(e)}),this._gateway.signal.on(fk.ON_CRYPT_ERROR,()=>{DK(()=>{HD.warning("[".concat(this._clientId,"] on crypt error")),dP("warning",this,"crypt_error"),this.emit(Ak.CRYPT_ERROR)},this._sessionId)}),this._gateway.signal.on(fk.ON_TOKEN_PRIVILEGE_WILL_EXPIRE,this._handleTokenWillExpire),this._gateway.signal.on(fk.ON_TOKEN_PRIVILEGE_DID_EXPIRE,()=>{HD.warning("[".concat(this._clientId,"] received message onTokenPrivilegeDidExpire, please get new token and join again")),dP("warning",this,"token_privilege_did_expire"),this._gateway.leave(!0),this.emit(Ak.ON_TOKEN_PRIVILEGE_DID_EXPIRE),this._reset()}),this._gateway.signal.on(fk.ON_STREAM_FALLBACK_UPDATE,e=>{HD.debug("[".concat(this._clientId,"] stream fallback peerId: ").concat(e.stream_id,", attr: ").concat(e.stream_type)),dP("debug",this,"stream_fallback_update",{peerId:e.stream_id,attr:e.stream_type}),this.emit(Ak.STREAM_FALLBACK,e.stream_id,1===e.stream_type?"fallback":"recover")}),this._gateway.signal.on(fk.ON_PUBLISH_STREAM,e=>{this.uid===this._uid&&(this._p2pChannel.reportPublishEvent(!0,null,void 0,!1,JSON.stringify({proxy:e.proxy})),HD.info("[".concat(this._clientId,"] on publish stream, ").concat(JSON.stringify(e))),dP("info",this,"publish_stream",e))}),this._gateway.signal.on(fk.ENABLE_LOCAL_VIDEO,e=>{this._handleSetStreamLocalEnable("video",e.uid,!0)}),this._gateway.signal.on(fk.DISABLE_LOCAL_VIDEO,e=>{this._handleSetStreamLocalEnable("video",e.uid,!1)}),this._gateway.signal.on(pk.REQUEST_TIMEOUT,(e,t)=>{if(this._joinInfo)switch(e){case gk.PUBLISH:{if(!t)return;const e=(t=t).ortc;if(e){var r,i,n,o;const s=e.some(e=>{let{stream_type:t}=e;return t===Wk.Audio}),a=e.some(e=>{let{stream_type:t}=e;return t!==Wk.Audio}),c=e.some(e=>{let{stream_type:t}=e;return t===Wk.Screen||t===Wk.ScreenLow});"offer"===t.state&&uj.publish(this._joinInfo.sid,{eventElapse:qG.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:!1,ec:MD.TIMEOUT,audio:s,video:a,p2pid:t.p2p_id,publishRequestid:this.store.pubId,screenshare:c,audioName:s?null===(r=e.find(e=>{let{stream_type:t}=e;return t===Wk.Audio}))||void 0===r||null===(i=r.ssrcs[0])||void 0===i?void 0:i.ssrcId.toString():void 0,videoName:a?null===(n=e.find(e=>{let{stream_type:t}=e;return t!==Wk.Audio}))||void 0===n||null===(o=n.ssrcs[0])||void 0===o?void 0:o.ssrcId.toString():void 0})}break}case gk.SUBSCRIBE:(t=t)&&uj.subscribe(this._joinInfo.sid,{succ:!1,ec:MD.TIMEOUT,audio:t.stream_type===dB.AUDIO,video:t.stream_type===dB.VIDEO,peerid:t.stream_id,subscribeRequestid:t.ssrcId,p2pid:this.store.p2pId,eventElapse:qG.measureFromSubscribeStart(this.store.clientId,t.ssrcId)})}}),this._gateway.signal.on(fk.ON_P2P_OK,e=>{this.uid,this._uid}),this._gateway.signal.on(fk.ON_PUBLISHED_USER_LIST,e=>{if(null==e||!e.users)return;const t=[],r=[];for(const i of e.users){let e=this._users.find(e=>e.uid===i.stream_id);e?e._trust_in_room_=!0:(e=new tz(i.stream_id,i.stream_id),this._users.push(e),0===this.getListeners(Ak.PUBLISHED_USER_LIST).length&&(HD.debug("[".concat(this._clientId,"] user online"),i.stream_id),uP("info",this,"user-joined",{uid:i.stream_id}),this.emit(Ak.USER_JOINED,e)));const n=Jk.Audio&i.stream_type,o=(Jk.Video|Jk.LwoVideo)&i.stream_type,s=n&&e.hasAudio,a=o&&e.hasVideo;o&&(e._trust_video_stream_added_state_=!0,e._video_added_=!0,e._videoSSRC=i.video_ssrc),n&&(e._trust_audio_stream_added_state_=!0,e._audio_added_=!0,e._audioSSRC=i.audio_ssrc),n&&!s&&0===this.getListeners(Ak.PUBLISHED_USER_LIST).length&&(HD.info("[".concat(this._clientId,"] remote user ").concat(e.uid," published audio")),cP("info",this,"remote user ".concat(e.uid," published audio")),this.emit(Ak.USER_PUBLISHED,e,"audio")),o&&!a&&0===this.getListeners(Ak.PUBLISHED_USER_LIST).length&&(HD.info("[".concat(this._clientId,"] remote user ").concat(e.uid," published video")),cP("info",this,"remote user ".concat(e.uid," published video")),this.emit(Ak.USER_PUBLISHED,e,"video")),(n&&!s||o&&!a)&&t.push(e),o&&this._p2pChannel.hasPendingRemoteMedia(e,"video")&&r.push({user:e,mediaType:"video"}),n&&this._p2pChannel.hasPendingRemoteMedia(e,"audio")&&r.push({user:e,mediaType:"audio"})}r.length>0&&(HD.debug("[".concat(this._clientId,"] RE massSubscribe after reconnect ").concat(r.map(e=>"user: ".concat(e.user.uid,", mediaType: ").concat(e.mediaType)).join("; ")," ")),this.massSubscribe(r).catch(e=>{HD.error("[".concat(this._clientId,"] mass resubscribe error"),e.toString())})),this.getListeners(Ak.PUBLISHED_USER_LIST).length>0?(HD.info("[".concat(this._clientId,"] client emit user-list event, users: ").concat(t.map(e=>e.uid).join(", "))),this.emit(Ak.PUBLISHED_USER_LIST,t)):HD.info("[".concat(this._clientId,"] client not emit user-list event case there is no user-list listener, users: ").concat(t.map(e=>e.uid).join(", ")))})}_handleP2PChannelEvents(){this._p2pChannel.on(hB.RequestMuteLocal,async(e,t,r)=>{if(this._joinInfo)try{await this._gateway.muteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===MD.DISCONNECT_P2P?t():r(e)}else t()}),this._p2pChannel.on(hB.RequestUnmuteLocal,async(e,t,r)=>{if(this._joinInfo)try{await this._gateway.unmuteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===MD.DISCONNECT_P2P?t():r(e)}else t()}),this._p2pChannel.on(hB.RequestRePublish,(e,t,r)=>{this.publish(e,!1).then(t).catch(r)}),this._p2pChannel.on(hB.RequestReSubscribe,async(e,t,r)=>{try{for(const{user:t,kind:r}of e)r===dB.VIDEO?await this.subscribe(t,"video"):await this.subscribe(t,"audio");t()}catch(e){r(e)}}),this._p2pChannel.on(hB.RequestUploadStats,(e,t)=>{this._gateway.uploadStats(e,t)}),this._p2pChannel.on(hB.MediaReconnectStart,e=>{this.emit(Ak.MEDIA_RECONNECT_START,e)}),this._p2pChannel.on(hB.MediaReconnectEnd,e=>{this.emit(Ak.MEDIA_RECONNECT_END,e)}),this._p2pChannel.on(hB.NeedSignalRTT,e=>{e(this._gateway.getSignalRTT())}),this._p2pChannel.on(hB.RequestRestartICE,async()=>{const e=await this._p2pChannel.reEstablish();if(e){const{restartICEResponse:t,gatewayIP:r,gatewayPort:i}=await this._gateway.restartICE({iceParameters:e.iceParameters}),{candidates:n,iceParameters:o}=function(e,t,r){const i=e.iceParameters;let n;return void 0!==t&&void 0!==r?(n=[{foundation:"udpcandidate",componentId:"1",transport:"udp",priority:"2103266323",connectionAddress:t,port:r.toString(),type:"host",extension:{}}],HD.debug("Using remote candidate from AP ".concat(t,":").concat(r)),cP("debug",[],"Using remote candidate from AP ".concat(t,":").concat(r))):n=i.candidates.map(e=>({foundation:e.foundation,componentId:"1",transport:e.protocol,priority:e.priority.toString(),connectionAddress:e.ip,port:e.port.toString(),type:e.type,extension:{}})),{candidates:n,iceParameters:{iceUfrag:i.iceUfrag,icePwd:i.icePwd}}}(t,r,i);await e.restartICE(o,n)}}),this._p2pChannel.on(hB.RequestReconnect,async()=>{this._gateway.reconnect()}),this._p2pChannel.on(hB.RequestReconnectPC,async()=>{var e;const{iceParameters:t,dtlsParameters:r,rtpCapabilities:i}=await this._p2pChannel.startP2PConnection({turnServer:null===(e=this._joinInfo)||void 0===e?void 0:e.turnServer}),{gatewayEstablishParams:n,gatewayIP:o,gatewayPort:s}=await this._gateway.reconnectPC({iceParameters:t,dtlsParameters:r,rtpCapabilities:i}),{dtlsParameters:a,iceParameters:c,candidates:d,rtpCapabilities:u,setup:A,cname:h}=U$(n,o,s);await this._p2pChannel.connect(c,a,d,u,A,h),await this._p2pChannel.republish(),await this._p2pChannel.reSubscribe()}),this._p2pChannel.on(hB.RequestUnpublishForReconnectPC,async(e,t,r)=>{this._joinInfo&&void 0!==this._uid?(await this._gateway.unpublish(e,this._uid),t()):r()}),this._p2pChannel.on(hB.P2PLost,()=>{this.emit(Ak.P2P_LOST,this.store.uid)}),this._p2pChannel.on(hB.UpdateVideoEncoder,e=>{e._encoderConfig&&this._gateway.setVideoProfile(e._encoderConfig)}),this._p2pChannel.on(hB.ConnectionTypeChange,e=>{this.emit(Ak.IS_USING_CLOUD_PROXY,e)}),this._p2pChannel.on(hB.RequestLowStreamParameter,e=>{e(this._lowStreamParameter||{width:160,height:120,framerate:15,bitrate:50})})}getKeyMetrics(){return this.store.keyMetrics}async enableContentInspect(e){if("CONNECTED"!==this.connectionState||!this._joinInfo)throw new UD(MD.INVALID_OPERATION,"[".concat(this._clientId,"] Client did not join channel"));if(this._inspect)throw new UD(MD.INVALID_OPERATION,"[".concat(this._clientId,"] Inspect content service already in connecting/connected state"));if(!e)throw new UD(MD.INVALID_PARAMS,"[".concat(this._clientId,"] inspectConfig is necessary"));if(e&&e.extraInfo&&e.extraInfo.length>1024)throw new UD(MD.INVALID_PARAMS,"[".concat(this._clientId,"] inspectConfig.extraInfo length cannot exceed 1024 bytes"));try{const t=new V0(e);this._inspect=t,this.handleVideoInspectEvents(this._inspect),await t.init({appId:this._joinInfo.appId,areaCode:"",cname:this._joinInfo.cname,sid:this._joinInfo.sid,token:this._joinInfo.token,uid:this._joinInfo.uid,cid:this._joinInfo.cid,vid:this._joinInfo.vid?Number(this._joinInfo.vid):0},xD)}catch(e){throw Array.isArray(e)?e[0]:e}}async disableContentInspect(){if(!this._inspect)throw new UD(MD.INVALID_OPERATION,"[".concat(this._clientId,"] inspectVideoContent not started"));try{this._inspect.close(),this._inspect=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}handleVideoInspectEvents(e){e.on(CB.CONNECTION_STATE_CHANGE,(t,r)=>{switch(this.emit(Ak.CONTENT_INSPECT_CONNECTION_STATE_CHANGE,t,r),r){case mB.CONNECTED:if("CONNECTED"!==this.connectionState)return void this.emit(Ak.CONTENT_INSPECT_ERROR,new UD(MD.OPERATION_ABORTED,"Content inspect was cancelled because it left the channel"));e.inspectImage()}}),e.on(CB.INSPECT_RESULT,(e,t)=>{var r;if((null==t?void 0:t.code)===MD.INVALID_OPERATION&&"DISCONNECTED"===this.connectionState)return HD.debug("Stop inspect content because that has left channel"),null==this||null===(r=this._inspect)||void 0===r||r.close(),void(this._inspect=void 0);this.emit(Ak.CONTENT_INSPECT_RESULT,e,t)}),e.on(CB.CLIENT_LOCAL_VIDEO_TRACK,e=>{e(this.localTracks.filter(e=>"video"===e.trackMediaType)[0])})}getJoinChannelServiceRecords(){return HD.debug("getJoinChannelServiceRecords"),this.store.joinChannelServiceRecords}async setPublishAudioFilterEnabled(e){PL(e,"enabled"),OP("ENABLE_PUBLISH_AUDIO_FILTER",e),this._joinInfo&&await this._gateway.setPublishAudioFilterEnabled(e)}_handleResetAddStream(e,t){switch(t){case"audio":e._audio_added_=!1,e._trust_audio_stream_added_state_=!0;break;case"video":e._video_added_=!1,e._trust_video_stream_added_state_=!0}}}).prototype,"setProxyServer",[G0],Object.getOwnPropertyDescriptor(t2.prototype,"setProxyServer"),t2.prototype),UV(t2.prototype,"setTurnServer",[K0],Object.getOwnPropertyDescriptor(t2.prototype,"setTurnServer"),t2.prototype),UV(t2.prototype,"setLicense",[H0],Object.getOwnPropertyDescriptor(t2.prototype,"setLicense"),t2.prototype),UV(t2.prototype,"setLocalAccessPoints",[W0],Object.getOwnPropertyDescriptor(t2.prototype,"setLocalAccessPoints"),t2.prototype),UV(t2.prototype,"setRemoteDefaultVideoStreamType",[Y0],Object.getOwnPropertyDescriptor(t2.prototype,"setRemoteDefaultVideoStreamType"),t2.prototype),UV(t2.prototype,"setEncryptionConfig",[J0],Object.getOwnPropertyDescriptor(t2.prototype,"setEncryptionConfig"),t2.prototype),UV(t2.prototype,"pickSVCLayer",[q0],Object.getOwnPropertyDescriptor(t2.prototype,"pickSVCLayer"),t2.prototype),UV(t2.prototype,"enableContentInspect",[X0],Object.getOwnPropertyDescriptor(t2.prototype,"enableContentInspect"),t2.prototype),UV(t2.prototype,"disableContentInspect",[z0],Object.getOwnPropertyDescriptor(t2.prototype,"disableContentInspect"),t2.prototype),UV(t2.prototype,"getJoinChannelServiceRecords",[Z0],Object.getOwnPropertyDescriptor(t2.prototype,"getJoinChannelServiceRecords"),t2.prototype),UV(t2.prototype,"setPublishAudioFilterEnabled",[$0],Object.getOwnPropertyDescriptor(t2.prototype,"setPublishAudioFilterEnabled"),t2.prototype),e2=t2))||e2);class o2 extends Lj{set currentState(e){e!==this._currentState&&(this._currentState=e,this.emit(mk.AUDIO_SOURCE_STATE_CHANGE,this._currentState))}get currentState(){return this._currentState}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),kO(this,"audioBuffer",void 0),kO(this,"sourceNode",void 0),kO(this,"startPlayTime",0),kO(this,"startPlayOffset",0),kO(this,"pausePlayTime",0),kO(this,"options",void 0),kO(this,"currentLoopCount",0),kO(this,"_currentState","stopped"),this.audioBuffer=e,this.options=t,this.startPlayOffset=this.options.startPlayTime||0}createWebAudioDiagram(){return this.context.createGain()}get duration(){return this.audioBuffer.duration}get currentTime(){return"stopped"===this.currentState?0:"paused"===this.currentState?this.pausePlayTime:(this.context.currentTime-this.startPlayTime+this.startPlayOffset)%this.audioBuffer.duration}updateOptions(e){"stopped"===this.currentState?(this.options=e,this.startPlayOffset=this.options.startPlayTime||0):HD.warning("can not set audio source options")}startProcessAudioBuffer(){this.sourceNode&&this.stopProcessAudioBuffer(),this.sourceNode=this.createSourceNode(),this.startSourceNode(),this.currentState="playing"}pauseProcessAudioBuffer(){this.sourceNode&&"playing"===this.currentState&&(this.pausePlayTime=this.currentTime,this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.buffer=null,this.sourceNode=this.createSourceNode(),this.currentState="paused")}seekAudioBuffer(e){this.sourceNode&&(this.sourceNode.onended=null,"playing"===this.currentState&&this.sourceNode.stop(),this.sourceNode=this.createSourceNode(),"playing"===this.currentState?(this.startPlayOffset=e,this.startSourceNode()):"paused"===this.currentState&&(this.pausePlayTime=e))}resumeProcessAudioBuffer(){"paused"===this.currentState&&this.sourceNode&&(this.startPlayOffset=this.pausePlayTime,this.pausePlayTime=0,this.startSourceNode(),this.currentState="playing")}stopProcessAudioBuffer(){if(this.sourceNode){this.sourceNode.onended=null;try{this.sourceNode.stop()}catch(e){}this.reset()}}startSourceNode(){this.sourceNode&&this.sourceNode.buffer&&(this.sourceNode.start(0,this.startPlayOffset),this.startPlayTime=this.context.currentTime,this.sourceNode.onended=this.handleSourceNodeEnded.bind(this))}createSourceNode(){const e=this.context.createBufferSource();return e.buffer=this.audioBuffer,e.loop=!!this.options.loop,e.connect(this.outputNode),e}handleSourceNodeEnded(){if(this.currentLoopCount+=1,this.options.cycle&&this.options.cycle>this.currentLoopCount)return this.startPlayOffset=0,this.sourceNode=void 0,void this.startProcessAudioBuffer();this.reset()}reset(){this.startPlayOffset=this.options.startPlayTime||0,this.currentState="stopped",this.sourceNode&&(this.sourceNode.disconnect(),this.sourceNode=void 0),this.currentLoopCount=0}}const s2=new Map;async function a2(e,t){let r=null;if("string"==typeof e){const t=s2.get(e);if(t)return HD.debug("use cached audio resource: ",e),t;try{r=(await FD(()=>PD.get(e,{responseType:"arraybuffer"}),void 0,void 0,{maxRetryCount:3})).data}catch(e){throw new UD(MD.FETCH_AUDIO_FILE_FAILED,e.toString())}}else{const t=new nT((t,r)=>{const i=new FileReader;i.onload=e=>{e.target?t(e.target.result):r(new UD(MD.READ_LOCAL_AUDIO_FILE_ERROR))},i.onerror=()=>{r(new UD(MD.READ_LOCAL_AUDIO_FILE_ERROR))},i.readAsArrayBuffer(e)});r=await t}const i=await function(e){const t=wj();return new nT((r,i)=>{t.decodeAudioData(e,e=>{r(e)},e=>{i(new UD(MD.DECODE_AUDIO_FILE_FAILED,e.toString()))})})}(r);return"string"==typeof e&&t&&s2.set(e,i),i}function c2(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function d2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c2(Object(r),!0).forEach((function(t){kO(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c2(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u2(e,t,r,i){r.optimizationMode&&(i&&i.width&&i.height?(r.encoderConfig=d2(d2({},i),{},{bitrateMin:i.bitrateMin,bitrateMax:i.bitrateMax}),"motion"!==r.optimizationMode&&"detail"!==r.optimizationMode||(t.contentHint=r.optimizationMode,t.contentHint===r.optimizationMode?(HD.debug("[".concat(e,"] set content hint to"),r.optimizationMode),pP("debug",["AgoraRTC"],"videoTrackOptimizationModeProcess",[e,r,i])):(HD.debug("[".concat(e,"] set content hint failed")),pP("warning",["AgoraRTC"],"videoTrackOptimizationModeProcess",[e,r,i],"failed")))):(HD.warning("[".concat(e,"] can not apply optimization mode bitrate config, no encoderConfig")),cP("warning",["AgoraRTC"],"[".concat(e,"] can not apply optimization mode bitrate config, no encoderConfig"))))}const A2=oO().name;function h2(e,t,r,i){let n,o=0,s=null;return new nT((a,c)=>{setTimeout(()=>{n&&(n(),a(o))},t),n=Nj(()=>{!function(){o>i&&n&&(n(),a(o));const t=r.getContext("2d");if(!t){const e=new UD(MD.UNEXPECTED_ERROR,"can not get canvas 2d context.");return HD.error(e.toString()),void c(e)}t.drawImage(e,0,0,160,120);const d=t.getImageData(0,0,r.width,r.height),u=Math.floor(d.data.length/3);if(s){for(let e=0;e<u;e+=3)if(d.data[e]!==s[e])return o+=1,void(s=d.data);s=d.data}else s=d.data}()},30)})}class l2{constructor(e,t){kO(this,"id",0),kO(this,"element",void 0),kO(this,"peerPair",void 0),kO(this,"context",void 0),kO(this,"audioPlayerElement",void 0),kO(this,"audioTrack",void 0),l2.count+=1,this.id=l2.count,this.element=e,this.context=t}initPeers(){this.peerPair=[new RTCPeerConnection,new RTCPeerConnection],this.peerPair[1].ontrack=e=>{const t=document.createElement("audio");t.srcObject=new MediaStream([e.track]),t.play(),this.audioPlayerElement=t}}async switchSdp(){if(!this.peerPair)return;const e=async(e,t)=>{const r="offer"===t?await e.createOffer():await e.createAnswer();return await e.setLocalDescription(r),"complete"===e.iceGatheringState?e.localDescription:new nT(t=>{e.onicegatheringstatechange=()=>{"complete"===e.iceGatheringState&&t(e.localDescription)}})},t=async(e,t)=>await e.setRemoteDescription(t);try{const r=await e(this.peerPair[0],"offer");await t(this.peerPair[1],r);const i=await e(this.peerPair[1],"answer");await t(this.peerPair[0],i)}catch(e){throw new UD(MD.LOCAL_AEC_ERROR,e.toString()).print()}}async getTracksFromMediaElement(e){if(this.audioTrack)return this.audioTrack;let t;try{e instanceof HTMLVideoElement&&(e.captureStream?e.captureStream():e.mozCaptureStream()),t=this.context.createMediaStreamDestination();this.context.createMediaElementSource(e).connect(t)}catch(e){throw new UD(MD.LOCAL_AEC_ERROR,e.toString()).print()}if(!t){throw new UD(MD.LOCAL_AEC_ERROR,"no dest node when local aec").print()}const r=t.stream.getAudioTracks()[0];return this.audioTrack=r,r}getElement(){return this.element}async startEchoCancellation(){this.context.resume(),this.peerPair&&this.close(),this.initPeers();const e=this.element,t=await this.getTracksFromMediaElement(e);this.peerPair&&this.peerPair[0].addTrack(t),await this.switchSdp()}close(){HD.debug("close echo cancellation unit, id is",this.id),this.audioPlayerElement&&this.audioPlayerElement.pause(),this.peerPair&&this.peerPair.forEach(e=>{e.close()}),this.peerPair=void 0,this.audioPlayerElement=void 0}}var p2,g2;kO(l2,"count",0);const E2=window.AudioContext||window.webkitAudioContext;const f2=new(p2=cj({report:uj}),UV((g2=class{constructor(){kO(this,"units",[]),kO(this,"context",void 0)}processExternalMediaAEC(e){if(!this._doesEnvironmentNeedAEC())return HD.debug("the system does not need to process local aec"),-1;this.context||(this.context=new E2);let t=this.units.find(t=>t&&t.getElement()===e);return t||(t=new l2(e,this.context),this.units.push(t)),t.startEchoCancellation(),HD.debug("start processing local audio echo cancellation, id is",t.id),t.id}_doesEnvironmentNeedAEC(){return oO().name!==tO.SAFARI}}).prototype,"processExternalMediaAEC",[p2],Object.getOwnPropertyDescriptor(g2.prototype,"processExternalMediaAEC"),g2.prototype),g2);OP("PROCESS_ID","process-".concat(fK(8,""),"-").concat(fK(4,""),"-").concat(fK(4,""),"-").concat(fK(4,""),"-").concat(fK(12,""))),function(){const e=oO();SB.getDisplayMedia=function(e){if(navigator.mediaDevices&&navigator.mediaDevices.getDisplayMedia)return!0;return!1}(),SB.getStreamFromExtension=e.name===tO.CHROME&&Number(e.version)>34,SB.supportUnifiedPlan=function(){if(!window.RTCRtpTransceiver)return!1;if(!("currentDirection"in RTCRtpTransceiver.prototype))return!1;const e=new RTCPeerConnection;let t=!1;try{e.addTransceiver("audio"),t=!0}catch(e){}return e.close(),t}(),SB.supportMinBitrate=e.name===tO.CHROME||e.name===tO.EDGE,SB.supportSetRtpSenderParameters=function(){const e=oO();if(!window.RTCRtpSender||!window.RTCRtpSender.prototype.setParameters||!window.RTCRtpSender.prototype.getParameters)return!1;return!!RO()||(!(!pO()&&!uO())||e.name===tO.FIREFOX&&Number(e.version)>=64)}(),e.name===tO.SAFARI&&(Number(e.version)>=14?SB.supportDualStream=!0:SB.supportDualStream=!1),SB.webAudioMediaStreamDest=function(){const e=oO();if(e.name===tO.SAFARI&&Number(e.version)<12)return!1;return!0}(),SB.supportReplaceTrack=function(){if(!window.RTCRtpSender)return!1;if("function"==typeof RTCRtpSender.prototype.replaceTrack)return!0;return!1}(),SB.supportWebGL="undefined"!=typeof WebGLRenderingContext,SB.supportRequestFrame=!!window.CanvasCaptureMediaStreamTrack,RO()||(SB.webAudioWithAEC=!0),SB.supportShareAudio=function(){const e=oO();if((e.os===eO.WIN_10||e.os===eO.WIN_81||e.os===eO.WIN_7||e.os===eO.LINUX||e.os===eO.MAC_OS)&&e.name===tO.CHROME&&Number(e.version)>=74)return!0;return!1}(),SB.supportDualStreamEncoding=function(){const e=oO();return"Safari"===e.name&&Number(e.version)>=14}(),HD.info("browser compatibility",JSON.stringify(SB),JSON.stringify(e)),hP("info",[],"updateAgoraRTCCompatibility",{browserCompatibility:SB,browserInfo:e})}(),function(){let e;try{e=window.localStorage.getItem("websdk_ng_global_parameter")}catch(e){return void HD.error("Error loading sdk config",e.message)}if(e)try{const t=JSON.parse(window.atob(e)),r=Date.now();HD.debug("Loading global parameters from cache",t),hP("debug",[],"loadConfigFromLocalStorage",t),Object.keys(t).forEach(e=>{if(Object.prototype.hasOwnProperty.call(DP,e)){const{value:i,expires:n}=t[e];if(n&&n<=r)return;PP[e]=i,DP[e]=i}})}catch(t){HD.error("Error loading mutableParamsCache: ".concat(e),t.message)}}();const I2={__CLIENT_LIST__:xP,__TRACK_LIST__:QP,VERSION:IP,BUILD:fP,setParameter:OP,getParameter:NP,getSupportedCodec:async function(){let e={audio:[],video:[]};try{let t=new RTCPeerConnection;t.addTransceiver("video",{direction:"recvonly"}),t.addTransceiver("audio",{direction:"recvonly"});const r=(await t.createOffer()).sdp;if(!r)return e;t.close(),t=null,e=function(e){const t={video:[],audio:[]};return e.match(/ VP8/i)&&t.video.push("VP8"),e.match(/ VP9/i)&&t.video.push("VP9"),e.match(/ AV1/i)&&t.video.push("AV1"),e.match(/ H264/i)&&t.video.push("H264"),e.match(/ opus/i)&&t.audio.push("OPUS"),e.match(/ PCMU/i)&&t.audio.push("PCMU"),e.match(/ PCMA/i)&&t.audio.push("PCMA"),e.match(/ G722/i)&&t.audio.push("G722"),t}(r)}catch(e){throw new UD(MD.CREATE_OFFER_FAILED,e.toString&&e.toString()).print()}return e},checkSystemRequirements:function(){const e=uj.reportApiInvoke(null,{name:ek.CHECK_SYSTEM_REQUIREMENTS,options:[],tag:tk.TRACER});let t=!1;try{const e=window.RTCPeerConnection,r=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia,i=window.WebSocket;t=!!(e&&r&&i)}catch(e){return HD.error("check system requirement failed: ",e),!1}let r=!1;const i=oO();i.name===tO.CHROME&&Number(i.version)>=58&&(!hO()||AO())&&(r=!0),i.name===tO.FIREFOX&&Number(i.version)>=56&&(r=!0),i.name===tO.OPERA&&Number(i.version)>=45&&(r=!0),i.name===tO.SAFARI&&Number(i.version)>=11&&(r=!0),(vO()||oO().name===tO.QQ)&&(r=!0),HD.debug("checkSystemRequirements, api:",t,"browser",r);const n=t&&r;return e.onSuccess(n),n},getDevices:function(e){return Yj.enumerateDevices(!0,!0,e)},getMicrophones:function(e){return Yj.getRecordingDevices(e)},getCameras:function(e){return Yj.getCamerasDevices(e)},getElectronScreenSources:Uj,getPlaybackDevices:function(e){return Yj.getSpeakers(e)},createClient:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{codec:"vp8",audioCodec:"opus",mode:"rtc"};const t=uj.reportApiInvoke(null,{name:ek.CREATE_CLIENT,options:[e],tag:tk.TRACER});try{Ck(e)}catch(e){throw t.onError(e),e}return void 0===e.audioCodec&&(e.audioCodec="opus"),t.onSuccess(),new n2(i2(i2({forceWaitGatewayResponse:!0},e),{},{role:"rtc"===e.mode?"host":e.role}))},createCameraVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{encoderConfig:"480p_1"};const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CREATE_CAM_VIDEO_TRACK,options:[d2({},e)]}),r=mX(e),i=fK(8,"track-cam-");let n=null;HD.info("start create camera video track with config",JSON.stringify(e),"trackId",i),pP("info",["AgoraRTC"],"createCameraVideoTrack",e);try{n=(await Gj({video:r},i)).getVideoTracks()[0]||null}catch(e){throw t.onError(e),e}if(!n){const e=new UD(MD.UNEXPECTED_ERROR,"can not find track in media stream");return t.onError(e),e.throw()}e.optimizationMode&&u2(i,n,e,e.encoderConfig&&TP(e.encoderConfig));const o=new ez(n,e,r,e.scalabiltyMode?yP(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,i);return t.onSuccess(o.getTrackId()),HD.info("create camera video success, trackId:",i),pP("info",["AgoraRTC"],"createCameraVideoTrack",void 0,i),o},createCustomVideoTrack:function(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CREATE_CUSTOM_VIDEO_TRACK,options:[e]}),r=new $X(e.mediaStreamTrack,{bitrateMax:e.bitrateMax,bitrateMin:e.bitrateMin},e.scalabiltyMode?yP(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode);return t.onSuccess(r.getTrackId()),HD.info("create custom video track success with config",e,"trackId",r.getTrackId()),pP("info",["AgoraRTC"],"createCustomVideoTrack",e,r.getTrackId()),r},createScreenVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"disable";const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CREATE_SCREEN_VIDEO_TRACK,options:[d2({},e),t]});e.encoderConfig?"string"==typeof e.encoderConfig||e.encoderConfig.width&&e.encoderConfig.height||(e.encoderConfig.width={max:1920},e.encoderConfig.height={max:1080}):e.encoderConfig="1080p_2";const i=_X(e),n=fK(8,"track-scr");let o=null,s=null;const a=vB();if(!a.supportShareAudio&&"enable"===t){const e=new UD(MD.NOT_SUPPORTED,"your browser or platform is not support share-screen with audio");return r.onError(e),e.throw()}HD.info("start create screen video track with config",e,"withAudio",t,"trackId",n),pP("info",["AgoraRTC"],"createScreenVideoTrack",[e,t]);try{const e=await Gj({screen:i,screenAudio:"auto"===t?a.supportShareAudio:"enable"===t},n);o=e.getVideoTracks()[0]||null,s=e.getAudioTracks()[0]||null}catch(e){throw r.onError(e),e}if(!o){const e=new UD(MD.UNEXPECTED_ERROR,"can not find track in media stream");return r.onError(e),e.throw()}if(!s&&"enable"===t){o&&o.stop();const e=new UD(MD.SHARE_AUDIO_NOT_ALLOWED);return r.onError(e),e.throw()}e.optimizationMode||(e.optimizationMode="detail"),e.optimizationMode&&(u2(n,o,e,e.encoderConfig&&RP(e.encoderConfig)),e.encoderConfig&&"string"!=typeof e.encoderConfig&&(e.encoderConfig.bitrateMin=e.encoderConfig.bitrateMax));const c=new $X(o,e.encoderConfig?RP(e.encoderConfig):{},e.scalabiltyMode?yP(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,n,[Xk.SCREEN_TRACK]);if(!s)return r.onSuccess(c.getTrackId()),HD.info("create screen video track success","video:",c.getTrackId()),pP("info",["AgoraRTC"],"createScreenVideoTrack",void 0,{videoTrack:c.getTrackId()}),c;const d=new GG(s);return r.onSuccess([c.getTrackId(),d.getTrackId()]),HD.info("create screen video track success","video:",c.getTrackId(),"audio:",d.getTrackId()),pP("info",["AgoraRTC"],"createScreenVideoTrack",void 0,{videoTrack:c.getTrackId(),audioTrack:d.getTrackId()}),[c,d]},createMicrophoneAndCameraTracks:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{encoderConfig:"480p_1"};const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CREATE_MIC_AND_CAM_TRACKS,options:[e,t]}),i=mX(t),n=CX(e),o=fK(8,"track-mic-"),s=fK(8,"track-cam-");let a=null,c=null;HD.info("start create camera video track(".concat(s,") and microphone audio track(").concat(o,") with config, audio: ").concat(JSON.stringify(e),", video: ").concat(JSON.stringify(t))),pP("info",["AgoraRTC"],"createMicrophoneAndCameraTracks",{videoConfig:t,audioConfig:e});try{const e=await Gj({audio:n,video:i},"".concat(o,"-").concat(s));a=e.getAudioTracks()[0],c=e.getVideoTracks()[0]}catch(e){throw r.onError(e),e}if(!a||!c){const e=new UD(MD.UNEXPECTED_ERROR,"can not find tracks in media stream");return r.onError(e),e.throw()}t.optimizationMode&&u2(s,c,t,t.encoderConfig&&TP(t.encoderConfig));const d=new KG(a,e,n,o),u=new ez(c,t,i,t.scalabiltyMode?yP(t.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},t.optimizationMode,s);return r.onSuccess([d.getTrackId(),u.getTrackId()]),HD.info("create camera video track(".concat(s,") and microphone audio track(").concat(o,") success")),pP("info",["AgoraRTC"],"createMicrophoneAndCameraTracks",void 0,{videoTrackId:s,audioTrackId:o}),[d,u]},createMicrophoneAudioTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CREATE_MIC_AUDIO_TRACK,options:[e]}),r=CX(e),i=fK(8,"track-mic-");let n=null;HD.info("start create microphone audio track with config",JSON.stringify(e),"trackId",i),pP("info",["AgoraRTC"],"createMicrophoneAudioTrack",e);try{n=(await Gj({audio:r},i)).getAudioTracks()[0]||null}catch(e){throw t.onError(e),e}if(!n){const e=new UD(MD.UNEXPECTED_ERROR,"can not find track in media stream");return t.onError(e),e.throw()}const o=new KG(n,e,r,i);return t.onSuccess(o.getTrackId()),HD.info("create microphone audio track success, trackId:",i),pP("info",["AgoraRTC"],"createMicrophoneAudioTrack",e,i),o},createCustomAudioTrack:function(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CREATE_CUSTOM_AUDIO_TRACK,options:[e]}),r=new GG(e.mediaStreamTrack,e.encoderConfig?bP(e.encoderConfig):{});return HD.info("create custom audio track success with config",e,"trackId",r.getTrackId()),pP("info",["AgoraRTC"],"createCustomAudioTrack",e,r.getTrackId()),t.onSuccess(r.getTrackId()),r},createBufferSourceAudioTrack:async function(e){const t=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CREATE_BUFFER_AUDIO_TRACK,options:[e]}),r=fK(8,"track-buf-");HD.info("start create buffer source audio track with config",JSON.stringify(e),"trackId",r),pP("info",[],"createBufferSourceAudioTrack",e);const i=e.source;if(!(e.source instanceof AudioBuffer))try{e.source=await a2(e.source,e.cacheOnlineFile)}catch(e){return t.onError(e),e.throw()}const n=new o2(e.source),o=new HG(i,n,e.encoderConfig?bP(e.encoderConfig):{},r);return HD.info("create buffer source audio track success, trackId:",r),pP("info",["AgoraRTC"],"createBufferSourceAudioTrack",void 0,r),t.onSuccess(o.getTrackId()),o},setAppType:function(e){if(HD.debug("setAppType: ".concat(e)),!(Number.isInteger(e)&&e>=0))throw HD.debug("Invalid appType"),new UD(MD.INVALID_PARAMS,"invalid app type",e);OP("APP_TYPE",Math.floor(e))},setLogLevel:function(e){NP("USE_NEW_LOG")?function(e){e=Math.min(Math.max(0,e),4),ZD=e}(e):HD.setLogLevel(e)},enableLogUpload:function(){NP("USE_NEW_LOG")?OP("UPLOAD_LOG",!0):HD.enableLogUpload()},disableLogUpload:function(){NP("USE_NEW_LOG")?OP("UPLOAD_LOG",!1):HD.disableLogUpload()},createChannelMediaRelayConfiguration:function(){return new Vq},checkAudioTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CHECK_AUDIO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof GG||e instanceof k1)){const e=new UD(MD.INVALID_TRACK,"the parameter is not a audio track");return r.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const i=e instanceof GG?e.getTrackLabel():"remote_track",n=e.getVolumeLevel();let o=n,s=n;const a=Date.now();return new nT(n=>{const c=setInterval(()=>{const d=e.getVolumeLevel();o=d>o?d:o,s=d<s?d:s;const u=o-s>1e-4,A=Date.now()-a;if(u||A>t){clearInterval(c);const t=u,s={duration:A,deviceLabel:i,maxVolumeLevel:o,result:t};HD.info("[track-".concat(e.getTrackId(),"] check audio track active completed. ").concat(JSON.stringify(s))),r.onSuccess(s),n(t)}},200)})},checkVideoTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const r=uj.reportApiInvoke(null,{tag:tk.TRACER,name:ek.CHECK_VIDEO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof $X||e instanceof L1)){const e=new UD(MD.INVALID_TRACK,"the parameter is not a video track");return r.onError(e),e.throw()}const i=4;t&&t<1e3&&(t=1e3);const n=e instanceof $X?e.getTrackLabel():"remote_track",o=e.getMediaStreamTrack(!0),s=document.createElement("video");s.style.width="1px",s.style.height="1px",s.setAttribute("muted",""),s.muted=!0,s.setAttribute("playsinline",""),s.controls=!1,(pO()||uO())&&(s.style.opacity="0.01",s.style.position="fixed",s.style.left="0",s.style.top="0",document.body.appendChild(s)),s.srcObject=new MediaStream([o]),s.play();const a=document.createElement("canvas");a.width=160,a.height=120;let c=0,d=0;try{const e=Date.now();c=await h2(s,t,a,i),d=Date.now()-e}catch(e){throw r.onError(e),e}A2===tO.SAFARI&&(s.pause(),s.remove()),s.srcObject=null;const u=c>i,A={duration:d,changedPicNum:c,deviceLabel:n,result:u};return HD.info("[track-".concat(e.getTrackId(),"] check video track active completed. ").concat(JSON.stringify(A))),r.onSuccess(A),u},setArea:function(e){const t=uj.reportApiInvoke(null,{name:ek.SET_AREA,options:e,tag:tk.TRACER});try{let t=[];if("string"==typeof e&&(t=[e]),Array.isArray(e)&&(e.forEach(e=>{if(!nB.includes(e))throw new UD(MD.INVALID_PARAMS,"invalid area code")}),t=e),"[object Object]"===Object.prototype.toString.call(e)){const{areaCode:r,excludedArea:i}=e;if(!r)throw new UD(MD.INVALID_PARAMS,"area code is needed");let n=r;"string"==typeof r&&(n=[r]),t=i?Cq(n,i):n}OP("AREAS",t);const r=(e=>{const t={CODE:"",WEBCS_DOMAIN:[],WEBCS_DOMAIN_BACKUP_LIST:[],PROXY_CS:[],CDS_AP:[],ACCOUNT_REGISTER:[],UAP_AP:[],EVENT_REPORT_DOMAIN:[],EVENT_REPORT_BACKUP_DOMAIN:[],LOG_UPLOAD_SERVER:[],PROXY_SERVER_TYPE3:[]};return e.map(e=>{const r=sB[e],i=Object.keys(r);i&&i.map(e=>{"CODE"!==e&&(t[e]=t[e].concat(r[e]))})}),t})(t);Object.keys(r).map(e=>{if("LOG_UPLOAD_SERVER"===e||"EVENT_REPORT_DOMAIN"===e||"EVENT_REPORT_BACKUP_DOMAIN"===e||"PROXY_SERVER_TYPE3"===e){OP(e,r[e][0])}else OP(e,r[e])}),HD.debug("set area success:",t.join(","))}catch(e){throw t.onError(e),e}t.onSuccess()},loadModule:async function(e,t){if(HD.debug("loadModule: ".concat(e.name,", loadOption: ").concat(JSON.stringify(t))),!e.moduleInit)throw HD.debug("Invalid Plugin"),new UD(MD.INVALID_PLUGIN,"invalid plugin");try{_j.installPlugin(e),await e.moduleInit({logger:HD,report:uj,pluginCenter:_j,getParameter:NP},t)}catch(e){throw new UD(MD.UNEXPECTED_ERROR,"unexpected error in loadModule",e)}},audioElementPlayCenter:zj,processExternalMediaAEC:function(e){f2.processExternalMediaAEC(e)},registerExtensions:function(e){e.forEach(e=>{const t=e;t.__registered__=!0,t.logger.hookLog=HD.extLog,t.reporter.hookApiInvoke=uj.extApiInvoke,t.parameters&&Object.keys(t.parameters).forEach(e=>{t.parameters[e]=NP(e)})})},ChannelMediaRelayError:Hk,ChannelMediaRelayEvent:Gk,ChannelMediaRelayState:Kk,RemoteStreamFallbackType:Zk,RemoteStreamType:zk,ConnectionDisconnectedReason:uk,AudienceLatencyLevelType:dk,AREAS:tB};return Object.defineProperties(I2,{onAudioAutoplayFailed:{get:()=>ej.onAudioAutoplayFailed,set:e=>{ej.onAudioAutoplayFailed=e}},onAutoplayFailed:{get:()=>ej.onAutoplayFailed,set:e=>{ej.onAutoplayFailed=e}}}),Yj.on(ik.CAMERA_DEVICE_CHANGED,e=>{HD.info("camera device changed",JSON.stringify(e)),I2.onCameraChanged&&I2.onCameraChanged(e)}),Yj.on(ik.RECORDING_DEVICE_CHANGED,e=>{HD.info("microphone device changed",JSON.stringify(e)),I2.onMicrophoneChanged&&I2.onMicrophoneChanged(e)}),Yj.on(ik.PLAYOUT_DEVICE_CHANGED,e=>{HD.debug("playout device changed",JSON.stringify(e)),I2.onPlaybackDeviceChanged&&I2.onPlaybackDeviceChanged(e)}),zj.onAutoplayFailed=()=>{HD.info("detect audio element autoplay failed"),ej.onAudioAutoplayFailed&&ej.onAudioAutoplayFailed()},Rj.on("autoplay-failed",()=>{HD.info("detect webaudio autoplay failed"),ej.onAudioAutoplayFailed&&ej.onAudioAutoplayFailed()}),window&&(window.__ARTC__=I2),I2}));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack@4.46.0_webpack-cli@3.3.12/node_modules/webpack/buildin/global.js */ "./node_modules/.pnpm/webpack@4.46.0_webpack-cli@3.3.12/node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../../buffer@4.9.2/node_modules/buffer/index.js */ "./node_modules/.pnpm/buffer@4.9.2/node_modules/buffer/index.js").Buffer, __webpack_require__(/*! ./../../../process@0.11.10/node_modules/process/browser.js */ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/.pnpm/buffer@4.9.2/node_modules/buffer/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/.pnpm/buffer@4.9.2/node_modules/buffer/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/.pnpm/isarray@1.0.0/node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack@4.46.0_webpack-cli@3.3.12/node_modules/webpack/buildin/global.js */ "./node_modules/.pnpm/webpack@4.46.0_webpack-cli@3.3.12/node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/.pnpm/isarray@1.0.0/node_modules/isarray/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/.pnpm/isarray@1.0.0/node_modules/isarray/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/.pnpm/webpack@4.46.0_webpack-cli@3.3.12/node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,